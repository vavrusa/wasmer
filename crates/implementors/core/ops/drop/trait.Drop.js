(function() {var implementors = {};
implementors["wasmer"] = [{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"wasmer/env/struct.LazyInit.html\" title=\"struct wasmer::env::LazyInit\">LazyInit</a>&lt;T&gt;","synthetic":false,"types":["wasmer::env::LazyInit"]}];
implementors["wasmer_c_api"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"wasmer_c_api/wasm_c_api/types/struct.owned_wasm_name_t.html\" title=\"struct wasmer_c_api::wasm_c_api::types::owned_wasm_name_t\">owned_wasm_name_t</a>","synthetic":false,"types":["wasmer_c_api::wasm_c_api::types::owned_wasm_name_t"]}];
implementors["wasmer_engine"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"wasmer_engine/export/struct.ExportFunctionMetadata.html\" title=\"struct wasmer_engine::export::ExportFunctionMetadata\">ExportFunctionMetadata</a>","synthetic":false,"types":["wasmer_engine::export::ExportFunctionMetadata"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"wasmer_engine/trap/frame_info/struct.GlobalFrameInfoRegistration.html\" title=\"struct wasmer_engine::trap::frame_info::GlobalFrameInfoRegistration\">GlobalFrameInfoRegistration</a>","synthetic":false,"types":["wasmer_engine::trap::frame_info::GlobalFrameInfoRegistration"]}];
implementors["wasmer_engine_jit"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"wasmer_engine_jit/unwind/systemv/struct.UnwindRegistry.html\" title=\"struct wasmer_engine_jit::unwind::systemv::UnwindRegistry\">UnwindRegistry</a>","synthetic":false,"types":["wasmer_engine_jit::unwind::systemv::UnwindRegistry"]}];
implementors["wasmer_vm"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"wasmer_vm/instance/allocator/struct.InstanceAllocator.html\" title=\"struct wasmer_vm::instance::allocator::InstanceAllocator\">InstanceAllocator</a>","synthetic":false,"types":["wasmer_vm::instance::allocator::InstanceAllocator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"wasmer_vm/instance/ref/struct.InstanceRef.html\" title=\"struct wasmer_vm::instance::ref::InstanceRef\">InstanceRef</a>","synthetic":false,"types":["wasmer_vm::instance::ref::InstanceRef"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"enum\" href=\"wasmer_vm/instance/enum.ImportFunctionEnv.html\" title=\"enum wasmer_vm::instance::ImportFunctionEnv\">ImportFunctionEnv</a>","synthetic":false,"types":["wasmer_vm::instance::ImportFunctionEnv"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"wasmer_vm/mmap/struct.Mmap.html\" title=\"struct wasmer_vm::mmap::Mmap\">Mmap</a>","synthetic":false,"types":["wasmer_vm::mmap::Mmap"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"wasmer_vm/trap/traphandlers/struct.CallThreadState.html\" title=\"struct wasmer_vm::trap::traphandlers::CallThreadState\">CallThreadState</a>","synthetic":false,"types":["wasmer_vm::trap::traphandlers::CallThreadState"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()