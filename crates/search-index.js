var searchIndex = JSON.parse('{\
"test_generator":{"doc":"Build library to generate a program which runs all the …","i":[[0,"processors","test_generator","Here we define the processors usable for each test …",null,null],[5,"wast_processor","test_generator::processors","Given a Testsuite and a path, process the path in case is …",null,[[["pathbuf",3],["testsuite",3]],[["option",4],["test",3]]]],[5,"emscripten_processor","","Given a Testsuite and a path, process the path in case is …",null,[[["pathbuf",3],["testsuite",3]],[["option",4],["test",3]]]],[5,"wasi_processor","","Given a Testsuite and a path, process the path in case is …",null,[[["pathbuf",3],["testsuite",3]],[["option",4],["test",3]]]],[5,"emscripten_processor","test_generator","Given a Testsuite and a path, process the path in case is …",null,[[["pathbuf",3],["testsuite",3]],[["option",4],["test",3]]]],[5,"wasi_processor","","Given a Testsuite and a path, process the path in case is …",null,[[["pathbuf",3],["testsuite",3]],[["option",4],["test",3]]]],[5,"wast_processor","","Given a Testsuite and a path, process the path in case is …",null,[[["pathbuf",3],["testsuite",3]],[["option",4],["test",3]]]],[6,"Ignores","","",null,null],[3,"Testsuite","","",null,null],[12,"buffer","","",0,null],[12,"path","","",0,null],[12,"ignores","","",0,null],[11,"ignore_current","","",0,[[],["bool",15]]],[3,"Test","","",null,null],[12,"name","","",1,null],[12,"body","","",1,null],[6,"ProcessorType","","",null,null],[5,"build_ignores_from_textfile","","Generates an Ignores struct from a text file",null,[[["pathbuf",3]],[["result",6],["ignores",6]]]],[5,"test_directory_module","","",null,[[["testsuite",3],["processortype",6]],[["usize",15],["result",6]]]],[5,"write_test","","",null,[[["testsuite",3],["str",15]],["result",6]]],[5,"test_directory","","",null,[[["testsuite",3],["processortype",6]],[["usize",15],["result",6]]]],[5,"extract_name","","Extract a valid Rust identifier from the stem of a path.",null,[[],["string",3]]],[5,"with_test_module","","",null,[[["testsuite",3],["str",15]],["result",6]]],[5,"with_features","","",null,[[["testsuite",3]],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"cmp","","",1,[[["test",3]],["ordering",4]]],[11,"eq","","",1,[[["test",3]],["bool",15]]],[11,"ne","","",1,[[["test",3]],["bool",15]]],[11,"partial_cmp","","",1,[[["test",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["test",3]],["bool",15]]],[11,"le","","",1,[[["test",3]],["bool",15]]],[11,"gt","","",1,[[["test",3]],["bool",15]]],[11,"ge","","",1,[[["test",3]],["bool",15]]]],"p":[[3,"Testsuite"],[3,"Test"]]},\
"wasmer":{"doc":"This crate contains the <code>wasmer</code> API. The <code>wasmer</code> API …","i":[[0,"env","wasmer","",null,null],[4,"HostEnvInitError","wasmer::env","An error while initializing the user supplied host env …",null,null],[13,"Export","","An error occurred when accessing an export",0,null],[8,"WasmerEnv","","Trait for initializing the environments passed to host …",null,null],[11,"init_with_instance","","The function that Wasmer will call on your type to let it …",1,[[["instance",3]],[["hostenviniterror",4],["result",4]]]],[3,"LazyInit","","Lazily init an item",null,null],[12,"data","","The data to be initialized",2,null],[12,"initialized","","Whether or not the data has been initialized",2,null],[11,"new","","Creates an unitialized value.",2,[[]]],[11,"get_unchecked","","SafetyThe data must be initialized first",2,[[]]],[11,"get_ref","","Get the inner data.",2,[[],["option",4]]],[11,"initialize","","Sets a value and marks the data as initialized.",2,[[],["bool",15]]],[0,"exports","wasmer","",null,null],[4,"ExportError","wasmer::exports","The <code>ExportError</code> can happen when trying to get a specific …",null,null],[13,"IncompatibleType","","An error than occurs when the exported type and the …",3,null],[13,"Missing","","This error arises when an export is missing",3,null],[3,"Exports","","Exports is a special kind of map that allows easily …",null,null],[12,"map","","",4,null],[11,"new","","Creates a new <code>Exports</code>.",4,[[]]],[11,"with_capacity","","Creates a new <code>Exports</code> with capacity <code>n</code>.",4,[[["usize",15]]]],[11,"len","","Return the number of exports in the <code>Exports</code> map.",4,[[],["usize",15]]],[11,"is_empty","","Return whether or not there are no exports",4,[[],["bool",15]]],[11,"insert","","Insert a new export into this <code>Exports</code> map.",4,[[]]],[11,"get","","Get an export given a <code>name</code>.",4,[[["str",15]],[["result",4],["exporterror",4]]]],[11,"get_global","","Get an export as a <code>Global</code>.",4,[[["str",15]],[["result",4],["global",3],["exporterror",4]]]],[11,"get_memory","","Get an export as a <code>Memory</code>.",4,[[["str",15]],[["result",4],["memory",3],["exporterror",4]]]],[11,"get_table","","Get an export as a <code>Table</code>.",4,[[["str",15]],[["table",3],["result",4],["exporterror",4]]]],[11,"get_function","","Get an export as a <code>Func</code>.",4,[[["str",15]],[["function",3],["result",4],["exporterror",4]]]],[11,"get_native_function","","Get an export as a <code>NativeFunc</code>.",4,[[["str",15]],[["nativefunc",3],["exporterror",4],["result",4]]]],[11,"get_with_generics","","Hack to get this working with nativefunc too",4,[[["str",15]],[["result",4],["exporterror",4]]]],[11,"get_extern","","Get an export as an <code>Extern</code>.",4,[[["str",15]],[["option",4],["extern",4]]]],[11,"contains","","Returns true if the <code>Exports</code> contains the given export …",4,[[],["bool",15]]],[11,"iter","","Get an iterator over the exports.",4,[[],["exportsiterator",3]]],[3,"ExportsIterator","","An iterator over exports.",null,null],[12,"iter","","",5,null],[11,"functions","","Get only the functions.",5,[[]]],[11,"memories","","Get only the memories.",5,[[]]],[11,"globals","","Get only the globals.",5,[[]]],[11,"tables","","Get only the tables.",5,[[]]],[8,"Exportable","","This trait is used to mark types as gettable from an …",null,null],[10,"to_export","","This function is used when providedd the [<code>Extern</code>] as …",6,[[],["export",4]]],[10,"get_self_from_extern","","Implementation of how to get the export corresponding to …",6,[[["extern",4]],[["exporterror",4],["result",4]]]],[8,"ExportableWithGenerics","","A trait for accessing exports (like [<code>Exportable</code>]) but it …",null,null],[10,"get_self_from_extern_with_generics","","Get an export with the given generics.",7,[[["extern",4]],[["result",4],["exporterror",4]]]],[0,"externals","wasmer","",null,null],[0,"function","wasmer::externals","",null,null],[0,"inner","wasmer::externals::function","This private inner module contains the low-level …",null,null],[3,"ExternRef","wasmer::externals::function::inner","An opaque reference to some data. This reference can be …",null,null],[12,"inner","","",8,null],[3,"VMExternRef","","This type does not do reference counting automatically, …",null,null],[12,"0","","",9,null],[8,"FromToNativeWasmType","","A trait to convert a Rust value to a <code>WasmNativeType</code> value,…",null,null],[16,"Native","","Native Wasm type.",10,null],[10,"from_native","","Convert a value of kind <code>Self::Native</code> to <code>Self</code>.",10,[[]]],[10,"to_native","","Convert self to <code>Self::Native</code>.",10,[[]]],[8,"WasmTypeList","","The <code>WasmTypeList</code> trait represents a tuple (list) of Wasm …",null,null],[16,"CStruct","","The C type (a struct) that can hold/represent all the …",11,null],[16,"Array","","The array type that can hold all the represented values.",11,null],[10,"from_array","","Constructs <code>Self</code> based on an array of values.",11,[[]]],[10,"from_slice","","Constructs <code>Self</code> based on a slice of values.",11,[[],[["result",4],["tryfromsliceerror",3]]]],[10,"into_array","","Builds and returns an array of type <code>Array</code> from a tuple …",11,[[]]],[10,"empty_array","","Allocates and return an empty array of type <code>Array</code> that …",11,[[]]],[10,"from_c_struct","","Builds a tuple (list) of values from a C struct of type …",11,[[]]],[10,"into_c_struct","","Builds and returns a C struct of type <code>CStruct</code> from a …",11,[[]]],[10,"wasm_types","","Get the Wasm types for the tuple (list) of currently …",11,[[]]],[8,"IntoResult","","The <code>IntoResult</code> trait turns a <code>WasmTypeList</code> into a …",null,null],[16,"Error","","The error type for this trait.",12,null],[10,"into_result","","Transforms <code>Self</code> into a <code>Result</code>.",12,[[],["result",4]]],[8,"HostFunction","","The <code>HostFunction</code> trait represents the set of functions …",null,null],[10,"function_body_ptr","","Get the pointer to the function body.",13,[[]]],[3,"WithEnv","","An empty struct to help Rust typing to determine when a …",null,null],[3,"WithoutEnv","","An empty struct to help Rust typing to determine when a …",null,null],[3,"Function","","Represents a low-level Wasm static host function. See …",null,null],[12,"address","","",14,null],[12,"_phantom","","",14,null],[11,"new","","Creates a new <code>Function</code>.",14,[[]]],[11,"ty","","Get the function type of this <code>Function</code>.",14,[[],["functiontype",3]]],[11,"address","","Get the address of this <code>Function</code>.",14,[[]]],[3,"S0","","A structure with a C-compatible representation that can …",null,null],[3,"S1","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",15,null],[3,"S2","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",16,null],[12,"1","","",16,null],[3,"S3","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",17,null],[12,"1","","",17,null],[12,"2","","",17,null],[3,"S4","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",18,null],[12,"1","","",18,null],[12,"2","","",18,null],[12,"3","","",18,null],[3,"S5","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",19,null],[12,"1","","",19,null],[12,"2","","",19,null],[12,"3","","",19,null],[12,"4","","",19,null],[3,"S6","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",20,null],[12,"1","","",20,null],[12,"2","","",20,null],[12,"3","","",20,null],[12,"4","","",20,null],[12,"5","","",20,null],[3,"S7","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",21,null],[12,"1","","",21,null],[12,"2","","",21,null],[12,"3","","",21,null],[12,"4","","",21,null],[12,"5","","",21,null],[12,"6","","",21,null],[3,"S8","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",22,null],[12,"1","","",22,null],[12,"2","","",22,null],[12,"3","","",22,null],[12,"4","","",22,null],[12,"5","","",22,null],[12,"6","","",22,null],[12,"7","","",22,null],[3,"S9","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",23,null],[12,"1","","",23,null],[12,"2","","",23,null],[12,"3","","",23,null],[12,"4","","",23,null],[12,"5","","",23,null],[12,"6","","",23,null],[12,"7","","",23,null],[12,"8","","",23,null],[3,"S10","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",24,null],[12,"1","","",24,null],[12,"2","","",24,null],[12,"3","","",24,null],[12,"4","","",24,null],[12,"5","","",24,null],[12,"6","","",24,null],[12,"7","","",24,null],[12,"8","","",24,null],[12,"9","","",24,null],[3,"S11","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",25,null],[12,"1","","",25,null],[12,"2","","",25,null],[12,"3","","",25,null],[12,"4","","",25,null],[12,"5","","",25,null],[12,"6","","",25,null],[12,"7","","",25,null],[12,"8","","",25,null],[12,"9","","",25,null],[12,"10","","",25,null],[3,"S12","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",26,null],[12,"1","","",26,null],[12,"2","","",26,null],[12,"3","","",26,null],[12,"4","","",26,null],[12,"5","","",26,null],[12,"6","","",26,null],[12,"7","","",26,null],[12,"8","","",26,null],[12,"9","","",26,null],[12,"10","","",26,null],[12,"11","","",26,null],[3,"S13","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",27,null],[12,"1","","",27,null],[12,"2","","",27,null],[12,"3","","",27,null],[12,"4","","",27,null],[12,"5","","",27,null],[12,"6","","",27,null],[12,"7","","",27,null],[12,"8","","",27,null],[12,"9","","",27,null],[12,"10","","",27,null],[12,"11","","",27,null],[12,"12","","",27,null],[3,"S14","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",28,null],[12,"1","","",28,null],[12,"2","","",28,null],[12,"3","","",28,null],[12,"4","","",28,null],[12,"5","","",28,null],[12,"6","","",28,null],[12,"7","","",28,null],[12,"8","","",28,null],[12,"9","","",28,null],[12,"10","","",28,null],[12,"11","","",28,null],[12,"12","","",28,null],[12,"13","","",28,null],[3,"S15","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",29,null],[12,"1","","",29,null],[12,"2","","",29,null],[12,"3","","",29,null],[12,"4","","",29,null],[12,"5","","",29,null],[12,"6","","",29,null],[12,"7","","",29,null],[12,"8","","",29,null],[12,"9","","",29,null],[12,"10","","",29,null],[12,"11","","",29,null],[12,"12","","",29,null],[12,"13","","",29,null],[12,"14","","",29,null],[3,"S16","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",30,null],[12,"1","","",30,null],[12,"2","","",30,null],[12,"3","","",30,null],[12,"4","","",30,null],[12,"5","","",30,null],[12,"6","","",30,null],[12,"7","","",30,null],[12,"8","","",30,null],[12,"9","","",30,null],[12,"10","","",30,null],[12,"11","","",30,null],[12,"12","","",30,null],[12,"13","","",30,null],[12,"14","","",30,null],[12,"15","","",30,null],[3,"S17","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",31,null],[12,"1","","",31,null],[12,"2","","",31,null],[12,"3","","",31,null],[12,"4","","",31,null],[12,"5","","",31,null],[12,"6","","",31,null],[12,"7","","",31,null],[12,"8","","",31,null],[12,"9","","",31,null],[12,"10","","",31,null],[12,"11","","",31,null],[12,"12","","",31,null],[12,"13","","",31,null],[12,"14","","",31,null],[12,"15","","",31,null],[12,"16","","",31,null],[3,"S18","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",32,null],[12,"1","","",32,null],[12,"2","","",32,null],[12,"3","","",32,null],[12,"4","","",32,null],[12,"5","","",32,null],[12,"6","","",32,null],[12,"7","","",32,null],[12,"8","","",32,null],[12,"9","","",32,null],[12,"10","","",32,null],[12,"11","","",32,null],[12,"12","","",32,null],[12,"13","","",32,null],[12,"14","","",32,null],[12,"15","","",32,null],[12,"16","","",32,null],[12,"17","","",32,null],[3,"S19","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",33,null],[12,"1","","",33,null],[12,"2","","",33,null],[12,"3","","",33,null],[12,"4","","",33,null],[12,"5","","",33,null],[12,"6","","",33,null],[12,"7","","",33,null],[12,"8","","",33,null],[12,"9","","",33,null],[12,"10","","",33,null],[12,"11","","",33,null],[12,"12","","",33,null],[12,"13","","",33,null],[12,"14","","",33,null],[12,"15","","",33,null],[12,"16","","",33,null],[12,"17","","",33,null],[12,"18","","",33,null],[3,"S20","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",34,null],[12,"1","","",34,null],[12,"2","","",34,null],[12,"3","","",34,null],[12,"4","","",34,null],[12,"5","","",34,null],[12,"6","","",34,null],[12,"7","","",34,null],[12,"8","","",34,null],[12,"9","","",34,null],[12,"10","","",34,null],[12,"11","","",34,null],[12,"12","","",34,null],[12,"13","","",34,null],[12,"14","","",34,null],[12,"15","","",34,null],[12,"16","","",34,null],[12,"17","","",34,null],[12,"18","","",34,null],[12,"19","","",34,null],[3,"S21","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",35,null],[12,"1","","",35,null],[12,"2","","",35,null],[12,"3","","",35,null],[12,"4","","",35,null],[12,"5","","",35,null],[12,"6","","",35,null],[12,"7","","",35,null],[12,"8","","",35,null],[12,"9","","",35,null],[12,"10","","",35,null],[12,"11","","",35,null],[12,"12","","",35,null],[12,"13","","",35,null],[12,"14","","",35,null],[12,"15","","",35,null],[12,"16","","",35,null],[12,"17","","",35,null],[12,"18","","",35,null],[12,"19","","",35,null],[12,"20","","",35,null],[3,"S22","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",36,null],[12,"1","","",36,null],[12,"2","","",36,null],[12,"3","","",36,null],[12,"4","","",36,null],[12,"5","","",36,null],[12,"6","","",36,null],[12,"7","","",36,null],[12,"8","","",36,null],[12,"9","","",36,null],[12,"10","","",36,null],[12,"11","","",36,null],[12,"12","","",36,null],[12,"13","","",36,null],[12,"14","","",36,null],[12,"15","","",36,null],[12,"16","","",36,null],[12,"17","","",36,null],[12,"18","","",36,null],[12,"19","","",36,null],[12,"20","","",36,null],[12,"21","","",36,null],[3,"S23","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",37,null],[12,"1","","",37,null],[12,"2","","",37,null],[12,"3","","",37,null],[12,"4","","",37,null],[12,"5","","",37,null],[12,"6","","",37,null],[12,"7","","",37,null],[12,"8","","",37,null],[12,"9","","",37,null],[12,"10","","",37,null],[12,"11","","",37,null],[12,"12","","",37,null],[12,"13","","",37,null],[12,"14","","",37,null],[12,"15","","",37,null],[12,"16","","",37,null],[12,"17","","",37,null],[12,"18","","",37,null],[12,"19","","",37,null],[12,"20","","",37,null],[12,"21","","",37,null],[12,"22","","",37,null],[3,"S24","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",38,null],[12,"1","","",38,null],[12,"2","","",38,null],[12,"3","","",38,null],[12,"4","","",38,null],[12,"5","","",38,null],[12,"6","","",38,null],[12,"7","","",38,null],[12,"8","","",38,null],[12,"9","","",38,null],[12,"10","","",38,null],[12,"11","","",38,null],[12,"12","","",38,null],[12,"13","","",38,null],[12,"14","","",38,null],[12,"15","","",38,null],[12,"16","","",38,null],[12,"17","","",38,null],[12,"18","","",38,null],[12,"19","","",38,null],[12,"20","","",38,null],[12,"21","","",38,null],[12,"22","","",38,null],[12,"23","","",38,null],[3,"S25","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",39,null],[12,"1","","",39,null],[12,"2","","",39,null],[12,"3","","",39,null],[12,"4","","",39,null],[12,"5","","",39,null],[12,"6","","",39,null],[12,"7","","",39,null],[12,"8","","",39,null],[12,"9","","",39,null],[12,"10","","",39,null],[12,"11","","",39,null],[12,"12","","",39,null],[12,"13","","",39,null],[12,"14","","",39,null],[12,"15","","",39,null],[12,"16","","",39,null],[12,"17","","",39,null],[12,"18","","",39,null],[12,"19","","",39,null],[12,"20","","",39,null],[12,"21","","",39,null],[12,"22","","",39,null],[12,"23","","",39,null],[12,"24","","",39,null],[3,"S26","","A structure with a C-compatible representation that can …",null,null],[12,"0","","",40,null],[12,"1","","",40,null],[12,"2","","",40,null],[12,"3","","",40,null],[12,"4","","",40,null],[12,"5","","",40,null],[12,"6","","",40,null],[12,"7","","",40,null],[12,"8","","",40,null],[12,"9","","",40,null],[12,"10","","",40,null],[12,"11","","",40,null],[12,"12","","",40,null],[12,"13","","",40,null],[12,"14","","",40,null],[12,"15","","",40,null],[12,"16","","",40,null],[12,"17","","",40,null],[12,"18","","",40,null],[12,"19","","",40,null],[12,"20","","",40,null],[12,"21","","",40,null],[12,"22","","",40,null],[12,"23","","",40,null],[12,"24","","",40,null],[12,"25","","",40,null],[3,"Function","wasmer::externals::function","A WebAssembly <code>function</code> instance.",null,null],[12,"store","","",41,null],[12,"exported","","",41,null],[5,"build_export_function_metadata","","",null,[[]]],[11,"new","","Creates a new host <code>Function</code> (dynamic) with the provided …",41,[[["store",3]]]],[11,"new_with_env","","Creates a new host <code>Function</code> (dynamic) with the provided …",41,[[["store",3]]]],[11,"new_native","","Creates a new host <code>Function</code> from a native function.",41,[[["store",3]]]],[11,"new_native_with_env","","Creates a new host <code>Function</code> from a native function and a …",41,[[["store",3]]]],[11,"ty","","Returns the [<code>FunctionType</code>] of the <code>Function</code>.",41,[[],["functiontype",3]]],[11,"store","","Returns the [<code>Store</code>] where the <code>Function</code> belongs.",41,[[],["store",3]]],[11,"call_wasm","","",41,[[["vmtrampoline",6]],[["runtimeerror",3],["result",4]]]],[11,"param_arity","","Returns the number of parameters that this function takes.",41,[[],["usize",15]]],[11,"result_arity","","Returns the number of results this function produces.",41,[[],["usize",15]]],[11,"call","","Call the <code>Function</code> function.",41,[[],[["box",3],["result",4],["runtimeerror",3]]]],[11,"from_vm_export","","",41,[[["exportfunction",3],["store",3]]]],[11,"vm_funcref","","",41,[[],["vmfuncref",3]]],[11,"native","","Transform this WebAssembly function into a function with …",41,[[],[["nativefunc",3],["runtimeerror",3],["result",4]]]],[11,"closures_unsupported_panic","","",41,[[]]],[8,"VMDynamicFunction","","This trait is one that all dynamic functions must fulfill.",null,null],[10,"call","","",42,[[],[["runtimeerror",3],["result",4],["vec",3]]]],[10,"function_type","","",42,[[],["functiontype",3]]],[10,"store","","",42,[[],["store",3]]],[3,"DynamicFunction","","",null,null],[12,"function_type","","",43,null],[12,"func","","",43,null],[12,"store","","",43,null],[12,"env","","",43,null],[8,"VMDynamicFunctionCall","","",null,null],[10,"from_context","","",44,[[]]],[10,"address_ptr","","",44,[[]]],[10,"func_wrapper","","",44,[[]]],[0,"global","wasmer::externals","",null,null],[3,"Global","wasmer::externals::global","A WebAssembly <code>global</code> instance.",null,null],[12,"store","","",45,null],[12,"vm_global","","",45,null],[11,"new","","Create a new <code>Global</code> with the initial value [<code>Val</code>].",45,[[["val",6],["store",3]]]],[11,"new_mut","","Create a mutable <code>Global</code> with the initial value [<code>Val</code>].",45,[[["val",6],["store",3]]]],[11,"from_value","","Create a <code>Global</code> with the initial value [<code>Val</code>] and the …",45,[[["val",6],["mutability",4],["store",3]],[["runtimeerror",3],["result",4]]]],[11,"ty","","Returns the [<code>GlobalType</code>] of the <code>Global</code>.",45,[[],["globaltype",3]]],[11,"store","","Returns the [<code>Store</code>] where the <code>Global</code> belongs.",45,[[],["store",3]]],[11,"get","","Retrieves the current value [<code>Val</code>] that the Global has.",45,[[],["val",6]]],[11,"set","","Sets a custom value [<code>Val</code>] to the runtime Global.",45,[[["val",6]],[["runtimeerror",3],["result",4]]]],[11,"from_vm_export","","",45,[[["vmglobal",3],["store",3]]]],[11,"same","","Returns whether or not these two globals refer to the …",45,[[],["bool",15]]],[0,"memory","wasmer::externals","",null,null],[3,"Memory","wasmer::externals::memory","A WebAssembly <code>memory</code> instance.",null,null],[12,"store","","",46,null],[12,"vm_memory","","",46,null],[11,"new","","Creates a new host <code>Memory</code> from the provided [<code>MemoryType</code>].",46,[[["memorytype",3],["store",3]],[["memoryerror",4],["result",4]]]],[11,"ty","","Returns the [<code>MemoryType</code>] of the <code>Memory</code>.",46,[[],["memorytype",3]]],[11,"store","","Returns the [<code>Store</code>] where the <code>Memory</code> belongs.",46,[[],["store",3]]],[11,"data_unchecked","","Retrieve a slice of the memory contents.",46,[[]]],[11,"data_unchecked_mut","","Retrieve a mutable slice of the memory contents.",46,[[]]],[11,"data_ptr","","Returns the pointer to the raw bytes of the <code>Memory</code>.",46,[[]]],[11,"data_size","","Returns the size (in bytes) of the <code>Memory</code>.",46,[[],["u64",15]]],[11,"size","","Returns the size (in [<code>Pages</code>]) of the <code>Memory</code>.",46,[[],["pages",3]]],[11,"grow","","Grow memory by the specified amount of WebAssembly [<code>Pages</code>]…",46,[[],[["memoryerror",4],["result",4],["pages",3]]]],[11,"view","","Return a \\\"view\\\" of the currently accessible memory. By …",46,[[],[["memoryview",3],["valuetype",8]]]],[11,"from_vm_export","","",46,[[["vmmemory",3],["store",3]]]],[11,"same","","Returns whether or not these two memories refer to the …",46,[[],["bool",15]]],[0,"table","wasmer::externals","",null,null],[3,"Table","wasmer::externals::table","A WebAssembly <code>table</code> instance.",null,null],[12,"store","","",47,null],[12,"vm_table","","",47,null],[5,"set_table_item","","",null,[[["u32",15],["tableelement",4],["runtimetable",8]],[["runtimeerror",3],["result",4]]]],[11,"new","","Creates a new <code>Table</code> with the provided [<code>TableType</code>] …",47,[[["val",6],["tabletype",3],["store",3]],[["runtimeerror",3],["result",4]]]],[11,"ty","","Returns the [<code>TableType</code>] of the <code>Table</code>.",47,[[],["tabletype",3]]],[11,"store","","Returns the [<code>Store</code>] where the <code>Table</code> belongs.",47,[[],["store",3]]],[11,"get","","Retrieves an element of the table at the provided <code>index</code>.",47,[[["u32",15]],[["option",4],["val",6]]]],[11,"set","","Sets an element <code>val</code> in the Table at the provided <code>index</code>.",47,[[["u32",15],["val",6]],[["runtimeerror",3],["result",4]]]],[11,"size","","Retrieves the size of the <code>Table</code> (in elements)",47,[[],["u32",15]]],[11,"grow","","Grows the size of the <code>Table</code> by <code>delta</code>, initializating the …",47,[[["u32",15],["val",6]],[["result",4],["u32",15],["runtimeerror",3]]]],[11,"copy","","Copies the <code>len</code> elements of <code>src_table</code> starting at <code>src_index</code>…",47,[[["u32",15]],[["runtimeerror",3],["result",4]]]],[11,"from_vm_export","","",47,[[["vmtable",3],["store",3]]]],[11,"same","","Returns whether or not these two tables refer to the same …",47,[[],["bool",15]]],[4,"Extern","wasmer::externals","An <code>Extern</code> is the runtime representation of an entity that …",null,null],[13,"Function","","A external [<code>Function</code>].",48,null],[13,"Global","","A external [<code>Global</code>].",48,null],[13,"Table","","A external [<code>Table</code>].",48,null],[13,"Memory","","A external [<code>Memory</code>].",48,null],[11,"ty","","Return the underlying type of the inner <code>Extern</code>.",48,[[],["externtype",4]]],[11,"from_vm_export","","Create an <code>Extern</code> from an <code>wasmer_engine::Export</code>.",48,[[["export",4],["store",3]]]],[0,"import_object","wasmer","The import module contains the implementation data …",null,null],[8,"LikeNamespace","wasmer::import_object","The <code>LikeNamespace</code> trait represents objects that act as a …",null,null],[10,"get_namespace_export","","Gets an export by name.",49,[[["str",15]],[["option",4],["export",4]]]],[10,"get_namespace_exports","","Gets all exports in the namespace.",49,[[],["vec",3]]],[3,"ImportObject","","All of the import data used when instantiating.",null,null],[12,"map","","",50,null],[11,"new","","Create a new <code>ImportObject</code>.",50,[[]]],[11,"get_export","","Gets an export given a module and a name",50,[[["str",15]],[["option",4],["export",4]]]],[11,"contains_namespace","","Returns true if the ImportObject contains namespace with …",50,[[["str",15]],["bool",15]]],[11,"register","","Register anything that implements <code>LikeNamespace</code> as a …",50,[[],[["option",4],["box",3]]]],[11,"get_objects","","",50,[[],["vecdeque",3]]],[3,"ImportObjectIterator","","Iterator for an <code>ImportObject</code>\'s exports.",null,null],[12,"elements","","",51,null],[0,"instance","wasmer","",null,null],[3,"Instance","wasmer::instance","A WebAssembly Instance is a stateful, executable instance …",null,null],[12,"handle","","",52,null],[12,"module","","",52,null],[12,"exports","","The exports for an instance.",52,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Link","","A linking ocurred during instantiation.",53,null],[13,"Start","","A runtime error occured while invoking the start function",53,null],[13,"HostEnvInitialization","","Error occurred when initializing the host environment.",53,null],[11,"new","","Creates a new <code>Instance</code> from a WebAssembly [<code>Module</code>] and a …",52,[[["module",3],["resolver",8]],[["instantiationerror",4],["result",4]]]],[11,"module","","Gets the [<code>Module</code>] associated with this instance.",52,[[],["module",3]]],[11,"store","","Returns the [<code>Store</code>] where the <code>Instance</code> belongs.",52,[[],["store",3]]],[0,"module","wasmer","",null,null],[4,"IoCompileError","wasmer::module","",null,null],[13,"Io","","An IO error",54,null],[13,"Compile","","A compilation error",54,null],[3,"Module","","A WebAssembly Module contains stateless WebAssembly code …",null,null],[12,"store","","",55,null],[12,"artifact","","",55,null],[11,"new","","Creates a new WebAssembly Module given the configuration …",55,[[["store",3]],[["compileerror",4],["result",4]]]],[11,"from_file","","Creates a new WebAssembly module from a file path.",55,[[["store",3]],[["result",4],["iocompileerror",4]]]],[11,"from_binary","","Creates a new WebAssembly module from a binary.",55,[[["store",3]],[["compileerror",4],["result",4]]]],[11,"from_binary_unchecked","","Creates a new WebAssembly module skipping any kind of …",55,[[["store",3]],[["compileerror",4],["result",4]]]],[11,"validate","","Validates a new WebAssembly Module given the configuration…",55,[[["store",3]],[["compileerror",4],["result",4]]]],[11,"compile","","",55,[[["store",3]],[["compileerror",4],["result",4]]]],[11,"serialize","","Serializes a module into a binary representation that the …",55,[[],[["result",4],["serializeerror",4],["vec",3]]]],[11,"serialize_to_file","","Serializes a module into a file that the <code>Engine</code> can later …",55,[[],[["result",4],["serializeerror",4]]]],[11,"deserialize","","Deserializes a serialized Module binary into a <code>Module</code>.",55,[[["store",3]],[["deserializeerror",4],["result",4]]]],[11,"deserialize_from_file","","Deserializes a a serialized Module located in a <code>Path</code> into …",55,[[["store",3]],[["deserializeerror",4],["result",4]]]],[11,"from_artifact","","",55,[[["artifact",8],["arc",3],["store",3]]]],[11,"instantiate","","",55,[[["resolver",8]],[["instantiationerror",4],["result",4],["instancehandle",3]]]],[11,"name","","Returns the name of the current module.",55,[[],[["option",4],["str",15]]]],[11,"set_name","","Sets the name of the current module. This is normally …",55,[[["str",15]],["bool",15]]],[11,"imports","","Returns an iterator over the imported types in the Module.",55,[[],["importsiterator",3]]],[11,"exports","","Returns an iterator over the exported types in the Module.",55,[[],["exportsiterator",3]]],[11,"custom_sections","","Get the custom sections of the module given a <code>name</code>.",55,[[["str",15]]]],[11,"store","","Returns the [<code>Store</code>] where the <code>Instance</code> belongs.",55,[[],["store",3]]],[0,"native","wasmer","Native Functions.",null,null],[3,"NativeFunc","wasmer::native","A WebAssembly function that can be called natively (using …",null,null],[12,"store","","",56,null],[12,"exported","","",56,null],[12,"_phantom","","",56,null],[11,"new","","",56,[[["exportfunction",3],["store",3]]]],[11,"is_host","","",56,[[],["bool",15]]],[11,"vmctx","","",56,[[],["vmfunctionenvironment",19]]],[11,"address","","",56,[[]]],[11,"arg_kind","","",56,[[],["vmfunctionkind",4]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[11,"call","","Call the typed func and return results.",56,[[],[["runtimeerror",3],["result",4]]]],[0,"ptr","wasmer","Types for a reusable pointer abstraction for accessing …",null,null],[3,"Array","wasmer::ptr","The <code>Array</code> marker type. This type can be used like …",null,null],[3,"Item","","The <code>Item</code> marker type. This is the default and does not …",null,null],[3,"WasmPtr","","A zero-cost type that represents a pointer to something …",null,null],[12,"offset","","",57,null],[12,"_phantom","","",57,null],[11,"new","","Create a new <code>WasmPtr</code> at the given offset.",57,[[["u32",15]]]],[11,"offset","","Get the offset into Wasm linear memory for this <code>WasmPtr</code>.",57,[[],["u32",15]]],[5,"align_pointer","","",null,[[["usize",15]],["usize",15]]],[11,"deref","","Dereference the <code>WasmPtr</code> getting access to a <code>&Cell<T></code> …",57,[[["memory",3]],[["cell",3],["option",4]]]],[11,"deref_mut","","Mutably dereference this <code>WasmPtr</code> getting a <code>&mut Cell<T></code> …",57,[[["memory",3]],[["option",4],["cell",3]]]],[11,"deref","","Dereference the <code>WasmPtr</code> getting access to a <code>&[Cell<T>]</code> …",57,[[["u32",15],["memory",3]],["option",4]]],[11,"deref_mut","","Mutably dereference this <code>WasmPtr</code> getting a <code>&mut [Cell<T>]</code> …",57,[[["u32",15],["memory",3]],["option",4]]],[11,"get_utf8_str","","Get a UTF-8 string from the <code>WasmPtr</code> with the given length.",57,[[["u32",15],["memory",3]],[["str",15],["option",4]]]],[11,"get_utf8_string","","Get a UTF-8 <code>String</code> from the <code>WasmPtr</code> with the given length.",57,[[["u32",15],["memory",3]],[["option",4],["string",3]]]],[11,"get_utf8_str_with_nul","","Get a UTF-8 string from the <code>WasmPtr</code>, where the string is …",57,[[["memory",3]],[["str",15],["option",4]]]],[11,"get_utf8_string_with_nul","","Get a UTF-8 <code>String</code> from the <code>WasmPtr</code>, where the string is …",57,[[["memory",3]],[["option",4],["string",3]]]],[0,"store","wasmer","",null,null],[3,"Store","wasmer::store","The store represents all global state that can be …",null,null],[12,"engine","","",58,null],[12,"tunables","","",58,null],[11,"new","","Creates a new <code>Store</code> with a specific [<code>Engine</code>].",58,[[]]],[11,"new_with_tunables","","Creates a new <code>Store</code> with a specific [<code>Engine</code>] and [<code>Tunables</code>…",58,[[]]],[11,"tunables","","Returns the [<code>Tunables</code>].",58,[[],["tunables",8]]],[11,"engine","","Returns the [<code>Engine</code>].",58,[[],["arc",3]]],[11,"same","","Checks whether two stores are identical. A store is …",58,[[],["bool",15]]],[8,"StoreObject","","A trait represinting any object that lives in the <code>Store</code>.",null,null],[10,"comes_from_same_store","","Return true if the object <code>Store</code> is the same as the …",59,[[["store",3]],["bool",15]]],[0,"tunables","wasmer","",null,null],[3,"BaseTunables","wasmer::tunables","Tunable parameters for WebAssembly compilation. This is …",null,null],[12,"static_memory_bound","","For static heaps, the size in wasm pages of the heap …",60,null],[12,"static_memory_offset_guard_size","","The size in bytes of the offset guard for static heaps.",60,null],[12,"dynamic_memory_offset_guard_size","","The size in bytes of the offset guard for dynamic heaps.",60,null],[11,"for_target","","Get the <code>BaseTunables</code> for a specific Target",60,[[["target",3]]]],[0,"types","wasmer","",null,null],[3,"ExportType","wasmer::types","A descriptor for an exported WebAssembly value.",null,null],[12,"name","","",61,null],[12,"ty","","",61,null],[4,"ExternType","","A list of all possible types which can be externally …",null,null],[13,"Function","","This external type is the type of a WebAssembly function.",62,null],[13,"Global","","This external type is the type of a WebAssembly global.",62,null],[13,"Table","","This external type is the type of a WebAssembly table.",62,null],[13,"Memory","","This external type is the type of a WebAssembly memory.",62,null],[3,"FunctionType","","The signature of a function that is either implemented in …",null,null],[12,"params","","The parameters of the function",63,null],[12,"results","","The return values of the function",63,null],[3,"GlobalType","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",64,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",64,null],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[12,"module","","",65,null],[12,"name","","",65,null],[12,"ty","","",65,null],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[12,"minimum","","The minimum number of pages in the memory.",66,null],[12,"maximum","","The maximum number of pages in the memory.",66,null],[12,"shared","","Whether the memory may be shared between multiple threads.",66,null],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",67,null],[13,"Var","","The value of the global can change over time",67,null],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[12,"ty","","The type of data stored in elements of the table.",68,null],[12,"minimum","","The minimum number of elements in the table.",68,null],[12,"maximum","","The maximum number of elements in the table.",68,null],[4,"ValType","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",69,null],[13,"I64","","Signed 64 bit integer.",69,null],[13,"F32","","Floating point 32 bit integer.",69,null],[13,"F64","","Floating point 64 bit integer.",69,null],[13,"V128","","A 128 bit number.",69,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",69,null],[13,"FuncRef","","A reference to a Wasm function.",69,null],[6,"Val","","WebAssembly computations manipulate values of basic value …",null,null],[8,"ValFuncRef","","It provides useful functions for converting back and forth…",null,null],[10,"into_vm_funcref","","",70,[[["store",3]],[["runtimeerror",3],["vmfuncref",3],["result",4]]]],[10,"from_vm_funcref","","",70,[[["vmfuncref",3],["store",3]]]],[10,"into_table_reference","","",70,[[["store",3]],[["runtimeerror",3],["tableelement",4],["result",4]]]],[10,"from_table_reference","","",70,[[["tableelement",4],["store",3]]]],[0,"utils","wasmer","",null,null],[5,"is_wasm","wasmer::utils","Check if the provided bytes are wasm-like",null,[[],["bool",15]]],[0,"vm","wasmer","The vm module re-exports wasmer-vm types.",null,null],[8,"Memory","wasmer::vm","Trait for implementing Wasm Memory used by Wasmer.",null,null],[10,"ty","","Returns the memory type for this memory.",71,[[],["memorytype",3]]],[10,"style","","Returns the memory style for this memory.",71,[[],["memorystyle",4]]],[10,"size","","Returns the number of allocated wasm pages.",71,[[],["pages",3]]],[10,"grow","","Grow memory by the specified amount of wasm pages.",71,[[["pages",3]],[["pages",3],["memoryerror",4],["result",4]]]],[10,"vmmemory","","Return a [<code>VMMemoryDefinition</code>] for exposing the memory to …",71,[[],[["nonnull",3],["vmmemorydefinition",3]]]],[4,"MemoryError","","Error type describing things that can go wrong when …",null,null],[13,"Region","","Low level error with mmap.",72,null],[13,"CouldNotGrow","","The operation would cause the size of the memory to …",72,null],[12,"current","wasmer::vm::MemoryError","The current size in pages.",73,null],[12,"attempted_delta","","The attempted amount to grow by in pages.",73,null],[13,"InvalidMemory","wasmer::vm","The operation would cause the size of the memory size …",72,null],[12,"reason","wasmer::vm::MemoryError","The reason why the provided memory is invalid.",74,null],[13,"MinimumMemoryTooLarge","wasmer::vm","Caller asked for more minimum memory than we can give …",72,null],[12,"min_requested","wasmer::vm::MemoryError","The number of pages requested as the minimum amount of …",75,null],[12,"max_allowed","","The maximum amount of memory we can allocate.",75,null],[13,"MaximumMemoryTooLarge","wasmer::vm","Caller asked for a maximum memory greater than we can …",72,null],[12,"max_requested","wasmer::vm::MemoryError","The number of pages requested as the maximum amount of …",76,null],[12,"max_allowed","","The number of pages requested as the maximum amount of …",76,null],[13,"Generic","wasmer::vm","A user defined error value, used for error cases not …",72,null],[4,"MemoryStyle","","Implementation styles for WebAssembly linear memory.",null,null],[13,"Dynamic","","The actual memory can be resized and moved.",77,null],[12,"offset_guard_size","wasmer::vm::MemoryStyle","Our chosen offset-guard size.",78,null],[13,"Static","wasmer::vm","Address space is allocated up front.",77,null],[12,"bound","wasmer::vm::MemoryStyle","The number of mapped and unmapped pages.",79,null],[12,"offset_guard_size","","Our chosen offset-guard size.",79,null],[8,"Table","wasmer::vm","Trait for implementing the interface of a Wasm table.",null,null],[10,"style","","Returns the style for this Table.",80,[[],["tablestyle",4]]],[10,"ty","","Returns the type for this Table.",80,[[],["tabletype",3]]],[10,"size","","Returns the number of allocated elements.",80,[[],["u32",15]]],[10,"grow","","Grow table by the specified amount of elements.",80,[[["u32",15],["tableelement",4]],[["u32",15],["option",4]]]],[10,"get","","Get reference to the specified element.",80,[[["u32",15]],[["tableelement",4],["option",4]]]],[10,"set","","Set reference to the specified element.",80,[[["u32",15],["tableelement",4]],[["trap",4],["result",4]]]],[10,"vmtable","","Return a <code>VMTableDefinition</code> for exposing the table to …",80,[[],[["vmtabledefinition",3],["nonnull",3]]]],[11,"copy","","Copy <code>len</code> elements from <code>src_table[src_index..]</code> into …",80,[[["u32",15],["table",8]],[["trap",4],["result",4]]]],[4,"TableStyle","","Implementation styles for WebAssembly tables.",null,null],[13,"CallerChecksSignature","","Signatures are stored in the table and checked in the …",81,null],[4,"VMExtern","","The value of an export passed from one instance to …",null,null],[13,"Function","","A function export value.",82,null],[13,"Table","","A table export value.",82,null],[13,"Memory","","A memory export value.",82,null],[13,"Global","","A global export value.",82,null],[3,"VMMemoryDefinition","","The fields compiled code needs to access to utilize a …",null,null],[12,"base","","The start address which is always valid, even if the …",83,null],[12,"current_length","","The current logical size of this linear memory in bytes.",83,null],[3,"VMTableDefinition","","The fields compiled code needs to access to utilize a …",null,null],[12,"base","","Pointer to the table data.",84,null],[12,"current_elements","","The current number of elements in the table.",84,null],[24,"WasmerEnv","wasmer","Implement [<code>WasmerEnv</code>] for your type with …",null,null],[4,"HostEnvInitError","","An error while initializing the user supplied host env …",null,null],[13,"Export","","An error occurred when accessing an export",0,null],[3,"LazyInit","","Lazily init an item",null,null],[12,"data","","The data to be initialized",2,null],[12,"initialized","","Whether or not the data has been initialized",2,null],[8,"WasmerEnv","","Trait for initializing the environments passed to host …",null,null],[11,"init_with_instance","wasmer::env","The function that Wasmer will call on your type to let it …",1,[[["instance",3]],[["hostenviniterror",4],["result",4]]]],[4,"ExportError","wasmer","The <code>ExportError</code> can happen when trying to get a specific …",null,null],[13,"IncompatibleType","","An error than occurs when the exported type and the …",3,null],[13,"Missing","","This error arises when an export is missing",3,null],[8,"Exportable","","This trait is used to mark types as gettable from an …",null,null],[10,"to_export","","This function is used when providedd the [<code>Extern</code>] as …",6,[[],["export",4]]],[10,"get_self_from_extern","","Implementation of how to get the export corresponding to …",6,[[["extern",4]],[["exporterror",4],["result",4]]]],[3,"Exports","","Exports is a special kind of map that allows easily …",null,null],[12,"map","","",4,null],[3,"ExportsIterator","","An iterator over exports.",null,null],[12,"iter","","",5,null],[4,"Extern","","An <code>Extern</code> is the runtime representation of an entity that …",null,null],[13,"Function","","A external [<code>Function</code>].",48,null],[13,"Global","","A external [<code>Global</code>].",48,null],[13,"Table","","A external [<code>Table</code>].",48,null],[13,"Memory","","A external [<code>Memory</code>].",48,null],[8,"FromToNativeWasmType","","A trait to convert a Rust value to a <code>WasmNativeType</code> value,…",null,null],[16,"Native","","Native Wasm type.",10,null],[10,"from_native","","Convert a value of kind <code>Self::Native</code> to <code>Self</code>.",10,[[]]],[10,"to_native","","Convert self to <code>Self::Native</code>.",10,[[]]],[3,"Function","","A WebAssembly <code>function</code> instance.",null,null],[12,"store","","",41,null],[12,"exported","","",41,null],[3,"Global","","A WebAssembly <code>global</code> instance.",null,null],[12,"store","","",45,null],[12,"vm_global","","",45,null],[8,"HostFunction","","The <code>HostFunction</code> trait represents the set of functions …",null,null],[10,"function_body_ptr","","Get the pointer to the function body.",13,[[]]],[3,"Memory","","A WebAssembly <code>memory</code> instance.",null,null],[12,"store","","",46,null],[12,"vm_memory","","",46,null],[3,"Table","","A WebAssembly <code>table</code> instance.",null,null],[12,"store","","",47,null],[12,"vm_table","","",47,null],[8,"WasmTypeList","","The <code>WasmTypeList</code> trait represents a tuple (list) of Wasm …",null,null],[16,"CStruct","","The C type (a struct) that can hold/represent all the …",11,null],[16,"Array","","The array type that can hold all the represented values.",11,null],[10,"from_array","","Constructs <code>Self</code> based on an array of values.",11,[[]]],[10,"from_slice","","Constructs <code>Self</code> based on a slice of values.",11,[[],[["result",4],["tryfromsliceerror",3]]]],[10,"into_array","","Builds and returns an array of type <code>Array</code> from a tuple …",11,[[]]],[10,"empty_array","","Allocates and return an empty array of type <code>Array</code> that …",11,[[]]],[10,"from_c_struct","","Builds a tuple (list) of values from a C struct of type …",11,[[]]],[10,"into_c_struct","","Builds and returns a C struct of type <code>CStruct</code> from a …",11,[[]]],[10,"wasm_types","","Get the Wasm types for the tuple (list) of currently …",11,[[]]],[3,"ImportObject","","All of the import data used when instantiating.",null,null],[12,"map","","",50,null],[3,"ImportObjectIterator","","Iterator for an <code>ImportObject</code>\'s exports.",null,null],[12,"elements","","",51,null],[8,"LikeNamespace","","The <code>LikeNamespace</code> trait represents objects that act as a …",null,null],[10,"get_namespace_export","","Gets an export by name.",49,[[["str",15]],[["option",4],["export",4]]]],[10,"get_namespace_exports","","Gets all exports in the namespace.",49,[[],["vec",3]]],[3,"Instance","","A WebAssembly Instance is a stateful, executable instance …",null,null],[12,"handle","","",52,null],[12,"module","","",52,null],[12,"exports","","The exports for an instance.",52,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Link","","A linking ocurred during instantiation.",53,null],[13,"Start","","A runtime error occured while invoking the start function",53,null],[13,"HostEnvInitialization","","Error occurred when initializing the host environment.",53,null],[3,"Module","","A WebAssembly Module contains stateless WebAssembly code …",null,null],[12,"store","","",55,null],[12,"artifact","","",55,null],[3,"NativeFunc","","A WebAssembly function that can be called natively (using …",null,null],[12,"store","","",56,null],[12,"exported","","",56,null],[12,"_phantom","","",56,null],[3,"Array","","The <code>Array</code> marker type. This type can be used like …",null,null],[3,"Item","","The <code>Item</code> marker type. This is the default and does not …",null,null],[3,"WasmPtr","","A zero-cost type that represents a pointer to something …",null,null],[12,"offset","","",57,null],[12,"_phantom","","",57,null],[3,"Store","","The store represents all global state that can be …",null,null],[12,"engine","","",58,null],[12,"tunables","","",58,null],[8,"StoreObject","","A trait represinting any object that lives in the <code>Store</code>.",null,null],[10,"comes_from_same_store","","Return true if the object <code>Store</code> is the same as the …",59,[[["store",3]],["bool",15]]],[3,"BaseTunables","","Tunable parameters for WebAssembly compilation. This is …",null,null],[12,"static_memory_bound","","For static heaps, the size in wasm pages of the heap …",60,null],[12,"static_memory_offset_guard_size","","The size in bytes of the offset guard for static heaps.",60,null],[12,"dynamic_memory_offset_guard_size","","The size in bytes of the offset guard for dynamic heaps.",60,null],[3,"ExportType","","A descriptor for an exported WebAssembly value.",null,null],[12,"name","","",61,null],[12,"ty","","",61,null],[4,"ExternType","","A list of all possible types which can be externally …",null,null],[13,"Function","","This external type is the type of a WebAssembly function.",62,null],[13,"Global","","This external type is the type of a WebAssembly global.",62,null],[13,"Table","","This external type is the type of a WebAssembly table.",62,null],[13,"Memory","","This external type is the type of a WebAssembly memory.",62,null],[3,"FunctionType","","The signature of a function that is either implemented in …",null,null],[12,"params","","The parameters of the function",63,null],[12,"results","","The return values of the function",63,null],[3,"GlobalType","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",64,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",64,null],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[12,"module","","",65,null],[12,"name","","",65,null],[12,"ty","","",65,null],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[12,"minimum","","The minimum number of pages in the memory.",66,null],[12,"maximum","","The maximum number of pages in the memory.",66,null],[12,"shared","","Whether the memory may be shared between multiple threads.",66,null],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",67,null],[13,"Var","","The value of the global can change over time",67,null],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[12,"ty","","The type of data stored in elements of the table.",68,null],[12,"minimum","","The minimum number of elements in the table.",68,null],[12,"maximum","","The maximum number of elements in the table.",68,null],[6,"Val","","WebAssembly computations manipulate values of basic value …",null,null],[4,"ValType","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",69,null],[13,"I64","","Signed 64 bit integer.",69,null],[13,"F32","","Floating point 32 bit integer.",69,null],[13,"F64","","Floating point 64 bit integer.",69,null],[13,"V128","","A 128 bit number.",69,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",69,null],[13,"FuncRef","","A reference to a Wasm function.",69,null],[6,"Value","","WebAssembly computations manipulate values of basic value …",null,null],[4,"Type","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",69,null],[13,"I64","","Signed 64 bit integer.",69,null],[13,"F32","","Floating point 32 bit integer.",69,null],[13,"F64","","Floating point 64 bit integer.",69,null],[13,"V128","","A 128 bit number.",69,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",69,null],[13,"FuncRef","","A reference to a Wasm function.",69,null],[5,"is_wasm","","Check if the provided bytes are wasm-like",null,[[],["bool",15]]],[4,"Architecture","","The \\\"architecture\\\" field, which in some cases also …",null,null],[13,"Unknown","","",85,null],[13,"Arm","","",85,null],[13,"AmdGcn","","",85,null],[13,"Aarch64","","",85,null],[13,"Asmjs","","",85,null],[13,"Avr","","",85,null],[13,"Hexagon","","",85,null],[13,"X86_32","","",85,null],[13,"Mips32","","",85,null],[13,"Mips64","","",85,null],[13,"Msp430","","",85,null],[13,"Nvptx64","","",85,null],[13,"Powerpc","","",85,null],[13,"Powerpc64","","",85,null],[13,"Powerpc64le","","",85,null],[13,"Riscv32","","",85,null],[13,"Riscv64","","",85,null],[13,"S390x","","",85,null],[13,"Sparc","","",85,null],[13,"Sparc64","","",85,null],[13,"Sparcv9","","",85,null],[13,"Wasm32","","",85,null],[13,"Wasm64","","",85,null],[13,"X86_64","","",85,null],[4,"CallingConvention","","The calling convention, which specifies things like which …",null,null],[13,"SystemV","","\\\"System V\\\", which is used on most Unix-like platfoms. …",86,null],[13,"WasmBasicCAbi","","The WebAssembly C ABI. …",86,null],[13,"WindowsFastcall","","\\\"Windows Fastcall\\\", which is used on Windows. Note that …",86,null],[4,"OperatingSystem","","The \\\"operating system\\\" field, which sometimes implies an …",null,null],[13,"Unknown","","",87,null],[13,"AmdHsa","","",87,null],[13,"Bitrig","","",87,null],[13,"Cloudabi","","",87,null],[13,"Cuda","","",87,null],[13,"Darwin","","",87,null],[13,"Dragonfly","","",87,null],[13,"Emscripten","","",87,null],[13,"Freebsd","","",87,null],[13,"Fuchsia","","",87,null],[13,"Haiku","","",87,null],[13,"Hermit","","",87,null],[13,"Illumos","","",87,null],[13,"Ios","","",87,null],[13,"L4re","","",87,null],[13,"Linux","","",87,null],[13,"MacOSX","","",87,null],[12,"major","wasmer::OperatingSystem","",88,null],[12,"minor","","",88,null],[12,"patch","","",88,null],[13,"Nebulet","wasmer","",87,null],[13,"Netbsd","","",87,null],[13,"None_","","",87,null],[13,"Openbsd","","",87,null],[13,"Psp","","",87,null],[13,"Redox","","",87,null],[13,"Solaris","","",87,null],[13,"Tvos","","",87,null],[13,"Uefi","","",87,null],[13,"VxWorks","","",87,null],[13,"Wasi","","",87,null],[13,"Windows","","",87,null],[3,"Triple","","A target \\\"triple\\\". Historically such things had three …",null,null],[12,"architecture","","The \\\"architecture\\\" (and sometimes the subarchitecture).",89,null],[12,"vendor","","The \\\"vendor\\\" (whatever that means).",89,null],[12,"operating_system","","The \\\"operating system\\\" (sometimes also the environment).",89,null],[12,"environment","","The \\\"environment\\\" on top of the operating system (often …",89,null],[12,"binary_format","","The \\\"binary format\\\" (rarely used).",89,null],[17,"HOST","","The <code>Triple</code> of the current host.",null,null],[8,"CompilerConfig","","The compiler configuration options.",null,null],[11,"enable_pic","","Enable Position Independent Code (PIC).",90,[[]]],[11,"enable_verifier","","Enable compiler IR verification.",90,[[]]],[10,"compiler","","Gets the custom compiler config",90,[[["box",3],["global",3]],[["box",3],["global",3],["compiler",8]]]],[11,"default_features_for_target","","Gets the default features for this compiler in the given …",90,[[["target",3]],["features",3]]],[10,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",90,[[["modulemiddleware",8],["arc",3]]]],[8,"FunctionMiddleware","","A function middleware specialized for a single function.",null,null],[11,"feed","","Processes the given operator.",91,[[["operator",4],["middlewarereaderstate",3]],[["result",4],["middlewareerror",3]]]],[3,"MiddlewareError","","A error in the middleware.",null,null],[12,"name","","The name of the middleware where the error was created",92,null],[12,"message","","The error message",92,null],[3,"MiddlewareReaderState","","The state of the binary reader. Exposed to middlewares to …",null,null],[12,"inner","","Raw binary reader.",93,null],[12,"pending_operations","","The pending operations added by the middleware.",93,null],[8,"ModuleMiddleware","","A shared builder for function middlewares.",null,null],[10,"generate_function_middleware","","Generates a <code>FunctionMiddleware</code> for a given function.",94,[[["localfunctionindex",3]],[["box",3],["functionmiddleware",8],["global",3]]]],[11,"transform_module_info","","Transforms a <code>ModuleInfo</code> struct in-place. This is called …",94,[[["moduleinfo",3]]]],[4,"CompileError","","The WebAssembly.CompileError object indicates an error …",null,null],[13,"Wasm","","A Wasm translation error occured.",95,null],[13,"Codegen","","A compilation error occured.",95,null],[13,"Validate","","The module did not pass validation.",95,null],[13,"UnsupportedFeature","","The compiler doesn\'t support a Wasm feature",95,null],[13,"UnsupportedTarget","","The compiler cannot compile for the given target. This …",95,null],[13,"Resource","","Insufficient resources available for execution.",95,null],[4,"CpuFeature","","The nomenclature is inspired by the <code>cpuid</code> crate. The list …",null,null],[13,"SSE2","","",96,null],[13,"SSE3","","",96,null],[13,"SSSE3","","",96,null],[13,"SSE41","","",96,null],[13,"SSE42","","",96,null],[13,"POPCNT","","",96,null],[13,"AVX","","",96,null],[13,"BMI1","","",96,null],[13,"BMI2","","",96,null],[13,"AVX2","","",96,null],[13,"AVX512DQ","","",96,null],[13,"AVX512VL","","",96,null],[13,"AVX512F","","",96,null],[13,"LZCNT","","",96,null],[3,"Features","","Controls which experimental features will be enabled. …",null,null],[12,"threads","","Threads proposal should be enabled",97,null],[12,"reference_types","","Reference Types proposal should be enabled",97,null],[12,"simd","","SIMD proposal should be enabled",97,null],[12,"bulk_memory","","Bulk Memory proposal should be enabled",97,null],[12,"multi_value","","Multi Value proposal should be enabled",97,null],[12,"tail_call","","Tail call proposal should be enabled",97,null],[12,"module_linking","","Module Linking proposal should be enabled",97,null],[12,"multi_memory","","Multi Memory proposal should be enabled",97,null],[12,"memory64","","64-bit Memory proposal should be enabled",97,null],[12,"exceptions","","Wasm exceptions proposal should be enabled",97,null],[4,"ParseCpuFeatureError","","The error that can happen while parsing a <code>str</code> to retrieve …",null,null],[13,"Missing","","The provided string feature doesn\'t exist",98,null],[3,"Target","","This is the target that we will use for compiling the …",null,null],[12,"triple","","",99,null],[12,"cpu_features","","",99,null],[4,"WasmError","","A WebAssembly translation error.",null,null],[13,"InvalidWebAssembly","","The input WebAssembly code is invalid.",100,null],[12,"message","wasmer::WasmError","A string describing the validation error.",101,null],[12,"offset","","The bytecode offset where the error occurred.",101,null],[13,"Unsupported","wasmer","A feature used by the WebAssembly code is not supported …",100,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",100,null],[13,"Middleware","","An error from the middleware error.",100,null],[13,"Generic","","A generic error.",100,null],[6,"WasmResult","","A convenient alias for a <code>Result</code> that uses <code>WasmError</code> as …",null,null],[8,"ChainableNamedResolver","","A trait for chaining resolvers together.",null,null],[11,"chain_front","","Chain a resolver in front of the current resolver.",102,[[],["namedresolverchain",3]]],[11,"chain_back","","Chain a resolver behind the current resolver.",102,[[],["namedresolverchain",3]]],[4,"DeserializeError","","The Deserialize error can occur when loading a compiled …",null,null],[13,"Io","","An IO error",103,null],[13,"Generic","","A generic deserialization error",103,null],[13,"Incompatible","","Incompatible serialized binary",103,null],[13,"CorruptedBinary","","The provided binary is corrupted",103,null],[13,"Compiler","","The binary was valid, but we got an error when trying to …",103,null],[8,"Engine","","A unimplemented Wasmer <code>Engine</code>.",null,null],[10,"target","","Gets the target",104,[[],["target",3]]],[10,"register_signature","","Register a signature",104,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[10,"register_function_metadata","","Register a function\'s data.",104,[[["vmcallercheckedanyfunc",3]],["vmfuncref",3]]],[10,"lookup_signature","","Lookup a signature",104,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[10,"validate","","Validates a WebAssembly module",104,[[],[["result",4],["compileerror",4]]]],[10,"compile","","Compile a WebAssembly binary",104,[[["tunables",8]],[["result",4],["compileerror",4],["arc",3]]]],[10,"deserialize","","Deserializes a WebAssembly module",104,[[],[["result",4],["deserializeerror",4],["arc",3]]]],[11,"deserialize_from_file","","Deserializes a WebAssembly module from a path",104,[[["path",3]],[["result",4],["deserializeerror",4],["arc",3]]]],[10,"id","","A unique identifier for this object.",104,[[],["engineid",3]]],[10,"cloned","","Clone the engine",104,[[],[["arc",3],["engine",8]]]],[4,"Export","","The value of an export passed from one instance to …",null,null],[13,"Function","","A function export value.",105,null],[13,"Table","","A table export value.",105,null],[13,"Memory","","A memory export value.",105,null],[13,"Global","","A global export value.",105,null],[3,"FrameInfo","","Description of a frame in a backtrace for a …",null,null],[12,"module_name","","",106,null],[12,"func_index","","",106,null],[12,"function_name","","",106,null],[12,"func_start","","",106,null],[12,"instr","","",106,null],[4,"LinkError","","The WebAssembly.LinkError object indicates an error during…",null,null],[13,"Import","","An error occurred when checking the import types.",107,null],[13,"Trap","","A trap ocurred during linking.",107,null],[13,"Resource","","Insufficient resources available for linking.",107,null],[8,"NamedResolver","","Import resolver connects imports with available exported …",null,null],[10,"resolve_by_name","","Resolves an import a WebAssembly module to an export it\'s …",108,[[["str",15]],[["option",4],["export",4]]]],[3,"NamedResolverChain","","A [<code>Resolver</code>] that links two resolvers together in a chain.",null,null],[12,"a","","",109,null],[12,"b","","",109,null],[8,"Resolver","","Import resolver connects imports with available exported …",null,null],[10,"resolve","","Resolves an import a WebAssembly module to an export it\'s …",110,[[["u32",15],["str",15]],[["option",4],["export",4]]]],[3,"RuntimeError","","A struct representing an aborted instruction execution, …",null,null],[12,"inner","","",111,null],[4,"SerializeError","","The Serialize error can occur when serializing a compiled …",null,null],[13,"Io","","An IO error",112,null],[13,"Generic","","A generic serialization error",112,null],[8,"Tunables","","An engine delegates the creation of memories, tables, and …",null,null],[10,"memory_style","","Construct a <code>MemoryStyle</code> for the provided <code>MemoryType</code>",113,[[["memorytype",3]],["memorystyle",4]]],[10,"table_style","","Construct a <code>TableStyle</code> for the provided <code>TableType</code>",113,[[["tabletype",3]],["tablestyle",4]]],[10,"create_host_memory","","Create a memory owned by the host given a [<code>MemoryType</code>] …",113,[[["memorystyle",4],["memorytype",3]],[["arc",3],["result",4],["memoryerror",4]]]],[10,"create_vm_memory","","Create a memory owned by the VM given a [<code>MemoryType</code>] and …",113,[[["memorystyle",4],["nonnull",3],["vmmemorydefinition",3],["memorytype",3]],[["arc",3],["result",4],["memoryerror",4]]]],[10,"create_host_table","","Create a table owned by the host given a [<code>TableType</code>] and …",113,[[["tablestyle",4],["tabletype",3]],[["arc",3],["string",3],["result",4]]]],[10,"create_vm_table","","Create a table owned by the VM given a [<code>TableType</code>] and a […",113,[[["tabletype",3],["nonnull",3],["vmtabledefinition",3],["tablestyle",4]],[["arc",3],["string",3],["result",4]]]],[11,"create_global","","Create a global with an unset value.",113,[[["globaltype",3]],[["string",3],["arc",3],["result",4]]]],[11,"create_memories","","Allocate memory for just the memories of the current …",113,[[["moduleinfo",3],["primarymap",3]],[["linkerror",4],["result",4],["primarymap",3]]]],[11,"create_tables","","Allocate memory for just the tables of the current module.",113,[[["primarymap",3],["moduleinfo",3]],[["linkerror",4],["result",4],["primarymap",3]]]],[11,"create_globals","","Allocate memory for just the globals of the current …",113,[[["moduleinfo",3]],[["linkerror",4],["result",4],["primarymap",3]]]],[3,"ExternRef","","An opaque reference to some data. This reference can be …",null,null],[12,"inner","","",8,null],[3,"Atomically","","Atomically.",null,null],[3,"Bytes","","Units of WebAssembly memory in terms of 8-bit bytes.",null,null],[12,"0","","",114,null],[4,"ExportIndex","","An entity to export.",null,null],[13,"Function","","Function export.",115,null],[13,"Table","","Table export.",115,null],[13,"Memory","","Memory export.",115,null],[13,"Global","","Global export.",115,null],[4,"GlobalInit","","Globals are initialized via the <code>const</code> operators or by …",null,null],[13,"I32Const","","An <code>i32.const</code>.",116,null],[13,"I64Const","","An <code>i64.const</code>.",116,null],[13,"F32Const","","An <code>f32.const</code>.",116,null],[13,"F64Const","","An <code>f64.const</code>.",116,null],[13,"V128Const","","A <code>v128.const</code>.",116,null],[13,"GetGlobal","","A <code>global.get</code> of another global.",116,null],[13,"RefNullConst","","A <code>ref.null</code>.",116,null],[13,"RefFunc","","A <code>ref.func <index></code>.",116,null],[3,"LocalFunctionIndex","","Index type of a function defined locally inside the …",null,null],[12,"0","","",117,null],[3,"MemoryView","","A view into a memory.",null,null],[12,"ptr","","",118,null],[12,"length","","",118,null],[12,"_phantom","","",118,null],[3,"Pages","","Units of WebAssembly pages (as specified to be 65,536 …",null,null],[12,"0","","",119,null],[8,"ValueType","","Trait for a Value type. A Value type is a type that is …",null,null],[17,"WASM_MAX_PAGES","","The number of pages we can have before we run out of byte …",null,null],[17,"WASM_MIN_PAGES","","The minimum number of pages allowed.",null,null],[17,"WASM_PAGE_SIZE","","WebAssembly page sizes are fixed to be 64KiB. Note: large …",null,null],[5,"raise_user_trap","","Raises a user-defined trap immediately.",null,[[["box",3],["error",8],["global",3]]]],[4,"MemoryError","","Error type describing things that can go wrong when …",null,null],[13,"Region","","Low level error with mmap.",72,null],[13,"CouldNotGrow","","The operation would cause the size of the memory to …",72,null],[12,"current","wasmer::MemoryError","The current size in pages.",73,null],[12,"attempted_delta","","The attempted amount to grow by in pages.",73,null],[13,"InvalidMemory","wasmer","The operation would cause the size of the memory size …",72,null],[12,"reason","wasmer::MemoryError","The reason why the provided memory is invalid.",74,null],[13,"MinimumMemoryTooLarge","wasmer","Caller asked for more minimum memory than we can give …",72,null],[12,"min_requested","wasmer::MemoryError","The number of pages requested as the minimum amount of …",75,null],[12,"max_allowed","","The maximum amount of memory we can allocate.",75,null],[13,"MaximumMemoryTooLarge","wasmer","Caller asked for a maximum memory greater than we can …",72,null],[12,"max_requested","wasmer::MemoryError","The number of pages requested as the maximum amount of …",76,null],[12,"max_allowed","","The number of pages requested as the maximum amount of …",76,null],[13,"Generic","wasmer","A user defined error value, used for error cases not …",72,null],[5,"wat2wasm","","Parses in-memory bytes as either the WebAssembly Text …",null,[[],[["cow",4],["result",4],["error",3]]]],[3,"Cranelift","","Global configuration options used to create an …",null,null],[12,"enable_nan_canonicalization","","",120,null],[12,"enable_verifier","","",120,null],[12,"enable_simd","","",120,null],[12,"enable_pic","","",120,null],[12,"opt_level","","",120,null],[12,"middlewares","","The middleware chain.",120,null],[4,"CraneliftOptLevel","","Possible optimization levels for the Cranelift codegen …",null,null],[13,"None","","No optimizations performed, minimizes compilation time by …",121,null],[13,"Speed","","Generates the fastest possible code, but may take longer.",121,null],[13,"SpeedAndSize","","Similar to <code>speed</code>, but also performs transformations aimed …",121,null],[3,"JITArtifact","","A compiled wasm module, ready to be instantiated.",null,null],[12,"serializable","","",122,null],[12,"finished_functions","","",122,null],[12,"finished_function_call_trampolines","","",122,null],[12,"finished_dynamic_function_trampolines","","",122,null],[12,"signatures","","",122,null],[12,"func_data_registry","","",122,null],[12,"frame_info_registration","","",122,null],[12,"finished_function_lengths","","",122,null],[3,"JITEngine","","A WebAssembly <code>JIT</code> Engine.",null,null],[12,"inner","","",123,null],[12,"target","","The target for the compiler",123,null],[12,"engine_id","","",123,null],[3,"JIT","","The JIT builder",null,null],[12,"compiler_config","","",124,null],[12,"target","","",124,null],[12,"features","","",124,null],[17,"VERSION","","Version number of this crate.",null,null],[14,"imports","","Generate an <code>ImportObject</code> easily with the <code>imports!</code> macro.",null,null],[11,"from","wasmer::env","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"vzip","","",2,[[]]],[11,"from","wasmer::exports","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"vzip","","",5,[[]]],[11,"from","wasmer","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[],["bool",15]]],[11,"pointer_metadata","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"vzip","","",8,[[]]],[11,"from","wasmer::externals::function::inner","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[],["bool",15]]],[11,"pointer_metadata","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"vzip","","",9,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"pointer_metadata","","",125,[[]]],[11,"init","","",125,[[],["usize",15]]],[11,"deref","","",125,[[["usize",15]]]],[11,"deref_mut","","",125,[[["usize",15]]]],[11,"drop","","",125,[[["usize",15]]]],[11,"vzip","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"pointer_metadata","","",126,[[]]],[11,"init","","",126,[[],["usize",15]]],[11,"deref","","",126,[[["usize",15]]]],[11,"deref_mut","","",126,[[["usize",15]]]],[11,"drop","","",126,[[["usize",15]]]],[11,"vzip","","",126,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[],["bool",15]]],[11,"pointer_metadata","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"vzip","","",14,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"pointer_metadata","","",127,[[]]],[11,"init","","",127,[[],["usize",15]]],[11,"deref","","",127,[[["usize",15]]]],[11,"deref_mut","","",127,[[["usize",15]]]],[11,"drop","","",127,[[["usize",15]]]],[11,"vzip","","",127,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"pointer_metadata","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"pointer_metadata","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"pointer_metadata","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"pointer_metadata","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"pointer_metadata","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"pointer_metadata","","",21,[[]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"pointer_metadata","","",22,[[]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"pointer_metadata","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"pointer_metadata","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"pointer_metadata","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"pointer_metadata","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"pointer_metadata","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"pointer_metadata","","",28,[[]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"pointer_metadata","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"pointer_metadata","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"pointer_metadata","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"pointer_metadata","","",32,[[]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"pointer_metadata","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"pointer_metadata","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"pointer_metadata","","",35,[[]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"pointer_metadata","","",36,[[]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"pointer_metadata","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"pointer_metadata","","",38,[[]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"vzip","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"pointer_metadata","","",39,[[]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"pointer_metadata","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"vzip","","",40,[[]]],[11,"from","wasmer::externals::function","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"pointer_metadata","","",41,[[]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"vzip","","",41,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"pointer_metadata","","",43,[[]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"vzip","","",43,[[]]],[11,"from","wasmer::externals::global","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"pointer_metadata","","",45,[[]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"vzip","","",45,[[]]],[11,"from","wasmer::externals::memory","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"pointer_metadata","","",46,[[]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"vzip","","",46,[[]]],[11,"from","wasmer::externals::table","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"pointer_metadata","","",47,[[]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"vzip","","",47,[[]]],[11,"from","wasmer::externals","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"pointer_metadata","","",48,[[]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"vzip","","",48,[[]]],[11,"from","wasmer::import_object","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"resolve","","By default this method will be calling […",50,[[["u32",15],["str",15]],[["option",4],["export",4]]]],[11,"pointer_metadata","","",50,[[]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"pointer_metadata","","",51,[[]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"vzip","","",51,[[]]],[11,"from","wasmer::instance","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"pointer_metadata","","",52,[[]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_string","","",53,[[],["string",3]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"pointer_metadata","","",53,[[]]],[11,"init","","",53,[[],["usize",15]]],[11,"deref","","",53,[[["usize",15]]]],[11,"deref_mut","","",53,[[["usize",15]]]],[11,"drop","","",53,[[["usize",15]]]],[11,"vzip","","",53,[[]]],[11,"from","wasmer::module","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"pointer_metadata","","",54,[[]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"pointer_metadata","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"vzip","","",55,[[]]],[11,"from","wasmer::native","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"pointer_metadata","","",56,[[]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"vzip","","",56,[[]]],[11,"from","wasmer::ptr","",128,[[]]],[11,"into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"pointer_metadata","","",128,[[]]],[11,"init","","",128,[[],["usize",15]]],[11,"deref","","",128,[[["usize",15]]]],[11,"deref_mut","","",128,[[["usize",15]]]],[11,"drop","","",128,[[["usize",15]]]],[11,"vzip","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"pointer_metadata","","",129,[[]]],[11,"init","","",129,[[],["usize",15]]],[11,"deref","","",129,[[["usize",15]]]],[11,"deref_mut","","",129,[[["usize",15]]]],[11,"drop","","",129,[[["usize",15]]]],[11,"vzip","","",129,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"equivalent","","",57,[[],["bool",15]]],[11,"pointer_metadata","","",57,[[]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"vzip","","",57,[[]]],[11,"from","wasmer::store","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"pointer_metadata","","",58,[[]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"vzip","","",58,[[]]],[11,"from","wasmer::tunables","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"pointer_metadata","","",60,[[]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"vzip","","",60,[[]]],[11,"from","wasmer","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"equivalent","","",61,[[],["bool",15]]],[11,"pointer_metadata","","",61,[[]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"equivalent","","",62,[[],["bool",15]]],[11,"pointer_metadata","","",62,[[]]],[11,"init","","",62,[[],["usize",15]]],[11,"deref","","",62,[[["usize",15]]]],[11,"deref_mut","","",62,[[["usize",15]]]],[11,"drop","","",62,[[["usize",15]]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"equivalent","","",63,[[],["bool",15]]],[11,"pointer_metadata","","",63,[[]]],[11,"resolve_metadata","","",63,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",63,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",63,[[],["result",4]]],[11,"init","","",63,[[],["usize",15]]],[11,"deref","","",63,[[["usize",15]]]],[11,"deref_mut","","",63,[[["usize",15]]]],[11,"drop","","",63,[[["usize",15]]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"equivalent","","",64,[[],["bool",15]]],[11,"pointer_metadata","","",64,[[]]],[11,"resolve_metadata","","",64,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",64,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",64,[[],["result",4]]],[11,"init","","",64,[[],["usize",15]]],[11,"deref","","",64,[[["usize",15]]]],[11,"deref_mut","","",64,[[["usize",15]]]],[11,"drop","","",64,[[["usize",15]]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"equivalent","","",65,[[],["bool",15]]],[11,"pointer_metadata","","",65,[[]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"to_string","","",66,[[],["string",3]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"equivalent","","",66,[[],["bool",15]]],[11,"pointer_metadata","","",66,[[]]],[11,"resolve_metadata","","",66,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",66,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",66,[[],["result",4]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"equivalent","","",67,[[],["bool",15]]],[11,"pointer_metadata","","",67,[[]]],[11,"resolve_metadata","","",67,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",67,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",67,[[],["result",4]]],[11,"init","","",67,[[],["usize",15]]],[11,"deref","","",67,[[["usize",15]]]],[11,"deref_mut","","",67,[[["usize",15]]]],[11,"drop","","",67,[[["usize",15]]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"to_string","","",68,[[],["string",3]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"equivalent","","",68,[[],["bool",15]]],[11,"pointer_metadata","","",68,[[]]],[11,"resolve_metadata","","",68,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",68,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",68,[[],["result",4]]],[11,"init","","",68,[[],["usize",15]]],[11,"deref","","",68,[[["usize",15]]]],[11,"deref_mut","","",68,[[["usize",15]]]],[11,"drop","","",68,[[["usize",15]]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"equivalent","","",69,[[],["bool",15]]],[11,"pointer_metadata","","",69,[[]]],[11,"resolve_metadata","","",69,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",69,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",69,[[],["result",4]]],[11,"init","","",69,[[],["usize",15]]],[11,"deref","","",69,[[["usize",15]]]],[11,"deref_mut","","",69,[[["usize",15]]]],[11,"drop","","",69,[[["usize",15]]]],[11,"vzip","","",69,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"pointer_metadata","","",72,[[]]],[11,"init","","",72,[[],["usize",15]]],[11,"deref","","",72,[[["usize",15]]]],[11,"deref_mut","","",72,[[["usize",15]]]],[11,"drop","","",72,[[["usize",15]]]],[11,"vzip","","",72,[[]]],[11,"from","wasmer::vm","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"equivalent","","",77,[[],["bool",15]]],[11,"pointer_metadata","","",77,[[]]],[11,"resolve_metadata","","",77,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",77,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",77,[[],["result",4]]],[11,"init","","",77,[[],["usize",15]]],[11,"deref","","",77,[[["usize",15]]]],[11,"deref_mut","","",77,[[["usize",15]]]],[11,"drop","","",77,[[["usize",15]]]],[11,"vzip","","",77,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"equivalent","","",81,[[],["bool",15]]],[11,"pointer_metadata","","",81,[[]]],[11,"resolve_metadata","","",81,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",81,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",81,[[],["result",4]]],[11,"init","","",81,[[],["usize",15]]],[11,"deref","","",81,[[["usize",15]]]],[11,"deref_mut","","",81,[[["usize",15]]]],[11,"drop","","",81,[[["usize",15]]]],[11,"vzip","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"pointer_metadata","","",82,[[]]],[11,"init","","",82,[[],["usize",15]]],[11,"deref","","",82,[[["usize",15]]]],[11,"deref_mut","","",82,[[["usize",15]]]],[11,"drop","","",82,[[["usize",15]]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"pointer_metadata","","",83,[[]]],[11,"init","","",83,[[],["usize",15]]],[11,"deref","","",83,[[["usize",15]]]],[11,"deref_mut","","",83,[[["usize",15]]]],[11,"drop","","",83,[[["usize",15]]]],[11,"vzip","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"pointer_metadata","","",84,[[]]],[11,"init","","",84,[[],["usize",15]]],[11,"deref","","",84,[[["usize",15]]]],[11,"deref_mut","","",84,[[["usize",15]]]],[11,"drop","","",84,[[["usize",15]]]],[11,"vzip","","",84,[[]]],[11,"from","wasmer","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"equivalent","","",85,[[],["bool",15]]],[11,"pointer_metadata","","",85,[[]]],[11,"init","","",85,[[],["usize",15]]],[11,"deref","","",85,[[["usize",15]]]],[11,"deref_mut","","",85,[[["usize",15]]]],[11,"drop","","",85,[[["usize",15]]]],[11,"vzip","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"equivalent","","",86,[[],["bool",15]]],[11,"pointer_metadata","","",86,[[]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"vzip","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"equivalent","","",87,[[],["bool",15]]],[11,"pointer_metadata","","",87,[[]]],[11,"init","","",87,[[],["usize",15]]],[11,"deref","","",87,[[["usize",15]]]],[11,"deref_mut","","",87,[[["usize",15]]]],[11,"drop","","",87,[[["usize",15]]]],[11,"vzip","","",87,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"equivalent","","",89,[[],["bool",15]]],[11,"pointer_metadata","","",89,[[]]],[11,"init","","",89,[[],["usize",15]]],[11,"deref","","",89,[[["usize",15]]]],[11,"deref_mut","","",89,[[["usize",15]]]],[11,"drop","","",89,[[["usize",15]]]],[11,"vzip","","",89,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_string","","",92,[[],["string",3]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"pointer_metadata","","",92,[[]]],[11,"init","","",92,[[],["usize",15]]],[11,"deref","","",92,[[["usize",15]]]],[11,"deref_mut","","",92,[[["usize",15]]]],[11,"drop","","",92,[[["usize",15]]]],[11,"vzip","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"pointer_metadata","","",93,[[]]],[11,"init","","",93,[[],["usize",15]]],[11,"deref","","",93,[[["usize",15]]]],[11,"deref_mut","","",93,[[["usize",15]]]],[11,"drop","","",93,[[["usize",15]]]],[11,"vzip","","",93,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_string","","",95,[[],["string",3]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"pointer_metadata","","",95,[[]]],[11,"init","","",95,[[],["usize",15]]],[11,"deref","","",95,[[["usize",15]]]],[11,"deref_mut","","",95,[[["usize",15]]]],[11,"drop","","",95,[[["usize",15]]]],[11,"vzip","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"equivalent","","",96,[[],["bool",15]]],[11,"pointer_metadata","","",96,[[]]],[11,"init","","",96,[[],["usize",15]]],[11,"deref","","",96,[[["usize",15]]]],[11,"deref_mut","","",96,[[["usize",15]]]],[11,"drop","","",96,[[["usize",15]]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"equivalent","","",97,[[],["bool",15]]],[11,"pointer_metadata","","",97,[[]]],[11,"resolve_metadata","","",97,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",97,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",97,[[],["result",4]]],[11,"init","","",97,[[],["usize",15]]],[11,"deref","","",97,[[["usize",15]]]],[11,"deref_mut","","",97,[[["usize",15]]]],[11,"drop","","",97,[[["usize",15]]]],[11,"vzip","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_string","","",98,[[],["string",3]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"pointer_metadata","","",98,[[]]],[11,"init","","",98,[[],["usize",15]]],[11,"deref","","",98,[[["usize",15]]]],[11,"deref_mut","","",98,[[["usize",15]]]],[11,"drop","","",98,[[["usize",15]]]],[11,"vzip","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"equivalent","","",99,[[],["bool",15]]],[11,"pointer_metadata","","",99,[[]]],[11,"init","","",99,[[],["usize",15]]],[11,"deref","","",99,[[["usize",15]]]],[11,"deref_mut","","",99,[[["usize",15]]]],[11,"drop","","",99,[[["usize",15]]]],[11,"vzip","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_string","","",100,[[],["string",3]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"pointer_metadata","","",100,[[]]],[11,"init","","",100,[[],["usize",15]]],[11,"deref","","",100,[[["usize",15]]]],[11,"deref_mut","","",100,[[["usize",15]]]],[11,"drop","","",100,[[["usize",15]]]],[11,"vzip","","",100,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"pointer_metadata","","",103,[[]]],[11,"init","","",103,[[],["usize",15]]],[11,"deref","","",103,[[["usize",15]]]],[11,"deref_mut","","",103,[[["usize",15]]]],[11,"drop","","",103,[[["usize",15]]]],[11,"vzip","","",103,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"pointer_metadata","","",105,[[]]],[11,"init","","",105,[[],["usize",15]]],[11,"deref","","",105,[[["usize",15]]]],[11,"deref_mut","","",105,[[["usize",15]]]],[11,"drop","","",105,[[["usize",15]]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"pointer_metadata","","",106,[[]]],[11,"init","","",106,[[],["usize",15]]],[11,"deref","","",106,[[["usize",15]]]],[11,"deref_mut","","",106,[[["usize",15]]]],[11,"drop","","",106,[[["usize",15]]]],[11,"vzip","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"pointer_metadata","","",107,[[]]],[11,"init","","",107,[[],["usize",15]]],[11,"deref","","",107,[[["usize",15]]]],[11,"deref_mut","","",107,[[["usize",15]]]],[11,"drop","","",107,[[["usize",15]]]],[11,"vzip","","",107,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"resolve","","By default this method will be calling […",109,[[["u32",15],["str",15]],[["option",4],["export",4]]]],[11,"pointer_metadata","","",109,[[]]],[11,"init","","",109,[[],["usize",15]]],[11,"deref","","",109,[[["usize",15]]]],[11,"deref_mut","","",109,[[["usize",15]]]],[11,"drop","","",109,[[["usize",15]]]],[11,"vzip","","",109,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"pointer_metadata","","",111,[[]]],[11,"init","","",111,[[],["usize",15]]],[11,"deref","","",111,[[["usize",15]]]],[11,"deref_mut","","",111,[[["usize",15]]]],[11,"drop","","",111,[[["usize",15]]]],[11,"vzip","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_string","","",112,[[],["string",3]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"pointer_metadata","","",112,[[]]],[11,"init","","",112,[[],["usize",15]]],[11,"deref","","",112,[[["usize",15]]]],[11,"deref_mut","","",112,[[["usize",15]]]],[11,"drop","","",112,[[["usize",15]]]],[11,"vzip","","",112,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"pointer_metadata","","",130,[[]]],[11,"init","","",130,[[],["usize",15]]],[11,"deref","","",130,[[["usize",15]]]],[11,"deref_mut","","",130,[[["usize",15]]]],[11,"drop","","",130,[[["usize",15]]]],[11,"vzip","","",130,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"equivalent","","",114,[[],["bool",15]]],[11,"pointer_metadata","","",114,[[]]],[11,"init","","",114,[[],["usize",15]]],[11,"deref","","",114,[[["usize",15]]]],[11,"deref_mut","","",114,[[["usize",15]]]],[11,"drop","","",114,[[["usize",15]]]],[11,"vzip","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"equivalent","","",115,[[],["bool",15]]],[11,"pointer_metadata","","",115,[[]]],[11,"resolve_metadata","","",115,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",115,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",115,[[],["result",4]]],[11,"init","","",115,[[],["usize",15]]],[11,"deref","","",115,[[["usize",15]]]],[11,"deref_mut","","",115,[[["usize",15]]]],[11,"drop","","",115,[[["usize",15]]]],[11,"vzip","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"equivalent","","",116,[[],["bool",15]]],[11,"pointer_metadata","","",116,[[]]],[11,"resolve_metadata","","",116,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",116,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",116,[[],["result",4]]],[11,"init","","",116,[[],["usize",15]]],[11,"deref","","",116,[[["usize",15]]]],[11,"deref_mut","","",116,[[["usize",15]]]],[11,"drop","","",116,[[["usize",15]]]],[11,"vzip","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"equivalent","","",117,[[],["bool",15]]],[11,"pointer_metadata","","",117,[[]]],[11,"resolve_metadata","","",117,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",117,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",117,[[],["result",4]]],[11,"init","","",117,[[],["usize",15]]],[11,"deref","","",117,[[["usize",15]]]],[11,"deref_mut","","",117,[[["usize",15]]]],[11,"drop","","",117,[[["usize",15]]]],[11,"vzip","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"pointer_metadata","","",118,[[]]],[11,"init","","",118,[[],["usize",15]]],[11,"deref","","",118,[[["usize",15]]]],[11,"deref_mut","","",118,[[["usize",15]]]],[11,"drop","","",118,[[["usize",15]]]],[11,"vzip","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"equivalent","","",119,[[],["bool",15]]],[11,"pointer_metadata","","",119,[[]]],[11,"resolve_metadata","","",119,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",119,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",119,[[],["result",4]]],[11,"init","","",119,[[],["usize",15]]],[11,"deref","","",119,[[["usize",15]]]],[11,"deref_mut","","",119,[[["usize",15]]]],[11,"drop","","",119,[[["usize",15]]]],[11,"vzip","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"pointer_metadata","","",120,[[]]],[11,"init","","",120,[[],["usize",15]]],[11,"deref","","",120,[[["usize",15]]]],[11,"deref_mut","","",120,[[["usize",15]]]],[11,"drop","","",120,[[["usize",15]]]],[11,"vzip","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"pointer_metadata","","",121,[[]]],[11,"init","","",121,[[],["usize",15]]],[11,"deref","","",121,[[["usize",15]]]],[11,"deref_mut","","",121,[[["usize",15]]]],[11,"drop","","",121,[[["usize",15]]]],[11,"vzip","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"pointer_metadata","","",122,[[]]],[11,"init","","",122,[[],["usize",15]]],[11,"deref","","",122,[[["usize",15]]]],[11,"deref_mut","","",122,[[["usize",15]]]],[11,"drop","","",122,[[["usize",15]]]],[11,"vzip","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"pointer_metadata","","",123,[[]]],[11,"init","","",123,[[],["usize",15]]],[11,"deref","","",123,[[["usize",15]]]],[11,"deref_mut","","",123,[[["usize",15]]]],[11,"drop","","",123,[[["usize",15]]]],[11,"vzip","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"pointer_metadata","","",124,[[]]],[11,"init","","",124,[[],["usize",15]]],[11,"deref","","",124,[[["usize",15]]]],[11,"deref_mut","","",124,[[["usize",15]]]],[11,"drop","","",124,[[["usize",15]]]],[11,"vzip","","",124,[[]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",105,[[["exportfunction",3]],["export",4]]],[11,"from","","",105,[[["vmextern",4]],["export",4]]],[11,"from","","",103,[[["error",3]],["deserializeerror",4]]],[11,"from","","",105,[[["vmmemory",3]],["export",4]]],[11,"from","wasmer::vm","",82,[[["export",4]],["vmextern",4]]],[11,"from","wasmer","",105,[[["vmglobal",3]],["export",4]]],[11,"from","","",112,[[["error",3]],["serializeerror",4]]],[11,"from","","",111,[[["trap",4]],["runtimeerror",3]]],[11,"from","","",105,[[["vmtable",3]],["export",4]]],[11,"resolve_by_name","","",109,[[["str",15]],[["option",4],["export",4]]]],[11,"source","","",111,[[],[["option",4],["error",8]]]],[11,"source","","",112,[[],[["option",4],["error",8]]]],[11,"source","","",107,[[],[["option",4],["error",8]]]],[11,"source","","",103,[[],[["option",4],["error",8]]]],[11,"clone","","",111,[[],["runtimeerror",3]]],[11,"clone","","",105,[[],["export",4]]],[11,"clone","","",109,[[],["namedresolverchain",3]]],[11,"clone","","",106,[[],["frameinfo",3]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",96,[[]]],[11,"hash","","",99,[[]]],[11,"from","","",95,[[["wasmerror",4]],["compileerror",4]]],[11,"from","","",100,[[["binaryreadererror",3]],["wasmerror",4]]],[11,"from","","",95,[[["binaryreadererror",3]],["compileerror",4]]],[11,"from","","",100,[[["middlewareerror",3]],["wasmerror",4]]],[11,"default","","",99,[[],["target",3]]],[11,"clone","","",96,[[],["cpufeature",4]]],[11,"clone","","",99,[[],["target",3]]],[11,"to_string","","",96,[[],["string",3]]],[11,"from_str","","",96,[[["str",15]],[["cpufeature",4],["result",4]]]],[11,"bitand","","",96,[[]]],[11,"bitor","","",96,[[]]],[11,"not","","",96,[[]]],[11,"extend","","",93,[[]]],[11,"extend","","",93,[[]]],[11,"sub","","",96,[[]]],[11,"bitxor","","",96,[[]]],[11,"eq","","",96,[[["cpufeature",4]],["bool",15]]],[11,"eq","","",99,[[["target",3]],["bool",15]]],[11,"ne","","",99,[[["target",3]],["bool",15]]],[11,"eq","","",96,[[["enumset",3]],["bool",15]]],[11,"size_of_val","","",99,[[["memoryusagetracker",8]],["usize",15]]],[11,"try_from","","",119,[[["bytes",3]],[["result",4],["pages",3]]]],[11,"serialize","","",66,[[],["result",4]]],[11,"serialize","","",115,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",119,[[],["result",4]]],[11,"serialize","","",68,[[],["result",4]]],[11,"serialize","","",69,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","","",117,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","","",116,[[],["result",4]]],[11,"serialize","","",97,[[],["result",4]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer::externals::function::inner","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",117,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",62,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",63,[[]]],[11,"hash","","",68,[[]]],[11,"deref","","",118,[[]]],[11,"deref","","",118,[[]]],[11,"partial_cmp","","",117,[[["localfunctionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",117,[[["localfunctionindex",3]],["bool",15]]],[11,"le","","",117,[[["localfunctionindex",3]],["bool",15]]],[11,"gt","","",117,[[["localfunctionindex",3]],["bool",15]]],[11,"ge","","",117,[[["localfunctionindex",3]],["bool",15]]],[11,"partial_cmp","","",119,[[["pages",3]],[["option",4],["ordering",4]]]],[11,"lt","","",119,[[["pages",3]],["bool",15]]],[11,"le","","",119,[[["pages",3]],["bool",15]]],[11,"gt","","",119,[[["pages",3]],["bool",15]]],[11,"ge","","",119,[[["pages",3]],["bool",15]]],[11,"partial_cmp","","",115,[[["exportindex",4]],[["option",4],["ordering",4]]]],[11,"lt","","",115,[[["exportindex",4]],["bool",15]]],[11,"le","","",115,[[["exportindex",4]],["bool",15]]],[11,"gt","","",115,[[["exportindex",4]],["bool",15]]],[11,"ge","","",115,[[["exportindex",4]],["bool",15]]],[11,"partial_cmp","","",114,[[["bytes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",114,[[["bytes",3]],["bool",15]]],[11,"le","","",114,[[["bytes",3]],["bool",15]]],[11,"gt","","",114,[[["bytes",3]],["bool",15]]],[11,"ge","","",114,[[["bytes",3]],["bool",15]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[["functiontype",3]],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",114,[[["u32",15]],["bytes",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",114,[[["pages",3]],["bytes",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",119,[[["u32",15]],["pages",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",114,[[["usize",15]],["bytes",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",67,[[["bool",15]],["mutability",4]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",8,[[["vmexternref",3]],["externref",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"from","wasmer::externals::function::inner","",9,[[["externref",3]],["vmexternref",3]]],[11,"from","wasmer","",63,[[],["functiontype",3]]],[11,"from","","",63,[[],["functiontype",3]]],[11,"default","","",97,[[],["features",3]]],[11,"clone","","",114,[[],["bytes",3]]],[11,"clone","","",62,[[],["externtype",4]]],[11,"clone","","",65,[[],["importtype",3]]],[11,"clone","","",66,[[],["memorytype",3]]],[11,"clone","","",69,[[],["type",4]]],[11,"clone","","",97,[[],["features",3]]],[11,"clone","","",119,[[],["pages",3]]],[11,"clone","","",61,[[],["exporttype",3]]],[11,"clone","wasmer::externals::function::inner","",9,[[],["vmexternref",3]]],[11,"clone","wasmer","",68,[[],["tabletype",3]]],[11,"clone","","",117,[[],["localfunctionindex",3]]],[11,"clone","","",67,[[],["mutability",4]]],[11,"clone","","",64,[[],["globaltype",3]]],[11,"clone","","",63,[[],["functiontype",3]]],[11,"clone","","",115,[[],["exportindex",4]]],[11,"clone","","",8,[[],["externref",3]]],[11,"clone","","",116,[[],["globalinit",4]]],[11,"cmp","","",119,[[["pages",3]],["ordering",4]]],[11,"cmp","","",114,[[["bytes",3]],["ordering",4]]],[11,"cmp","","",115,[[["exportindex",4]],["ordering",4]]],[11,"cmp","","",117,[[["localfunctionindex",3]],["ordering",4]]],[11,"deserialize","","",65,[[],[["result",4],["importtype",3]]]],[11,"deserialize","","",116,[[],[["globalinit",4],["result",4]]]],[11,"deserialize","","",62,[[],[["result",4],["externtype",4]]]],[11,"deserialize","","",67,[[],[["result",4],["mutability",4]]]],[11,"deserialize","","",117,[[],[["result",4],["localfunctionindex",3]]]],[11,"deserialize","","",119,[[],[["pages",3],["result",4]]]],[11,"deserialize","","",69,[[],[["type",4],["result",4]]]],[11,"deserialize","","",64,[[],[["globaltype",3],["result",4]]]],[11,"deserialize","","",66,[[],[["result",4],["memorytype",3]]]],[11,"deserialize","","",68,[[],[["result",4],["tabletype",3]]]],[11,"deserialize","","",63,[[],[["functiontype",3],["result",4]]]],[11,"deserialize","","",114,[[],[["result",4],["bytes",3]]]],[11,"deserialize","","",115,[[],[["result",4],["exportindex",4]]]],[11,"deserialize","","",97,[[],[["result",4],["features",3]]]],[11,"deserialize","","",61,[[],[["exporttype",3],["result",4]]]],[11,"serialize","","",62,[[],["result",4]]],[11,"serialize","","",65,[[],["result",4]]],[11,"serialize","","",117,[[],["result",4]]],[11,"serialize","","",69,[[],["result",4]]],[11,"serialize","","",67,[[],["result",4]]],[11,"serialize","","",63,[[],["result",4]]],[11,"serialize","","",68,[[],["result",4]]],[11,"serialize","","",64,[[],["result",4]]],[11,"serialize","","",115,[[],["result",4]]],[11,"serialize","","",66,[[],["result",4]]],[11,"serialize","","",97,[[],["result",4]]],[11,"serialize","","",114,[[],["result",4]]],[11,"serialize","","",119,[[],["result",4]]],[11,"serialize","","",61,[[],["result",4]]],[11,"serialize","","",116,[[],["result",4]]],[11,"new","","",117,[[["usize",15]],["localfunctionindex",3]]],[11,"index","","",117,[[],["usize",15]]],[11,"from_abi","wasmer::externals::function::inner","",9,[[],["vmexternref",3]]],[11,"into_abi","","",9,[[]]],[11,"to_binary","","",9,[[],["i128",15]]],[11,"from_binary","","",9,[[["i128",15]],["vmexternref",3]]],[11,"add","wasmer","",119,[[],["pages",3]]],[11,"add","","",114,[[],["bytes",3]]],[11,"sub","","",119,[[],["pages",3]]],[11,"sub","","",114,[[],["bytes",3]]],[11,"resolve","","",67,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",97,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",116,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",119,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",64,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",68,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",69,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",63,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",115,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",66,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",117,[[["usize",15],["maybeuninit",19]]]],[11,"reserved_value","","",117,[[],["localfunctionindex",3]]],[11,"is_reserved_value","","",117,[[],["bool",15]]],[11,"drop","","",8,[[]]],[11,"eq","","",65,[[["importtype",3]],["bool",15]]],[11,"ne","","",65,[[["importtype",3]],["bool",15]]],[11,"eq","","",119,[[["pages",3]],["bool",15]]],[11,"ne","","",119,[[["pages",3]],["bool",15]]],[11,"eq","","",8,[[["externref",3]],["bool",15]]],[11,"ne","","",8,[[["externref",3]],["bool",15]]],[11,"eq","","",62,[[["externtype",4]],["bool",15]]],[11,"ne","","",62,[[["externtype",4]],["bool",15]]],[11,"eq","","",64,[[["globaltype",3]],["bool",15]]],[11,"ne","","",64,[[["globaltype",3]],["bool",15]]],[11,"eq","","",114,[[["bytes",3]],["bool",15]]],[11,"ne","","",114,[[["bytes",3]],["bool",15]]],[11,"eq","","",97,[[["features",3]],["bool",15]]],[11,"ne","","",97,[[["features",3]],["bool",15]]],[11,"eq","","",69,[[["type",4]],["bool",15]]],[11,"eq","","",63,[[["functiontype",3]],["bool",15]]],[11,"ne","","",63,[[["functiontype",3]],["bool",15]]],[11,"eq","","",67,[[["mutability",4]],["bool",15]]],[11,"eq","","",117,[[["localfunctionindex",3]],["bool",15]]],[11,"ne","","",117,[[["localfunctionindex",3]],["bool",15]]],[11,"eq","wasmer::externals::function::inner","",9,[[["vmexternref",3]],["bool",15]]],[11,"ne","","",9,[[["vmexternref",3]],["bool",15]]],[11,"eq","wasmer","",68,[[["tabletype",3]],["bool",15]]],[11,"ne","","",68,[[["tabletype",3]],["bool",15]]],[11,"eq","","",115,[[["exportindex",4]],["bool",15]]],[11,"ne","","",115,[[["exportindex",4]],["bool",15]]],[11,"eq","","",66,[[["memorytype",3]],["bool",15]]],[11,"ne","","",66,[[["memorytype",3]],["bool",15]]],[11,"eq","","",61,[[["exporttype",3]],["bool",15]]],[11,"ne","","",61,[[["exporttype",3]],["bool",15]]],[11,"eq","","",116,[[["globalinit",4]],["bool",15]]],[11,"ne","","",116,[[["globalinit",4]],["bool",15]]],[11,"size_of_val","","",117,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",119,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",67,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",69,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",64,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",63,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",116,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",115,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",68,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",97,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",66,[[["memoryusagetracker",8]],["usize",15]]],[11,"fmt","wasmer::vm","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer::vm","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","wasmer::vm","",77,[[]]],[11,"hash","","",81,[[]]],[11,"hash","wasmer","",72,[[]]],[11,"resolve","wasmer::vm","",77,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",81,[[["usize",15],["maybeuninit",19]]]],[11,"from","","",82,[[["vmfunction",3]],["vmextern",4]]],[11,"from","","",82,[[["vmglobal",3]],["vmextern",4]]],[11,"from","","",82,[[["vmtable",3]],["vmextern",4]]],[11,"from","","",82,[[["vmmemory",3]],["vmextern",4]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","","",81,[[],["result",4]]],[11,"clone","","",84,[[],["vmtabledefinition",3]]],[11,"clone","wasmer","",72,[[],["memoryerror",4]]],[11,"clone","wasmer::vm","",83,[[],["vmmemorydefinition",3]]],[11,"clone","","",77,[[],["memorystyle",4]]],[11,"clone","","",81,[[],["tablestyle",4]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","","",81,[[],["result",4]]],[11,"deserialize","","",77,[[],[["memorystyle",4],["result",4]]]],[11,"deserialize","","",81,[[],[["tablestyle",4],["result",4]]]],[11,"eq","","",81,[[["tablestyle",4]],["bool",15]]],[11,"eq","","",77,[[["memorystyle",4]],["bool",15]]],[11,"ne","","",77,[[["memorystyle",4]],["bool",15]]],[11,"eq","wasmer","",72,[[["memoryerror",4]],["bool",15]]],[11,"ne","","",72,[[["memoryerror",4]],["bool",15]]],[11,"size_of_val","wasmer::vm","",83,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",77,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",84,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",81,[[["memoryusagetracker",8]],["usize",15]]],[11,"fmt","wasmer","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",86,[[],["callingconvention",4]]],[11,"clone","","",87,[[],["operatingsystem",4]]],[11,"clone","","",85,[[],["architecture",4]]],[11,"clone","","",89,[[],["triple",3]]],[11,"from_str","","",85,[[["str",15]],[["architecture",4],["result",4]]]],[11,"from_str","","",87,[[["str",15]],[["result",4],["operatingsystem",4]]]],[11,"from_str","","",89,[[["str",15]],[["result",4],["triple",3]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",86,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",87,[[]]],[11,"eq","","",85,[[["architecture",4]],["bool",15]]],[11,"ne","","",85,[[["architecture",4]],["bool",15]]],[11,"eq","","",86,[[["callingconvention",4]],["bool",15]]],[11,"eq","","",87,[[["operatingsystem",4]],["bool",15]]],[11,"ne","","",87,[[["operatingsystem",4]],["bool",15]]],[11,"eq","","",89,[[["triple",3]],["bool",15]]],[11,"ne","","",89,[[["triple",3]],["bool",15]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"size_of_val","","",120,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",121,[[["memoryusagetracker",8]],["usize",15]]],[11,"enable_pic","","",120,[[]]],[11,"enable_verifier","","",120,[[]]],[11,"compiler","","Transform it into the compiler",120,[[["cranelift",3],["box",3],["global",3]],[["box",3],["global",3],["compiler",8]]]],[11,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",120,[[["modulemiddleware",8],["arc",3]]]],[11,"default","","",120,[[],["cranelift",3]]],[11,"clone","","",120,[[],["cranelift",3]]],[11,"clone","","",121,[[],["craneliftoptlevel",4]]],[11,"module","","",122,[[],[["arc",3],["moduleinfo",3]]]],[11,"module_ref","","",122,[[],["moduleinfo",3]]],[11,"module_mut","","",122,[[],[["moduleinfo",3],["option",4]]]],[11,"register_frame_info","","",122,[[]]],[11,"features","","",122,[[],["features",3]]],[11,"data_initializers","","",122,[[]]],[11,"memory_styles","","",122,[[],["primarymap",3]]],[11,"table_styles","","",122,[[],["primarymap",3]]],[11,"finished_functions","","",122,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",122,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",122,[[],["boxedslice",3]]],[11,"signatures","","",122,[[],["boxedslice",3]]],[11,"func_data_registry","","",122,[[],["funcdataregistry",3]]],[11,"serialize","","",122,[[],[["result",4],["serializeerror",4],["vec",3]]]],[11,"clone","","",123,[[],["jitengine",3]]],[11,"target","","The target",123,[[],["target",3]]],[11,"register_signature","","Register a signature",123,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"register_function_metadata","","",123,[[["vmcallercheckedanyfunc",3]],["vmfuncref",3]]],[11,"lookup_signature","","Lookup a signature",123,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[11,"validate","","Validates a WebAssembly module",123,[[],[["result",4],["compileerror",4]]]],[11,"compile","","Compile a WebAssembly binary",123,[[["tunables",8]],[["result",4],["compileerror",4],["arc",3]]]],[11,"deserialize","","Deserializes a WebAssembly module",123,[[],[["result",4],["deserializeerror",4],["arc",3]]]],[11,"id","","",123,[[],["engineid",3]]],[11,"cloned","","",123,[[],[["arc",3],["engine",8]]]],[11,"size_of_val","","",122,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",123,[[["memoryusagetracker",8]],["usize",15]]],[11,"to_export","wasmer::externals::function","",41,[[],["export",4]]],[11,"get_self_from_extern","","",41,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"to_export","wasmer::externals::global","",45,[[],["export",4]]],[11,"get_self_from_extern","","",45,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"to_export","wasmer::externals::memory","",46,[[],["export",4]]],[11,"get_self_from_extern","","",46,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"to_export","wasmer::externals::table","",47,[[],["export",4]]],[11,"get_self_from_extern","","",47,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"to_export","wasmer::externals","",48,[[],["export",4]]],[11,"get_self_from_extern","","",48,[[],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","wasmer::native","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"get_self_from_extern_with_generics","","",56,[[["extern",4]],[["exporterror",4],["result",4]]]],[11,"call","wasmer::externals::function","",43,[[],[["runtimeerror",3],["result",4],["vec",3]]]],[11,"function_type","","",43,[[],["functiontype",3]]],[11,"store","","",43,[[],["store",3]]],[11,"to_native","wasmer","",8,[[]]],[11,"from_native","","",8,[[]]],[11,"to_native","wasmer::ptr","",57,[[]]],[11,"from_native","","",57,[[]]],[11,"get_namespace_export","wasmer::exports","",4,[[["str",15]],[["option",4],["export",4]]]],[11,"get_namespace_exports","","",4,[[],["vec",3]]],[11,"comes_from_same_store","wasmer::externals","",48,[[["store",3]],["bool",15]]],[11,"comes_from_same_store","wasmer","",131,[[["store",3]],["bool",15]]],[11,"into_vm_funcref","","",131,[[["store",3]],[["runtimeerror",3],["vmfuncref",3],["result",4]]]],[11,"from_vm_funcref","","",131,[[["vmfuncref",3],["store",3]]]],[11,"into_table_reference","","",131,[[["store",3]],[["runtimeerror",3],["tableelement",4],["result",4]]]],[11,"from_table_reference","","",131,[[["tableelement",4],["store",3]]]],[11,"drop","wasmer::env","",2,[[]]],[11,"from","","",0,[[["exporterror",4]]]],[11,"from","wasmer::externals","",48,[[["function",3]]]],[11,"from","","",48,[[["global",3]]]],[11,"from","","",48,[[["memory",3]]]],[11,"from","","",48,[[["table",3]]]],[11,"from","wasmer::instance","",53,[[["instantiationerror",4]]]],[11,"from","","",53,[[["hostenviniterror",4]]]],[11,"from","wasmer::module","",54,[[["error",3]]]],[11,"from","","",54,[[["compileerror",4]]]],[11,"from","wasmer::externals::function","",41,[[["nativefunc",3]]]],[11,"from","wasmer","",131,[[["function",3]]]],[11,"len","wasmer::exports","",5,[[],["usize",15]]],[11,"into_iter","wasmer::import_object","",50,[[]]],[11,"next","wasmer::exports","",5,[[],["option",4]]],[11,"next","wasmer::import_object","",51,[[],["option",4]]],[11,"clone","wasmer::env","",2,[[]]],[11,"clone","wasmer::exports","",4,[[],["exports",3]]],[11,"clone","wasmer::externals::function","",41,[[],["function",3]]],[11,"clone","","",43,[[]]],[11,"clone","wasmer::externals::function::inner","",126,[[],["withoutenv",3]]],[11,"clone","","",14,[[],["function",3]]],[11,"clone","wasmer::externals::global","",45,[[],["global",3]]],[11,"clone","wasmer::externals::memory","",46,[[],["memory",3]]],[11,"clone","wasmer::externals::table","",47,[[],["table",3]]],[11,"clone","wasmer::externals","",48,[[],["extern",4]]],[11,"clone","wasmer::import_object","",50,[[],["importobject",3]]],[11,"clone","wasmer::instance","",52,[[],["instance",3]]],[11,"clone","wasmer::module","",55,[[],["module",3]]],[11,"clone","wasmer::native","",56,[[],["nativefunc",3]]],[11,"clone","wasmer::ptr","",57,[[]]],[11,"clone","wasmer::store","",58,[[],["store",3]]],[11,"clone","wasmer::tunables","",60,[[],["basetunables",3]]],[11,"default","wasmer::env","",2,[[]]],[11,"default","wasmer::exports","",4,[[],["exports",3]]],[11,"default","wasmer::import_object","",50,[[],["importobject",3]]],[11,"default","wasmer::store","",58,[[]]],[11,"eq","wasmer::externals::function","",41,[[["function",3]],["bool",15]]],[11,"ne","","",41,[[["function",3]],["bool",15]]],[11,"eq","wasmer::externals::function::inner","",14,[[["function",3]],["bool",15]]],[11,"ne","","",14,[[["function",3]],["bool",15]]],[11,"eq","wasmer::ptr","",57,[[],["bool",15]]],[11,"eq","wasmer::store","",58,[[],["bool",15]]],[11,"fmt","wasmer::env","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::exports","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::externals::function","",41,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::externals::function::inner","",14,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::externals::global","",45,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::externals::memory","",46,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::externals","",48,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::import_object","",50,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::instance","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::module","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::ptr","",57,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::store","",58,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::env","",0,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::exports","",3,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::instance","",53,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer::module","",54,[[["formatter",3]],["result",6]]],[11,"hash","wasmer::externals::function::inner","",14,[[]]],[11,"from_iter","wasmer::exports","",4,[[["intoiterator",8]]]],[11,"source","wasmer::instance","",53,[[],[["option",4],["error",8]]]],[11,"source","wasmer::module","",54,[[],[["option",4],["error",8]]]],[11,"size_of_val","wasmer::exports","",4,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer::externals::function","",41,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer::externals::global","",45,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer::externals::memory","",46,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer::externals::table","",47,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer::externals","",48,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer::instance","",52,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer::module","",55,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer::store","",58,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer::tunables","",60,[[["memoryusagetracker",8]],["usize",15]]],[11,"memory_style","","Get a <code>MemoryStyle</code> for the provided <code>MemoryType</code>",60,[[["memorytype",3]],["memorystyle",4]]],[11,"table_style","","Get a [<code>TableStyle</code>] for the provided [<code>TableType</code>].",60,[[["tabletype",3]],["tablestyle",4]]],[11,"create_host_memory","","Create a memory owned by the host given a [<code>MemoryType</code>] …",60,[[["memorystyle",4],["memorytype",3]],[["result",4],["arc",3],["memoryerror",4]]]],[11,"create_vm_memory","","Create a memory owned by the VM given a [<code>MemoryType</code>] and …",60,[[["nonnull",3],["vmmemorydefinition",3],["memorystyle",4],["memorytype",3]],[["result",4],["arc",3],["memoryerror",4]]]],[11,"create_host_table","","Create a table owned by the host given a [<code>TableType</code>] and …",60,[[["tabletype",3],["tablestyle",4]],[["arc",3],["string",3],["result",4]]]],[11,"create_vm_table","","Create a table owned by the VM given a [<code>TableType</code>] and a […",60,[[["tablestyle",4],["vmtabledefinition",3],["tabletype",3],["nonnull",3]],[["arc",3],["string",3],["result",4]]]],[11,"resolve_by_name","wasmer::import_object","",50,[[["str",15]],[["option",4],["export",4]]]],[11,"write_value_to","wasmer::externals::function","Write the value.",41,[[]]],[11,"read_value_from","","Read the value.",41,[[["any",8]]]],[11,"is_null","wasmer","Checks if the given ExternRef is null.",8,[[],["bool",15]]],[11,"null","","New null extern ref",8,[[],["externref",3]]],[11,"new","","Make a new extern reference",8,[[],["externref",3]]],[11,"downcast","","Try to downcast to the given value",8,[[],["option",4]]],[11,"strong_count","","Get the number of strong references to this data.",8,[[],["usize",15]]],[11,"is_null","wasmer::externals::function::inner","Checks if the given ExternRef is null.",9,[[],["bool",15]]],[11,"null","","New null extern ref",9,[[],["vmexternref",3]]],[11,"new","","Make a new extern reference",9,[[],["vmexternref",3]]],[11,"downcast","","Try to downcast to the given value",9,[[],["option",4]]],[11,"ref_inc_by","","A low-level function to increment the strong-count a …",9,[[["usize",15]]]],[11,"ref_clone","","A deep copy of the reference, increments the strong count.",9,[[],["vmexternref",3]]],[11,"ref_drop","","Does an inner drop, decrementing the strong count",9,[[]]],[11,"new","wasmer","Creates a new export which is exported with the given <code>name</code>…",61,[[["str",15]],["exporttype",3]]],[11,"name","","Returns the name by which this export is known by.",61,[[],["str",15]]],[11,"ty","","Returns the type of this export.",61,[[]]],[11,"func","","Attempt to return the underlying type of this external …",62,[[],[["option",4],["functiontype",3]]]],[11,"unwrap_func","","Returns the underlying descriptor of this [<code>ExternType</code>], …",62,[[],["functiontype",3]]],[11,"global","","Attempt to return the underlying type of this external …",62,[[],[["option",4],["globaltype",3]]]],[11,"unwrap_global","","Returns the underlying descriptor of this [<code>ExternType</code>], …",62,[[],["globaltype",3]]],[11,"table","","Attempt to return the underlying type of this external …",62,[[],[["option",4],["tabletype",3]]]],[11,"unwrap_table","","Returns the underlying descriptor of this [<code>ExternType</code>], …",62,[[],["tabletype",3]]],[11,"memory","","Attempt to return the underlying type of this external …",62,[[],[["option",4],["memorytype",3]]]],[11,"unwrap_memory","","Returns the underlying descriptor of this [<code>ExternType</code>], …",62,[[],["memorytype",3]]],[11,"is_compatible_with","","Check if two externs are compatible",62,[[["externtype",4]],["bool",15]]],[11,"new","","Creates a new Function Type with the given parameter and …",63,[[],["functiontype",3]]],[11,"params","","Parameter types.",63,[[]]],[11,"results","","Return types.",63,[[]]],[11,"new","","Create a new Global variable",64,[[["type",4],["mutability",4]],["globaltype",3]]],[11,"new","","Creates a new import descriptor which comes from <code>module</code> …",65,[[["str",15]],["importtype",3]]],[11,"module","","Returns the module name that this import is expected to …",65,[[],["str",15]]],[11,"name","","Returns the field name of the module that this import is …",65,[[],["str",15]]],[11,"ty","","Returns the expected type of this import.",65,[[]]],[11,"new","","Creates a new descriptor for a WebAssembly memory given …",66,[[["bool",15],["option",4]],["memorytype",3]]],[11,"is_mutable","","Returns a boolean indicating if the enum is set to …",67,[[],["bool",15]]],[11,"new","","Creates a new table descriptor which will contain the …",68,[[["u32",15],["option",4],["type",4]],["tabletype",3]]],[11,"is_num","","Returns true if <code>Type</code> matches any of the numeric types. …",69,[[],["bool",15]]],[11,"is_ref","","Returns true if <code>Type</code> matches either of the reference …",69,[[],["bool",15]]],[11,"offset_guard_size","wasmer::vm","Returns the offset-guard size",77,[[],["u64",15]]],[11,"endianness","wasmer","Return the endianness of this architecture.",85,[[],[["endianness",4],["result",4]]]],[11,"pointer_width","","Return the pointer bit width of this target\'s …",85,[[],[["pointerwidth",4],["result",4]]]],[11,"host","","Return the architecture for the current host.",85,[[],["architecture",4]]],[11,"host","","Return the operating system for the current host.",87,[[],["operatingsystem",4]]],[11,"endianness","","Return the endianness of this target\'s architecture.",89,[[],[["endianness",4],["result",4]]]],[11,"pointer_width","","Return the pointer width of this target\'s architecture.",89,[[],[["pointerwidth",4],["result",4]]]],[11,"default_calling_convention","","Return the default calling convention for the given …",89,[[],[["result",4],["callingconvention",4]]]],[11,"data_model","","The C data model for a given target. If the model is not …",89,[[],[["result",4],["cdatamodel",4]]]],[11,"unknown","","Return a <code>Triple</code> with all unknown fields.",89,[[],["triple",3]]],[11,"host","","Return the triple for the current host.",89,[[],["triple",3]]],[11,"new","","Create a new <code>MiddlewareError</code>",92,[[],["middlewareerror",3]]],[11,"push_operator","","Push an operator.",93,[[["operator",4]]]],[11,"for_host","","Retrieves the features for the current Host",96,[[],[["cpufeature",4],["enumset",3]]]],[11,"set","","Retrieves an empty set of <code>CpuFeature</code>s.",96,[[],[["cpufeature",4],["enumset",3]]]],[11,"new","","Create a new feature",97,[[],["features",3]]],[11,"threads","","Configures whether the WebAssembly threads proposal will …",97,[[["bool",15]],["features",3]]],[11,"reference_types","","Configures whether the WebAssembly reference types …",97,[[["bool",15]],["features",3]]],[11,"simd","","Configures whether the WebAssembly SIMD proposal will be …",97,[[["bool",15]],["features",3]]],[11,"bulk_memory","","Configures whether the WebAssembly bulk memory operations …",97,[[["bool",15]],["features",3]]],[11,"multi_value","","Configures whether the WebAssembly multi-value proposal …",97,[[["bool",15]],["features",3]]],[11,"tail_call","","Configures whether the WebAssembly tail-call proposal will…",97,[[["bool",15]],["features",3]]],[11,"module_linking","","Configures whether the WebAssembly module linking …",97,[[["bool",15]],["features",3]]],[11,"multi_memory","","Configures whether the WebAssembly multi-memory proposal …",97,[[["bool",15]],["features",3]]],[11,"memory64","","Configures whether the WebAssembly 64-bit memory proposal …",97,[[["bool",15]],["features",3]]],[11,"new","","Creates a new target given a triple",99,[[["cpufeature",4],["enumset",3],["triple",3]],["target",3]]],[11,"triple","","The triple associated for the target.",99,[[],["triple",3]]],[11,"cpu_features","","The triple associated for the target.",99,[[],["enumset",3]]],[11,"func_index","","Returns the WebAssembly function index for this frame.",106,[[],["u32",15]]],[11,"module_name","","Returns the identifer of the module that this frame is …",106,[[],["str",15]]],[11,"function_name","","Returns a descriptive name of the function for this …",106,[[],[["str",15],["option",4]]]],[11,"module_offset","","Returns the offset within the original wasm module this …",106,[[],["usize",15]]],[11,"func_offset","","Returns the offset from the original wasm module\'s …",106,[[],["usize",15]]],[11,"new","","Creates a new generic <code>RuntimeError</code> with the given <code>message</code>.",111,[[],["runtimeerror",3]]],[11,"from_trap","","Create a new RuntimeError from a Trap.",111,[[["trap",4]],["runtimeerror",3]]],[11,"raise","","Raises a custom user Error",111,[[["box",3],["error",8],["global",3]]]],[11,"message","","Returns a reference the <code>message</code> stored in <code>Trap</code>.",111,[[],["string",3]]],[11,"trace","","Returns a list of function frames in WebAssembly code …",111,[[]]],[11,"downcast","","Attempts to downcast the <code>RuntimeError</code> to a concrete type.",111,[[],[["runtimeerror",3],["result",4]]]],[11,"to_trap","","Returns trap code, if it\'s a Trap",111,[[],[["trapcode",4],["option",4]]]],[11,"is","","Returns true if the <code>RuntimeError</code> is the same as T",111,[[],["bool",15]]],[11,"from_value","","Get the <code>GlobalInit</code> from a given <code>Value</code>",116,[[["value",4]],["globalinit",4]]],[11,"to_value","","Get the <code>Value</code> from the Global init value",116,[[],["value",4]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",117,[[["u32",15]],["localfunctionindex",3]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",117,[[],["u32",15]]],[11,"new","","Creates a new MemoryView given a <code>pointer</code> and <code>length</code>.",118,[[["u32",15]],[["memoryview",3],["nonatomically",3]]]],[11,"atomically","","Get atomic access to a memory view.",118,[[],[["memoryview",3],["atomically",3]]]],[11,"max_value","","Returns the largest value that can be represented by the …",119,[[],["pages",3]]],[11,"checked_add","","Checked addition. Computes <code>self + rhs</code>, returning <code>None</code> if …",119,[[["pages",3]],[["pages",3],["option",4]]]],[11,"bytes","","Calculate number of bytes from pages.",119,[[],["bytes",3]]],[11,"new","","Creates a new configuration object with the default …",120,[[],["cranelift",3]]],[11,"canonicalize_nans","","Enable NaN canonicalization.",120,[[["bool",15]],["cranelift",3]]],[11,"enable_simd","","Enable SIMD support.",120,[[["bool",15]],["cranelift",3]]],[11,"opt_level","","The optimization levels when optimizing the IR.",120,[[["craneliftoptlevel",4]],["cranelift",3]]],[11,"isa","","Generates the ISA for the provided target",120,[[["target",3]],[["box",3],["global",3],["targetisa",8]]]],[11,"flags","","Generates the flags for the compiler",120,[[],["flags",3]]],[11,"is_deserializable","","Check if the provided bytes look like a serialized …",122,[[],["bool",15]]],[11,"new","","Compile a data buffer into a <code>JITArtifact</code>, which may then …",122,[[["jitengine",3],["tunables",8]],[["compileerror",4],["jitartifact",3],["result",4]]]],[11,"deserialize","","Deserialize a JITArtifact",122,[[["jitengine",3]],[["deserializeerror",4],["result",4],["jitartifact",3]]]],[11,"from_parts","","Construct a <code>JITArtifact</code> from component parts.",122,[[["jitengineinner",3],["serializablemodule",3]],[["compileerror",4],["jitartifact",3],["result",4]]]],[11,"get_default_extension","","Get the default extension when serializing this artifact",122,[[["triple",3]],["str",15]]],[11,"new","","Create a new <code>JITEngine</code> with the given config",123,[[["features",3],["global",3],["box",3],["target",3],["compiler",8]],["jitengine",3]]],[11,"headless","","Create a headless <code>JITEngine</code>",123,[[],["jitengine",3]]],[11,"new","","Create a new JIT",124,[[],["jit",3]]],[11,"headless","","Create a new headless JIT",124,[[],["jit",3]]],[11,"target","","Set the target",124,[[["target",3]],["jit",3]]],[11,"features","","Set the features",124,[[["features",3]],["jit",3]]],[11,"engine","","Build the <code>JITEngine</code> for this configuration",124,[[],["jitengine",3]]]],"p":[[4,"HostEnvInitError"],[8,"WasmerEnv"],[3,"LazyInit"],[4,"ExportError"],[3,"Exports"],[3,"ExportsIterator"],[8,"Exportable"],[8,"ExportableWithGenerics"],[3,"ExternRef"],[3,"VMExternRef"],[8,"FromToNativeWasmType"],[8,"WasmTypeList"],[8,"IntoResult"],[8,"HostFunction"],[3,"Function"],[3,"S1"],[3,"S2"],[3,"S3"],[3,"S4"],[3,"S5"],[3,"S6"],[3,"S7"],[3,"S8"],[3,"S9"],[3,"S10"],[3,"S11"],[3,"S12"],[3,"S13"],[3,"S14"],[3,"S15"],[3,"S16"],[3,"S17"],[3,"S18"],[3,"S19"],[3,"S20"],[3,"S21"],[3,"S22"],[3,"S23"],[3,"S24"],[3,"S25"],[3,"S26"],[3,"Function"],[8,"VMDynamicFunction"],[3,"DynamicFunction"],[8,"VMDynamicFunctionCall"],[3,"Global"],[3,"Memory"],[3,"Table"],[4,"Extern"],[8,"LikeNamespace"],[3,"ImportObject"],[3,"ImportObjectIterator"],[3,"Instance"],[4,"InstantiationError"],[4,"IoCompileError"],[3,"Module"],[3,"NativeFunc"],[3,"WasmPtr"],[3,"Store"],[8,"StoreObject"],[3,"BaseTunables"],[3,"ExportType"],[4,"ExternType"],[3,"FunctionType"],[3,"GlobalType"],[3,"ImportType"],[3,"MemoryType"],[4,"Mutability"],[3,"TableType"],[4,"Type"],[8,"ValFuncRef"],[8,"Memory"],[4,"MemoryError"],[13,"CouldNotGrow"],[13,"InvalidMemory"],[13,"MinimumMemoryTooLarge"],[13,"MaximumMemoryTooLarge"],[4,"MemoryStyle"],[13,"Dynamic"],[13,"Static"],[8,"Table"],[4,"TableStyle"],[4,"VMExtern"],[3,"VMMemoryDefinition"],[3,"VMTableDefinition"],[4,"Architecture"],[4,"CallingConvention"],[4,"OperatingSystem"],[13,"MacOSX"],[3,"Triple"],[8,"CompilerConfig"],[8,"FunctionMiddleware"],[3,"MiddlewareError"],[3,"MiddlewareReaderState"],[8,"ModuleMiddleware"],[4,"CompileError"],[4,"CpuFeature"],[3,"Features"],[4,"ParseCpuFeatureError"],[3,"Target"],[4,"WasmError"],[13,"InvalidWebAssembly"],[8,"ChainableNamedResolver"],[4,"DeserializeError"],[8,"Engine"],[4,"Export"],[3,"FrameInfo"],[4,"LinkError"],[8,"NamedResolver"],[3,"NamedResolverChain"],[8,"Resolver"],[3,"RuntimeError"],[4,"SerializeError"],[8,"Tunables"],[3,"Bytes"],[4,"ExportIndex"],[4,"GlobalInit"],[3,"LocalFunctionIndex"],[3,"MemoryView"],[3,"Pages"],[3,"Cranelift"],[4,"CraneliftOptLevel"],[3,"JITArtifact"],[3,"JITEngine"],[3,"JIT"],[3,"WithEnv"],[3,"WithoutEnv"],[3,"S0"],[3,"Array"],[3,"Item"],[3,"Atomically"],[6,"Val"]]},\
"wasmer_c_api":{"doc":"Wasmer C API.","i":[[0,"deprecated","wasmer_c_api","Wasmer Runtime C APIWasmer is a standalone JIT …",null,null],[0,"export","wasmer_c_api::deprecated","Create, read, destroy export definitions (function, …",null,null],[3,"wasmer_export_t","wasmer_c_api::deprecated::export","Opaque pointer to <code>ImportType</code>.",null,null],[3,"wasmer_export_func_t","","Opaque pointer to <code>wasmer_export_t</code>.",null,null],[3,"wasmer_exports_t","","Opaque pointer to the opaque structure …",null,null],[3,"wasmer_export_descriptor_t","","Opaque pointer to <code>NamedExportDescriptor</code>.",null,null],[3,"NamedExportDescriptors","","Intermediate representation of a vector of …",null,null],[3,"wasmer_export_descriptors_t","","Opaque pointer to <code>NamedExportDescriptors</code>.",null,null],[19,"wasmer_import_export_value","","Union of import/export value.",null,null],[12,"func","","",0,null],[12,"table","","",0,null],[12,"memory","","",0,null],[12,"global","","",0,null],[4,"wasmer_import_export_kind","","List of export/import kinds.",null,null],[13,"WASM_FUNCTION","","The export/import is a function.",1,null],[13,"WASM_GLOBAL","","The export/import is a global.",1,null],[13,"WASM_MEMORY","","The export/import is a memory.",1,null],[13,"WASM_TABLE","","The export/import is a table.",1,null],[11,"to_str","","",1,[[],["str",15]]],[5,"wasmer_export_descriptors","","Gets export descriptors for the given module",null,[[]]],[5,"wasmer_export_descriptors_destroy","","Frees the memory for the given export descriptors",null,[[]]],[5,"wasmer_export_descriptors_len","","Gets the length of the export descriptors",null,[[],["c_int",6]]],[5,"wasmer_export_descriptors_get","","Gets export descriptor by index",null,[[["c_int",6]]]],[5,"wasmer_export_descriptor_name","","Gets name for the export descriptor",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_export_descriptor_kind","","Gets export descriptor kind",null,[[],["wasmer_import_export_kind",4]]],[5,"wasmer_exports_destroy","","Frees the memory for the given exports.",null,[[]]],[5,"wasmer_exports_len","","Gets the length of the exports",null,[[["nonnull",3],["option",4]],["c_int",6]]],[5,"wasmer_exports_get","","Gets wasmer_export by index",null,[[["c_int",6],["nonnull",3],["option",4]],[["nonnull",3],["option",4]]]],[5,"wasmer_export_kind","","Gets wasmer_export kind",null,[[],["wasmer_import_export_kind",4]]],[5,"wasmer_export_func_params_arity","","Sets the result parameter to the arity of the params of …",null,[[],["wasmer_result_t",4]]],[5,"wasmer_export_func_params","","Sets the params buffer to the parameter types of the …",null,[[["u32",15]],["wasmer_result_t",4]]],[5,"wasmer_export_func_returns","","Sets the returns buffer to the parameter types of the …",null,[[["u32",15]],["wasmer_result_t",4]]],[5,"wasmer_export_func_returns_arity","","Sets the result parameter to the arity of the returns of …",null,[[],["wasmer_result_t",4]]],[5,"wasmer_export_to_func","","Gets export func from export",null,[[]]],[5,"wasmer_export_to_memory","","Gets a memory pointer from an export pointer.",null,[[],["wasmer_result_t",4]]],[5,"wasmer_export_name","","Gets name from wasmer_export",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_export_func_call","","Calls a <code>func</code> with the provided parameters. Results are …",null,[[["c_uint",6]],["wasmer_result_t",4]]],[0,"global","wasmer_c_api::deprecated","Create, set, get and destroy global variables of an …",null,null],[3,"wasmer_global_descriptor_t","wasmer_c_api::deprecated::global","",null,null],[3,"wasmer_global_t","","",null,null],[5,"wasmer_global_new","","Creates a new Global and returns a pointer to it. The …",null,[[["bool",15],["wasmer_value_t",3]]]],[5,"wasmer_global_get","","Gets the value stored by the given Global",null,[[],["wasmer_value_t",3]]],[5,"wasmer_global_set","","Sets the value stored by the given Global",null,[[["wasmer_value_t",3]]]],[5,"wasmer_global_get_descriptor","","Returns a descriptor (type, mutability) of the given …",null,[[],["wasmer_global_descriptor_t",3]]],[5,"wasmer_global_destroy","","Frees memory for the given Global",null,[[["option",4],["nonnull",3]]]],[0,"import","wasmer_c_api::deprecated","Create, read, destroy import definitions (function, …",null,null],[3,"wasmer_import_t","wasmer_c_api::deprecated::import","",null,null],[12,"module_name","","",2,null],[12,"import_name","","",2,null],[12,"tag","","",2,null],[12,"value","","",2,null],[3,"wasmer_import_object_t","","",null,null],[3,"wasmer_import_func_t","","",null,null],[3,"wasmer_import_descriptor_t","","",null,null],[3,"wasmer_import_descriptors_t","","",null,null],[3,"wasmer_import_object_iter_t","","",null,null],[5,"wasmer_import_object_new","","Creates a new empty import object. See also …",null,[[],[["wasmer_import_object_t",3],["nonnull",3]]]],[4,"Version","","",null,null],[13,"Unknown","","Version cannot be detected or is unknown.",3,null],[13,"Latest","","Latest version. See <code>wasmer_wasi::WasiVersion::Latest</code> to …",3,null],[13,"Snapshot0","","<code>wasi_unstable</code>.",3,null],[13,"Snapshot1","","<code>wasi_snapshot_preview1</code>.",3,null],[3,"wasmer_wasi_map_dir_entry_t","","Opens a directory that\'s visible to the WASI module as …",null,null],[12,"alias","","What the WASI module will see in its virtual root",4,null],[12,"host_file_path","","The backing file that the WASI module will interact with …",4,null],[5,"wasmer_wasi_generate_import_object","","Creates a WASI import object.",null,[[["c_uint",6]]]],[5,"wasmer_wasi_generate_import_object_for_version","","Creates a WASI import object for a specific version.",null,[[["c_uchar",6],["c_uint",6]]]],[5,"wasmer_wasi_get_version","","Find the version of WASI used by the module.",null,[[],["version",4]]],[5,"wasmer_wasi_generate_default_import_object","","Convenience function that creates a WASI import object …",null,[[]]],[5,"wasmer_import_object_get_import","","Gets an entry from an ImportObject at the name and …",null,[[["u32",15],["wasmer_byte_array",3]],["wasmer_result_t",4]]],[5,"wasmer_import_object_iterate_functions","","Create an iterator over the functions in the import …",null,[[]]],[5,"wasmer_import_object_iter_next","","Writes the next value to <code>import</code>.  <code>WASMER_ERROR</code> is …",null,[[],["wasmer_result_t",4]]],[5,"wasmer_import_object_iter_at_end","","Returns true if further calls to …",null,[[["option",4],["nonnull",3]],["bool",15]]],[5,"wasmer_import_object_iter_destroy","","Frees the memory allocated by …",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_import_object_imports_destroy","","Frees the memory allocated in …",null,[[["option",4],["nonnull",3],["u32",15]]]],[5,"wasmer_import_object_extend","","Extends an existing import object with new imports",null,[[["c_uint",6]],["wasmer_result_t",4]]],[5,"wasmer_import_descriptors","","Gets import descriptors for the given module",null,[[["option",4],["wasmer_module_t",3]]]],[3,"NamedImportDescriptors","","",null,null],[5,"wasmer_import_descriptors_destroy","","Frees the memory for the given import descriptors",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_import_descriptors_len","","Gets the length of the import descriptors",null,[[["option",4],["nonnull",3]],["c_uint",6]]],[5,"wasmer_import_descriptors_get","","Gets import descriptor by index",null,[[["option",4],["c_uint",6],["nonnull",3]],[["nonnull",3],["option",4]]]],[5,"wasmer_import_descriptor_name","","Gets name for the import descriptor",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_import_descriptor_module_name","","Gets module name for the import descriptor",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_import_descriptor_kind","","Gets export descriptor kind",null,[[],["wasmer_import_export_kind",4]]],[5,"wasmer_import_func_params_arity","","Sets the result parameter to the arity of the params of …",null,[[],["wasmer_result_t",4]]],[5,"wasmer_import_func_new","","Creates new host function, aka imported function. <code>func</code> is …",null,[[["c_uint",6]]]],[5,"wasmer_trap","","Stop the execution of a host function, aka imported …",null,[[],["wasmer_result_t",4]]],[5,"wasmer_import_func_params","","Sets the params buffer to the parameter types of the …",null,[[["c_uint",6]],["wasmer_result_t",4]]],[5,"wasmer_import_func_returns","","Sets the returns buffer to the parameter types of the …",null,[[["c_uint",6]],["wasmer_result_t",4]]],[5,"wasmer_import_func_returns_arity","","Sets the result parameter to the arity of the returns of …",null,[[],["wasmer_result_t",4]]],[5,"wasmer_import_func_destroy","","Frees memory for the given Func",null,[[["nonnull",3],["option",4]]]],[5,"wasmer_import_object_destroy","","Frees memory of the given ImportObject",null,[[["option",4],["nonnull",3]]]],[0,"instance","wasmer_c_api::deprecated","Instantiate a module, call functions, and read exports.",null,null],[3,"wasmer_instance_t","wasmer_c_api::deprecated::instance","Opaque pointer to an Instance type plus metadata.",null,null],[3,"wasmer_instance_context_t","","Opaque pointer to a <code>wasmer_vm::Ctx</code> value in Rust.",null,null],[5,"wasmer_instantiate","","Creates a new WebAssembly instance from the given bytes …",null,[[["u32",15],["c_int",6],["option",4],["nonnull",3]],["wasmer_result_t",4]]],[5,"wasmer_instance_context_get","","Returns the instance context. Learn more by looking at the…",null,[[["option",4],["nonnull",3]],[["option",4],["wasmer_instance_context_t",3]]]],[5,"wasmer_instance_call","","Calls an exported function of a WebAssembly instance by …",null,[[["u32",15]],["wasmer_result_t",4]]],[5,"wasmer_instance_exports","","Gets all the exports of the given WebAssembly instance.",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_instance_context_data_set","","Sets the data that can be hold by an instance context.",null,[[["option",4],["nonnull",3]]]],[5,"wasmer_instance_context_memory","","Gets the <code>memory_idx</code>th memory of the instance.",null,[[["u32",15]],[["wasmer_memory_t",3],["option",4]]]],[5,"wasmer_instance_context_data_get","","Gets the data that can be hold by an instance.",null,[[["option",4],["wasmer_instance_context_t",3]],[["nonnull",3],["option",4]]]],[5,"wasmer_instance_destroy","","Frees memory for the given <code>wasmer_instance_t</code>.",null,[[["option",4],["nonnull",3]]]],[0,"memory","wasmer_c_api::deprecated","Create, read, write, grow, destroy memory of an instance.",null,null],[3,"wasmer_memory_t","wasmer_c_api::deprecated::memory","Opaque pointer to a <code>wasmer_vm::Memory</code> value in Rust.",null,null],[5,"wasmer_memory_new","","Creates a new empty WebAssembly memory for the given …",null,[[["wasmer_limits_t",3]],["wasmer_result_t",4]]],[5,"wasmer_memory_grow","","Grows a memory by the given number of pages (of 65Kb …",null,[[["u32",15]],["wasmer_result_t",4]]],[5,"wasmer_memory_length","","Reads the current length (in pages) of the given memory.",null,[[],["u32",15]]],[5,"wasmer_memory_data","","Gets a pointer to the beginning of the contiguous memory …",null,[[]]],[5,"wasmer_memory_data_length","","Gets the size in bytes of the memory data.",null,[[],["u32",15]]],[5,"wasmer_memory_destroy","","Frees memory for the given <code>wasmer_memory_t</code>.",null,[[]]],[0,"module","wasmer_c_api::deprecated","Compile, validate, instantiate, serialize, and destroy …",null,null],[3,"wasmer_module_t","wasmer_c_api::deprecated::module","",null,null],[3,"wasmer_serialized_module_t","","",null,null],[5,"wasmer_compile","","Creates a new Module from the given wasm bytes.",null,[[["u32",15]],["wasmer_result_t",4]]],[5,"wasmer_validate","","Validates a sequence of bytes hoping it represents a …",null,[[["u32",15]],["bool",15]]],[5,"wasmer_module_instantiate","","Creates a new Instance from the given module and imports.",null,[[["c_int",6]],["wasmer_result_t",4]]],[5,"wasmer_module_import_instantiate","","Given:",null,[[],["wasmer_result_t",4]]],[5,"wasmer_module_serialize","","Serialize the given Module.",null,[[],["wasmer_result_t",4]]],[5,"wasmer_serialized_module_bytes","","Get bytes of the serialized module.",null,[[],["wasmer_byte_array",3]]],[5,"wasmer_serialized_module_from_bytes","","Transform a sequence of bytes into a serialized module.",null,[[["u32",15]],["wasmer_result_t",4]]],[5,"wasmer_module_deserialize","","Deserialize the given serialized module.",null,[[["wasmer_serialized_module_t",3],["option",4]],["wasmer_result_t",4]]],[5,"wasmer_serialized_module_destroy","","Frees memory for the given serialized Module.",null,[[]]],[5,"wasmer_module_destroy","","Frees memory for the given Module",null,[[]]],[0,"table","wasmer_c_api::deprecated","Create, grow, destroy tables of an instance.",null,null],[3,"wasmer_table_t","wasmer_c_api::deprecated::table","",null,null],[5,"wasmer_table_new","","Creates a new Table for the given descriptor and …",null,[[["wasmer_limits_t",3]],["wasmer_result_t",4]]],[5,"wasmer_table_grow","","Grows a Table by the given number of elements.",null,[[["u32",15]],["wasmer_result_t",4]]],[5,"wasmer_table_length","","Returns the current length of the given Table",null,[[],["u32",15]]],[5,"wasmer_table_destroy","","Frees memory for the given Table",null,[[["option",4],["nonnull",3]]]],[0,"value","wasmer_c_api::deprecated","Create and map Rust to WebAssembly values.",null,null],[4,"wasmer_value_tag","wasmer_c_api::deprecated::value","Represents all possibles WebAssembly value types.",null,null],[13,"WASM_I32","","Represents the <code>i32</code> WebAssembly type.",5,null],[13,"WASM_I64","","Represents the <code>i64</code> WebAssembly type.",5,null],[13,"WASM_F32","","Represents the <code>f32</code> WebAssembly type.",5,null],[13,"WASM_F64","","Represents the <code>f64</code> WebAssembly type.",5,null],[19,"wasmer_value","","Represents a WebAssembly value.",null,null],[12,"I32","","",6,null],[12,"I64","","",6,null],[12,"F32","","",6,null],[12,"F64","","",6,null],[3,"wasmer_value_t","","Represents a WebAssembly type and value pair, i.e. …",null,null],[12,"tag","","The value type.",7,null],[12,"value","","The value.",7,null],[4,"wasmer_result_t","wasmer_c_api::deprecated","The <code>wasmer_result_t</code> enum is a type that represents either …",null,null],[13,"WASMER_OK","","Represents a success.",8,null],[13,"WASMER_ERROR","","Represents a failure.",8,null],[3,"wasmer_limits_t","","The <code>wasmer_limits_t</code> struct is a type that describes the …",null,null],[12,"min","","The minimum number of allowed pages.",9,null],[12,"max","","The maximum number of allowed pages.",9,null],[3,"wasmer_limit_option_t","","The <code>wasmer_limit_option_t</code> struct represents an optional …",null,null],[12,"has_some","","Whether the limit is set.",10,null],[12,"some","","The limit value.",10,null],[3,"wasmer_byte_array","","",null,null],[12,"bytes","","",11,null],[12,"bytes_len","","",11,null],[11,"as_slice","","Get the data as a slice",11,[[]]],[11,"as_vec","","Copy the data into an owned Vec",11,[[],[["vec",3],["u8",15]]]],[11,"as_str","","Read the data as a &str, returns an error if the string …",11,[[],[["utf8error",3],["str",15],["result",4]]]],[0,"error","wasmer_c_api","Utilities to read errors.",null,null],[5,"update_last_error","wasmer_c_api::error","Rust function to register a new error.",null,[[["error",8]]]],[5,"wasmer_last_error_length","","Gets the length in bytes of the last error if any, zero …",null,[[],["c_int",6]]],[5,"wasmer_last_error_message","","Gets the last error message if any into the provided …",null,[[["option",4],["c_int",6],["nonnull",3]],["c_int",6]]],[3,"CApiError","","Rust type to represent a C API error.",null,null],[12,"msg","","The error message.",12,null],[0,"wasm_c_api","wasmer_c_api","Implementation of the official WebAssembly C API for …",null,null],[0,"macros","wasmer_c_api::wasm_c_api","Private Rust macros.",null,null],[0,"engine","","An engine drives the compilation and the runtime.",null,null],[4,"wasmer_compiler_t","wasmer_c_api::wasm_c_api::engine","Kind of compilers that can be used by the engines.",null,null],[13,"CRANELIFT","","Variant to represent the Cranelift compiler. See the […",13,null],[13,"LLVM","","Variant to represent the LLVM compiler. See the […",13,null],[13,"SINGLEPASS","","Variant to represent the Singlepass compiler. See the […",13,null],[4,"wasmer_engine_t","","Kind of engines that can be used by the store.",null,null],[13,"JIT","","Variant to represent the JIT engine. See the […",14,null],[13,"NATIVE","","Variant to represent the Native engine. See the […",14,null],[13,"OBJECT_FILE","","Variant to represent the Object File engine. See the […",14,null],[3,"wasm_config_t","","A configuration holds the compiler and the engine used by …",null,null],[5,"wasm_config_new","","Create a new default Wasmer configuration.",null,[[],[["box",3],["wasm_config_t",3]]]],[5,"wasm_config_delete","","Delete a Wasmer config object.",null,[[["option",4],["box",3]]]],[5,"wasm_config_set_compiler","","Updates the configuration to specify a particular …",null,[[["wasm_config_t",3],["wasmer_compiler_t",4]]]],[5,"wasm_config_set_engine","","Updates the configuration to specify a particular engine …",null,[[["wasm_config_t",3],["wasmer_engine_t",4]]]],[3,"wasm_engine_t","","An engine is used by the store to drive the compilation …",null,null],[5,"wasm_engine_new","","Creates a new JIT engine with the default compiler.",null,[[],[["box",3],["wasm_engine_t",3]]]],[5,"wasm_engine_delete","","Deletes an engine.",null,[[["box",3],["option",4]]]],[5,"wasm_engine_new_with_config","","Creates an engine with a particular configuration.",null,[[["option",4],["box",3]],[["box",3],["option",4]]]],[0,"externals","wasmer_c_api::wasm_c_api","cbindgen:ignore",null,null],[3,"wasm_func_t","wasmer_c_api::wasm_c_api::externals","",null,null],[6,"wasm_func_callback_t","","",null,null],[6,"wasm_func_callback_with_env_t","","",null,null],[6,"wasm_env_finalizer_t","","",null,null],[5,"wasm_func_new","","",null,[[["option",4],["wasm_functype_t",3],["wasm_func_callback_t",6],["wasm_store_t",3],["option",4],["option",4]],[["option",4],["box",3]]]],[5,"wasm_func_new_with_env","","",null,[[["wasm_functype_t",3],["option",4],["wasm_store_t",3],["option",4],["wasm_env_finalizer_t",6],["option",4],["option",4],["wasm_func_callback_with_env_t",6]],[["option",4],["box",3]]]],[5,"wasm_func_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_func_call","","",null,[[["option",4],["option",4],["wasm_val_vec_t",3],["wasm_val_vec_t",3],["wasm_func_t",3]],[["option",4],["box",3]]]],[5,"wasm_func_param_arity","","",null,[[["wasm_func_t",3]],["usize",15]]],[5,"wasm_func_result_arity","","",null,[[["wasm_func_t",3]],["usize",15]]],[5,"wasm_func_type","","",null,[[["option",4],["wasm_func_t",3]],[["box",3],["option",4]]]],[3,"wasm_global_t","","",null,null],[5,"wasm_global_new","","",null,[[["option",4],["option",4],["wasm_globaltype_t",3],["wasm_store_t",3],["option",4],["wasm_val_t",3]],[["box",3],["option",4]]]],[5,"wasm_global_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_global_copy","","",null,[[["wasm_global_t",3]],[["box",3],["wasm_global_t",3]]]],[5,"wasm_global_get","","",null,[[["wasm_global_t",3],["wasm_val_t",3]]]],[5,"wasm_global_set","","Note: This function returns nothing by design but it can …",null,[[["wasm_global_t",3],["wasm_val_t",3]]]],[5,"wasm_global_same","","",null,[[["wasm_global_t",3]],["bool",15]]],[5,"wasm_global_type","","",null,[[["wasm_global_t",3]],[["box",3],["wasm_globaltype_t",3]]]],[3,"wasm_memory_t","","",null,null],[5,"wasm_memory_new","","",null,[[["wasm_memorytype_t",3],["option",4],["wasm_store_t",3],["option",4]],[["option",4],["box",3]]]],[5,"wasm_memory_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_memory_copy","","",null,[[["wasm_memory_t",3]],[["wasm_memory_t",3],["box",3]]]],[5,"wasm_memory_type","","",null,[[["option",4],["wasm_memory_t",3]],[["option",4],["box",3]]]],[5,"wasm_memory_data","","",null,[[["wasm_memory_t",3]]]],[5,"wasm_memory_data_size","","",null,[[["wasm_memory_t",3]],["usize",15]]],[5,"wasm_memory_size","","",null,[[["wasm_memory_t",3]],["u32",15]]],[5,"wasm_memory_grow","","",null,[[["wasm_memory_t",3],["u32",15]],["bool",15]]],[5,"wasm_memory_same","","",null,[[["wasm_memory_t",3]],["bool",15]]],[3,"wasm_table_t","","",null,null],[5,"wasm_table_new","","",null,[[["option",4],["wasm_store_t",3],["option",4],["wasm_tabletype_t",3]],[["box",3],["option",4]]]],[5,"wasm_table_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_table_copy","","",null,[[["wasm_table_t",3]],[["box",3],["wasm_table_t",3]]]],[5,"wasm_table_same","","",null,[[["wasm_table_t",3]],["bool",15]]],[5,"wasm_table_size","","",null,[[["wasm_table_t",3]],["usize",15]]],[5,"wasm_table_grow","","",null,[[["wasm_table_size_t",6],["wasm_table_t",3]],["bool",15]]],[3,"wasm_extern_t","","",null,null],[3,"wasm_extern_vec_t","","Represents a vector of <code>wasm_extern_t</code>.",null,null],[12,"size","","",15,null],[12,"data","","",15,null],[11,"into_slice","","",15,[[],["option",4]]],[5,"wasm_extern_vec_new","","Creates a new vector of [<code>wasm_extern_t</code>].",null,[[["usize",15]]]],[5,"wasm_extern_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_extern_t</code>].",null,[[["usize",15]]]],[5,"wasm_extern_vec_copy","","Performs a deep copy of a vector of [<code>wasm_extern_t</code>].",null,[[["wasm_extern_vec_t",3],["wasm_extern_vec_t",3]]]],[5,"wasm_extern_vec_delete","","Deletes a vector of [<code>wasm_extern_t</code>].",null,[[["wasm_extern_vec_t",3],["option",4]]]],[5,"wasm_extern_vec_new_empty","","Creates an empty vector of [<code>wasm_extern_t</code>].",null,[[]]],[5,"wasm_extern_copy","","Copy a <code>wasm_extern_t</code>.",null,[[["wasm_extern_t",3]],[["box",3],["wasm_extern_t",3]]]],[5,"wasm_extern_delete","","Delete an extern.",null,[[["box",3],["option",4]]]],[5,"wasm_func_as_extern","","",null,[[["option",4],["wasm_func_t",3]],[["option",4],["wasm_extern_t",3]]]],[5,"wasm_global_as_extern","","",null,[[["wasm_global_t",3],["option",4]],[["option",4],["wasm_extern_t",3]]]],[5,"wasm_memory_as_extern","","",null,[[["option",4],["wasm_memory_t",3]],[["option",4],["wasm_extern_t",3]]]],[5,"wasm_table_as_extern","","",null,[[["option",4],["wasm_table_t",3]],[["option",4],["wasm_extern_t",3]]]],[5,"wasm_extern_as_func","","",null,[[["option",4],["wasm_extern_t",3]],[["option",4],["wasm_func_t",3]]]],[5,"wasm_extern_as_global","","",null,[[["option",4],["wasm_extern_t",3]],[["wasm_global_t",3],["option",4]]]],[5,"wasm_extern_as_memory","","",null,[[["option",4],["wasm_extern_t",3]],[["option",4],["wasm_memory_t",3]]]],[5,"wasm_extern_as_table","","",null,[[["option",4],["wasm_extern_t",3]],[["option",4],["wasm_table_t",3]]]],[0,"instance","wasmer_c_api::wasm_c_api","A WebAssembly instance is a stateful, executable instance …",null,null],[3,"wasm_instance_t","wasmer_c_api::wasm_c_api::instance","Opaque type representing a WebAssembly instance.",null,null],[5,"wasm_instance_new","","Creates a new instance from a WebAssembly module and a …",null,[[["option",4],["option",4],["wasm_module_t",3],["wasm_store_t",3],["option",4],["wasm_extern_vec_t",3]],[["box",3],["option",4]]]],[5,"wasm_instance_delete","","Deletes an instance.",null,[[["box",3],["option",4]]]],[5,"wasm_instance_exports","","Gets the exports of the instance.",null,[[["wasm_extern_vec_t",3],["wasm_instance_t",3]]]],[0,"module","wasmer_c_api::wasm_c_api","A WebAssembly module contains stateless WebAssembly code …",null,null],[3,"wasm_module_t","wasmer_c_api::wasm_c_api::module","Opaque type representing a WebAssembly module.",null,null],[5,"wasm_module_new","","A WebAssembly module contains stateless WebAssembly code …",null,[[["wasm_byte_vec_t",3],["wasm_store_t",3],["option",4],["option",4]],[["box",3],["option",4]]]],[5,"wasm_module_delete","","Deletes a WebAssembly module.",null,[[["box",3],["option",4]]]],[5,"wasm_module_validate","","Validates a new WebAssembly module given the configuration…",null,[[["wasm_byte_vec_t",3],["wasm_store_t",3],["option",4],["option",4]],["bool",15]]],[5,"wasm_module_exports","","Returns an array of the exported types in the module.",null,[[["wasm_exporttype_vec_t",3],["wasm_module_t",3]]]],[5,"wasm_module_imports","","Returns an array of the imported types in the module.",null,[[["wasm_importtype_vec_t",3],["wasm_module_t",3]]]],[5,"wasm_module_deserialize","","Deserializes a serialized module binary into a …",null,[[["wasm_store_t",3]],[["nonnull",3],["option",4]]]],[5,"wasm_module_serialize","","Serializes a module into a binary representation that the …",null,[[["wasm_byte_vec_t",3],["wasm_module_t",3]]]],[0,"store","wasmer_c_api::wasm_c_api","A store represents all global state that can be …",null,null],[3,"wasm_store_t","wasmer_c_api::wasm_c_api::store","Opaque type representing a WebAssembly store.",null,null],[5,"wasm_store_new","","Creates a new WebAssembly store given a specific [engine][…",null,[[["option",4],["wasm_engine_t",3]],[["option",4],["box",3]]]],[5,"wasm_store_delete","","Deletes a WebAssembly store.",null,[[["option",4],["box",3]]]],[0,"trap","wasmer_c_api::wasm_c_api","cbindgen:ignore",null,null],[3,"wasm_trap_t","wasmer_c_api::wasm_c_api::trap","",null,null],[5,"wasm_trap_new","","",null,[[["wasm_store_t",3],["wasm_message_t",6]],[["option",4],["box",3]]]],[5,"wasm_trap_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_trap_message","","",null,[[["wasm_trap_t",3],["wasm_byte_vec_t",3]]]],[5,"wasm_trap_origin","","",null,[[["wasm_trap_t",3]],[["box",3],["option",4]]]],[5,"wasm_trap_trace","","",null,[[["wasm_trap_t",3],["wasm_frame_vec_t",3]]]],[0,"types","wasmer_c_api::wasm_c_api","cbindgen:ignore",null,null],[3,"wasm_exporttype_t","wasmer_c_api::wasm_c_api::types","",null,null],[3,"wasm_exporttype_vec_t","","Represents a vector of <code>wasm_exporttype_t</code>.",null,null],[12,"size","","",16,null],[12,"data","","",16,null],[5,"wasm_exporttype_vec_new","","Creates a new vector of [<code>wasm_exporttype_t</code>].",null,[[["usize",15]]]],[5,"wasm_exporttype_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_exporttype_t</code>].",null,[[["usize",15]]]],[5,"wasm_exporttype_vec_copy","","Performs a deep copy of a vector of [<code>wasm_exporttype_t</code>].",null,[[["wasm_exporttype_vec_t",3],["wasm_exporttype_vec_t",3]]]],[5,"wasm_exporttype_vec_delete","","Deletes a vector of [<code>wasm_exporttype_t</code>].",null,[[["wasm_exporttype_vec_t",3],["option",4]]]],[5,"wasm_exporttype_vec_new_empty","","Creates an empty vector of [<code>wasm_exporttype_t</code>].",null,[[]]],[5,"wasm_exporttype_new","","",null,[[["option",4],["box",3],["wasm_name_t",6],["option",4]],[["option",4],["box",3]]]],[5,"wasm_exporttype_name","","",null,[[["wasm_exporttype_t",3]],["wasm_name_t",6]]],[5,"wasm_exporttype_type","","",null,[[["wasm_exporttype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_exporttype_delete","","",null,[[["option",4],["box",3]]]],[4,"wasm_externkind_enum","","",null,null],[13,"WASM_EXTERN_FUNC","","",17,null],[13,"WASM_EXTERN_GLOBAL","","",17,null],[13,"WASM_EXTERN_TABLE","","",17,null],[13,"WASM_EXTERN_MEMORY","","",17,null],[3,"wasm_externtype_t","","",null,null],[5,"wasm_extern_type","","",null,[[["wasm_extern_t",3]],[["box",3],["wasm_externtype_t",3]]]],[5,"wasm_extern_kind","","",null,[[["wasm_extern_t",3]],["u8",15]]],[5,"wasm_externtype_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_externtype_copy","","",null,[[["wasm_externtype_t",3]],[["box",3],["wasm_externtype_t",3]]]],[5,"wasm_externtype_kind","","",null,[[["wasm_externtype_t",3]],["u8",15]]],[3,"ExternTypeConversionError","","",null,null],[5,"wasm_externtype_as_functype_const","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_functype_t",3]]]],[5,"wasm_externtype_as_functype","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_functype_t",3]]]],[5,"wasm_functype_as_externtype_const","","",null,[[["wasm_functype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_functype_as_externtype","","",null,[[["wasm_functype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_externtype_as_globaltype_const","","",null,[[["wasm_externtype_t",3]],[["wasm_globaltype_t",3],["option",4]]]],[5,"wasm_externtype_as_globaltype","","",null,[[["wasm_externtype_t",3]],[["wasm_globaltype_t",3],["option",4]]]],[5,"wasm_globaltype_as_externtype_const","","",null,[[["wasm_globaltype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_globaltype_as_externtype","","",null,[[["wasm_globaltype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_externtype_as_tabletype_const","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_tabletype_t",3]]]],[5,"wasm_externtype_as_tabletype","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_tabletype_t",3]]]],[5,"wasm_tabletype_as_externtype_const","","",null,[[["wasm_tabletype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_tabletype_as_externtype","","",null,[[["wasm_tabletype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_externtype_as_memorytype_const","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_memorytype_t",3]]]],[5,"wasm_externtype_as_memorytype","","",null,[[["wasm_externtype_t",3]],[["option",4],["wasm_memorytype_t",3]]]],[5,"wasm_memorytype_as_externtype_const","","",null,[[["wasm_memorytype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_memorytype_as_externtype","","",null,[[["wasm_memorytype_t",3]],["wasm_externtype_t",3]]],[3,"wasm_frame_t","","",null,null],[5,"wasm_frame_copy","","",null,[[["wasm_frame_t",3]],[["box",3],["wasm_frame_t",3]]]],[5,"wasm_frame_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_frame_instance","","",null,[[["wasm_frame_t",3]]]],[5,"wasm_frame_func_index","","",null,[[["wasm_frame_t",3]],["u32",15]]],[5,"wasm_frame_func_offset","","",null,[[["wasm_frame_t",3]],["usize",15]]],[5,"wasm_frame_module_offset","","",null,[[["wasm_frame_t",3]],["usize",15]]],[3,"wasm_frame_vec_t","","Represents a vector of <code>wasm_frame_t</code>.",null,null],[12,"size","","",18,null],[12,"data","","",18,null],[5,"wasm_frame_vec_new","","Creates a new vector of [<code>wasm_frame_t</code>].",null,[[["usize",15]]]],[5,"wasm_frame_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_frame_t</code>].",null,[[["usize",15]]]],[5,"wasm_frame_vec_copy","","Performs a deep copy of a vector of [<code>wasm_frame_t</code>].",null,[[["wasm_frame_vec_t",3],["wasm_frame_vec_t",3]]]],[5,"wasm_frame_vec_delete","","Deletes a vector of [<code>wasm_frame_t</code>].",null,[[["wasm_frame_vec_t",3],["option",4]]]],[5,"wasm_frame_vec_new_empty","","Creates an empty vector of [<code>wasm_frame_t</code>].",null,[[]]],[3,"wasm_functype_t","","",null,null],[3,"wasm_functype_vec_t","","Represents a vector of <code>wasm_functype_t</code>.",null,null],[12,"size","","",19,null],[12,"data","","",19,null],[5,"wasm_functype_vec_new","","Creates a new vector of [<code>wasm_functype_t</code>].",null,[[["usize",15]]]],[5,"wasm_functype_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_functype_t</code>].",null,[[["usize",15]]]],[5,"wasm_functype_vec_copy","","Performs a deep copy of a vector of [<code>wasm_functype_t</code>].",null,[[["wasm_functype_vec_t",3],["wasm_functype_vec_t",3]]]],[5,"wasm_functype_vec_delete","","Deletes a vector of [<code>wasm_functype_t</code>].",null,[[["option",4],["wasm_functype_vec_t",3]]]],[5,"wasm_functype_vec_new_empty","","Creates an empty vector of [<code>wasm_functype_t</code>].",null,[[]]],[5,"wasm_functype_new","","",null,[[["option",4],["wasm_valtype_vec_t",3]],[["box",3],["option",4]]]],[5,"wasm_functype_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_functype_copy","","",null,[[["option",4],["wasm_functype_t",3]],[["box",3],["option",4]]]],[5,"wasm_functype_params","","",null,[[["option",4],["wasm_functype_t",3]],[["option",4],["wasm_valtype_vec_t",3]]]],[5,"wasm_functype_results","","",null,[[["option",4],["wasm_functype_t",3]],[["option",4],["wasm_valtype_vec_t",3]]]],[3,"wasm_globaltype_t","","",null,null],[3,"wasm_globaltype_vec_t","","Represents a vector of <code>wasm_globaltype_t</code>.",null,null],[12,"size","","",20,null],[12,"data","","",20,null],[5,"wasm_globaltype_vec_new","","Creates a new vector of [<code>wasm_globaltype_t</code>].",null,[[["usize",15]]]],[5,"wasm_globaltype_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_globaltype_t</code>].",null,[[["usize",15]]]],[5,"wasm_globaltype_vec_copy","","Performs a deep copy of a vector of [<code>wasm_globaltype_t</code>].",null,[[["wasm_globaltype_vec_t",3],["wasm_globaltype_vec_t",3]]]],[5,"wasm_globaltype_vec_delete","","Deletes a vector of [<code>wasm_globaltype_t</code>].",null,[[["option",4],["wasm_globaltype_vec_t",3]]]],[5,"wasm_globaltype_vec_new_empty","","Creates an empty vector of [<code>wasm_globaltype_t</code>].",null,[[]]],[5,"wasm_globaltype_new","","",null,[[["box",3],["option",4],["wasm_mutability_t",6]],[["option",4],["box",3]]]],[5,"wasm_globaltype_delete","","",null,[[["option",4],["box",3]]]],[5,"wasm_globaltype_mutability","","",null,[[["wasm_globaltype_t",3]],["wasm_mutability_t",6]]],[5,"wasm_globaltype_content","","",null,[[["wasm_globaltype_t",3]],["wasm_valtype_t",3]]],[3,"wasm_importtype_t","","",null,null],[3,"wasm_importtype_vec_t","","Represents a vector of <code>wasm_importtype_t</code>.",null,null],[12,"size","","",21,null],[12,"data","","",21,null],[5,"wasm_importtype_vec_new","","Creates a new vector of [<code>wasm_importtype_t</code>].",null,[[["usize",15]]]],[5,"wasm_importtype_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_importtype_t</code>].",null,[[["usize",15]]]],[5,"wasm_importtype_vec_copy","","Performs a deep copy of a vector of [<code>wasm_importtype_t</code>].",null,[[["wasm_importtype_vec_t",3],["wasm_importtype_vec_t",3]]]],[5,"wasm_importtype_vec_delete","","Deletes a vector of [<code>wasm_importtype_t</code>].",null,[[["option",4],["wasm_importtype_vec_t",3]]]],[5,"wasm_importtype_vec_new_empty","","Creates an empty vector of [<code>wasm_importtype_t</code>].",null,[[]]],[5,"wasm_importtype_new","","",null,[[["option",4],["box",3],["wasm_name_t",6],["option",4]],[["option",4],["box",3]]]],[5,"wasm_importtype_module","","",null,[[["wasm_importtype_t",3]],["wasm_name_t",6]]],[5,"wasm_importtype_name","","",null,[[["wasm_importtype_t",3]],["wasm_name_t",6]]],[5,"wasm_importtype_type","","",null,[[["wasm_importtype_t",3]],["wasm_externtype_t",3]]],[5,"wasm_importtype_delete","","",null,[[["option",4],["box",3]]]],[3,"wasm_memorytype_t","","",null,null],[3,"wasm_memorytype_vec_t","","Represents a vector of <code>wasm_memorytype_t</code>.",null,null],[12,"size","","",22,null],[12,"data","","",22,null],[5,"wasm_memorytype_vec_new","","Creates a new vector of [<code>wasm_memorytype_t</code>].",null,[[["usize",15]]]],[5,"wasm_memorytype_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_memorytype_t</code>].",null,[[["usize",15]]]],[5,"wasm_memorytype_vec_copy","","Performs a deep copy of a vector of [<code>wasm_memorytype_t</code>].",null,[[["wasm_memorytype_vec_t",3],["wasm_memorytype_vec_t",3]]]],[5,"wasm_memorytype_vec_delete","","Deletes a vector of [<code>wasm_memorytype_t</code>].",null,[[["option",4],["wasm_memorytype_vec_t",3]]]],[5,"wasm_memorytype_vec_new_empty","","Creates an empty vector of [<code>wasm_memorytype_t</code>].",null,[[]]],[5,"wasm_memorytype_new","","",null,[[["wasm_limits_t",3]],[["box",3],["wasm_memorytype_t",3]]]],[5,"wasm_memorytype_delete","","",null,[[["option",4],["box",3]]]],[3,"wasm_limits_t","","",null,null],[5,"wasm_memorytype_limits","","",null,[[["wasm_memorytype_t",3]],["wasm_limits_t",3]]],[6,"wasm_mutability_t","","",null,null],[4,"wasm_mutability_enum","","",null,null],[13,"WASM_CONST","","",23,null],[13,"WASM_VAR","","",23,null],[6,"wasm_table_size_t","","",null,null],[3,"wasm_tabletype_t","","",null,null],[3,"wasm_tabletype_vec_t","","Represents a vector of <code>wasm_tabletype_t</code>.",null,null],[12,"size","","",24,null],[12,"data","","",24,null],[5,"wasm_tabletype_vec_new","","Creates a new vector of [<code>wasm_tabletype_t</code>].",null,[[["usize",15]]]],[5,"wasm_tabletype_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_tabletype_t</code>].",null,[[["usize",15]]]],[5,"wasm_tabletype_vec_copy","","Performs a deep copy of a vector of [<code>wasm_tabletype_t</code>].",null,[[["wasm_tabletype_vec_t",3],["wasm_tabletype_vec_t",3]]]],[5,"wasm_tabletype_vec_delete","","Deletes a vector of [<code>wasm_tabletype_t</code>].",null,[[["wasm_tabletype_vec_t",3],["option",4]]]],[5,"wasm_tabletype_vec_new_empty","","Creates an empty vector of [<code>wasm_tabletype_t</code>].",null,[[]]],[5,"wasm_tabletype_new","","",null,[[["box",3],["option",4],["wasm_limits_t",3]],[["option",4],["box",3]]]],[5,"wasm_tabletype_limits","","",null,[[["wasm_tabletype_t",3]],["wasm_limits_t",3]]],[5,"wasm_tabletype_element","","",null,[[["wasm_tabletype_t",3]],["wasm_valtype_t",3]]],[5,"wasm_tabletype_delete","","",null,[[["option",4],["box",3]]]],[4,"wasm_valkind_enum","","",null,null],[13,"WASM_I32","","",25,null],[13,"WASM_I64","","",25,null],[13,"WASM_F32","","",25,null],[13,"WASM_F64","","",25,null],[13,"WASM_ANYREF","","",25,null],[13,"WASM_FUNCREF","","",25,null],[3,"wasm_valtype_t","","",null,null],[3,"wasm_valtype_vec_t","","Represents a vector of <code>wasm_valtype_t</code>.",null,null],[12,"size","","",26,null],[12,"data","","",26,null],[5,"wasm_valtype_vec_new","","Creates a new vector of [<code>wasm_valtype_t</code>].",null,[[["usize",15]]]],[5,"wasm_valtype_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_valtype_t</code>].",null,[[["usize",15]]]],[5,"wasm_valtype_vec_copy","","Performs a deep copy of a vector of [<code>wasm_valtype_t</code>].",null,[[["wasm_valtype_vec_t",3],["wasm_valtype_vec_t",3]]]],[5,"wasm_valtype_vec_delete","","Deletes a vector of [<code>wasm_valtype_t</code>].",null,[[["option",4],["wasm_valtype_vec_t",3]]]],[5,"wasm_valtype_vec_new_empty","","Creates an empty vector of [<code>wasm_valtype_t</code>].",null,[[]]],[5,"wasm_valtype_new","","",null,[[["wasm_valkind_t",6]],[["box",3],["option",4]]]],[5,"wasm_valtype_delete","","",null,[[["box",3],["option",4]]]],[5,"wasm_valtype_kind","","",null,[[["option",4],["wasm_valtype_t",3]],["wasm_valkind_t",6]]],[6,"wasm_byte_t","","",null,null],[3,"wasm_byte_vec_t","","Represents a vector of <code>wasm_byte_t</code>.",null,null],[12,"size","","",27,null],[12,"data","","",27,null],[11,"into_slice","","",27,[[],["option",4]]],[11,"into_slice_mut","","",27,[[],["option",4]]],[11,"is_uninitialized","","",27,[[],["bool",15]]],[5,"wasm_byte_vec_new","","Creates a new vector of [<code>wasm_byte_t</code>].",null,[[["usize",15]]]],[5,"wasm_byte_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_byte_t</code>].",null,[[["usize",15]]]],[5,"wasm_byte_vec_copy","","Performs a deep copy of a vector of [<code>wasm_byte_t</code>].",null,[[["wasm_byte_vec_t",3],["wasm_byte_vec_t",3]]]],[5,"wasm_byte_vec_delete","","Deletes a vector of [<code>wasm_byte_t</code>].",null,[[["wasm_byte_vec_t",3],["option",4]]]],[5,"wasm_byte_vec_new_empty","","Creates an empty vector of [<code>wasm_byte_t</code>].",null,[[]]],[6,"wasm_name_t","","",null,null],[3,"owned_wasm_name_t","","An owned version of <code>wasm_name_t</code>.",null,null],[11,"new","","Take ownership of some <code>wasm_name_t</code>",28,[[["wasm_name_t",6]]]],[3,"wasm_ref_t","","",null,null],[6,"wasm_message_t","","",null,null],[0,"unstable","wasmer_c_api::wasm_c_api","This module contains <em>unstable non-standard</em> C API.",null,null],[0,"engine","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific types for the …",null,null],[5,"wasm_config_set_target","wasmer_c_api::wasm_c_api::unstable::engine","Unstable non-standard Wasmer-specific API to update the …",null,[[["wasm_config_t",3],["box",3],["wasmer_target_t",3]]]],[5,"wasm_config_set_features","","Unstable non-standard Wasmer-specific API to update the …",null,[[["wasm_config_t",3],["box",3],["wasmer_features_t",3]]]],[5,"wasmer_is_compiler_available","","Check whether the given compiler is available, i.e. part …",null,[[["wasmer_compiler_t",4]],["bool",15]]],[5,"wasmer_is_headless","","Check whether there is no compiler available in this …",null,[[],["bool",15]]],[5,"wasmer_is_engine_available","","Check whether the given engine is available, i.e. part of …",null,[[["wasmer_engine_t",4]],["bool",15]]],[0,"features","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific API that contains a …",null,null],[3,"wasmer_features_t","wasmer_c_api::wasm_c_api::unstable::features","Controls which experimental features will be enabled. …",null,null],[5,"wasmer_features_new","","Creates a new [<code>wasmer_features_t</code>].",null,[[],[["box",3],["wasmer_features_t",3]]]],[5,"wasmer_features_delete","","Delete a [<code>wasmer_features_t</code>].",null,[[["box",3],["option",4]]]],[5,"wasmer_features_threads","","Configures whether the WebAssembly threads proposal will …",null,[[["option",4],["wasmer_features_t",3],["bool",15]],["bool",15]]],[5,"wasmer_features_reference_types","","Configures whether the WebAssembly reference types …",null,[[["option",4],["wasmer_features_t",3],["bool",15]],["bool",15]]],[5,"wasmer_features_simd","","Configures whether the WebAssembly SIMD proposal will be …",null,[[["option",4],["wasmer_features_t",3],["bool",15]],["bool",15]]],[5,"wasmer_features_bulk_memory","","Configures whether the WebAssembly bulk memory operations …",null,[[["option",4],["wasmer_features_t",3],["bool",15]],["bool",15]]],[5,"wasmer_features_multi_value","","Configures whether the WebAssembly multi-value proposal …",null,[[["option",4],["wasmer_features_t",3],["bool",15]],["bool",15]]],[5,"wasmer_features_tail_call","","Configures whether the WebAssembly tail-call proposal will…",null,[[["option",4],["wasmer_features_t",3],["bool",15]],["bool",15]]],[5,"wasmer_features_module_linking","","Configures whether the WebAssembly tail-call proposal will…",null,[[["option",4],["wasmer_features_t",3],["bool",15]],["bool",15]]],[5,"wasmer_features_multi_memory","","Configures whether the WebAssembly multi-memory proposal …",null,[[["option",4],["wasmer_features_t",3],["bool",15]],["bool",15]]],[5,"wasmer_features_memory64","","Configures whether the WebAssembly 64-bit memory proposal …",null,[[["option",4],["wasmer_features_t",3],["bool",15]],["bool",15]]],[0,"middlewares","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific types to manipulate …",null,null],[0,"metering","wasmer_c_api::wasm_c_api::unstable::middlewares","Unstable non-standard Wasmer-specific API that contains …",null,null],[3,"wasmer_metering_t","wasmer_c_api::wasm_c_api::unstable::middlewares::metering","Opaque type representing a metering middleware.",null,null],[6,"wasmer_metering_cost_function_t","","Function type to represent a user-defined cost function …",null,null],[5,"wasmer_metering_new","","Creates a new metering middleware with an initial limit, …",null,[[["wasmer_metering_cost_function_t",6],["u64",15]],[["wasmer_metering_t",3],["box",3]]]],[5,"wasmer_metering_delete","","Deletes a [<code>wasmer_metering_t</code>].",null,[[["option",4],["box",3]]]],[5,"wasmer_metering_get_remaining_points","","Returns the remaining metering points. <code>u64::MAX</code> means …",null,[[["wasm_instance_t",3]],["u64",15]]],[5,"wasmer_metering_points_are_exhausted","","Returns true if the remaning points are exhausted, false …",null,[[["wasm_instance_t",3]],["bool",15]]],[5,"wasmer_metering_set_remaining_points","","Set a new amount of points for the given metering …",null,[[["wasm_instance_t",3],["u64",15]]]],[5,"wasmer_metering_as_middleware","","Transforms a [<code>wasmer_metering_t</code>] into a generic […",null,[[["option",4],["box",3]],[["option",4],["box",3]]]],[3,"wasmer_middleware_t","wasmer_c_api::wasm_c_api::unstable::middlewares","Opaque representing any kind of middleware.",null,null],[5,"wasm_config_push_middleware","","Updates the configuration to add a module middleware.",null,[[["wasm_config_t",3],["box",3],["wasmer_middleware_t",3]]]],[0,"module","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific extensions to the …",null,null],[5,"wasmer_module_name","wasmer_c_api::wasm_c_api::unstable::module","Unstable non-standard Wasmer-specific API to get the …",null,[[["wasm_name_t",6],["wasm_module_t",3]]]],[5,"wasmer_module_set_name","","Unstable non-standard Wasmer-specific API to set the …",null,[[["wasm_module_t",3],["wasm_name_t",6]],["bool",15]]],[0,"parser","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific types about …",null,null],[0,"operator","wasmer_c_api::wasm_c_api::unstable::parser","",null,null],[4,"wasmer_parser_operator_t","wasmer_c_api::wasm_c_api::unstable::parser::operator","",null,null],[13,"Unreachable","","",29,null],[13,"Nop","","",29,null],[13,"Block","","",29,null],[13,"Loop","","",29,null],[13,"If","","",29,null],[13,"Else","","",29,null],[13,"Try","","",29,null],[13,"Catch","","",29,null],[13,"CatchAll","","",29,null],[13,"Delegate","","",29,null],[13,"Throw","","",29,null],[13,"Rethrow","","",29,null],[13,"Unwind","","",29,null],[13,"End","","",29,null],[13,"Br","","",29,null],[13,"BrIf","","",29,null],[13,"BrTable","","",29,null],[13,"Return","","",29,null],[13,"Call","","",29,null],[13,"CallIndirect","","",29,null],[13,"ReturnCall","","",29,null],[13,"ReturnCallIndirect","","",29,null],[13,"Drop","","",29,null],[13,"Select","","",29,null],[13,"TypedSelect","","",29,null],[13,"LocalGet","","",29,null],[13,"LocalSet","","",29,null],[13,"LocalTee","","",29,null],[13,"GlobalGet","","",29,null],[13,"GlobalSet","","",29,null],[13,"I32Load","","",29,null],[13,"I64Load","","",29,null],[13,"F32Load","","",29,null],[13,"F64Load","","",29,null],[13,"I32Load8S","","",29,null],[13,"I32Load8U","","",29,null],[13,"I32Load16S","","",29,null],[13,"I32Load16U","","",29,null],[13,"I64Load8S","","",29,null],[13,"I64Load8U","","",29,null],[13,"I64Load16S","","",29,null],[13,"I64Load16U","","",29,null],[13,"I64Load32S","","",29,null],[13,"I64Load32U","","",29,null],[13,"I32Store","","",29,null],[13,"I64Store","","",29,null],[13,"F32Store","","",29,null],[13,"F64Store","","",29,null],[13,"I32Store8","","",29,null],[13,"I32Store16","","",29,null],[13,"I64Store8","","",29,null],[13,"I64Store16","","",29,null],[13,"I64Store32","","",29,null],[13,"MemorySize","","",29,null],[13,"MemoryGrow","","",29,null],[13,"I32Const","","",29,null],[13,"I64Const","","",29,null],[13,"F32Const","","",29,null],[13,"F64Const","","",29,null],[13,"RefNull","","",29,null],[13,"RefIsNull","","",29,null],[13,"RefFunc","","",29,null],[13,"I32Eqz","","",29,null],[13,"I32Eq","","",29,null],[13,"I32Ne","","",29,null],[13,"I32LtS","","",29,null],[13,"I32LtU","","",29,null],[13,"I32GtS","","",29,null],[13,"I32GtU","","",29,null],[13,"I32LeS","","",29,null],[13,"I32LeU","","",29,null],[13,"I32GeS","","",29,null],[13,"I32GeU","","",29,null],[13,"I64Eqz","","",29,null],[13,"I64Eq","","",29,null],[13,"I64Ne","","",29,null],[13,"I64LtS","","",29,null],[13,"I64LtU","","",29,null],[13,"I64GtS","","",29,null],[13,"I64GtU","","",29,null],[13,"I64LeS","","",29,null],[13,"I64LeU","","",29,null],[13,"I64GeS","","",29,null],[13,"I64GeU","","",29,null],[13,"F32Eq","","",29,null],[13,"F32Ne","","",29,null],[13,"F32Lt","","",29,null],[13,"F32Gt","","",29,null],[13,"F32Le","","",29,null],[13,"F32Ge","","",29,null],[13,"F64Eq","","",29,null],[13,"F64Ne","","",29,null],[13,"F64Lt","","",29,null],[13,"F64Gt","","",29,null],[13,"F64Le","","",29,null],[13,"F64Ge","","",29,null],[13,"I32Clz","","",29,null],[13,"I32Ctz","","",29,null],[13,"I32Popcnt","","",29,null],[13,"I32Add","","",29,null],[13,"I32Sub","","",29,null],[13,"I32Mul","","",29,null],[13,"I32DivS","","",29,null],[13,"I32DivU","","",29,null],[13,"I32RemS","","",29,null],[13,"I32RemU","","",29,null],[13,"I32And","","",29,null],[13,"I32Or","","",29,null],[13,"I32Xor","","",29,null],[13,"I32Shl","","",29,null],[13,"I32ShrS","","",29,null],[13,"I32ShrU","","",29,null],[13,"I32Rotl","","",29,null],[13,"I32Rotr","","",29,null],[13,"I64Clz","","",29,null],[13,"I64Ctz","","",29,null],[13,"I64Popcnt","","",29,null],[13,"I64Add","","",29,null],[13,"I64Sub","","",29,null],[13,"I64Mul","","",29,null],[13,"I64DivS","","",29,null],[13,"I64DivU","","",29,null],[13,"I64RemS","","",29,null],[13,"I64RemU","","",29,null],[13,"I64And","","",29,null],[13,"I64Or","","",29,null],[13,"I64Xor","","",29,null],[13,"I64Shl","","",29,null],[13,"I64ShrS","","",29,null],[13,"I64ShrU","","",29,null],[13,"I64Rotl","","",29,null],[13,"I64Rotr","","",29,null],[13,"F32Abs","","",29,null],[13,"F32Neg","","",29,null],[13,"F32Ceil","","",29,null],[13,"F32Floor","","",29,null],[13,"F32Trunc","","",29,null],[13,"F32Nearest","","",29,null],[13,"F32Sqrt","","",29,null],[13,"F32Add","","",29,null],[13,"F32Sub","","",29,null],[13,"F32Mul","","",29,null],[13,"F32Div","","",29,null],[13,"F32Min","","",29,null],[13,"F32Max","","",29,null],[13,"F32Copysign","","",29,null],[13,"F64Abs","","",29,null],[13,"F64Neg","","",29,null],[13,"F64Ceil","","",29,null],[13,"F64Floor","","",29,null],[13,"F64Trunc","","",29,null],[13,"F64Nearest","","",29,null],[13,"F64Sqrt","","",29,null],[13,"F64Add","","",29,null],[13,"F64Sub","","",29,null],[13,"F64Mul","","",29,null],[13,"F64Div","","",29,null],[13,"F64Min","","",29,null],[13,"F64Max","","",29,null],[13,"F64Copysign","","",29,null],[13,"I32WrapI64","","",29,null],[13,"I32TruncF32S","","",29,null],[13,"I32TruncF32U","","",29,null],[13,"I32TruncF64S","","",29,null],[13,"I32TruncF64U","","",29,null],[13,"I64ExtendI32S","","",29,null],[13,"I64ExtendI32U","","",29,null],[13,"I64TruncF32S","","",29,null],[13,"I64TruncF32U","","",29,null],[13,"I64TruncF64S","","",29,null],[13,"I64TruncF64U","","",29,null],[13,"F32ConvertI32S","","",29,null],[13,"F32ConvertI32U","","",29,null],[13,"F32ConvertI64S","","",29,null],[13,"F32ConvertI64U","","",29,null],[13,"F32DemoteF64","","",29,null],[13,"F64ConvertI32S","","",29,null],[13,"F64ConvertI32U","","",29,null],[13,"F64ConvertI64S","","",29,null],[13,"F64ConvertI64U","","",29,null],[13,"F64PromoteF32","","",29,null],[13,"I32ReinterpretF32","","",29,null],[13,"I64ReinterpretF64","","",29,null],[13,"F32ReinterpretI32","","",29,null],[13,"F64ReinterpretI64","","",29,null],[13,"I32Extend8S","","",29,null],[13,"I32Extend16S","","",29,null],[13,"I64Extend8S","","",29,null],[13,"I64Extend16S","","",29,null],[13,"I64Extend32S","","",29,null],[13,"I32TruncSatF32S","","",29,null],[13,"I32TruncSatF32U","","",29,null],[13,"I32TruncSatF64S","","",29,null],[13,"I32TruncSatF64U","","",29,null],[13,"I64TruncSatF32S","","",29,null],[13,"I64TruncSatF32U","","",29,null],[13,"I64TruncSatF64S","","",29,null],[13,"I64TruncSatF64U","","",29,null],[13,"MemoryInit","","",29,null],[13,"DataDrop","","",29,null],[13,"MemoryCopy","","",29,null],[13,"MemoryFill","","",29,null],[13,"TableInit","","",29,null],[13,"ElemDrop","","",29,null],[13,"TableCopy","","",29,null],[13,"TableFill","","",29,null],[13,"TableGet","","",29,null],[13,"TableSet","","",29,null],[13,"TableGrow","","",29,null],[13,"TableSize","","",29,null],[13,"MemoryAtomicNotify","","",29,null],[13,"MemoryAtomicWait32","","",29,null],[13,"MemoryAtomicWait64","","",29,null],[13,"AtomicFence","","",29,null],[13,"I32AtomicLoad","","",29,null],[13,"I64AtomicLoad","","",29,null],[13,"I32AtomicLoad8U","","",29,null],[13,"I32AtomicLoad16U","","",29,null],[13,"I64AtomicLoad8U","","",29,null],[13,"I64AtomicLoad16U","","",29,null],[13,"I64AtomicLoad32U","","",29,null],[13,"I32AtomicStore","","",29,null],[13,"I64AtomicStore","","",29,null],[13,"I32AtomicStore8","","",29,null],[13,"I32AtomicStore16","","",29,null],[13,"I64AtomicStore8","","",29,null],[13,"I64AtomicStore16","","",29,null],[13,"I64AtomicStore32","","",29,null],[13,"I32AtomicRmwAdd","","",29,null],[13,"I64AtomicRmwAdd","","",29,null],[13,"I32AtomicRmw8AddU","","",29,null],[13,"I32AtomicRmw16AddU","","",29,null],[13,"I64AtomicRmw8AddU","","",29,null],[13,"I64AtomicRmw16AddU","","",29,null],[13,"I64AtomicRmw32AddU","","",29,null],[13,"I32AtomicRmwSub","","",29,null],[13,"I64AtomicRmwSub","","",29,null],[13,"I32AtomicRmw8SubU","","",29,null],[13,"I32AtomicRmw16SubU","","",29,null],[13,"I64AtomicRmw8SubU","","",29,null],[13,"I64AtomicRmw16SubU","","",29,null],[13,"I64AtomicRmw32SubU","","",29,null],[13,"I32AtomicRmwAnd","","",29,null],[13,"I64AtomicRmwAnd","","",29,null],[13,"I32AtomicRmw8AndU","","",29,null],[13,"I32AtomicRmw16AndU","","",29,null],[13,"I64AtomicRmw8AndU","","",29,null],[13,"I64AtomicRmw16AndU","","",29,null],[13,"I64AtomicRmw32AndU","","",29,null],[13,"I32AtomicRmwOr","","",29,null],[13,"I64AtomicRmwOr","","",29,null],[13,"I32AtomicRmw8OrU","","",29,null],[13,"I32AtomicRmw16OrU","","",29,null],[13,"I64AtomicRmw8OrU","","",29,null],[13,"I64AtomicRmw16OrU","","",29,null],[13,"I64AtomicRmw32OrU","","",29,null],[13,"I32AtomicRmwXor","","",29,null],[13,"I64AtomicRmwXor","","",29,null],[13,"I32AtomicRmw8XorU","","",29,null],[13,"I32AtomicRmw16XorU","","",29,null],[13,"I64AtomicRmw8XorU","","",29,null],[13,"I64AtomicRmw16XorU","","",29,null],[13,"I64AtomicRmw32XorU","","",29,null],[13,"I32AtomicRmwXchg","","",29,null],[13,"I64AtomicRmwXchg","","",29,null],[13,"I32AtomicRmw8XchgU","","",29,null],[13,"I32AtomicRmw16XchgU","","",29,null],[13,"I64AtomicRmw8XchgU","","",29,null],[13,"I64AtomicRmw16XchgU","","",29,null],[13,"I64AtomicRmw32XchgU","","",29,null],[13,"I32AtomicRmwCmpxchg","","",29,null],[13,"I64AtomicRmwCmpxchg","","",29,null],[13,"I32AtomicRmw8CmpxchgU","","",29,null],[13,"I32AtomicRmw16CmpxchgU","","",29,null],[13,"I64AtomicRmw8CmpxchgU","","",29,null],[13,"I64AtomicRmw16CmpxchgU","","",29,null],[13,"I64AtomicRmw32CmpxchgU","","",29,null],[13,"V128Load","","",29,null],[13,"V128Store","","",29,null],[13,"V128Const","","",29,null],[13,"I8x16Splat","","",29,null],[13,"I8x16ExtractLaneS","","",29,null],[13,"I8x16ExtractLaneU","","",29,null],[13,"I8x16ReplaceLane","","",29,null],[13,"I16x8Splat","","",29,null],[13,"I16x8ExtractLaneS","","",29,null],[13,"I16x8ExtractLaneU","","",29,null],[13,"I16x8ReplaceLane","","",29,null],[13,"I32x4Splat","","",29,null],[13,"I32x4ExtractLane","","",29,null],[13,"I32x4ReplaceLane","","",29,null],[13,"I64x2Splat","","",29,null],[13,"I64x2ExtractLane","","",29,null],[13,"I64x2ReplaceLane","","",29,null],[13,"F32x4Splat","","",29,null],[13,"F32x4ExtractLane","","",29,null],[13,"F32x4ReplaceLane","","",29,null],[13,"F64x2Splat","","",29,null],[13,"F64x2ExtractLane","","",29,null],[13,"F64x2ReplaceLane","","",29,null],[13,"I8x16Eq","","",29,null],[13,"I8x16Ne","","",29,null],[13,"I8x16LtS","","",29,null],[13,"I8x16LtU","","",29,null],[13,"I8x16GtS","","",29,null],[13,"I8x16GtU","","",29,null],[13,"I8x16LeS","","",29,null],[13,"I8x16LeU","","",29,null],[13,"I8x16GeS","","",29,null],[13,"I8x16GeU","","",29,null],[13,"I16x8Eq","","",29,null],[13,"I16x8Ne","","",29,null],[13,"I16x8LtS","","",29,null],[13,"I16x8LtU","","",29,null],[13,"I16x8GtS","","",29,null],[13,"I16x8GtU","","",29,null],[13,"I16x8LeS","","",29,null],[13,"I16x8LeU","","",29,null],[13,"I16x8GeS","","",29,null],[13,"I16x8GeU","","",29,null],[13,"I32x4Eq","","",29,null],[13,"I32x4Ne","","",29,null],[13,"I32x4LtS","","",29,null],[13,"I32x4LtU","","",29,null],[13,"I32x4GtS","","",29,null],[13,"I32x4GtU","","",29,null],[13,"I32x4LeS","","",29,null],[13,"I32x4LeU","","",29,null],[13,"I32x4GeS","","",29,null],[13,"I32x4GeU","","",29,null],[13,"I64x2Eq","","",29,null],[13,"I64x2Ne","","",29,null],[13,"I64x2LtS","","",29,null],[13,"I64x2GtS","","",29,null],[13,"I64x2LeS","","",29,null],[13,"I64x2GeS","","",29,null],[13,"F32x4Eq","","",29,null],[13,"F32x4Ne","","",29,null],[13,"F32x4Lt","","",29,null],[13,"F32x4Gt","","",29,null],[13,"F32x4Le","","",29,null],[13,"F32x4Ge","","",29,null],[13,"F64x2Eq","","",29,null],[13,"F64x2Ne","","",29,null],[13,"F64x2Lt","","",29,null],[13,"F64x2Gt","","",29,null],[13,"F64x2Le","","",29,null],[13,"F64x2Ge","","",29,null],[13,"V128Not","","",29,null],[13,"V128And","","",29,null],[13,"V128AndNot","","",29,null],[13,"V128Or","","",29,null],[13,"V128Xor","","",29,null],[13,"V128Bitselect","","",29,null],[13,"V128AnyTrue","","",29,null],[13,"I8x16Abs","","",29,null],[13,"I8x16Neg","","",29,null],[13,"I8x16AllTrue","","",29,null],[13,"I8x16Bitmask","","",29,null],[13,"I8x16Shl","","",29,null],[13,"I8x16ShrS","","",29,null],[13,"I8x16ShrU","","",29,null],[13,"I8x16Add","","",29,null],[13,"I8x16AddSatS","","",29,null],[13,"I8x16AddSatU","","",29,null],[13,"I8x16Sub","","",29,null],[13,"I8x16SubSatS","","",29,null],[13,"I8x16SubSatU","","",29,null],[13,"I8x16MinS","","",29,null],[13,"I8x16MinU","","",29,null],[13,"I8x16MaxS","","",29,null],[13,"I8x16MaxU","","",29,null],[13,"I8x16Popcnt","","",29,null],[13,"I16x8Abs","","",29,null],[13,"I16x8Neg","","",29,null],[13,"I16x8AllTrue","","",29,null],[13,"I16x8Bitmask","","",29,null],[13,"I16x8Shl","","",29,null],[13,"I16x8ShrS","","",29,null],[13,"I16x8ShrU","","",29,null],[13,"I16x8Add","","",29,null],[13,"I16x8AddSatS","","",29,null],[13,"I16x8AddSatU","","",29,null],[13,"I16x8Sub","","",29,null],[13,"I16x8SubSatS","","",29,null],[13,"I16x8SubSatU","","",29,null],[13,"I16x8Mul","","",29,null],[13,"I16x8MinS","","",29,null],[13,"I16x8MinU","","",29,null],[13,"I16x8MaxS","","",29,null],[13,"I16x8MaxU","","",29,null],[13,"I16x8ExtAddPairwiseI8x16S","","",29,null],[13,"I16x8ExtAddPairwiseI8x16U","","",29,null],[13,"I32x4Abs","","",29,null],[13,"I32x4Neg","","",29,null],[13,"I32x4AllTrue","","",29,null],[13,"I32x4Bitmask","","",29,null],[13,"I32x4Shl","","",29,null],[13,"I32x4ShrS","","",29,null],[13,"I32x4ShrU","","",29,null],[13,"I32x4Add","","",29,null],[13,"I32x4Sub","","",29,null],[13,"I32x4Mul","","",29,null],[13,"I32x4MinS","","",29,null],[13,"I32x4MinU","","",29,null],[13,"I32x4MaxS","","",29,null],[13,"I32x4MaxU","","",29,null],[13,"I32x4DotI16x8S","","",29,null],[13,"I32x4ExtAddPairwiseI16x8S","","",29,null],[13,"I32x4ExtAddPairwiseI16x8U","","",29,null],[13,"I64x2Abs","","",29,null],[13,"I64x2Neg","","",29,null],[13,"I64x2AllTrue","","",29,null],[13,"I64x2Bitmask","","",29,null],[13,"I64x2Shl","","",29,null],[13,"I64x2ShrS","","",29,null],[13,"I64x2ShrU","","",29,null],[13,"I64x2Add","","",29,null],[13,"I64x2Sub","","",29,null],[13,"I64x2Mul","","",29,null],[13,"F32x4Ceil","","",29,null],[13,"F32x4Floor","","",29,null],[13,"F32x4Trunc","","",29,null],[13,"F32x4Nearest","","",29,null],[13,"F64x2Ceil","","",29,null],[13,"F64x2Floor","","",29,null],[13,"F64x2Trunc","","",29,null],[13,"F64x2Nearest","","",29,null],[13,"F32x4Abs","","",29,null],[13,"F32x4Neg","","",29,null],[13,"F32x4Sqrt","","",29,null],[13,"F32x4Add","","",29,null],[13,"F32x4Sub","","",29,null],[13,"F32x4Mul","","",29,null],[13,"F32x4Div","","",29,null],[13,"F32x4Min","","",29,null],[13,"F32x4Max","","",29,null],[13,"F32x4PMin","","",29,null],[13,"F32x4PMax","","",29,null],[13,"F64x2Abs","","",29,null],[13,"F64x2Neg","","",29,null],[13,"F64x2Sqrt","","",29,null],[13,"F64x2Add","","",29,null],[13,"F64x2Sub","","",29,null],[13,"F64x2Mul","","",29,null],[13,"F64x2Div","","",29,null],[13,"F64x2Min","","",29,null],[13,"F64x2Max","","",29,null],[13,"F64x2PMin","","",29,null],[13,"F64x2PMax","","",29,null],[13,"I32x4TruncSatF32x4S","","",29,null],[13,"I32x4TruncSatF32x4U","","",29,null],[13,"F32x4ConvertI32x4S","","",29,null],[13,"F32x4ConvertI32x4U","","",29,null],[13,"I8x16Swizzle","","",29,null],[13,"I8x16Shuffle","","",29,null],[13,"V128Load8Splat","","",29,null],[13,"V128Load16Splat","","",29,null],[13,"V128Load32Splat","","",29,null],[13,"V128Load32Zero","","",29,null],[13,"V128Load64Splat","","",29,null],[13,"V128Load64Zero","","",29,null],[13,"I8x16NarrowI16x8S","","",29,null],[13,"I8x16NarrowI16x8U","","",29,null],[13,"I16x8NarrowI32x4S","","",29,null],[13,"I16x8NarrowI32x4U","","",29,null],[13,"I16x8ExtendLowI8x16S","","",29,null],[13,"I16x8ExtendHighI8x16S","","",29,null],[13,"I16x8ExtendLowI8x16U","","",29,null],[13,"I16x8ExtendHighI8x16U","","",29,null],[13,"I32x4ExtendLowI16x8S","","",29,null],[13,"I32x4ExtendHighI16x8S","","",29,null],[13,"I32x4ExtendLowI16x8U","","",29,null],[13,"I32x4ExtendHighI16x8U","","",29,null],[13,"I64x2ExtendLowI32x4S","","",29,null],[13,"I64x2ExtendHighI32x4S","","",29,null],[13,"I64x2ExtendLowI32x4U","","",29,null],[13,"I64x2ExtendHighI32x4U","","",29,null],[13,"I16x8ExtMulLowI8x16S","","",29,null],[13,"I16x8ExtMulHighI8x16S","","",29,null],[13,"I16x8ExtMulLowI8x16U","","",29,null],[13,"I16x8ExtMulHighI8x16U","","",29,null],[13,"I32x4ExtMulLowI16x8S","","",29,null],[13,"I32x4ExtMulHighI16x8S","","",29,null],[13,"I32x4ExtMulLowI16x8U","","",29,null],[13,"I32x4ExtMulHighI16x8U","","",29,null],[13,"I64x2ExtMulLowI32x4S","","",29,null],[13,"I64x2ExtMulHighI32x4S","","",29,null],[13,"I64x2ExtMulLowI32x4U","","",29,null],[13,"I64x2ExtMulHighI32x4U","","",29,null],[13,"V128Load8x8S","","",29,null],[13,"V128Load8x8U","","",29,null],[13,"V128Load16x4S","","",29,null],[13,"V128Load16x4U","","",29,null],[13,"V128Load32x2S","","",29,null],[13,"V128Load32x2U","","",29,null],[13,"V128Load8Lane","","",29,null],[13,"V128Load16Lane","","",29,null],[13,"V128Load32Lane","","",29,null],[13,"V128Load64Lane","","",29,null],[13,"V128Store8Lane","","",29,null],[13,"V128Store16Lane","","",29,null],[13,"V128Store32Lane","","",29,null],[13,"V128Store64Lane","","",29,null],[13,"I8x16RoundingAverageU","","",29,null],[13,"I16x8RoundingAverageU","","",29,null],[13,"I16x8Q15MulrSatS","","",29,null],[13,"F32x4DemoteF64x2Zero","","",29,null],[13,"F64x2PromoteLowF32x4","","",29,null],[13,"F64x2ConvertLowI32x4S","","",29,null],[13,"F64x2ConvertLowI32x4U","","",29,null],[13,"I32x4TruncSatF64x2SZero","","",29,null],[13,"I32x4TruncSatF64x2UZero","","",29,null],[0,"target_lexicon","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific API that contains …",null,null],[3,"wasmer_target_t","wasmer_c_api::wasm_c_api::unstable::target_lexicon","Unstable non-standard Wasmer-specific API to represent a …",null,null],[5,"wasmer_target_new","","Creates a new [<code>wasmer_target_t</code>].",null,[[["box",3],["option",4],["option",4],["box",3]],[["box",3],["option",4]]]],[5,"wasmer_target_delete","","Delete a [<code>wasmer_target_t</code>].",null,[[["option",4],["box",3]]]],[3,"wasmer_triple_t","","Unstable non-standard Wasmer-specific API to represent a …",null,null],[5,"wasmer_triple_new","","Create a new [<code>wasmer_triple_t</code>] based on a triple string.",null,[[["wasm_name_t",6],["option",4]],[["option",4],["box",3]]]],[5,"wasmer_triple_new_from_host","","Create the [<code>wasmer_triple_t</code>] for the current host.",null,[[],[["box",3],["wasmer_triple_t",3]]]],[5,"wasmer_triple_delete","","Delete a [<code>wasmer_triple_t</code>].",null,[[["option",4],["box",3]]]],[3,"wasmer_cpu_features_t","","Unstable non-standard Wasmer-specific API to represent a …",null,null],[5,"wasmer_cpu_features_new","","Create a new [<code>wasmer_cpu_features_t</code>].",null,[[],[["wasmer_cpu_features_t",3],["box",3]]]],[5,"wasmer_cpu_features_delete","","Delete a [<code>wasmer_cpu_features_t</code>].",null,[[["option",4],["box",3]]]],[5,"wasmer_cpu_features_add","","Add a new CPU feature into the set represented by […",null,[[["option",4],["wasmer_cpu_features_t",3],["option",4],["wasm_name_t",6]],["bool",15]]],[0,"wasi","wasmer_c_api::wasm_c_api::unstable","Unstable non-standard Wasmer-specific API that contains …",null,null],[3,"wasmer_named_extern_t","wasmer_c_api::wasm_c_api::unstable::wasi","Unstable non-standard type wrapping <code>wasm_extern_t</code> with the…",null,null],[3,"wasmer_named_extern_vec_t","","Represents a vector of <code>wasmer_named_extern_t</code>.",null,null],[12,"size","","",30,null],[12,"data","","",30,null],[11,"into_slice","","",30,[[],["option",4]]],[5,"wasmer_named_extern_vec_new","","Creates a new vector of [<code>wasmer_named_extern_t</code>].",null,[[["usize",15]]]],[5,"wasmer_named_extern_vec_new_uninitialized","","Creates a new uninitialized vector of […",null,[[["usize",15]]]],[5,"wasmer_named_extern_vec_copy","","Performs a deep copy of a vector of [<code>wasmer_named_extern_t</code>…",null,[[["wasmer_named_extern_vec_t",3],["wasmer_named_extern_vec_t",3]]]],[5,"wasmer_named_extern_vec_delete","","Deletes a vector of [<code>wasmer_named_extern_t</code>].",null,[[["option",4],["wasmer_named_extern_vec_t",3]]]],[5,"wasmer_named_extern_vec_new_empty","","Creates an empty vector of [<code>wasmer_named_extern_t</code>].",null,[[]]],[5,"wasmer_named_extern_module","","Non-standard function to get the module name of a …",null,[[["wasmer_named_extern_t",3],["option",4]],[["wasm_name_t",6],["option",4]]]],[5,"wasmer_named_extern_name","","Non-standard function to get the name of a …",null,[[["wasmer_named_extern_t",3],["option",4]],[["wasm_name_t",6],["option",4]]]],[5,"wasmer_named_extern_unwrap","","Non-standard function to get the wrapped extern of a …",null,[[["wasmer_named_extern_t",3],["option",4]],[["option",4],["wasm_extern_t",3]]]],[5,"wasi_get_unordered_imports","","Non-standard function to get the imports needed for the …",null,[[["option",4],["option",4],["wasm_module_t",3],["wasi_env_t",3],["wasm_store_t",3],["option",4],["wasmer_named_extern_vec_t",3]],["bool",15]]],[0,"value","wasmer_c_api::wasm_c_api","Possible runtime values that a WebAssembly module can …",null,null],[6,"wasm_valkind_t","wasmer_c_api::wasm_c_api::value","Represents the kind of values. The variants of this C …",null,null],[19,"wasm_val_inner","","A Rust union, compatible with C, that holds a value of …",null,null],[3,"wasm_val_t","","A WebAssembly value composed of its type and its value.",null,null],[12,"kind","","The kind of the value.",31,null],[12,"of","","The real value.",31,null],[3,"wasm_val_vec_t","","Represents a vector of <code>wasm_val_t</code>.",null,null],[12,"size","","",32,null],[12,"data","","",32,null],[11,"into_slice","","",32,[[],["option",4]]],[11,"into_slice_mut","","",32,[[],["option",4]]],[11,"is_uninitialized","","",32,[[],["bool",15]]],[5,"wasm_val_vec_new","","Creates a new vector of [<code>wasm_val_t</code>].",null,[[["usize",15]]]],[5,"wasm_val_vec_new_uninitialized","","Creates a new uninitialized vector of [<code>wasm_val_t</code>].",null,[[["usize",15]]]],[5,"wasm_val_vec_copy","","Performs a deep copy of a vector of [<code>wasm_val_t</code>].",null,[[["wasm_val_vec_t",3],["wasm_val_vec_t",3]]]],[5,"wasm_val_vec_delete","","Deletes a vector of [<code>wasm_val_t</code>].",null,[[["option",4],["wasm_val_vec_t",3]]]],[5,"wasm_val_vec_new_empty","","Creates an empty vector of [<code>wasm_val_t</code>].",null,[[]]],[5,"wasm_val_copy","","",null,[[["wasm_val_t",3],["wasm_val_t",3]]]],[5,"wasm_val_delete","","",null,[[["box",3],["option",4]]]],[0,"version","wasmer_c_api::wasm_c_api","Wasmer-specific API to get or query the version of this …",null,null],[5,"wasmer_version","wasmer_c_api::wasm_c_api::version","Get the version of the Wasmer C API.",null,[[]]],[5,"wasmer_version_major","","Get the major version of the Wasmer C API.",null,[[],["u8",15]]],[5,"wasmer_version_minor","","Get the minor version of the Wasmer C API.",null,[[],["u8",15]]],[5,"wasmer_version_patch","","Get the patch version of the Wasmer C API.",null,[[],["u8",15]]],[5,"wasmer_version_pre","","Get the minor version of the Wasmer C API.",null,[[]]],[0,"wasi","wasmer_c_api::wasm_c_api","Unofficial API for WASI integrating with the standard …",null,null],[3,"wasi_config_t","wasmer_c_api::wasm_c_api::wasi","",null,null],[5,"wasi_config_new","","",null,[[],[["box",3],["option",4]]]],[5,"wasi_config_env","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_arg","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_preopen_dir","","",null,[[["wasi_config_t",3]],["bool",15]]],[5,"wasi_config_mapdir","","",null,[[["wasi_config_t",3]],["bool",15]]],[5,"wasi_config_capture_stdout","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_inherit_stdout","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_capture_stderr","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_inherit_stderr","","",null,[[["wasi_config_t",3]]]],[5,"wasi_config_inherit_stdin","","",null,[[["wasi_config_t",3]]]],[3,"wasi_env_t","","",null,null],[5,"wasi_env_new","","Create a new WASI environment.",null,[[["box",3],["wasi_config_t",3]],[["option",4],["box",3]]]],[5,"wasi_env_delete","","Delete a [<code>wasi_env_t</code>].",null,[[["option",4],["box",3]]]],[5,"wasi_env_set_instance","","This function is deprecated. You may safely remove all …",null,[[["wasm_instance_t",3],["wasi_env_t",3]],["bool",15]]],[5,"wasi_env_set_memory","","This function is deprecated. You may safely remove all …",null,[[["wasm_memory_t",3],["wasi_env_t",3]]]],[5,"wasi_env_read_stdout","","",null,[[["usize",15],["wasi_env_t",3]],["isize",15]]],[5,"wasi_env_read_stderr","","",null,[[["usize",15],["wasi_env_t",3]],["isize",15]]],[4,"wasi_version_t","","The version of WASI. This is determined by the imports …",null,null],[13,"INVALID_VERSION","","An invalid version.",33,null],[13,"LATEST","","Latest version.",33,null],[13,"SNAPSHOT0","","<code>wasi_unstable</code>.",33,null],[13,"SNAPSHOT1","","<code>wasi_snapshot_preview1</code>.",33,null],[5,"wasi_get_wasi_version","","",null,[[["wasm_module_t",3]],["wasi_version_t",4]]],[5,"wasi_get_imports","","Non-standard function to get the imports needed for the …",null,[[["option",4],["wasm_extern_vec_t",3],["option",4],["wasm_module_t",3],["wasi_env_t",3],["wasm_store_t",3],["option",4]],["bool",15]]],[5,"wasi_get_start_function","","",null,[[["wasm_instance_t",3]],[["option",4],["box",3]]]],[0,"wat","wasmer_c_api::wasm_c_api","Wasmer-specific API to transform the WAT format into Wasm …",null,null],[5,"wat2wasm","wasmer_c_api::wasm_c_api::wat","Parses in-memory bytes as either the WAT format, or a …",null,[[["wasm_byte_vec_t",3],["wasm_byte_vec_t",3]]]],[14,"c_try","wasmer_c_api","",null,null],[11,"from","wasmer_c_api::deprecated::export","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"pointer_metadata","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"pointer_metadata","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"pointer_metadata","","",36,[[]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"pointer_metadata","","",37,[[]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"pointer_metadata","","",38,[[]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"pointer_metadata","","",39,[[]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[],["bool",15]]],[11,"pointer_metadata","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","wasmer_c_api::deprecated::global","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"pointer_metadata","","",40,[[]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"pointer_metadata","","",41,[[]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","wasmer_c_api::deprecated::import","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"pointer_metadata","","",42,[[]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[],["usize",15]]],[11,"deref","","",42,[[["usize",15]]]],[11,"deref_mut","","",42,[[["usize",15]]]],[11,"drop","","",42,[[["usize",15]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"pointer_metadata","","",43,[[]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"pointer_metadata","","",44,[[]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"pointer_metadata","","",45,[[]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"pointer_metadata","","",46,[[]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"pointer_metadata","","",47,[[]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","wasmer_c_api::deprecated::instance","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"pointer_metadata","","",48,[[]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"pointer_metadata","","",49,[[]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","wasmer_c_api::deprecated::memory","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"pointer_metadata","","",50,[[]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","wasmer_c_api::deprecated::module","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"pointer_metadata","","",51,[[]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"pointer_metadata","","",52,[[]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"from","wasmer_c_api::deprecated::table","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"pointer_metadata","","",53,[[]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[],["usize",15]]],[11,"deref","","",53,[[["usize",15]]]],[11,"deref_mut","","",53,[[["usize",15]]]],[11,"drop","","",53,[[["usize",15]]]],[11,"from","wasmer_c_api::deprecated::value","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","wasmer_c_api::deprecated","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","wasmer_c_api::error","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"pointer_metadata","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::engine","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"pointer_metadata","","",13,[[]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"pointer_metadata","","",14,[[]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"pointer_metadata","","",54,[[]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"pointer_metadata","","",55,[[]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::externals","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"pointer_metadata","","",56,[[]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"pointer_metadata","","",57,[[]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"pointer_metadata","","",58,[[]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"pointer_metadata","","",59,[[]]],[11,"vzip","","",59,[[]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"pointer_metadata","","",60,[[]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"pointer_metadata","","",15,[[]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::instance","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"pointer_metadata","","",61,[[]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[],["usize",15]]],[11,"deref","","",61,[[["usize",15]]]],[11,"deref_mut","","",61,[[["usize",15]]]],[11,"drop","","",61,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::module","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"pointer_metadata","","",62,[[]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[],["usize",15]]],[11,"deref","","",62,[[["usize",15]]]],[11,"deref_mut","","",62,[[["usize",15]]]],[11,"drop","","",62,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::store","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"pointer_metadata","","",63,[[]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[],["usize",15]]],[11,"deref","","",63,[[["usize",15]]]],[11,"deref_mut","","",63,[[["usize",15]]]],[11,"drop","","",63,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::trap","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"pointer_metadata","","",64,[[]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[],["usize",15]]],[11,"deref","","",64,[[["usize",15]]]],[11,"deref_mut","","",64,[[["usize",15]]]],[11,"drop","","",64,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::types","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"pointer_metadata","","",65,[[]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[],["usize",15]]],[11,"deref","","",65,[[["usize",15]]]],[11,"deref_mut","","",65,[[["usize",15]]]],[11,"drop","","",65,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"pointer_metadata","","",16,[[]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"pointer_metadata","","",17,[[]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"pointer_metadata","","",66,[[]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[],["usize",15]]],[11,"deref","","",66,[[["usize",15]]]],[11,"deref_mut","","",66,[[["usize",15]]]],[11,"drop","","",66,[[["usize",15]]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"pointer_metadata","","",67,[[]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[],["usize",15]]],[11,"deref","","",67,[[["usize",15]]]],[11,"deref_mut","","",67,[[["usize",15]]]],[11,"drop","","",67,[[["usize",15]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"pointer_metadata","","",68,[[]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[],["usize",15]]],[11,"deref","","",68,[[["usize",15]]]],[11,"deref_mut","","",68,[[["usize",15]]]],[11,"drop","","",68,[[["usize",15]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"pointer_metadata","","",69,[[]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[],["usize",15]]],[11,"deref","","",69,[[["usize",15]]]],[11,"deref_mut","","",69,[[["usize",15]]]],[11,"drop","","",69,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"pointer_metadata","","",19,[[]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"pointer_metadata","","",70,[[]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[],["usize",15]]],[11,"deref","","",70,[[["usize",15]]]],[11,"deref_mut","","",70,[[["usize",15]]]],[11,"drop","","",70,[[["usize",15]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"pointer_metadata","","",20,[[]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"pointer_metadata","","",71,[[]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[],["usize",15]]],[11,"deref","","",71,[[["usize",15]]]],[11,"deref_mut","","",71,[[["usize",15]]]],[11,"drop","","",71,[[["usize",15]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"pointer_metadata","","",21,[[]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"pointer_metadata","","",72,[[]]],[11,"vzip","","",72,[[]]],[11,"init","","",72,[[],["usize",15]]],[11,"deref","","",72,[[["usize",15]]]],[11,"deref_mut","","",72,[[["usize",15]]]],[11,"drop","","",72,[[["usize",15]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"pointer_metadata","","",22,[[]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"pointer_metadata","","",73,[[]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[],["usize",15]]],[11,"deref","","",73,[[["usize",15]]]],[11,"deref_mut","","",73,[[["usize",15]]]],[11,"drop","","",73,[[["usize",15]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[],["bool",15]]],[11,"pointer_metadata","","",23,[[]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"pointer_metadata","","",74,[[]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[],["usize",15]]],[11,"deref","","",74,[[["usize",15]]]],[11,"deref_mut","","",74,[[["usize",15]]]],[11,"drop","","",74,[[["usize",15]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"pointer_metadata","","",24,[[]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[],["bool",15]]],[11,"pointer_metadata","","",25,[[]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"pointer_metadata","","",75,[[]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[],["usize",15]]],[11,"deref","","",75,[[["usize",15]]]],[11,"deref_mut","","",75,[[["usize",15]]]],[11,"drop","","",75,[[["usize",15]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"pointer_metadata","","",26,[[]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"pointer_metadata","","",27,[[]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"pointer_metadata","","",28,[[]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"pointer_metadata","","",76,[[]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[],["usize",15]]],[11,"deref","","",76,[[["usize",15]]]],[11,"deref_mut","","",76,[[["usize",15]]]],[11,"drop","","",76,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::features","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"pointer_metadata","","",77,[[]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[],["usize",15]]],[11,"deref","","",77,[[["usize",15]]]],[11,"deref_mut","","",77,[[["usize",15]]]],[11,"drop","","",77,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::middlewares::metering","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"pointer_metadata","","",78,[[]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[],["usize",15]]],[11,"deref","","",78,[[["usize",15]]]],[11,"deref_mut","","",78,[[["usize",15]]]],[11,"drop","","",78,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::middlewares","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"pointer_metadata","","",79,[[]]],[11,"vzip","","",79,[[]]],[11,"init","","",79,[[],["usize",15]]],[11,"deref","","",79,[[["usize",15]]]],[11,"deref_mut","","",79,[[["usize",15]]]],[11,"drop","","",79,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::parser::operator","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"pointer_metadata","","",29,[[]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::target_lexicon","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"pointer_metadata","","",80,[[]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[],["usize",15]]],[11,"deref","","",80,[[["usize",15]]]],[11,"deref_mut","","",80,[[["usize",15]]]],[11,"drop","","",80,[[["usize",15]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"pointer_metadata","","",81,[[]]],[11,"vzip","","",81,[[]]],[11,"init","","",81,[[],["usize",15]]],[11,"deref","","",81,[[["usize",15]]]],[11,"deref_mut","","",81,[[["usize",15]]]],[11,"drop","","",81,[[["usize",15]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"pointer_metadata","","",82,[[]]],[11,"vzip","","",82,[[]]],[11,"init","","",82,[[],["usize",15]]],[11,"deref","","",82,[[["usize",15]]]],[11,"deref_mut","","",82,[[["usize",15]]]],[11,"drop","","",82,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::wasi","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"pointer_metadata","","",83,[[]]],[11,"vzip","","",83,[[]]],[11,"init","","",83,[[],["usize",15]]],[11,"deref","","",83,[[["usize",15]]]],[11,"deref_mut","","",83,[[["usize",15]]]],[11,"drop","","",83,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"pointer_metadata","","",30,[[]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::value","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"pointer_metadata","","",84,[[]]],[11,"vzip","","",84,[[]]],[11,"init","","",84,[[],["usize",15]]],[11,"deref","","",84,[[["usize",15]]]],[11,"deref_mut","","",84,[[["usize",15]]]],[11,"drop","","",84,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"pointer_metadata","","",31,[[]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"pointer_metadata","","",32,[[]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","wasmer_c_api::wasm_c_api::wasi","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"pointer_metadata","","",85,[[]]],[11,"vzip","","",85,[[]]],[11,"init","","",85,[[],["usize",15]]],[11,"deref","","",85,[[["usize",15]]]],[11,"deref_mut","","",85,[[["usize",15]]]],[11,"drop","","",85,[[["usize",15]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"pointer_metadata","","",86,[[]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[],["usize",15]]],[11,"deref","","",86,[[["usize",15]]]],[11,"deref_mut","","",86,[[["usize",15]]]],[11,"drop","","",86,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[],["bool",15]]],[11,"pointer_metadata","","",33,[[]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"drop","wasmer_c_api::wasm_c_api::types","",28,[[]]],[11,"as_ref","wasmer_c_api","",87,[[],["wasm_name_t",6]]],[11,"as_ref","wasmer_c_api::wasm_c_api::types","",28,[[],["wasm_name_t",6]]],[11,"from","wasmer_c_api::deprecated::export","",1,[[["importtype",3]]]],[11,"from","","",1,[[["importtype",3]]]],[11,"from","","",1,[[["exporttype",3]]]],[11,"from","","",1,[[["exporttype",3]]]],[11,"from","","",1,[[["externtype",4]]]],[11,"from","","",1,[[["externtype",4]]]],[11,"from","wasmer_c_api::deprecated::import","",3,[[["c_uchar",6]]]],[11,"from","wasmer_c_api::deprecated::value","",7,[[["val",6]]]],[11,"from","","",5,[[["valtype",4]]]],[11,"from","","",5,[[["valtype",4]]]],[11,"from","wasmer_c_api::wasm_c_api::externals","",60,[[["extern",4]]]],[11,"from","","",15,[[["box",3],["vec",3]]]],[11,"from","","",15,[[]]],[11,"from","wasmer_c_api::wasm_c_api::trap","",64,[[["runtimeerror",3]]]],[11,"from","wasmer_c_api::wasm_c_api::types","",16,[[["vec",3],["box",3]]]],[11,"from","","",16,[[]]],[11,"from","","",65,[[["exporttype",3]]]],[11,"from","","",65,[[["exporttype",3]]]],[11,"from","","",17,[[["externtype",4]]]],[11,"from","","",17,[[["externtype",4]]]],[11,"from","","",66,[[["externtype",4]]]],[11,"from","","",66,[[["externtype",4]]]],[11,"from","","",67,[[["str",15]]]],[11,"from","","",68,[[["frameinfo",3]]]],[11,"from","","",68,[[["frameinfo",3]]]],[11,"from","","",18,[[["vec",3],["box",3]]]],[11,"from","","",18,[[]]],[11,"from","","",19,[[["vec",3],["box",3]]]],[11,"from","","",19,[[]]],[11,"from","","",20,[[["box",3],["vec",3]]]],[11,"from","","",20,[[]]],[11,"from","","",21,[[["vec",3],["box",3]]]],[11,"from","","",21,[[]]],[11,"from","","",71,[[["importtype",3]]]],[11,"from","","",71,[[["importtype",3]]]],[11,"from","","",22,[[["box",3],["vec",3]]]],[11,"from","","",22,[[]]],[11,"from","wasmer_c_api","",88,[[["wasm_mutability_enum",4]]]],[11,"from","wasmer_c_api::wasm_c_api::types","",23,[[["mutability",4]]]],[11,"from","","",24,[[["vec",3],["box",3]]]],[11,"from","","",24,[[]]],[11,"from","","",25,[[["valtype",4]]]],[11,"from","","",26,[[["box",3],["vec",3]]]],[11,"from","","",26,[[]]],[11,"from","","",75,[[["valtype",4]]]],[11,"from","","",27,[[["wasm_byte_t",6],["vec",3]]]],[11,"from","","",27,[[]]],[11,"from","","",28,[[["string",3]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::parser::operator","",29,[[["operator",4]]]],[11,"from","wasmer_c_api::wasm_c_api::unstable::wasi","",30,[[["box",3],["vec",3]]]],[11,"from","","",30,[[]]],[11,"from","wasmer_c_api::wasm_c_api::value","",32,[[["vec",3],["wasm_val_t",3]]]],[11,"from","","",32,[[]]],[11,"from","wasmer_c_api::wasm_c_api::wasi","",33,[[["wasiversion",4]]]],[11,"clone","wasmer_c_api::deprecated::export","",34,[[],["wasmer_export_t",3]]],[11,"clone","","",35,[[],["wasmer_export_func_t",3]]],[11,"clone","","",36,[[],["wasmer_exports_t",3]]],[11,"clone","","",37,[[],["wasmer_export_descriptor_t",3]]],[11,"clone","","",39,[[],["wasmer_export_descriptors_t",3]]],[11,"clone","","",0,[[],["wasmer_import_export_value",19]]],[11,"clone","","",1,[[],["wasmer_import_export_kind",4]]],[11,"clone","wasmer_c_api::deprecated::global","",40,[[],["wasmer_global_descriptor_t",3]]],[11,"clone","","",41,[[],["wasmer_global_t",3]]],[11,"clone","wasmer_c_api::deprecated::import","",43,[[],["wasmer_import_func_t",3]]],[11,"clone","","",44,[[],["wasmer_import_descriptor_t",3]]],[11,"clone","","",45,[[],["wasmer_import_descriptors_t",3]]],[11,"clone","","",46,[[],["wasmer_import_object_iter_t",3]]],[11,"clone","wasmer_c_api::deprecated::memory","",50,[[],["wasmer_memory_t",3]]],[11,"clone","wasmer_c_api::deprecated::table","",53,[[],["wasmer_table_t",3]]],[11,"clone","wasmer_c_api::deprecated::value","",5,[[],["wasmer_value_tag",4]]],[11,"clone","","",6,[[],["wasmer_value",19]]],[11,"clone","","",7,[[],["wasmer_value_t",3]]],[11,"clone","wasmer_c_api::wasm_c_api::engine","",13,[[],["wasmer_compiler_t",4]]],[11,"clone","","",14,[[],["wasmer_engine_t",4]]],[11,"clone","wasmer_c_api::wasm_c_api::externals","",56,[[],["wasm_func_t",3]]],[11,"clone","","",57,[[],["wasm_global_t",3]]],[11,"clone","","",58,[[],["wasm_memory_t",3]]],[11,"clone","","",59,[[],["wasm_table_t",3]]],[11,"clone","","",60,[[]]],[11,"clone","","",15,[[]]],[11,"clone","wasmer_c_api::wasm_c_api::types","",65,[[],["wasm_exporttype_t",3]]],[11,"clone","","",16,[[]]],[11,"clone","","",66,[[],["wasm_externtype_t",3]]],[11,"clone","","",67,[[],["externtypeconversionerror",3]]],[11,"clone","","",68,[[],["wasm_frame_t",3]]],[11,"clone","","",18,[[]]],[11,"clone","","",69,[[],["wasm_functype_t",3]]],[11,"clone","","",19,[[]]],[11,"clone","","",70,[[],["wasm_globaltype_t",3]]],[11,"clone","","",20,[[]]],[11,"clone","","",71,[[],["wasm_importtype_t",3]]],[11,"clone","","",21,[[]]],[11,"clone","","",72,[[],["wasm_memorytype_t",3]]],[11,"clone","","",22,[[]]],[11,"clone","","",73,[[],["wasm_limits_t",3]]],[11,"clone","","",23,[[],["wasm_mutability_enum",4]]],[11,"clone","","",74,[[],["wasm_tabletype_t",3]]],[11,"clone","","",24,[[]]],[11,"clone","","",25,[[],["wasm_valkind_enum",4]]],[11,"clone","","",75,[[],["wasm_valtype_t",3]]],[11,"clone","","",26,[[]]],[11,"clone","","",27,[[]]],[11,"clone","","",28,[[],["owned_wasm_name_t",3]]],[11,"clone","wasmer_c_api::wasm_c_api::unstable::wasi","",83,[[],["wasmer_named_extern_t",3]]],[11,"clone","","",30,[[]]],[11,"clone","wasmer_c_api::wasm_c_api::value","",84,[[],["wasm_val_inner",19]]],[11,"clone","","",32,[[]]],[11,"clone","","",31,[[]]],[11,"clone","wasmer_c_api::wasm_c_api::wasi","",33,[[],["wasi_version_t",4]]],[11,"default","wasmer_c_api::wasm_c_api::engine","",13,[[]]],[11,"default","","",14,[[]]],[11,"default","","",54,[[],["wasm_config_t",3]]],[11,"default","wasmer_c_api::wasm_c_api::types","",75,[[]]],[11,"eq","wasmer_c_api::deprecated::export","",1,[[["wasmer_import_export_kind",4]],["bool",15]]],[11,"eq","wasmer_c_api::deprecated::import","",3,[[["version",4]],["bool",15]]],[11,"eq","wasmer_c_api::wasm_c_api::types","",23,[[["wasm_mutability_enum",4]],["bool",15]]],[11,"eq","","",25,[[["wasm_valkind_enum",4]],["bool",15]]],[11,"eq","wasmer_c_api::wasm_c_api::wasi","",33,[[["wasi_version_t",4]],["bool",15]]],[11,"fmt","wasmer_c_api::deprecated::import","",3,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::engine","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::externals","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::types","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::unstable::features","",77,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::unstable::middlewares","",79,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::unstable::target_lexicon","",80,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::unstable::wasi","",30,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::value","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::wasi","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::error","",12,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_c_api::wasm_c_api::types","",67,[[["formatter",3]],["result",6]]],[11,"try_from","wasmer_c_api::deprecated::export","",1,[[["u32",15]],["result",4]]],[11,"try_from","wasmer_c_api::wasm_c_api::types","",23,[[["wasm_mutability_t",6]],["result",4]]],[11,"try_from","","",25,[[["wasm_valkind_t",6]],["result",4]]],[11,"try_from","wasmer_c_api::wasm_c_api::value","",31,[[["val",6]],["result",4]]],[11,"try_from","","",31,[[["val",6]],["result",4]]],[11,"as_tuple","wasmer_c_api::deprecated::import","Converts the data into owned, Rust types",4,[[],[["utf8error",3],["result",4]]]],[11,"into_slice","wasmer_c_api::wasm_c_api::types","",16,[[],["option",4]]],[11,"into_slice","","",18,[[],["option",4]]],[11,"into_slice","","",19,[[],["option",4]]],[11,"into_slice","","",20,[[],["option",4]]],[11,"into_slice","","",21,[[],["option",4]]],[11,"into_slice","","",22,[[],["option",4]]],[11,"into_slice","","",24,[[],["option",4]]],[11,"into_slice","","",26,[[],["option",4]]]],"p":[[19,"wasmer_import_export_value"],[4,"wasmer_import_export_kind"],[3,"wasmer_import_t"],[4,"Version"],[3,"wasmer_wasi_map_dir_entry_t"],[4,"wasmer_value_tag"],[19,"wasmer_value"],[3,"wasmer_value_t"],[4,"wasmer_result_t"],[3,"wasmer_limits_t"],[3,"wasmer_limit_option_t"],[3,"wasmer_byte_array"],[3,"CApiError"],[4,"wasmer_compiler_t"],[4,"wasmer_engine_t"],[3,"wasm_extern_vec_t"],[3,"wasm_exporttype_vec_t"],[4,"wasm_externkind_enum"],[3,"wasm_frame_vec_t"],[3,"wasm_functype_vec_t"],[3,"wasm_globaltype_vec_t"],[3,"wasm_importtype_vec_t"],[3,"wasm_memorytype_vec_t"],[4,"wasm_mutability_enum"],[3,"wasm_tabletype_vec_t"],[4,"wasm_valkind_enum"],[3,"wasm_valtype_vec_t"],[3,"wasm_byte_vec_t"],[3,"owned_wasm_name_t"],[4,"wasmer_parser_operator_t"],[3,"wasmer_named_extern_vec_t"],[3,"wasm_val_t"],[3,"wasm_val_vec_t"],[4,"wasi_version_t"],[3,"wasmer_export_t"],[3,"wasmer_export_func_t"],[3,"wasmer_exports_t"],[3,"wasmer_export_descriptor_t"],[3,"NamedExportDescriptors"],[3,"wasmer_export_descriptors_t"],[3,"wasmer_global_descriptor_t"],[3,"wasmer_global_t"],[3,"wasmer_import_object_t"],[3,"wasmer_import_func_t"],[3,"wasmer_import_descriptor_t"],[3,"wasmer_import_descriptors_t"],[3,"wasmer_import_object_iter_t"],[3,"NamedImportDescriptors"],[3,"wasmer_instance_t"],[3,"wasmer_instance_context_t"],[3,"wasmer_memory_t"],[3,"wasmer_module_t"],[3,"wasmer_serialized_module_t"],[3,"wasmer_table_t"],[3,"wasm_config_t"],[3,"wasm_engine_t"],[3,"wasm_func_t"],[3,"wasm_global_t"],[3,"wasm_memory_t"],[3,"wasm_table_t"],[3,"wasm_extern_t"],[3,"wasm_instance_t"],[3,"wasm_module_t"],[3,"wasm_store_t"],[3,"wasm_trap_t"],[3,"wasm_exporttype_t"],[3,"wasm_externtype_t"],[3,"ExternTypeConversionError"],[3,"wasm_frame_t"],[3,"wasm_functype_t"],[3,"wasm_globaltype_t"],[3,"wasm_importtype_t"],[3,"wasm_memorytype_t"],[3,"wasm_limits_t"],[3,"wasm_tabletype_t"],[3,"wasm_valtype_t"],[3,"wasm_ref_t"],[3,"wasmer_features_t"],[3,"wasmer_metering_t"],[3,"wasmer_middleware_t"],[3,"wasmer_target_t"],[3,"wasmer_triple_t"],[3,"wasmer_cpu_features_t"],[3,"wasmer_named_extern_t"],[19,"wasm_val_inner"],[3,"wasi_config_t"],[3,"wasi_env_t"],[6,"wasm_name_t"],[6,"wasm_mutability_t"]]},\
"wasmer_cache":{"doc":"The <code>wasmer-cache</code> crate provides the necessary abstractions…","i":[[0,"cache","wasmer_cache","The cache module provides the common data structures used …",null,null],[8,"Cache","wasmer_cache::cache","A generic cache for storing and loading compiled wasm …",null,null],[16,"SerializeError","","The serialization error for the implementation",0,null],[16,"DeserializeError","","The deserialization error for the implementation",0,null],[10,"load","","Loads a module using the provided [<code>Store</code>] and [<code>Hash</code>].",0,[[["hash",3],["store",3]],[["result",4],["module",3]]]],[10,"store","","Store a [<code>Module</code>] into the cache with the given [<code>Hash</code>].",0,[[["module",3],["hash",3]],["result",4]]],[0,"filesystem","wasmer_cache","",null,null],[3,"FileSystemCache","wasmer_cache::filesystem","Representation of a directory that contains compiled wasm …",null,null],[12,"path","","",1,null],[12,"ext","","",1,null],[11,"new","","Construct a new <code>FileSystemCache</code> around the specified …",1,[[["into",8],["pathbuf",3]],["result",6]]],[11,"set_cache_extension","","Set the extension for this cached file.",1,[[["option",4]]]],[0,"hash","wasmer_cache","",null,null],[3,"Hash","wasmer_cache::hash","A hash used as a key when loading and storing modules in a…",null,null],[12,"0","","",2,null],[11,"new","","Creates a new instance from 32 raw bytes. Does not …",2,[[]]],[11,"generate","","Creates a new hash from a slice of bytes.",2,[[]]],[11,"to_array","","",2,[[]]],[8,"Cache","wasmer_cache","A generic cache for storing and loading compiled wasm …",null,null],[16,"SerializeError","","The serialization error for the implementation",0,null],[16,"DeserializeError","","The deserialization error for the implementation",0,null],[10,"load","","Loads a module using the provided [<code>Store</code>] and [<code>Hash</code>].",0,[[["hash",3],["store",3]],[["result",4],["module",3]]]],[10,"store","","Store a [<code>Module</code>] into the cache with the given [<code>Hash</code>].",0,[[["module",3],["hash",3]],["result",4]]],[3,"FileSystemCache","","Representation of a directory that contains compiled wasm …",null,null],[12,"path","","",1,null],[12,"ext","","",1,null],[3,"Hash","","A hash used as a key when loading and storing modules in a…",null,null],[12,"0","","",2,null],[4,"DeserializeError","","The Deserialize error can occur when loading a compiled …",null,null],[13,"Io","","An IO error",3,null],[13,"Generic","","A generic deserialization error",3,null],[13,"Incompatible","","Incompatible serialized binary",3,null],[13,"CorruptedBinary","","The provided binary is corrupted",3,null],[13,"Compiler","","The binary was valid, but we got an error when trying to …",3,null],[4,"SerializeError","","The Serialize error can occur when serializing a compiled …",null,null],[13,"Io","","An IO error",4,null],[13,"Generic","","A generic serialization error",4,null],[11,"from","wasmer_cache::filesystem","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","wasmer_cache::hash","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","wasmer_cache","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",3,[[["error",3]],["deserializeerror",4]]],[11,"from","","",4,[[["error",3]],["serializeerror",4]]],[11,"source","","",4,[[],[["option",4],["error",8]]]],[11,"source","","",3,[[],[["option",4],["error",8]]]],[11,"load","wasmer_cache::filesystem","",1,[[["hash",3],["store",3]],[["result",4],["module",3]]]],[11,"store","","",1,[[["module",3],["hash",3]],["result",4]]],[11,"clone","wasmer_cache::hash","",2,[[],["hash",3]]],[11,"eq","","",2,[[["hash",3]],["bool",15]]],[11,"ne","","",2,[[["hash",3]],["bool",15]]],[11,"to_string","","Create the hexadecimal representation of the stored hash.",2,[[],["string",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"from_str","","Create hash from hexadecimal representation",2,[[["str",15]],["result",4]]]],"p":[[8,"Cache"],[3,"FileSystemCache"],[3,"Hash"],[4,"DeserializeError"],[4,"SerializeError"]]},\
"wasmer_cli":{"doc":"The Wasmer binary lib","i":[[0,"commands","wasmer_cli","The commands available in the Wasmer binary.",null,null],[0,"cache","wasmer_cli::commands","",null,null],[4,"Cache","wasmer_cli::commands::cache","The options for the <code>wasmer cache</code> subcommand",null,null],[13,"Clean","","Clear the cache",0,null],[13,"Dir","","Display the location of the cache",0,null],[11,"execute","","Execute the cache command",0,[[],["result",6]]],[11,"clean","","",0,[[],["result",6]]],[11,"dir","","",0,[[],["result",6]]],[0,"config","wasmer_cli::commands","",null,null],[3,"Config","wasmer_cli::commands::config","The options for the <code>wasmer config</code> subcommand",null,null],[12,"prefix","","Print the installation prefix.",1,null],[12,"bindir","","Directory containing Wasmer executables.",1,null],[12,"includedir","","Directory containing Wasmer headers.",1,null],[12,"libdir","","Directory containing Wasmer libraries.",1,null],[12,"libs","","Libraries needed to link against Wasmer components.",1,null],[12,"cflags","","C compiler flags for files that include Wasmer headers.",1,null],[12,"pkg_config","","It outputs the necessary details for compiling and …",1,null],[11,"execute","","Runs logic for the <code>config</code> subcommand",1,[[],["result",6]]],[11,"inner_execute","","",1,[[],["result",6]]],[0,"inspect","wasmer_cli::commands","",null,null],[3,"Inspect","wasmer_cli::commands::inspect","The options for the <code>wasmer validate</code> subcommand",null,null],[12,"path","","File to validate as WebAssembly",2,null],[12,"store","","",2,null],[11,"execute","","Runs logic for the <code>validate</code> subcommand",2,[[],["result",6]]],[11,"inner_execute","","",2,[[],["result",6]]],[0,"run","wasmer_cli::commands","",null,null],[0,"wasi","wasmer_cli::commands::run","",null,null],[3,"Wasi","wasmer_cli::commands::run::wasi","WASI Options",null,null],[12,"pre_opened_directories","","WASI pre-opened directory",3,null],[12,"mapped_dirs","","Map a host directory to a different location for the Wasm …",3,null],[12,"env_vars","","Pass custom environment variables",3,null],[12,"allow_multiple_wasi_versions","","Allow WASI modules to import multiple versions of WASI …",3,null],[12,"deny_multiple_wasi_versions","","Require WASI modules to only import 1 version of WASI.",3,null],[11,"get_versions","","Gets the WASI version (if any) for the provided module",3,[[["module",3]],[["btreeset",3],["option",4]]]],[11,"has_wasi_imports","","Checks if a given module has any WASI imports at all.",3,[[["module",3]],["bool",15]]],[11,"execute","","Helper function for executing Wasi from the <code>Run</code> command.",3,[[["vec",3],["string",3],["module",3]],["result",6]]],[3,"Run","wasmer_cli::commands::run","The options for the <code>wasmer run</code> subcommand",null,null],[12,"disable_cache","","Disable the cache",4,null],[12,"path","","File to run",4,null],[12,"invoke","","Invoke a specified function",4,null],[12,"command_name","","The command name is a string that will override the first …",4,null],[12,"cache_key","","A prehashed string, used to speed up start times by …",4,null],[12,"store","","",4,null],[12,"wasi","","",4,null],[12,"args","","Application arguments",4,null],[11,"execute","","Execute the run command",4,[[],["result",6]]],[11,"inner_execute","","",4,[[],["result",6]]],[11,"get_module","","",4,[[],[["result",6],["module",3]]]],[11,"get_module_from_cache","","",4,[[["compilertype",4],["enginetype",4],["store",3]],[["result",6],["module",3]]]],[11,"get_cache","","Get the Compiler Filesystem cache",4,[[["enginetype",4],["compilertype",4]],[["filesystemcache",3],["result",6]]]],[11,"try_find_function","","",4,[[["instance",3],["str",15]],[["function",3],["result",6]]]],[11,"invoke_function","","",4,[[["instance",3],["str",15]],[["result",6],["box",3]]]],[0,"self_update","wasmer_cli::commands","When wasmer self-update is executed, this is what gets …",null,null],[3,"SelfUpdate","wasmer_cli::commands::self_update","The options for the <code>wasmer self-update</code> subcommand",null,null],[11,"execute","","Runs logic for the <code>self-update</code> subcommand",5,[[],["result",6]]],[11,"inner_execute","","",5,[[],["result",6]]],[0,"validate","wasmer_cli::commands","",null,null],[3,"Validate","wasmer_cli::commands::validate","The options for the <code>wasmer validate</code> subcommand",null,null],[12,"path","","File to validate as WebAssembly",6,null],[12,"store","","",6,null],[11,"execute","","Runs logic for the <code>validate</code> subcommand",6,[[],["result",6]]],[11,"inner_execute","","",6,[[],["result",6]]],[0,"wast","wasmer_cli::commands","Runs a .wast WebAssembly test suites",null,null],[3,"Wast","wasmer_cli::commands::wast","The options for the <code>wasmer wast</code> subcommand",null,null],[12,"path","","Wast file to run",7,null],[12,"store","","",7,null],[12,"fail_fast","","A flag to indicate wast stop at the first error or …",7,null],[11,"execute","","Runs logic for the <code>validate</code> subcommand",7,[[],["result",6]]],[11,"inner_execute","","",7,[[],["result",6]]],[3,"Wast","wasmer_cli::commands","The options for the <code>wasmer wast</code> subcommand",null,null],[12,"path","","Wast file to run",7,null],[12,"store","","",7,null],[12,"fail_fast","","A flag to indicate wast stop at the first error or …",7,null],[4,"Cache","","The options for the <code>wasmer cache</code> subcommand",null,null],[13,"Clean","","Clear the cache",0,null],[13,"Dir","","Display the location of the cache",0,null],[3,"Config","","The options for the <code>wasmer config</code> subcommand",null,null],[12,"prefix","","Print the installation prefix.",1,null],[12,"bindir","","Directory containing Wasmer executables.",1,null],[12,"includedir","","Directory containing Wasmer headers.",1,null],[12,"libdir","","Directory containing Wasmer libraries.",1,null],[12,"libs","","Libraries needed to link against Wasmer components.",1,null],[12,"cflags","","C compiler flags for files that include Wasmer headers.",1,null],[12,"pkg_config","","It outputs the necessary details for compiling and …",1,null],[3,"Inspect","","The options for the <code>wasmer validate</code> subcommand",null,null],[12,"path","","File to validate as WebAssembly",2,null],[12,"store","","",2,null],[3,"Run","","The options for the <code>wasmer run</code> subcommand",null,null],[12,"disable_cache","","Disable the cache",4,null],[12,"path","","File to run",4,null],[12,"invoke","","Invoke a specified function",4,null],[12,"command_name","","The command name is a string that will override the first …",4,null],[12,"cache_key","","A prehashed string, used to speed up start times by …",4,null],[12,"store","","",4,null],[12,"wasi","","",4,null],[12,"args","","Application arguments",4,null],[3,"SelfUpdate","","The options for the <code>wasmer self-update</code> subcommand",null,null],[3,"Validate","","The options for the <code>wasmer validate</code> subcommand",null,null],[12,"path","","File to validate as WebAssembly",6,null],[12,"store","","",6,null],[0,"common","wasmer_cli","Common module with common used structures across different…",null,null],[3,"WasmFeatures","wasmer_cli::common","The WebAssembly features that can be passed through the …",null,null],[12,"simd","","Enable support for the SIMD proposal.",8,null],[12,"threads","","Enable support for the threads proposal.",8,null],[12,"reference_types","","Enable support for the reference types proposal.",8,null],[12,"multi_value","","Enable support for the multi value proposal.",8,null],[12,"bulk_memory","","Enable support for the bulk memory proposal.",8,null],[12,"all","","Enable support for all pre-standard proposals.",8,null],[5,"get_cache_dir","","Get the cache dir",null,[[],["pathbuf",3]]],[0,"error","wasmer_cli","Implements <code>PretyError</code> to print pretty errors in the CLI …",null,null],[3,"PrettyError","wasmer_cli::error","A <code>PrettyError</code> for printing <code>anyhow::Error</code> nicely.",null,null],[12,"error","","",9,null],[11,"report","","Process a <code>Result</code> printing any errors and exiting the …",9,[[["error",3],["result",4]]]],[3,"Indented","","",null,null],[12,"inner","","",10,null],[12,"number","","",10,null],[12,"started","","",10,null],[12,"is_last","","",10,null],[0,"c_gen","wasmer_cli","A convenient little abstraction for building up C …",null,null],[0,"object_file_header","wasmer_cli::c_gen","Generate a header file for the object file produced by …",null,null],[17,"HELPER_FUNCTIONS","wasmer_cli::c_gen::object_file_header","Helper functions to simplify the usage of the object file …",null,null],[5,"generate_header_file","","Generate the header file that goes with the generated …",null,[[["usize",15],["symbolregistry",8],["moduleinfo",3]],["string",3]]],[6,"CIdent","wasmer_cli::c_gen","An identifier in C.",null,null],[4,"CType","","A Type in the C language.",null,null],[13,"Void","","C <code>void</code> type.",11,null],[13,"PointerTo","","A pointer to some other type.",11,null],[12,"is_const","wasmer_cli::c_gen::CType","Whether the pointer is <code>const</code>.",12,null],[12,"inner","","The type that the pointer points to.",12,null],[13,"U8","wasmer_cli::c_gen","C 8 bit unsigned integer type.",11,null],[13,"U16","","C 16 bit unsigned integer type.",11,null],[13,"U32","","C 32 bit unsigned integer type.",11,null],[13,"U64","","C 64 bit unsigned integer type.",11,null],[13,"USize","","C pointer sized unsigned integer type.",11,null],[13,"I8","","C 8 bit signed integer type.",11,null],[13,"I16","","C 16 bit signed integer type.",11,null],[13,"I32","","C 32 bit signed integer type.",11,null],[13,"I64","","C 64 bit signed integer type.",11,null],[13,"ISize","","C pointer sized signed integer type.",11,null],[13,"Function","","A function or function pointer.",11,null],[12,"arguments","wasmer_cli::c_gen::CType","The arguments the function takes.",13,null],[12,"return_value","","The return value if it has one",13,null],[13,"Array","wasmer_cli::c_gen","C constant array.",11,null],[12,"inner","wasmer_cli::c_gen::CType","The type of the array.",14,null],[13,"TypeDef","wasmer_cli::c_gen","A user defined type.",11,null],[11,"void_ptr","","Convenience function to get a mutable void pointer type.",11,[[]]],[11,"const_void_ptr","","Convenience function to get a const void pointer type.",11,[[]]],[11,"generate_c","","Generate the C source code for a type into the given …",11,[[["string",3]]]],[11,"generate_c_with_name","","Generate the C source code for a type with a nameinto the …",11,[[["string",3],["str",15]]]],[4,"CStatement","","A statement in the C programming language. This may not …",null,null],[13,"Declaration","","A declaration of some kind.",15,null],[12,"name","wasmer_cli::c_gen::CStatement","The name of the thing being declared.",16,null],[12,"is_extern","","Whether the thing being declared is <code>extern</code>.",16,null],[12,"is_const","","Whether the thing being declared is <code>const</code>.",16,null],[12,"ctype","","The type of the thing being declared.",16,null],[12,"definition","","The definition of the thing being declared.",16,null],[13,"LiteralArray","wasmer_cli::c_gen","A literal array of CStatements.",15,null],[12,"items","wasmer_cli::c_gen::CStatement","The contents of the array.",17,null],[13,"LiteralConstant","wasmer_cli::c_gen","A literal constant value, passed through directly as a …",15,null],[12,"value","wasmer_cli::c_gen::CStatement","The raw value acting as a constant.",18,null],[13,"Cast","wasmer_cli::c_gen","A C-style cast",15,null],[12,"target_type","wasmer_cli::c_gen::CStatement","The type to cast to.",19,null],[12,"expression","","The thing being cast.",19,null],[13,"TypeDef","wasmer_cli::c_gen","Typedef one type to another.",15,null],[12,"source_type","wasmer_cli::c_gen::CStatement","The type of the thing being typedef\'d.",20,null],[12,"new_name","","The new name by which this type may be called.",20,null],[11,"generate_c","wasmer_cli::c_gen","Generate C source code for the given CStatement.",15,[[["string",3]]]],[5,"generate_c","","Generate C source code from some <code>CStatements</code> into a …",null,[[],["string",3]]],[0,"cli","wasmer_cli","The logic for the Wasmer CLI tool.",null,null],[4,"WasmerCLIOptions","wasmer_cli::cli","The options for the wasmer Command Line Interface",null,null],[13,"Run","","Run a WebAssembly file. Formats accepted: wasm, wat",21,null],[13,"Cache","","Wasmer cache",21,null],[13,"Validate","","Validate a WebAssembly binary",21,null],[13,"Config","","Get various configuration information needed to compile …",21,null],[13,"SelfUpdate","","Update wasmer to the latest version",21,null],[13,"Inspect","","Inspect a WebAssembly file",21,null],[13,"Wast","","Run spec testsuite",21,null],[11,"execute","","",21,[[],["result",6]]],[5,"wasmer_main","","The main function for the Wasmer CLI tool.",null,[[]]],[0,"store","wasmer_cli","Common module with common used structures across different…",null,null],[3,"StoreOptions","wasmer_cli::store","The compiler and engine options",null,null],[12,"compiler","","",22,null],[12,"jit","","Use JIT Engine.",22,null],[12,"native","","Use Native Engine.",22,null],[12,"object_file","","Use ObjectFile Engine.",22,null],[3,"CompilerOptions","","The compiler options",null,null],[12,"singlepass","","Use Singlepass compiler.",23,null],[12,"cranelift","","Use Cranelift compiler.",23,null],[12,"llvm","","Use LLVM compiler.",23,null],[12,"enable_verifier","","Enable compiler internal verification.",23,null],[12,"llvm_debug_dir","","LLVM debug directory, where IR and object files will be …",23,null],[12,"backend","","The deprecated backend flag - Please do not use",23,null],[12,"features","","",23,null],[4,"CompilerType","","The compiler used for the store",null,null],[13,"Singlepass","","Singlepass compiler",24,null],[13,"Cranelift","","Cranelift compiler",24,null],[13,"LLVM","","LLVM compiler",24,null],[13,"Headless","","Headless compiler",24,null],[11,"enabled","","Return all enabled compilers",24,[[],[["compilertype",4],["vec",3]]]],[4,"EngineType","","The engine used for the store",null,null],[13,"JIT","","JIT Engine",25,null],[13,"Native","","Native Engine",25,null],[13,"ObjectFile","","Object File Engine",25,null],[11,"get_engine","","",22,[[],[["enginetype",4],["result",6]]]],[11,"get_engine_headless","","",22,[[],["result",6]]],[11,"get_store","","Get the store (headless engine)",22,[[],["result",6]]],[11,"get_store_for_target","","Gets the store for provided host target",22,[[["target",3]],["result",6]]],[0,"suggestions","wasmer_cli","This file provides suggestions for the user, to help them …",null,null],[5,"suggest_function_exports","wasmer_cli::suggestions","Suggest function exports for the module",null,[[["module",3],["str",15]],[["vec",3],["string",3]]]],[0,"utils","wasmer_cli","Utility functions for the WebAssembly module",null,null],[5,"wasmer_should_print_color","wasmer_cli::utils","Whether or not Wasmer should print with color",null,[[],["bool",15]]],[5,"retrieve_alias_pathbuf","","",null,[[["str",15]],["result",6]]],[5,"parse_mapdir","","Parses a mapdir from a string",null,[[["str",15]],["result",6]]],[5,"parse_envvar","","Parses an environment variable.",null,[[["str",15]],["result",6]]],[17,"VERSION","wasmer_cli","Version number of this crate.",null,null],[14,"warning","","A macro that prints a warning with nice colors",null,null],[11,"from","wasmer_cli::commands::cache","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"vzip","","",0,[[]]],[11,"from","wasmer_cli::commands::config","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"vzip","","",1,[[]]],[11,"from","wasmer_cli::commands::inspect","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"vzip","","",2,[[]]],[11,"from","wasmer_cli::commands::run::wasi","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"vzip","","",3,[[]]],[11,"from","wasmer_cli::commands::run","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"vzip","","",4,[[]]],[11,"from","wasmer_cli::commands::self_update","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"vzip","","",5,[[]]],[11,"from","wasmer_cli::commands::validate","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"vzip","","",6,[[]]],[11,"from","wasmer_cli::commands::wast","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"vzip","","",7,[[]]],[11,"from","wasmer_cli::common","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"vzip","","",8,[[]]],[11,"from","wasmer_cli::error","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"vzip","","",10,[[]]],[11,"from","wasmer_cli::c_gen","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"vzip","","",11,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"pointer_metadata","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"vzip","","",15,[[]]],[11,"from","wasmer_cli::cli","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"pointer_metadata","","",21,[[]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"vzip","","",21,[[]]],[11,"from","wasmer_cli::store","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"pointer_metadata","","",22,[[]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"pointer_metadata","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[],["bool",15]]],[11,"pointer_metadata","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[],["bool",15]]],[11,"pointer_metadata","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"vzip","","",25,[[]]],[11,"clone","wasmer_cli::commands::run::wasi","",3,[[],["wasi",3]]],[11,"clone","wasmer_cli::commands::run","",4,[[],["run",3]]],[11,"clone","wasmer_cli::common","",8,[[],["wasmfeatures",3]]],[11,"clone","wasmer_cli::c_gen","",11,[[],["ctype",4]]],[11,"clone","","",15,[[],["cstatement",4]]],[11,"clone","wasmer_cli::store","",22,[[],["storeoptions",3]]],[11,"clone","","",23,[[],["compileroptions",3]]],[11,"clone","","",25,[[],["enginetype",4]]],[11,"default","wasmer_cli::c_gen","",11,[[],["ctype",4]]],[11,"eq","wasmer_cli::store","",24,[[["compilertype",4]],["bool",15]]],[11,"eq","","",25,[[["enginetype",4]],["bool",15]]],[11,"to_string","","",24,[[],["string",3]]],[11,"to_string","","",25,[[],["string",3]]],[11,"fmt","wasmer_cli::commands::cache","",0,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::commands::config","",1,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::commands::inspect","",2,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::commands::run::wasi","",3,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::commands::run","",4,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::commands::self_update","",5,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::commands::validate","",6,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::commands::wast","",7,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::common","",8,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::error","",9,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::c_gen","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_cli::store","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"from_str","","",24,[[["str",15]],["result",6]]],[11,"write_str","wasmer_cli::error","",10,[[["str",15]],["result",6]]],[11,"into_app","wasmer_cli::commands::cache","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::commands::config","",1,[[],["app",3]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::commands::inspect","",2,[[],["app",3]]],[11,"augment_clap","","",2,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::commands::run::wasi","",3,[[],["app",3]]],[11,"augment_clap","","",3,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::commands::run","",4,[[],["app",3]]],[11,"augment_clap","","",4,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::commands::self_update","",5,[[],["app",3]]],[11,"augment_clap","","",5,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::commands::validate","",6,[[],["app",3]]],[11,"augment_clap","","",6,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::commands::wast","",7,[[],["app",3]]],[11,"augment_clap","","",7,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::common","",8,[[],["app",3]]],[11,"augment_clap","","",8,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::cli","",21,[[],["app",3]]],[11,"augment_clap","","",21,[[["app",3]],["app",3]]],[11,"into_app","wasmer_cli::store","",22,[[],["app",3]]],[11,"augment_clap","","",22,[[["app",3]],["app",3]]],[11,"into_app","","",23,[[],["app",3]]],[11,"augment_clap","","",23,[[["app",3]],["app",3]]],[11,"from_arg_matches","wasmer_cli::commands::cache","",0,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::commands::config","",1,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::commands::inspect","",2,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::commands::run::wasi","",3,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::commands::run","",4,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::commands::self_update","",5,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::commands::validate","",6,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::commands::wast","",7,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::common","",8,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::cli","",21,[[["argmatches",3]]]],[11,"from_arg_matches","wasmer_cli::store","",22,[[["argmatches",3]]]],[11,"from_arg_matches","","",23,[[["argmatches",3]]]],[11,"augment_subcommands","wasmer_cli::commands::cache","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[["option",4]],["option",4]]],[11,"augment_subcommands","wasmer_cli::cli","",21,[[["app",3]],["app",3]]],[11,"from_subcommand","","",21,[[["option",4]],["option",4]]],[11,"from_str","wasmer_cli::commands::cache","",0,[[["bool",15],["str",15]],[["result",4],["string",3]]]]],"p":[[4,"Cache"],[3,"Config"],[3,"Inspect"],[3,"Wasi"],[3,"Run"],[3,"SelfUpdate"],[3,"Validate"],[3,"Wast"],[3,"WasmFeatures"],[3,"PrettyError"],[3,"Indented"],[4,"CType"],[13,"PointerTo"],[13,"Function"],[13,"Array"],[4,"CStatement"],[13,"Declaration"],[13,"LiteralArray"],[13,"LiteralConstant"],[13,"Cast"],[13,"TypeDef"],[4,"WasmerCLIOptions"],[3,"StoreOptions"],[3,"CompilerOptions"],[4,"CompilerType"],[4,"EngineType"]]},\
"wasmer_compiler":{"doc":"The <code>wasmer-compiler</code> crate provides the necessary …","i":[[0,"lib","wasmer_compiler","",null,null],[0,"std","wasmer_compiler::lib","",null,null],[0,"borrow","wasmer_compiler::lib::std","A module for working with borrowed data.",null,null],[8,"ToOwned","wasmer_compiler::lib::std::borrow","A generalization of <code>Clone</code> to borrowed data.",null,null],[16,"Owned","","The resulting type after obtaining ownership.",0,null],[10,"to_owned","","Creates owned data from borrowed data, usually by cloning.",0,[[]]],[11,"clone_into","","Uses borrowed data to replace owned data, usually by …",0,[[]]],[4,"Cow","","A clone-on-write smart pointer.",null,null],[13,"Borrowed","","Borrowed data.",1,null],[13,"Owned","","Owned data.",1,null],[8,"Borrow","","A trait for borrowing data.",null,null],[10,"borrow","","Immutably borrows from an owned value.",2,[[]]],[8,"BorrowMut","","A trait for mutably borrowing data.",null,null],[10,"borrow_mut","","Mutably borrows from an owned value.",3,[[]]],[0,"boxed","wasmer_compiler::lib::std","A pointer type for heap allocation.",null,null],[3,"Box","wasmer_compiler::lib::std::boxed","A pointer type for heap allocation.",null,null],[12,"0","","",4,null],[12,"1","","",4,null],[0,"collections","wasmer_compiler::lib::std","Collection types.",null,null],[0,"hash_map","wasmer_compiler::lib::std::collections","A hash map implemented with quadratic probing and SIMD …",null,null],[3,"HashMap","wasmer_compiler::lib::std::collections::hash_map","A hash map implemented with quadratic probing and SIMD …",null,null],[12,"base","","",5,null],[3,"Iter","","An iterator over the entries of a <code>HashMap</code>.",null,null],[12,"base","","",6,null],[3,"IterMut","","A mutable iterator over the entries of a <code>HashMap</code>.",null,null],[12,"base","","",7,null],[3,"IntoIter","","An owning iterator over the entries of a <code>HashMap</code>.",null,null],[12,"base","","",8,null],[3,"Keys","","An iterator over the keys of a <code>HashMap</code>.",null,null],[12,"inner","","",9,null],[3,"Values","","An iterator over the values of a <code>HashMap</code>.",null,null],[12,"inner","","",10,null],[3,"Drain","","A draining iterator over the entries of a <code>HashMap</code>.",null,null],[12,"base","","",11,null],[3,"DrainFilter","","A draining, filtering iterator over the entries of a …",null,null],[12,"base","","",12,null],[3,"ValuesMut","","A mutable iterator over the values of a <code>HashMap</code>.",null,null],[12,"inner","","",13,null],[3,"IntoKeys","","An owning iterator over the keys of a <code>HashMap</code>.",null,null],[12,"inner","","",14,null],[3,"IntoValues","","An owning iterator over the values of a <code>HashMap</code>.",null,null],[12,"inner","","",15,null],[3,"RawEntryBuilderMut","","A builder for computing where in a HashMap a key-value …",null,null],[12,"map","","",16,null],[4,"RawEntryMut","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",17,null],[13,"Vacant","","A vacant entry.",17,null],[3,"RawOccupiedEntryMut","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[12,"base","","",18,null],[3,"RawVacantEntryMut","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[12,"base","","",19,null],[3,"RawEntryBuilder","","A builder for computing where in a HashMap a key-value …",null,null],[12,"map","","",20,null],[4,"Entry","","A view into a single entry in a map, which may either be …",null,null],[13,"Occupied","","An occupied entry.",21,null],[13,"Vacant","","A vacant entry.",21,null],[3,"OccupiedEntry","","A view into an occupied entry in a <code>HashMap</code>. It is part of …",null,null],[12,"base","","",22,null],[3,"VacantEntry","","A view into a vacant entry in a <code>HashMap</code>. It is part of …",null,null],[12,"base","","",23,null],[3,"RandomState","","<code>RandomState</code> is the default state for [<code>HashMap</code>] types.",null,null],[12,"k0","","",24,null],[12,"k1","","",24,null],[3,"DefaultHasher","","The default [<code>Hasher</code>] used by [<code>RandomState</code>].",null,null],[12,"0","","",25,null],[0,"hash_set","wasmer_compiler::lib::std::collections","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[3,"HashSet","wasmer_compiler::lib::std::collections::hash_set","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[12,"base","","",26,null],[3,"Iter","","An iterator over the items of a <code>HashSet</code>.",null,null],[12,"base","","",27,null],[3,"IntoIter","","An owning iterator over the items of a <code>HashSet</code>.",null,null],[12,"base","","",28,null],[3,"Drain","","A draining iterator over the items of a <code>HashSet</code>.",null,null],[12,"base","","",29,null],[3,"DrainFilter","","A draining, filtering iterator over the items of a <code>HashSet</code>…",null,null],[12,"base","","",30,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of …",null,null],[12,"iter","","",31,null],[12,"other","","",31,null],[3,"Difference","","A lazy iterator producing elements in the difference of …",null,null],[12,"iter","","",32,null],[12,"other","","",32,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric …",null,null],[12,"iter","","",33,null],[3,"Union","","A lazy iterator producing elements in the union of <code>HashSet</code>…",null,null],[12,"iter","","",34,null],[4,"Bound","wasmer_compiler::lib::std::collections","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",35,null],[13,"Excluded","","An exclusive bound.",35,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in …",35,null],[0,"binary_heap","","A priority queue implemented with a binary heap.",null,null],[3,"BinaryHeap","wasmer_compiler::lib::std::collections::binary_heap","A priority queue implemented with a binary heap.",null,null],[12,"data","","",36,null],[3,"PeekMut","","Structure wrapping a mutable reference to the greatest …",null,null],[12,"heap","","",37,null],[12,"sift","","",37,null],[3,"Iter","","An iterator over the elements of a <code>BinaryHeap</code>.",null,null],[12,"iter","","",38,null],[3,"IntoIter","","An owning iterator over the elements of a <code>BinaryHeap</code>.",null,null],[12,"iter","","",39,null],[3,"IntoIterSorted","","",null,null],[12,"inner","","",40,null],[3,"Drain","","A draining iterator over the elements of a <code>BinaryHeap</code>.",null,null],[12,"iter","","",41,null],[3,"DrainSorted","","A draining iterator over the elements of a <code>BinaryHeap</code>.",null,null],[12,"inner","","",42,null],[0,"btree_map","wasmer_compiler::lib::std::collections","A map based on a B-Tree.",null,null],[4,"Entry","wasmer_compiler::lib::std::collections::btree_map","A view into a single entry in a map, which may either be …",null,null],[13,"Vacant","","A vacant entry.",43,null],[13,"Occupied","","An occupied entry.",43,null],[3,"OccupiedEntry","","A view into an occupied entry in a <code>BTreeMap</code>. It is part …",null,null],[12,"handle","","",44,null],[12,"dormant_map","","",44,null],[12,"_marker","","",44,null],[3,"VacantEntry","","A view into a vacant entry in a <code>BTreeMap</code>. It is part of …",null,null],[12,"key","","",45,null],[12,"handle","","",45,null],[12,"dormant_map","","",45,null],[12,"_marker","","",45,null],[3,"BTreeMap","","A map based on a B-Tree.",null,null],[12,"root","","",46,null],[12,"length","","",46,null],[3,"Iter","","An iterator over the entries of a <code>BTreeMap</code>.",null,null],[12,"range","","",47,null],[12,"length","","",47,null],[3,"IntoIter","","An owning iterator over the entries of a <code>BTreeMap</code>.",null,null],[12,"front","","",48,null],[12,"back","","",48,null],[12,"length","","",48,null],[3,"Keys","","An iterator over the keys of a <code>BTreeMap</code>.",null,null],[12,"inner","","",49,null],[3,"Values","","An iterator over the values of a <code>BTreeMap</code>.",null,null],[12,"inner","","",50,null],[3,"ValuesMut","","A mutable iterator over the values of a <code>BTreeMap</code>.",null,null],[12,"inner","","",51,null],[3,"IntoKeys","","An owning iterator over the keys of a <code>BTreeMap</code>.",null,null],[12,"inner","","",52,null],[3,"IntoValues","","An owning iterator over the values of a <code>BTreeMap</code>.",null,null],[12,"inner","","",53,null],[3,"Range","","An iterator over a sub-range of entries in a <code>BTreeMap</code>.",null,null],[12,"front","","",54,null],[12,"back","","",54,null],[3,"RangeMut","","A mutable iterator over a sub-range of entries in a …",null,null],[12,"front","","",55,null],[12,"back","","",55,null],[12,"_marker","","",55,null],[3,"DrainFilter","","An iterator produced by calling <code>drain_filter</code> on BTreeMap.",null,null],[12,"pred","","",56,null],[12,"inner","","",56,null],[3,"IterMut","","A mutable iterator over the entries of a <code>BTreeMap</code>.",null,null],[12,"range","","",57,null],[12,"length","","",57,null],[0,"btree_set","wasmer_compiler::lib::std::collections","A set based on a B-Tree.",null,null],[3,"Iter","wasmer_compiler::lib::std::collections::btree_set","An iterator over the items of a <code>BTreeSet</code>.",null,null],[12,"iter","","",58,null],[3,"Difference","","A lazy iterator producing elements in the difference of …",null,null],[12,"inner","","",59,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric …",null,null],[12,"0","","",60,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of …",null,null],[12,"inner","","",61,null],[3,"Union","","A lazy iterator producing elements in the union of …",null,null],[12,"0","","",62,null],[3,"DrainFilter","","An iterator produced by calling <code>drain_filter</code> on BTreeSet.",null,null],[12,"pred","","",63,null],[12,"inner","","",63,null],[3,"BTreeSet","","A set based on a B-Tree.",null,null],[12,"map","","",64,null],[3,"IntoIter","","An owning iterator over the items of a <code>BTreeSet</code>.",null,null],[12,"iter","","",65,null],[3,"Range","","An iterator over a sub-range of items in a <code>BTreeSet</code>.",null,null],[12,"iter","","",66,null],[0,"linked_list","wasmer_compiler::lib::std::collections","A doubly-linked list with owned nodes.",null,null],[3,"LinkedList","wasmer_compiler::lib::std::collections::linked_list","A doubly-linked list with owned nodes.",null,null],[12,"head","","",67,null],[12,"tail","","",67,null],[12,"len","","",67,null],[12,"marker","","",67,null],[3,"Iter","","An iterator over the elements of a <code>LinkedList</code>.",null,null],[12,"head","","",68,null],[12,"tail","","",68,null],[12,"len","","",68,null],[12,"marker","","",68,null],[3,"IterMut","","A mutable iterator over the elements of a <code>LinkedList</code>.",null,null],[12,"list","","",69,null],[12,"head","","",69,null],[12,"tail","","",69,null],[12,"len","","",69,null],[3,"IntoIter","","An owning iterator over the elements of a <code>LinkedList</code>.",null,null],[12,"list","","",70,null],[3,"Cursor","","A cursor over a <code>LinkedList</code>.",null,null],[12,"index","","",71,null],[12,"current","","",71,null],[12,"list","","",71,null],[3,"CursorMut","","A cursor over a <code>LinkedList</code> with editing operations.",null,null],[12,"index","","",72,null],[12,"current","","",72,null],[12,"list","","",72,null],[3,"DrainFilter","","An iterator produced by calling <code>drain_filter</code> on …",null,null],[12,"list","","",73,null],[12,"it","","",73,null],[12,"pred","","",73,null],[12,"idx","","",73,null],[12,"old_len","","",73,null],[0,"vec_deque","wasmer_compiler::lib::std::collections","A double-ended queue implemented with a growable ring …",null,null],[3,"VecDeque","wasmer_compiler::lib::std::collections::vec_deque","A double-ended queue implemented with a growable ring …",null,null],[12,"tail","","",74,null],[12,"head","","",74,null],[12,"buf","","",74,null],[3,"Drain","","A draining iterator over the elements of a <code>VecDeque</code>.",null,null],[12,"after_tail","","",75,null],[12,"after_head","","",75,null],[12,"iter","","",75,null],[12,"deque","","",75,null],[3,"IterMut","","A mutable iterator over the elements of a <code>VecDeque</code>.",null,null],[12,"ring","","",76,null],[12,"tail","","",76,null],[12,"head","","",76,null],[12,"phantom","","",76,null],[3,"IntoIter","","An owning iterator over the elements of a <code>VecDeque</code>.",null,null],[12,"inner","","",77,null],[3,"Iter","","An iterator over the elements of a <code>VecDeque</code>.",null,null],[12,"ring","","",78,null],[12,"tail","","",78,null],[12,"head","","",78,null],[3,"BTreeMap","wasmer_compiler::lib::std::collections","A map based on a B-Tree.",null,null],[12,"root","","",46,null],[12,"length","","",46,null],[3,"BTreeSet","","A set based on a B-Tree.",null,null],[12,"map","","",64,null],[3,"BinaryHeap","","A priority queue implemented with a binary heap.",null,null],[12,"data","","",36,null],[3,"LinkedList","","A doubly-linked list with owned nodes.",null,null],[12,"head","","",67,null],[12,"tail","","",67,null],[12,"len","","",67,null],[12,"marker","","",67,null],[3,"VecDeque","","A double-ended queue implemented with a growable ring …",null,null],[12,"tail","","",74,null],[12,"head","","",74,null],[12,"buf","","",74,null],[3,"HashMap","","A hash map implemented with quadratic probing and SIMD …",null,null],[12,"base","","",5,null],[3,"HashSet","","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.",null,null],[12,"base","","",26,null],[4,"TryReserveError","","The error type for <code>try_reserve</code> methods.",null,null],[13,"CapacityOverflow","","Error due to the computed capacity exceeding the …",79,null],[13,"AllocError","","The memory allocator returned an error",79,null],[12,"layout","wasmer_compiler::lib::std::collections::TryReserveError","The layout of allocation request that failed",80,null],[0,"fmt","wasmer_compiler::lib::std","Utilities for formatting and printing <code>String</code>s.",null,null],[5,"format","wasmer_compiler::lib::std::fmt","The <code>format</code> function takes an [<code>Arguments</code>] struct and …",null,[[["arguments",3]],["string",3]]],[4,"Alignment","","Possible alignments returned by <code>Formatter::align</code>",null,null],[13,"Left","","Indication that contents should be left-aligned.",81,null],[13,"Right","","Indication that contents should be right-aligned.",81,null],[13,"Center","","Indication that contents should be center-aligned.",81,null],[3,"Error","","The error type which is returned from formatting a …",null,null],[5,"write","","The <code>write</code> function takes an output stream, and an …",null,[[["arguments",3],["write",8]],[["error",3],["result",4]]]],[3,"Arguments","","This structure represents a safely precompiled version of …",null,null],[12,"pieces","","",82,null],[12,"fmt","","",82,null],[12,"args","","",82,null],[8,"Binary","","<code>b</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",83,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Octal","","<code>o</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",84,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Debug","","<code>?</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",85,[[["formatter",3]],[["error",3],["result",4]]]],[14,"Debug","","Derive macro generating an impl of the trait <code>Debug</code>.",null,null],[8,"Display","","Format trait for an empty format, <code>{}</code>.",null,null],[10,"fmt","","Formats the value using the given formatter.",86,[[["formatter",3]],[["error",3],["result",4]]]],[3,"DebugList","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"inner","","",87,null],[3,"DebugMap","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"fmt","","",88,null],[12,"result","","",88,null],[12,"has_fields","","",88,null],[12,"has_key","","",88,null],[12,"state","","",88,null],[3,"DebugSet","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"inner","","",89,null],[3,"DebugStruct","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"fmt","","",90,null],[12,"result","","",90,null],[12,"has_fields","","",90,null],[3,"DebugTuple","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"fmt","","",91,null],[12,"result","","",91,null],[12,"fields","","",91,null],[12,"empty_name","","",91,null],[3,"Formatter","","Configuration for formatting.",null,null],[12,"flags","","",92,null],[12,"fill","","",92,null],[12,"align","","",92,null],[12,"width","","",92,null],[12,"precision","","",92,null],[12,"buf","","",92,null],[6,"Result","","The type returned by formatter methods.",null,null],[8,"Write","","A trait for writing or formatting into Unicode-accepting …",null,null],[10,"write_str","","Writes a string slice into this writer, returning whether …",93,[[["str",15]],[["error",3],["result",4]]]],[11,"write_char","","Writes a [<code>char</code>] into this writer, returning whether the …",93,[[["char",15]],[["error",3],["result",4]]]],[11,"write_fmt","","Glue for usage of the [<code>write!</code>] macro with implementors of …",93,[[["arguments",3]],[["error",3],["result",4]]]],[8,"LowerExp","","<code>e</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",94,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperExp","","<code>E</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",95,[[["formatter",3]],[["error",3],["result",4]]]],[8,"LowerHex","","<code>x</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",96,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Pointer","","<code>p</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",97,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperHex","","<code>X</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",98,[[["formatter",3]],[["error",3],["result",4]]]],[0,"str","wasmer_compiler::lib::std","Unicode string slices.",null,null],[5,"from_boxed_utf8_unchecked","wasmer_compiler::lib::std::str","Converts a boxed slice of bytes to a boxed string slice …",null,[[["box",3],["global",3]],[["global",3],["box",3],["str",15]]]],[0,"pattern","","The string Pattern API.",null,null],[8,"Pattern","wasmer_compiler::lib::std::str::pattern","A string pattern.",null,null],[16,"Searcher","","Associated searcher for this pattern",99,null],[10,"into_searcher","","Constructs the associated searcher from <code>self</code> and the …",99,[[["str",15]]]],[11,"is_contained_in","","Checks whether the pattern matches anywhere in the …",99,[[["str",15]],["bool",15]]],[11,"is_prefix_of","","Checks whether the pattern matches at the front of the …",99,[[["str",15]],["bool",15]]],[11,"is_suffix_of","","Checks whether the pattern matches at the back of the …",99,[[["str",15]],["bool",15]]],[11,"strip_prefix_of","","Removes the pattern from the front of haystack, if it …",99,[[["str",15]],[["str",15],["option",4]]]],[11,"strip_suffix_of","","Removes the pattern from the back of haystack, if it …",99,[[["str",15]],[["str",15],["option",4]]]],[4,"SearchStep","","Result of calling [<code>Searcher::next()</code>] or […",null,null],[13,"Match","","Expresses that a match of the pattern has been found at …",100,null],[13,"Reject","","Expresses that <code>haystack[a..b]</code> has been rejected as a …",100,null],[13,"Done","","Expresses that every byte of the haystack has been …",100,null],[8,"Searcher","","A searcher for a string pattern.",null,null],[10,"haystack","","Getter for the underlying string to be searched in",101,[[],["str",15]]],[10,"next","","Performs the next search step starting from the front.",101,[[],["searchstep",4]]],[11,"next_match","","Finds the next [<code>Match</code>][SearchStep::Match] result. See […",101,[[],["option",4]]],[11,"next_reject","","Finds the next [<code>Reject</code>][SearchStep::Reject] result. See […",101,[[],["option",4]]],[8,"ReverseSearcher","","A reverse searcher for a string pattern.",null,null],[10,"next_back","","Performs the next search step starting from the back.",102,[[],["searchstep",4]]],[11,"next_match_back","","Finds the next [<code>Match</code>][SearchStep::Match] result. See […",102,[[],["option",4]]],[11,"next_reject_back","","Finds the next [<code>Reject</code>][SearchStep::Reject] result. See […",102,[[],["option",4]]],[8,"DoubleEndedSearcher","","A marker trait to express that a [<code>ReverseSearcher</code>] can be …",null,null],[3,"CharSearcher","","Associated type for <code><char as Pattern<\'a>>::Searcher</code>.",null,null],[12,"haystack","","",103,null],[12,"finger","","<code>finger</code> is the current byte index of the forward search. …",103,null],[12,"finger_back","","<code>finger_back</code> is the current byte index of the reverse …",103,null],[12,"needle","","The character being searched for",103,null],[12,"utf8_size","","The number of bytes <code>needle</code> takes up when encoded in utf8.",103,null],[12,"utf8_encoded","","A utf8 encoded copy of the <code>needle</code>",103,null],[3,"CharSliceSearcher","","Associated type for <code><&[char] as Pattern<\'a>>::Searcher</code>.",null,null],[12,"0","","",104,null],[3,"CharPredicateSearcher","","Associated type for <code><F as Pattern<\'a>>::Searcher</code>.",null,null],[12,"0","","",105,null],[3,"StrSearcher","","Associated type for <code><&str as Pattern<\'a>>::Searcher</code>.",null,null],[12,"haystack","","",106,null],[12,"needle","","",106,null],[12,"searcher","","",106,null],[3,"EncodeUtf16","wasmer_compiler::lib::std::str","An iterator of [<code>u16</code>] over the string encoded as UTF-16.",null,null],[12,"chars","","",107,null],[12,"extra","","",107,null],[3,"SplitAsciiWhitespace","","An iterator over the non-ASCII-whitespace substrings of a …",null,null],[12,"inner","","",108,null],[3,"SplitWhitespace","","An iterator over the non-whitespace substrings of a …",null,null],[12,"inner","","",109,null],[5,"from_utf8","","Converts a slice of bytes to a string slice.",null,[[],[["utf8error",3],["result",4],["str",15]]]],[5,"from_utf8_mut","","Converts a mutable slice of bytes to a mutable string …",null,[[],[["result",4],["str",15],["utf8error",3]]]],[3,"Bytes","","An iterator over the bytes of a string slice.",null,null],[12,"0","","",110,null],[3,"CharIndices","","An iterator over the <code>char</code>s of a string slice, and their …",null,null],[12,"front_offset","","",111,null],[12,"iter","","",111,null],[3,"Chars","","An iterator over the <code>char</code>s of a string slice.",null,null],[12,"iter","","",112,null],[5,"from_utf8_unchecked","","Converts a slice of bytes to a string slice without …",null,[[],["str",15]]],[5,"from_utf8_unchecked_mut","","Converts a slice of bytes to a string slice without …",null,[[],["str",15]]],[3,"ParseBoolError","","An error returned when parsing a <code>bool</code> using <code>from_str</code> fails",null,null],[12,"_priv","","",113,null],[3,"EscapeDebug","","The return type of [<code>str::escape_debug</code>].",null,null],[12,"inner","","",114,null],[3,"EscapeDefault","","The return type of [<code>str::escape_default</code>].",null,null],[12,"inner","","",115,null],[3,"EscapeUnicode","","The return type of [<code>str::escape_unicode</code>].",null,null],[12,"inner","","",116,null],[8,"FromStr","","Parse a value from a string",null,null],[16,"Err","","The associated error which can be returned from parsing.",117,null],[10,"from_str","","Parses a string <code>s</code> to return a value of this type.",117,[[["str",15]],["result",4]]],[3,"Utf8Error","","Errors which can occur when attempting to interpret a …",null,null],[12,"valid_up_to","","",118,null],[12,"error_len","","",118,null],[3,"Lines","","An iterator over the lines of a string, as string slices.",null,null],[12,"0","","",119,null],[3,"LinesAny","","Created with the method <code>lines_any</code>.",null,null],[12,"0","","",120,null],[3,"MatchIndices","","Created with the method <code>match_indices</code>.",null,null],[12,"0","","",121,null],[3,"RMatchIndices","","Created with the method <code>rmatch_indices</code>.",null,null],[12,"0","","",122,null],[3,"Matches","","Created with the method <code>matches</code>.",null,null],[12,"0","","",123,null],[3,"RMatches","","Created with the method <code>rmatches</code>.",null,null],[12,"0","","",124,null],[3,"RSplit","","Created with the method <code>rsplit</code>.",null,null],[12,"0","","",125,null],[3,"Split","","Created with the method <code>split</code>.",null,null],[12,"0","","",126,null],[3,"RSplitN","","Created with the method <code>rsplitn</code>.",null,null],[12,"0","","",127,null],[3,"SplitN","","Created with the method <code>splitn</code>.",null,null],[12,"0","","",128,null],[3,"RSplitTerminator","","Created with the method <code>rsplit_terminator</code>.",null,null],[12,"0","","",129,null],[3,"SplitTerminator","","Created with the method <code>split_terminator</code>.",null,null],[12,"0","","",130,null],[0,"string","wasmer_compiler::lib::std","A UTF-8–encoded, growable string.",null,null],[3,"String","wasmer_compiler::lib::std::string","A UTF-8–encoded, growable string.",null,null],[12,"vec","","",131,null],[3,"FromUtf8Error","","A possible error value when converting a <code>String</code> from a …",null,null],[12,"bytes","","",132,null],[12,"error","","",132,null],[3,"FromUtf16Error","","A possible error value when converting a <code>String</code> from a …",null,null],[12,"0","","",133,null],[6,"ParseError","","A type alias for <code>Infallible</code>.",null,null],[8,"ToString","","A trait for converting a value to a <code>String</code>.",null,null],[10,"to_string","","Converts the given value to a <code>String</code>.",134,[[],["string",3]]],[3,"Drain","","A draining iterator for <code>String</code>.",null,null],[12,"string","","Will be used as &\'a mut String in the destructor",135,null],[12,"start","","Start of part to remove",135,null],[12,"end","","End of part to remove",135,null],[12,"iter","","Current remaining range to remove",135,null],[0,"sync","wasmer_compiler::lib::std","Useful synchronization primitives.",null,null],[0,"mpsc","wasmer_compiler::lib::std::sync","Multi-producer, single-consumer FIFO queue communication …",null,null],[3,"Receiver","wasmer_compiler::lib::std::sync::mpsc","The receiving half of Rust\'s [<code>channel</code>] (or [<code>sync_channel</code>]…",null,null],[12,"inner","","",136,null],[3,"Iter","","An iterator over messages on a [<code>Receiver</code>], created by <code>iter</code>…",null,null],[12,"rx","","",137,null],[3,"TryIter","","An iterator that attempts to yield all pending values for …",null,null],[12,"rx","","",138,null],[3,"IntoIter","","An owning iterator over messages on a [<code>Receiver</code>], created …",null,null],[12,"rx","","",139,null],[3,"Sender","","The sending-half of Rust\'s asynchronous [<code>channel</code>] type. …",null,null],[12,"inner","","",140,null],[3,"SyncSender","","The sending-half of Rust\'s synchronous [<code>sync_channel</code>] …",null,null],[12,"inner","","",141,null],[3,"SendError","","An error returned from the [<code>Sender::send</code>] or […",null,null],[12,"0","","",142,null],[3,"RecvError","","An error returned from the <code>recv</code> function on a [<code>Receiver</code>].",null,null],[4,"TryRecvError","","This enumeration is the list of the possible reasons that …",null,null],[13,"Empty","","This <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …",143,null],[13,"Disconnected","","The <strong>channel</strong>\'s sending half has become disconnected, and …",143,null],[4,"RecvTimeoutError","","This enumeration is the list of possible errors that made …",null,null],[13,"Timeout","","This <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …",144,null],[13,"Disconnected","","The <strong>channel</strong>\'s sending half has become disconnected, and …",144,null],[4,"TrySendError","","This enumeration is the list of the possible error …",null,null],[13,"Full","","The data could not be sent on the [<code>sync_channel</code>] because …",145,null],[13,"Disconnected","","This [<code>sync_channel</code>]\'s receiving half has disconnected, so …",145,null],[5,"channel","","Creates a new asynchronous channel, returning the …",null,[[]]],[5,"sync_channel","","Creates a new synchronous, bounded channel. All data sent …",null,[[["usize",15]]]],[3,"Arc","wasmer_compiler::lib::std::sync","A thread-safe reference-counting pointer. \'Arc\' stands …",null,null],[12,"ptr","","",146,null],[12,"phantom","","",146,null],[3,"Weak","","<code>Weak</code> is a version of [<code>Arc</code>] that holds a non-owning …",null,null],[12,"ptr","","",147,null],[0,"atomic","","Atomic types",null,null],[3,"AtomicBool","wasmer_compiler::lib::std::sync::atomic","A boolean type which can be safely shared between threads.",null,null],[12,"v","","",148,null],[3,"AtomicPtr","","A raw pointer type which can be safely shared between …",null,null],[12,"p","","",149,null],[4,"Ordering","","Atomic memory orderings",null,null],[13,"Relaxed","","No ordering constraints, only atomic operations.",150,null],[13,"Release","","When coupled with a store, all previous operations become …",150,null],[13,"Acquire","","When coupled with a load, if the loaded value was written …",150,null],[13,"AcqRel","","Has the effects of both [<code>Acquire</code>] and [<code>Release</code>] together: …",150,null],[13,"SeqCst","","Like [<code>Acquire</code>]/[<code>Release</code>]/[<code>AcqRel</code>] (for load, store, and …",150,null],[17,"ATOMIC_BOOL_INIT","","An [<code>AtomicBool</code>] initialized to <code>false</code>.",null,null],[3,"AtomicI8","","An integer type which can be safely shared between …",null,null],[12,"v","","",151,null],[17,"ATOMIC_I8_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicU8","","An integer type which can be safely shared between …",null,null],[12,"v","","",152,null],[17,"ATOMIC_U8_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicI16","","An integer type which can be safely shared between …",null,null],[12,"v","","",153,null],[17,"ATOMIC_I16_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicU16","","An integer type which can be safely shared between …",null,null],[12,"v","","",154,null],[17,"ATOMIC_U16_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicI32","","An integer type which can be safely shared between …",null,null],[12,"v","","",155,null],[17,"ATOMIC_I32_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicU32","","An integer type which can be safely shared between …",null,null],[12,"v","","",156,null],[17,"ATOMIC_U32_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicI64","","An integer type which can be safely shared between …",null,null],[12,"v","","",157,null],[17,"ATOMIC_I64_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicU64","","An integer type which can be safely shared between …",null,null],[12,"v","","",158,null],[17,"ATOMIC_U64_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicIsize","","An integer type which can be safely shared between …",null,null],[12,"v","","",159,null],[17,"ATOMIC_ISIZE_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicUsize","","An integer type which can be safely shared between …",null,null],[12,"v","","",160,null],[17,"ATOMIC_USIZE_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[5,"fence","","An atomic fence.",null,[[["ordering",4]]]],[5,"compiler_fence","","A compiler memory fence.",null,[[["ordering",4]]]],[5,"spin_loop_hint","","Signals the processor that it is inside a busy-wait …",null,[[]]],[3,"Barrier","wasmer_compiler::lib::std::sync","A barrier enables multiple threads to synchronize the …",null,null],[12,"lock","","",161,null],[12,"cvar","","",161,null],[12,"num_threads","","",161,null],[3,"BarrierWaitResult","","A <code>BarrierWaitResult</code> is returned by [<code>Barrier::wait()</code>] when …",null,null],[12,"0","","",162,null],[3,"Condvar","","A Condition Variable",null,null],[12,"inner","","",163,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition …",null,null],[12,"0","","",164,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared …",null,null],[12,"inner","","",165,null],[12,"poison","","",165,null],[12,"data","","",165,null],[3,"MutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. …",null,null],[12,"lock","","",166,null],[12,"poison","","",166,null],[3,"Once","","A synchronization primitive which can be used to run a …",null,null],[12,"state_and_queue","","",167,null],[12,"_marker","","",167,null],[3,"OnceState","","State yielded to [<code>Once::call_once_force()</code>]’s closure …",null,null],[12,"poisoned","","",168,null],[12,"set_state_on_drop_to","","",168,null],[17,"ONCE_INIT","","Initialization value for static [<code>Once</code>] values.",null,null],[3,"RwLock","","A reader-writer lock",null,null],[12,"inner","","",169,null],[12,"poison","","",169,null],[12,"data","","",169,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of …",null,null],[12,"lock","","",170,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access …",null,null],[12,"lock","","",171,null],[12,"poison","","",171,null],[6,"LockResult","","A type alias for the result of a lock method which can be …",null,null],[3,"PoisonError","","A type of error which can be returned whenever a lock is …",null,null],[12,"guard","","",172,null],[4,"TryLockError","","An enumeration of possible errors associated with a […",null,null],[13,"Poisoned","","The lock could not be acquired because another thread …",173,null],[13,"WouldBlock","","The lock could not be acquired at this time because the …",173,null],[6,"TryLockResult","","A type alias for the result of a nonblocking locking …",null,null],[0,"vec","wasmer_compiler::lib::std","A contiguous growable array type with heap-allocated …",null,null],[3,"Vec","wasmer_compiler::lib::std::vec","A contiguous growable array type, written <code>Vec<T></code> but …",null,null],[12,"buf","","",174,null],[12,"len","","",174,null],[3,"DrainFilter","","An iterator which uses a closure to determine if an …",null,null],[12,"vec","","",175,null],[12,"idx","","The index of the item that will be inspected by the next …",175,null],[12,"del","","The number of items that have been drained (removed) thus …",175,null],[12,"old_len","","The original length of <code>vec</code> prior to draining.",175,null],[12,"pred","","The filter test predicate.",175,null],[12,"panic_flag","","A flag that indicates a panic has occurred in the filter …",175,null],[3,"Splice","","A splicing iterator for <code>Vec</code>.",null,null],[12,"drain","","",176,null],[12,"replace_with","","",176,null],[3,"Drain","","A draining iterator for <code>Vec<T></code>.",null,null],[12,"tail_start","","Index of tail to preserve",177,null],[12,"tail_len","","Length of tail",177,null],[12,"iter","","Current remaining range to remove",177,null],[12,"vec","","",177,null],[3,"IntoIter","","An iterator that moves out of a vector.",null,null],[12,"buf","","",178,null],[12,"phantom","","",178,null],[12,"cap","","",178,null],[12,"alloc","","",178,null],[12,"ptr","","",178,null],[12,"end","","",178,null],[14,"vec","wasmer_compiler::lib::std","Creates a <code>Vec</code> containing the arguments.",null,null],[0,"address_map","wasmer_compiler","Data structures to provide transformation of the source",null,null],[3,"InstructionAddressMap","wasmer_compiler::address_map","Single source location to generated address mapping.",null,null],[12,"srcloc","","Original source location.",179,null],[12,"code_offset","","Generated instructions offset.",179,null],[12,"code_len","","Generated instructions length.",179,null],[3,"ArchivedInstructionAddressMap","","",null,null],[12,"srcloc","","",180,null],[12,"code_offset","","",180,null],[12,"code_len","","",180,null],[3,"InstructionAddressMapResolver","","",null,null],[12,"srcloc","","",181,null],[12,"code_offset","","",181,null],[12,"code_len","","",181,null],[3,"FunctionAddressMap","","Function and its instructions addresses mappings.",null,null],[12,"instructions","","Instructions maps. The array is sorted by the …",182,null],[12,"start_srcloc","","Function start source location (normally declaration).",182,null],[12,"end_srcloc","","Function end source location.",182,null],[12,"body_offset","","Generated function body offset if applicable, otherwise 0.",182,null],[12,"body_len","","Generated function body length.",182,null],[3,"ArchivedFunctionAddressMap","","",null,null],[12,"instructions","","",183,null],[12,"start_srcloc","","",183,null],[12,"end_srcloc","","",183,null],[12,"body_offset","","",183,null],[12,"body_len","","",183,null],[3,"FunctionAddressMapResolver","","",null,null],[12,"instructions","","",184,null],[12,"start_srcloc","","",184,null],[12,"end_srcloc","","",184,null],[12,"body_offset","","",184,null],[12,"body_len","","",184,null],[0,"compiler","wasmer_compiler","This module mainly outputs the <code>Compiler</code> trait that custom …",null,null],[8,"CompilerConfig","wasmer_compiler::compiler","The compiler configuration options.",null,null],[11,"enable_pic","","Enable Position Independent Code (PIC).",185,[[]]],[11,"enable_verifier","","Enable compiler IR verification.",185,[[]]],[10,"compiler","","Gets the custom compiler config",185,[[["box",3]],[["box",3],["compiler",8]]]],[11,"default_features_for_target","","Gets the default features for this compiler in the given …",185,[[["target",3]],["features",3]]],[10,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",185,[[["arc",3],["modulemiddleware",8]]]],[8,"Compiler","","An implementation of a Compiler from parsed WebAssembly …",null,null],[11,"validate_module","","Validates a module.",186,[[["features",3]],[["result",4],["compileerror",4]]]],[10,"compile_module","","Compiles a parsed module.",186,[[["target",3],["moduletranslationstate",3],["localfunctionindex",3],["primarymap",3],["functionbodydata",3],["compilemoduleinfo",3]],[["compilation",3],["compileerror",4],["result",4]]]],[11,"experimental_native_compile_module","","Compiles a module into a native object file.",186,[[["target",3],["moduletranslationstate",3],["symbolregistry",8],["primarymap",3],["compilemoduleinfo",3]],[["result",4],["option",4]]]],[10,"get_middlewares","","Get the middlewares for this compiler",186,[[]]],[4,"Symbol","","The kinds of wasmer_types objects that might be found in …",null,null],[13,"LocalFunction","","A function defined in the wasm.",187,null],[13,"Section","","A wasm section.",187,null],[13,"FunctionCallTrampoline","","The function call trampoline for a given signature.",187,null],[13,"DynamicFunctionTrampoline","","The dynamic function trampoline for a given function.",187,null],[8,"SymbolRegistry","","This trait facilitates symbol name lookups in a native …",null,null],[10,"symbol_to_name","","Given a <code>Symbol</code> it returns the name for that symbol in the …",188,[[["symbol",4]],["string",3]]],[10,"name_to_symbol","","Given a name it returns the <code>Symbol</code> for that name in the …",188,[[["str",15]],[["option",4],["symbol",4]]]],[0,"error","wasmer_compiler","",null,null],[4,"CompileError","wasmer_compiler::error","The WebAssembly.CompileError object indicates an error …",null,null],[13,"Wasm","","A Wasm translation error occured.",189,null],[13,"Codegen","","A compilation error occured.",189,null],[13,"Validate","","The module did not pass validation.",189,null],[13,"UnsupportedFeature","","The compiler doesn\'t support a Wasm feature",189,null],[13,"UnsupportedTarget","","The compiler cannot compile for the given target. This …",189,null],[13,"Resource","","Insufficient resources available for execution.",189,null],[3,"MiddlewareError","","A error in the middleware.",null,null],[12,"name","","The name of the middleware where the error was created",190,null],[12,"message","","The error message",190,null],[11,"new","","Create a new <code>MiddlewareError</code>",190,[[["string",3],["into",8]]]],[4,"WasmError","","A WebAssembly translation error.",null,null],[13,"InvalidWebAssembly","","The input WebAssembly code is invalid.",191,null],[12,"message","wasmer_compiler::error::WasmError","A string describing the validation error.",192,null],[12,"offset","","The bytecode offset where the error occurred.",192,null],[13,"Unsupported","wasmer_compiler::error","A feature used by the WebAssembly code is not supported …",191,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",191,null],[13,"Middleware","","An error from the middleware error.",191,null],[13,"Generic","","A generic error.",191,null],[4,"ParseCpuFeatureError","","The error that can happen while parsing a <code>str</code> to retrieve …",null,null],[13,"Missing","","The provided string feature doesn\'t exist",193,null],[6,"WasmResult","","A convenient alias for a <code>Result</code> that uses <code>WasmError</code> as …",null,null],[0,"function","wasmer_compiler","A <code>Compilation</code> contains the compiled function bodies for a …",null,null],[3,"CompiledFunctionFrameInfo","wasmer_compiler::function","The frame info for a Compiled function.",null,null],[12,"traps","","The traps (in the function body).",194,null],[12,"address_map","","The address map.",194,null],[3,"ArchivedCompiledFunctionFrameInfo","","",null,null],[12,"traps","","",195,null],[12,"address_map","","",195,null],[3,"CompiledFunctionFrameInfoResolver","","",null,null],[12,"traps","","",196,null],[12,"address_map","","",196,null],[3,"FunctionBody","","The function body.",null,null],[12,"body","","The function body bytes.",197,null],[12,"unwind_info","","The function unwind info",197,null],[3,"ArchivedFunctionBody","","",null,null],[12,"body","","",198,null],[12,"unwind_info","","",198,null],[3,"FunctionBodyResolver","","",null,null],[12,"body","","",199,null],[12,"unwind_info","","",199,null],[3,"CompiledFunction","","The result of compiling a WebAssembly function.",null,null],[12,"body","","The function body.",200,null],[12,"relocations","","The relocations (in the body)",200,null],[12,"jt_offsets","","The jump tables offsets (in the body).",200,null],[12,"frame_info","","The frame information.",200,null],[3,"ArchivedCompiledFunction","","",null,null],[12,"body","","",201,null],[12,"relocations","","",201,null],[12,"jt_offsets","","",201,null],[12,"frame_info","","",201,null],[3,"CompiledFunctionResolver","","",null,null],[12,"body","","",202,null],[12,"relocations","","",202,null],[12,"jt_offsets","","",202,null],[12,"frame_info","","",202,null],[6,"Functions","","The compiled functions map (index in the Wasm -> function)",null,null],[6,"CustomSections","","The custom sections for a Compilation.",null,null],[3,"Dwarf","","The DWARF information for this Compilation.",null,null],[12,"eh_frame","","The section index in the [<code>Compilation</code>] that corresponds …",203,null],[3,"ArchivedDwarf","","",null,null],[12,"eh_frame","","",204,null],[3,"DwarfResolver","","",null,null],[12,"eh_frame","","",205,null],[11,"new","","Creates a <code>Dwarf</code> struct with the corresponding indices for …",203,[[["sectionindex",3]]]],[3,"Compilation","","The result of compiling a WebAssembly module\'s functions.",null,null],[12,"functions","","Compiled code for the function bodies.",206,null],[12,"custom_sections","","Custom sections for the module. It will hold the data, …",206,null],[12,"function_call_trampolines","","Trampolines to call a function defined locally in the …",206,null],[12,"dynamic_function_trampolines","","Trampolines to call a dynamic function defined in a host, …",206,null],[12,"debug","","Section ids corresponding to the Dwarf debug info",206,null],[11,"new","","Creates a compilation artifact from a contiguous function …",206,[[["option",4],["dwarf",3],["functionbody",3],["signatureindex",3],["functionindex",3],["primarymap",3],["functions",6],["customsections",6],["primarymap",3]]]],[11,"get","","Gets the bytes of a single function",206,[[["localfunctionindex",3]],["compiledfunction",3]]],[11,"len","","Gets the number of functions defined.",206,[[],["usize",15]]],[11,"is_empty","","Returns whether there are no functions defined.",206,[[],["bool",15]]],[11,"get_relocations","","Gets functions relocations.",206,[[],[["localfunctionindex",3],["primarymap",3],["vec",3]]]],[11,"get_function_bodies","","Gets functions bodies.",206,[[],[["primarymap",3],["localfunctionindex",3],["functionbody",3]]]],[11,"get_jt_offsets","","Gets functions jump table offsets.",206,[[],[["localfunctionindex",3],["primarymap",3],["jumptableoffsets",6]]]],[11,"get_frame_info","","Gets functions frame info.",206,[[],[["localfunctionindex",3],["primarymap",3],["compiledfunctionframeinfo",3]]]],[11,"get_function_call_trampolines","","Gets function call trampolines.",206,[[],[["functionbody",3],["signatureindex",3],["primarymap",3]]]],[11,"get_dynamic_function_trampolines","","Gets function call trampolines.",206,[[],[["functionbody",3],["functionindex",3],["primarymap",3]]]],[11,"get_custom_sections","","Gets custom section data.",206,[[],[["customsection",3],["primarymap",3],["sectionindex",3]]]],[11,"get_custom_section_relocations","","Gets relocations that apply to custom sections.",206,[[],[["primarymap",3],["sectionindex",3],["vec",3]]]],[11,"get_debug","","Returns the Dwarf info.",206,[[],[["option",4],["dwarf",3]]]],[3,"Iter","","",null,null],[12,"iterator","","",207,null],[0,"jump_table","wasmer_compiler","A jump table is a method of transferring program control …",null,null],[3,"JumpTable","wasmer_compiler::jump_table","An opaque reference to a jump table.",null,null],[12,"0","","",208,null],[3,"ArchivedJumpTable","","",null,null],[12,"0","","",209,null],[3,"JumpTableResolver","","",null,null],[12,"0","","",210,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",208,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",208,[[],["u32",15]]],[11,"with_number","","Create a new jump table reference from its number.",208,[[["u32",15]],["option",4]]],[6,"JumpTableOffsets","","Code offsets for Jump Tables.",null,null],[0,"module","wasmer_compiler","",null,null],[3,"CompileModuleInfo","wasmer_compiler::module","The required info for compiling a module.",null,null],[12,"features","","The features used for compiling the module",211,null],[12,"module","","The module information",211,null],[12,"memory_styles","","The memory styles used for compiling.",211,null],[12,"table_styles","","The table plans used for compiling.",211,null],[3,"ArchivedCompileModuleInfo","","",null,null],[12,"features","","",212,null],[12,"module","","",212,null],[12,"memory_styles","","",212,null],[12,"table_styles","","",212,null],[3,"CompileModuleInfoResolver","","",null,null],[12,"features","","",213,null],[12,"module","","",213,null],[12,"memory_styles","","",213,null],[12,"table_styles","","",213,null],[0,"relocation","wasmer_compiler","Relocation is the process of assigning load addresses for …",null,null],[4,"RelocationKind","wasmer_compiler::relocation","Relocation kinds for every ISA.",null,null],[13,"Abs4","","absolute 4-byte",214,null],[13,"Abs8","","absolute 8-byte",214,null],[13,"X86PCRel4","","x86 PC-relative 4-byte",214,null],[13,"X86PCRel8","","x86 PC-relative 8-byte",214,null],[13,"X86PCRelRodata4","","x86 PC-relative 4-byte offset to trailing rodata",214,null],[13,"X86CallPCRel4","","x86 call to PC-relative 4-byte",214,null],[13,"X86CallPLTRel4","","x86 call to PLT-relative 4-byte",214,null],[4,"ArchivedRelocationKind","","",null,null],[13,"Abs4","","",215,null],[13,"Abs8","","",215,null],[13,"X86PCRel4","","",215,null],[13,"X86PCRel8","","",215,null],[13,"X86PCRelRodata4","","",215,null],[13,"X86CallPCRel4","","",215,null],[13,"X86CallPLTRel4","","",215,null],[4,"RelocationKindResolver","","",null,null],[13,"Abs4","","",216,null],[13,"Abs8","","",216,null],[13,"X86PCRel4","","",216,null],[13,"X86PCRel8","","",216,null],[13,"X86PCRelRodata4","","",216,null],[13,"X86CallPCRel4","","",216,null],[13,"X86CallPLTRel4","","",216,null],[3,"Relocation","","A record of a relocation to perform.",null,null],[12,"kind","","The relocation kind.",217,null],[12,"reloc_target","","Relocation target.",217,null],[12,"offset","","The offset where to apply the relocation.",217,null],[12,"addend","","The addend to add to the relocation value.",217,null],[3,"ArchivedRelocation","","",null,null],[12,"kind","","",218,null],[12,"reloc_target","","",218,null],[12,"offset","","",218,null],[12,"addend","","",218,null],[3,"RelocationResolver","","",null,null],[12,"kind","","",219,null],[12,"reloc_target","","",219,null],[12,"offset","","",219,null],[12,"addend","","",219,null],[4,"RelocationTarget","","Destination function. Can be either user function or some …",null,null],[13,"LocalFunc","","A relocation to a function defined locally in the wasm …",220,null],[13,"LibCall","","A compiler-generated libcall.",220,null],[13,"JumpTable","","Jump table index.",220,null],[13,"CustomSection","","Custom sections generated by the compiler",220,null],[4,"ArchivedRelocationTarget","","",null,null],[13,"LocalFunc","","",221,null],[13,"LibCall","","",221,null],[13,"JumpTable","","",221,null],[13,"CustomSection","","",221,null],[4,"RelocationTargetResolver","","",null,null],[13,"LocalFunc","","",222,null],[13,"LibCall","","",222,null],[13,"JumpTable","","",222,null],[13,"CustomSection","","",222,null],[11,"for_address","","Given a function start address, provide the relocation …",217,[[["usize",15],["u64",15]]]],[6,"Relocations","","Relocations to apply to function bodies.",null,null],[0,"target","wasmer_compiler","Target configuration",null,null],[4,"Architecture","wasmer_compiler::target","The \\\"architecture\\\" field, which in some cases also …",null,null],[13,"Unknown","","",223,null],[13,"Arm","","",223,null],[13,"AmdGcn","","",223,null],[13,"Aarch64","","",223,null],[13,"Asmjs","","",223,null],[13,"Avr","","",223,null],[13,"Hexagon","","",223,null],[13,"X86_32","","",223,null],[13,"Mips32","","",223,null],[13,"Mips64","","",223,null],[13,"Msp430","","",223,null],[13,"Nvptx64","","",223,null],[13,"Powerpc","","",223,null],[13,"Powerpc64","","",223,null],[13,"Powerpc64le","","",223,null],[13,"Riscv32","","",223,null],[13,"Riscv64","","",223,null],[13,"S390x","","",223,null],[13,"Sparc","","",223,null],[13,"Sparc64","","",223,null],[13,"Sparcv9","","",223,null],[13,"Wasm32","","",223,null],[13,"Wasm64","","",223,null],[13,"X86_64","","",223,null],[4,"BinaryFormat","","The \\\"binary format\\\" field, which is usually omitted, and …",null,null],[13,"Unknown","","",224,null],[13,"Elf","","",224,null],[13,"Coff","","",224,null],[13,"Macho","","",224,null],[13,"Wasm","","",224,null],[4,"CallingConvention","","The calling convention, which specifies things like which …",null,null],[13,"SystemV","","\\\"System V\\\", which is used on most Unix-like platfoms. …",225,null],[13,"WasmBasicCAbi","","The WebAssembly C ABI. …",225,null],[13,"WindowsFastcall","","\\\"Windows Fastcall\\\", which is used on Windows. Note that …",225,null],[4,"Endianness","","The target memory endianness.",null,null],[13,"Little","","",226,null],[13,"Big","","",226,null],[4,"OperatingSystem","","The \\\"operating system\\\" field, which sometimes implies an …",null,null],[13,"Unknown","","",227,null],[13,"AmdHsa","","",227,null],[13,"Bitrig","","",227,null],[13,"Cloudabi","","",227,null],[13,"Cuda","","",227,null],[13,"Darwin","","",227,null],[13,"Dragonfly","","",227,null],[13,"Emscripten","","",227,null],[13,"Freebsd","","",227,null],[13,"Fuchsia","","",227,null],[13,"Haiku","","",227,null],[13,"Hermit","","",227,null],[13,"Illumos","","",227,null],[13,"Ios","","",227,null],[13,"L4re","","",227,null],[13,"Linux","","",227,null],[13,"MacOSX","","",227,null],[12,"major","wasmer_compiler::target::OperatingSystem","",228,null],[12,"minor","","",228,null],[12,"patch","","",228,null],[13,"Nebulet","wasmer_compiler::target","",227,null],[13,"Netbsd","","",227,null],[13,"None_","","",227,null],[13,"Openbsd","","",227,null],[13,"Psp","","",227,null],[13,"Redox","","",227,null],[13,"Solaris","","",227,null],[13,"Tvos","","",227,null],[13,"Uefi","","",227,null],[13,"VxWorks","","",227,null],[13,"Wasi","","",227,null],[13,"Windows","","",227,null],[4,"PointerWidth","","The width of a pointer (in the default address space).",null,null],[13,"U16","","",229,null],[13,"U32","","",229,null],[13,"U64","","",229,null],[3,"Triple","","A target \\\"triple\\\". Historically such things had three …",null,null],[12,"architecture","","The \\\"architecture\\\" (and sometimes the subarchitecture).",230,null],[12,"vendor","","The \\\"vendor\\\" (whatever that means).",230,null],[12,"operating_system","","The \\\"operating system\\\" (sometimes also the environment).",230,null],[12,"environment","","The \\\"environment\\\" on top of the operating system (often …",230,null],[12,"binary_format","","The \\\"binary format\\\" (rarely used).",230,null],[4,"CpuFeature","","The nomenclature is inspired by the <code>cpuid</code> crate. The list …",null,null],[13,"SSE2","","",231,null],[13,"SSE3","","",231,null],[13,"SSSE3","","",231,null],[13,"SSE41","","",231,null],[13,"SSE42","","",231,null],[13,"POPCNT","","",231,null],[13,"AVX","","",231,null],[13,"BMI1","","",231,null],[13,"BMI2","","",231,null],[13,"AVX2","","",231,null],[13,"AVX512DQ","","",231,null],[13,"AVX512VL","","",231,null],[13,"AVX512F","","",231,null],[13,"LZCNT","","",231,null],[11,"for_host","","Retrieves the features for the current Host",231,[[],["enumset",3]]],[11,"set","","Retrieves an empty set of <code>CpuFeature</code>s.",231,[[],["enumset",3]]],[3,"Target","","This is the target that we will use for compiling the …",null,null],[12,"triple","","",232,null],[12,"cpu_features","","",232,null],[11,"new","","Creates a new target given a triple",232,[[["cpufeature",4],["enumset",3],["triple",3]]]],[11,"triple","","The triple associated for the target.",232,[[],["triple",3]]],[11,"cpu_features","","The triple associated for the target.",232,[[],["enumset",3]]],[0,"trap","wasmer_compiler","",null,null],[3,"TrapInformation","wasmer_compiler::trap","Information about trap.",null,null],[12,"code_offset","","The offset of the trapping instruction in native code. It …",233,null],[12,"trap_code","","Code of the trap.",233,null],[3,"ArchivedTrapInformation","","",null,null],[12,"code_offset","","",234,null],[12,"trap_code","","",234,null],[3,"TrapInformationResolver","","",null,null],[12,"code_offset","","",235,null],[12,"trap_code","","",235,null],[0,"unwind","wasmer_compiler","A <code>CompiledFunctionUnwindInfo</code> contains the function unwind …",null,null],[4,"CompiledFunctionUnwindInfo","wasmer_compiler::unwind","Compiled function unwind information.",null,null],[13,"WindowsX64","","Windows UNWIND_INFO.",236,null],[13,"Dwarf","","The unwind info is added to the Dwarf section in …",236,null],[4,"ArchivedCompiledFunctionUnwindInfo","","",null,null],[13,"WindowsX64","","",237,null],[13,"Dwarf","","",237,null],[4,"CompiledFunctionUnwindInfoResolver","","",null,null],[13,"WindowsX64","","",238,null],[13,"Dwarf","","",238,null],[0,"translator","wasmer_compiler","This module defines the parser and translator from …",null,null],[0,"environ","wasmer_compiler::translator","",null,null],[3,"FunctionBodyData","wasmer_compiler::translator::environ","Contains function data: bytecode and its offset in the …",null,null],[12,"data","","Function body bytecode.",239,null],[12,"module_offset","","Body offset relative to the module file.",239,null],[8,"FunctionBinaryReader","","Trait for iterating over the operators of a Wasm Function",null,null],[10,"read_local_count","","Read a <code>count</code> indicating the number of times to call …",240,[[],[["wasmresult",6],["u32",15]]]],[10,"read_local_decl","","Read a <code>(count, value_type)</code> declaration of local variables …",240,[[],["wasmresult",6]]],[10,"read_operator","","Reads the next available <code>Operator</code>.",240,[[],[["wasmresult",6],["operator",4]]]],[10,"current_position","","Returns the current position.",240,[[],["usize",15]]],[10,"original_position","","Returns the original position (with the offset)",240,[[],["usize",15]]],[10,"bytes_remaining","","Returns the number of bytes remaining.",240,[[],["usize",15]]],[10,"eof","","Returns whether the readers has reached the end of the …",240,[[],["bool",15]]],[10,"range","","Return the range (original offset, original offset + data …",240,[[],["range",3]]],[3,"ModuleInfoTranslation","","The result of translating via <code>ModuleEnvironment</code>. Function …",null,null],[12,"module","","ModuleInfo information.",241,null],[12,"function_body_inputs","","References to the function bodies.",241,null],[12,"data_initializers","","References to the data initializers.",241,null],[12,"module_translation_state","","The decoded Wasm types for the module.",241,null],[3,"ModuleEnvironment","","Object containing the standalone environment information.",null,null],[12,"result","","The result to be filled in.",242,null],[12,"imports","","",242,null],[11,"new","","Allocates the environment data structures.",242,[[]]],[11,"translate","","Translate a wasm module using this environment. This …",242,[[],[["moduleinfotranslation",3],["wasmresult",6]]]],[11,"declare_export","","",242,[[["exportindex",4],["str",15]],["wasmresult",6]]],[11,"declare_import","","",242,[[["importindex",4],["str",15]],["wasmresult",6]]],[11,"reserve_signatures","","",242,[[["u32",15]],["wasmresult",6]]],[11,"declare_signature","","",242,[[["functiontype",3]],["wasmresult",6]]],[11,"declare_func_import","","",242,[[["signatureindex",3],["str",15]],["wasmresult",6]]],[11,"declare_table_import","","",242,[[["tabletype",3],["str",15]],["wasmresult",6]]],[11,"declare_memory_import","","",242,[[["memorytype",3],["str",15]],["wasmresult",6]]],[11,"declare_global_import","","",242,[[["globaltype",3],["str",15]],["wasmresult",6]]],[11,"finish_imports","","",242,[[],["wasmresult",6]]],[11,"reserve_func_types","","",242,[[["u32",15]],["wasmresult",6]]],[11,"declare_func_type","","",242,[[["signatureindex",3]],["wasmresult",6]]],[11,"reserve_tables","","",242,[[["u32",15]],["wasmresult",6]]],[11,"declare_table","","",242,[[["tabletype",3]],["wasmresult",6]]],[11,"reserve_memories","","",242,[[["u32",15]],["wasmresult",6]]],[11,"declare_memory","","",242,[[["memorytype",3]],["wasmresult",6]]],[11,"reserve_globals","","",242,[[["u32",15]],["wasmresult",6]]],[11,"declare_global","","",242,[[["globaltype",3],["globalinit",4]],["wasmresult",6]]],[11,"reserve_exports","","",242,[[["u32",15]],["wasmresult",6]]],[11,"declare_func_export","","",242,[[["functionindex",3],["str",15]],["wasmresult",6]]],[11,"declare_table_export","","",242,[[["tableindex",3],["str",15]],["wasmresult",6]]],[11,"declare_memory_export","","",242,[[["memoryindex",3],["str",15]],["wasmresult",6]]],[11,"declare_global_export","","",242,[[["globalindex",3],["str",15]],["wasmresult",6]]],[11,"declare_start_function","","",242,[[["functionindex",3]],["wasmresult",6]]],[11,"reserve_table_initializers","","",242,[[["u32",15]],["wasmresult",6]]],[11,"declare_table_initializers","","",242,[[["usize",15],["box",3],["tableindex",3],["option",4],["globalindex",3]],["wasmresult",6]]],[11,"declare_passive_element","","",242,[[["box",3],["elemindex",3]],["wasmresult",6]]],[11,"define_function_body","","",242,[[["moduletranslationstate",3],["usize",15]],["wasmresult",6]]],[11,"reserve_data_initializers","","",242,[[["u32",15]],["wasmresult",6]]],[11,"declare_data_initialization","","",242,[[["usize",15],["memoryindex",3],["option",4],["globalindex",3]],["wasmresult",6]]],[11,"reserve_passive_data","","",242,[[["u32",15]],["wasmresult",6]]],[11,"declare_passive_data","","",242,[[["dataindex",3]],["wasmresult",6]]],[11,"declare_module_name","","",242,[[["str",15]],["wasmresult",6]]],[11,"declare_function_name","","",242,[[["functionindex",3],["str",15]],["wasmresult",6]]],[11,"reserve_imports","","Provides the number of imports up front. By default this …",242,[[["u32",15]],["wasmresult",6]]],[11,"finish_exports","","Notifies the implementation that all exports have been …",242,[[],["wasmresult",6]]],[11,"custom_section","","Indicates that a custom section has been found in the …",242,[[["str",15]],["wasmresult",6]]],[0,"middleware","wasmer_compiler::translator","The middleware parses the function binary bytecodes and …",null,null],[8,"ModuleMiddleware","wasmer_compiler::translator::middleware","A shared builder for function middlewares.",null,null],[10,"generate_function_middleware","","Generates a <code>FunctionMiddleware</code> for a given function.",243,[[["localfunctionindex",3]],[["box",3],["functionmiddleware",8]]]],[11,"transform_module_info","","Transforms a <code>ModuleInfo</code> struct in-place. This is called …",243,[[["moduleinfo",3]]]],[8,"FunctionMiddleware","","A function middleware specialized for a single function.",null,null],[11,"feed","","Processes the given operator.",244,[[["operator",4],["middlewarereaderstate",3]],[["middlewareerror",3],["result",4]]]],[3,"MiddlewareBinaryReader","","A Middleware binary reader of the WebAssembly structures …",null,null],[12,"state","","Parsing state.",245,null],[12,"chain","","The backing middleware chain for this reader.",245,null],[3,"MiddlewareReaderState","","The state of the binary reader. Exposed to middlewares to …",null,null],[12,"inner","","Raw binary reader.",246,null],[12,"pending_operations","","The pending operations added by the middleware.",246,null],[8,"ModuleMiddlewareChain","","Trait for generating middleware chains from \\\"prototype\\\" …",null,null],[10,"generate_function_middleware_chain","","Generates a function middleware chain.",247,[[["localfunctionindex",3]],[["vec",3],["box",3]]]],[10,"apply_on_module_info","","Applies the chain on a <code>ModuleInfo</code> struct.",247,[[["moduleinfo",3]]]],[11,"push_operator","","Push an operator.",246,[[["operator",4]]]],[11,"new_with_offset","","Constructs a <code>MiddlewareBinaryReader</code> with an explicit …",245,[[["usize",15]]]],[11,"set_middleware_chain","","Replaces the middleware chain with a new one.",245,[[["vec",3],["box",3]]]],[0,"module","wasmer_compiler::translator","Translation skeleton that traverses the whole WebAssembly …",null,null],[5,"translate_module","wasmer_compiler::translator::module","Translate a sequence of bytes forming a valid Wasm binary …",null,[[["moduleenvironment",3]],[["moduletranslationstate",3],["wasmresult",6]]]],[0,"state","wasmer_compiler::translator","",null,null],[6,"WasmTypes","wasmer_compiler::translator::state","Map of signatures to a function\'s parameter and return …",null,null],[3,"ModuleTranslationState","","Contains information decoded from the Wasm module that …",null,null],[12,"wasm_types","","A map containing a Wasm module\'s original, raw signatures.",248,null],[11,"new","","Creates a new empty ModuleTranslationState.",248,[[]]],[11,"blocktype_params_results","","Get the parameter and result types for the given Wasm …",248,[[["typeorfunctype",4]],["wasmresult",6]]],[0,"error","wasmer_compiler::translator","",null,null],[0,"sections","","Helper functions to gather information for each of the …",null,null],[5,"wptype_to_type","wasmer_compiler::translator::sections","Helper function translating wasmparser types to Wasm Type.",null,[[["type",4]],[["wasmresult",6],["type",4]]]],[5,"parse_type_section","","Parses the Type section of the wasm module.",null,[[["moduletranslationstate",3],["moduleenvironment",3],["typesectionreader",3]],["wasmresult",6]]],[5,"parse_import_section","","Parses the Import section of the wasm module.",null,[[["importsectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_function_section","","Parses the Function section of the wasm module.",null,[[["moduleenvironment",3],["functionsectionreader",3]],["wasmresult",6]]],[5,"parse_table_section","","Parses the Table section of the wasm module.",null,[[["tablesectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_memory_section","","Parses the Memory section of the wasm module.",null,[[["memorysectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_global_section","","Parses the Global section of the wasm module.",null,[[["globalsectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_export_section","","Parses the Export section of the wasm module.",null,[[["exportsectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_start_section","","Parses the Start section of the wasm module.",null,[[["u32",15],["moduleenvironment",3]],["wasmresult",6]]],[5,"read_elems","","",null,[[["elementitems",3]],[["wasmresult",6],["box",3]]]],[5,"parse_element_section","","Parses the Element section of the wasm module.",null,[[["moduleenvironment",3],["elementsectionreader",3]],["wasmresult",6]]],[5,"parse_data_section","","Parses the Data section of the wasm module.",null,[[["datasectionreader",3],["moduleenvironment",3]],["wasmresult",6]]],[5,"parse_name_section","","Parses the Name section of the wasm module.",null,[[["moduleenvironment",3],["namesectionreader",3]],["wasmresult",6]]],[5,"parse_function_name_subsection","","",null,[[["namingreader",3]],[["hashmap",3],["option",4]]]],[0,"section","wasmer_compiler","This module define the required structures to emit custom …",null,null],[3,"SectionIndex","wasmer_compiler::section","Index type of a Section defined inside a WebAssembly …",null,null],[12,"0","","",249,null],[3,"ArchivedSectionIndex","","",null,null],[12,"0","","",250,null],[3,"SectionIndexResolver","","",null,null],[12,"0","","",251,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",249,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",249,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",250,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",250,[[],["u32",15]]],[4,"CustomSectionProtection","","Custom section Protection.",null,null],[13,"Read","","A custom section with read permission.",252,null],[13,"ReadExecute","","A custom section with read and execute permissions.",252,null],[4,"ArchivedCustomSectionProtection","","",null,null],[13,"Read","","",253,null],[13,"ReadExecute","","",253,null],[4,"CustomSectionProtectionResolver","","",null,null],[13,"Read","","",254,null],[13,"ReadExecute","","",254,null],[3,"CustomSection","","A Section for a <code>Compilation</code>.",null,null],[12,"protection","","Memory protection that applies to this section.",255,null],[12,"bytes","","The bytes corresponding to this section.",255,null],[12,"relocations","","Relocations that apply to this custom section.",255,null],[3,"ArchivedCustomSection","","",null,null],[12,"protection","","",256,null],[12,"bytes","","",256,null],[12,"relocations","","",256,null],[3,"CustomSectionResolver","","",null,null],[12,"protection","","",257,null],[12,"bytes","","",257,null],[12,"relocations","","",257,null],[3,"SectionBody","","The bytes in the section.",null,null],[12,"0","","",258,null],[3,"ArchivedSectionBody","","",null,null],[12,"0","","",259,null],[3,"SectionBodyResolver","","",null,null],[12,"0","","",260,null],[11,"new_with_vec","","Create a new section body with the given contents.",258,[[["vec",3],["u8",15]]]],[11,"as_ptr","","Returns a raw pointer to the section\'s buffer.",258,[[]]],[11,"len","","Returns the length of this section in bytes.",258,[[],["usize",15]]],[11,"as_slice","","Dereferences into the section\'s buffer.",258,[[]]],[11,"is_empty","","Returns whether or not the section body is empty.",258,[[],["bool",15]]],[0,"sourceloc","wasmer_compiler","Source locations.",null,null],[3,"SourceLoc","wasmer_compiler::sourceloc","A source location.",null,null],[12,"0","","",261,null],[3,"ArchivedSourceLoc","","",null,null],[12,"0","","",262,null],[3,"SourceLocResolver","","",null,null],[12,"0","","",263,null],[11,"new","","Create a new source location with the given bits.",261,[[["u32",15]]]],[11,"is_default","","Is this the default source location?",261,[[],["bool",15]]],[11,"bits","","Read the bits of this source location.",261,[[],["u32",15]]],[3,"FunctionAddressMap","wasmer_compiler","Function and its instructions addresses mappings.",null,null],[12,"instructions","","Instructions maps. The array is sorted by the …",182,null],[12,"start_srcloc","","Function start source location (normally declaration).",182,null],[12,"end_srcloc","","Function end source location.",182,null],[12,"body_offset","","Generated function body offset if applicable, otherwise 0.",182,null],[12,"body_len","","Generated function body length.",182,null],[3,"InstructionAddressMap","","Single source location to generated address mapping.",null,null],[12,"srcloc","","Original source location.",179,null],[12,"code_offset","","Generated instructions offset.",179,null],[12,"code_len","","Generated instructions length.",179,null],[8,"Compiler","","An implementation of a Compiler from parsed WebAssembly …",null,null],[11,"validate_module","wasmer_compiler::compiler","Validates a module.",186,[[["features",3]],[["result",4],["compileerror",4]]]],[10,"compile_module","wasmer_compiler","Compiles a parsed module.",186,[[["target",3],["moduletranslationstate",3],["localfunctionindex",3],["primarymap",3],["functionbodydata",3],["compilemoduleinfo",3]],[["compilation",3],["compileerror",4],["result",4]]]],[11,"experimental_native_compile_module","wasmer_compiler::compiler","Compiles a module into a native object file.",186,[[["target",3],["moduletranslationstate",3],["symbolregistry",8],["primarymap",3],["compilemoduleinfo",3]],[["result",4],["option",4]]]],[10,"get_middlewares","wasmer_compiler","Get the middlewares for this compiler",186,[[]]],[8,"CompilerConfig","","The compiler configuration options.",null,null],[11,"enable_pic","wasmer_compiler::compiler","Enable Position Independent Code (PIC).",185,[[]]],[11,"enable_verifier","","Enable compiler IR verification.",185,[[]]],[10,"compiler","wasmer_compiler","Gets the custom compiler config",185,[[["box",3]],[["box",3],["compiler",8]]]],[11,"default_features_for_target","wasmer_compiler::compiler","Gets the default features for this compiler in the given …",185,[[["target",3]],["features",3]]],[10,"push_middleware","wasmer_compiler","Pushes a middleware onto the back of the middleware chain.",185,[[["arc",3],["modulemiddleware",8]]]],[4,"Symbol","","The kinds of wasmer_types objects that might be found in …",null,null],[13,"LocalFunction","","A function defined in the wasm.",187,null],[13,"Section","","A wasm section.",187,null],[13,"FunctionCallTrampoline","","The function call trampoline for a given signature.",187,null],[13,"DynamicFunctionTrampoline","","The dynamic function trampoline for a given function.",187,null],[8,"SymbolRegistry","","This trait facilitates symbol name lookups in a native …",null,null],[10,"symbol_to_name","","Given a <code>Symbol</code> it returns the name for that symbol in the …",188,[[["symbol",4]],["string",3]]],[10,"name_to_symbol","","Given a name it returns the <code>Symbol</code> for that name in the …",188,[[["str",15]],[["option",4],["symbol",4]]]],[4,"CompileError","","The WebAssembly.CompileError object indicates an error …",null,null],[13,"Wasm","","A Wasm translation error occured.",189,null],[13,"Codegen","","A compilation error occured.",189,null],[13,"Validate","","The module did not pass validation.",189,null],[13,"UnsupportedFeature","","The compiler doesn\'t support a Wasm feature",189,null],[13,"UnsupportedTarget","","The compiler cannot compile for the given target. This …",189,null],[13,"Resource","","Insufficient resources available for execution.",189,null],[3,"MiddlewareError","","A error in the middleware.",null,null],[12,"name","","The name of the middleware where the error was created",190,null],[12,"message","","The error message",190,null],[4,"ParseCpuFeatureError","","The error that can happen while parsing a <code>str</code> to retrieve …",null,null],[13,"Missing","","The provided string feature doesn\'t exist",193,null],[4,"WasmError","","A WebAssembly translation error.",null,null],[13,"InvalidWebAssembly","","The input WebAssembly code is invalid.",191,null],[12,"message","wasmer_compiler::WasmError","A string describing the validation error.",192,null],[12,"offset","","The bytecode offset where the error occurred.",192,null],[13,"Unsupported","wasmer_compiler","A feature used by the WebAssembly code is not supported …",191,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",191,null],[13,"Middleware","","An error from the middleware error.",191,null],[13,"Generic","","A generic error.",191,null],[6,"WasmResult","","A convenient alias for a <code>Result</code> that uses <code>WasmError</code> as …",null,null],[3,"Compilation","","The result of compiling a WebAssembly module\'s functions.",null,null],[12,"functions","","Compiled code for the function bodies.",206,null],[12,"custom_sections","","Custom sections for the module. It will hold the data, …",206,null],[12,"function_call_trampolines","","Trampolines to call a function defined locally in the …",206,null],[12,"dynamic_function_trampolines","","Trampolines to call a dynamic function defined in a host, …",206,null],[12,"debug","","Section ids corresponding to the Dwarf debug info",206,null],[3,"CompiledFunction","","The result of compiling a WebAssembly function.",null,null],[12,"body","","The function body.",200,null],[12,"relocations","","The relocations (in the body)",200,null],[12,"jt_offsets","","The jump tables offsets (in the body).",200,null],[12,"frame_info","","The frame information.",200,null],[3,"CompiledFunctionFrameInfo","","The frame info for a Compiled function.",null,null],[12,"traps","","The traps (in the function body).",194,null],[12,"address_map","","The address map.",194,null],[6,"CustomSections","","The custom sections for a Compilation.",null,null],[3,"Dwarf","","The DWARF information for this Compilation.",null,null],[12,"eh_frame","","The section index in the [<code>Compilation</code>] that corresponds …",203,null],[3,"FunctionBody","","The function body.",null,null],[12,"body","","The function body bytes.",197,null],[12,"unwind_info","","The function unwind info",197,null],[6,"Functions","","The compiled functions map (index in the Wasm -> function)",null,null],[3,"JumpTable","","An opaque reference to a jump table.",null,null],[12,"0","","",208,null],[6,"JumpTableOffsets","","Code offsets for Jump Tables.",null,null],[3,"CompileModuleInfo","","The required info for compiling a module.",null,null],[12,"features","","The features used for compiling the module",211,null],[12,"module","","The module information",211,null],[12,"memory_styles","","The memory styles used for compiling.",211,null],[12,"table_styles","","The table plans used for compiling.",211,null],[3,"Relocation","","A record of a relocation to perform.",null,null],[12,"kind","","The relocation kind.",217,null],[12,"reloc_target","","Relocation target.",217,null],[12,"offset","","The offset where to apply the relocation.",217,null],[12,"addend","","The addend to add to the relocation value.",217,null],[4,"RelocationKind","","Relocation kinds for every ISA.",null,null],[13,"Abs4","","absolute 4-byte",214,null],[13,"Abs8","","absolute 8-byte",214,null],[13,"X86PCRel4","","x86 PC-relative 4-byte",214,null],[13,"X86PCRel8","","x86 PC-relative 8-byte",214,null],[13,"X86PCRelRodata4","","x86 PC-relative 4-byte offset to trailing rodata",214,null],[13,"X86CallPCRel4","","x86 call to PC-relative 4-byte",214,null],[13,"X86CallPLTRel4","","x86 call to PLT-relative 4-byte",214,null],[4,"RelocationTarget","","Destination function. Can be either user function or some …",null,null],[13,"LocalFunc","","A relocation to a function defined locally in the wasm …",220,null],[13,"LibCall","","A compiler-generated libcall.",220,null],[13,"JumpTable","","Jump table index.",220,null],[13,"CustomSection","","Custom sections generated by the compiler",220,null],[6,"Relocations","","Relocations to apply to function bodies.",null,null],[3,"CustomSection","","A Section for a <code>Compilation</code>.",null,null],[12,"protection","","Memory protection that applies to this section.",255,null],[12,"bytes","","The bytes corresponding to this section.",255,null],[12,"relocations","","Relocations that apply to this custom section.",255,null],[4,"CustomSectionProtection","","Custom section Protection.",null,null],[13,"Read","","A custom section with read permission.",252,null],[13,"ReadExecute","","A custom section with read and execute permissions.",252,null],[3,"SectionBody","","The bytes in the section.",null,null],[12,"0","","",258,null],[3,"SectionIndex","","Index type of a Section defined inside a WebAssembly …",null,null],[12,"0","","",249,null],[3,"SourceLoc","","A source location.",null,null],[12,"0","","",261,null],[4,"Architecture","","The \\\"architecture\\\" field, which in some cases also …",null,null],[13,"Unknown","","",223,null],[13,"Arm","","",223,null],[13,"AmdGcn","","",223,null],[13,"Aarch64","","",223,null],[13,"Asmjs","","",223,null],[13,"Avr","","",223,null],[13,"Hexagon","","",223,null],[13,"X86_32","","",223,null],[13,"Mips32","","",223,null],[13,"Mips64","","",223,null],[13,"Msp430","","",223,null],[13,"Nvptx64","","",223,null],[13,"Powerpc","","",223,null],[13,"Powerpc64","","",223,null],[13,"Powerpc64le","","",223,null],[13,"Riscv32","","",223,null],[13,"Riscv64","","",223,null],[13,"S390x","","",223,null],[13,"Sparc","","",223,null],[13,"Sparc64","","",223,null],[13,"Sparcv9","","",223,null],[13,"Wasm32","","",223,null],[13,"Wasm64","","",223,null],[13,"X86_64","","",223,null],[4,"BinaryFormat","","The \\\"binary format\\\" field, which is usually omitted, and …",null,null],[13,"Unknown","","",224,null],[13,"Elf","","",224,null],[13,"Coff","","",224,null],[13,"Macho","","",224,null],[13,"Wasm","","",224,null],[4,"CallingConvention","","The calling convention, which specifies things like which …",null,null],[13,"SystemV","","\\\"System V\\\", which is used on most Unix-like platfoms. …",225,null],[13,"WasmBasicCAbi","","The WebAssembly C ABI. …",225,null],[13,"WindowsFastcall","","\\\"Windows Fastcall\\\", which is used on Windows. Note that …",225,null],[4,"CpuFeature","","The nomenclature is inspired by the <code>cpuid</code> crate. The list …",null,null],[13,"SSE2","","",231,null],[13,"SSE3","","",231,null],[13,"SSSE3","","",231,null],[13,"SSE41","","",231,null],[13,"SSE42","","",231,null],[13,"POPCNT","","",231,null],[13,"AVX","","",231,null],[13,"BMI1","","",231,null],[13,"BMI2","","",231,null],[13,"AVX2","","",231,null],[13,"AVX512DQ","","",231,null],[13,"AVX512VL","","",231,null],[13,"AVX512F","","",231,null],[13,"LZCNT","","",231,null],[4,"Endianness","","The target memory endianness.",null,null],[13,"Little","","",226,null],[13,"Big","","",226,null],[4,"OperatingSystem","","The \\\"operating system\\\" field, which sometimes implies an …",null,null],[13,"Unknown","","",227,null],[13,"AmdHsa","","",227,null],[13,"Bitrig","","",227,null],[13,"Cloudabi","","",227,null],[13,"Cuda","","",227,null],[13,"Darwin","","",227,null],[13,"Dragonfly","","",227,null],[13,"Emscripten","","",227,null],[13,"Freebsd","","",227,null],[13,"Fuchsia","","",227,null],[13,"Haiku","","",227,null],[13,"Hermit","","",227,null],[13,"Illumos","","",227,null],[13,"Ios","","",227,null],[13,"L4re","","",227,null],[13,"Linux","","",227,null],[13,"MacOSX","","",227,null],[12,"major","wasmer_compiler::OperatingSystem","",228,null],[12,"minor","","",228,null],[12,"patch","","",228,null],[13,"Nebulet","wasmer_compiler","",227,null],[13,"Netbsd","","",227,null],[13,"None_","","",227,null],[13,"Openbsd","","",227,null],[13,"Psp","","",227,null],[13,"Redox","","",227,null],[13,"Solaris","","",227,null],[13,"Tvos","","",227,null],[13,"Uefi","","",227,null],[13,"VxWorks","","",227,null],[13,"Wasi","","",227,null],[13,"Windows","","",227,null],[4,"PointerWidth","","The width of a pointer (in the default address space).",null,null],[13,"U16","","",229,null],[13,"U32","","",229,null],[13,"U64","","",229,null],[3,"Target","","This is the target that we will use for compiling the …",null,null],[12,"triple","","",232,null],[12,"cpu_features","","",232,null],[3,"Triple","","A target \\\"triple\\\". Historically such things had three …",null,null],[12,"architecture","","The \\\"architecture\\\" (and sometimes the subarchitecture).",230,null],[12,"vendor","","The \\\"vendor\\\" (whatever that means).",230,null],[12,"operating_system","","The \\\"operating system\\\" (sometimes also the environment).",230,null],[12,"environment","","The \\\"environment\\\" on top of the operating system (often …",230,null],[12,"binary_format","","The \\\"binary format\\\" (rarely used).",230,null],[5,"translate_module","","Translate a sequence of bytes forming a valid Wasm binary …",null,[[["moduleenvironment",3]],[["moduletranslationstate",3],["wasmresult",6]]]],[5,"wptype_to_type","","Helper function translating wasmparser types to Wasm Type.",null,[[["type",4]],[["wasmresult",6],["type",4]]]],[8,"FunctionBinaryReader","","Trait for iterating over the operators of a Wasm Function",null,null],[10,"read_local_count","","Read a <code>count</code> indicating the number of times to call …",240,[[],[["wasmresult",6],["u32",15]]]],[10,"read_local_decl","","Read a <code>(count, value_type)</code> declaration of local variables …",240,[[],["wasmresult",6]]],[10,"read_operator","","Reads the next available <code>Operator</code>.",240,[[],[["wasmresult",6],["operator",4]]]],[10,"current_position","","Returns the current position.",240,[[],["usize",15]]],[10,"original_position","","Returns the original position (with the offset)",240,[[],["usize",15]]],[10,"bytes_remaining","","Returns the number of bytes remaining.",240,[[],["usize",15]]],[10,"eof","","Returns whether the readers has reached the end of the …",240,[[],["bool",15]]],[10,"range","","Return the range (original offset, original offset + data …",240,[[],["range",3]]],[3,"FunctionBodyData","","Contains function data: bytecode and its offset in the …",null,null],[12,"data","","Function body bytecode.",239,null],[12,"module_offset","","Body offset relative to the module file.",239,null],[8,"FunctionMiddleware","","A function middleware specialized for a single function.",null,null],[11,"feed","wasmer_compiler::translator::middleware","Processes the given operator.",244,[[["operator",4],["middlewarereaderstate",3]],[["middlewareerror",3],["result",4]]]],[3,"MiddlewareBinaryReader","wasmer_compiler","A Middleware binary reader of the WebAssembly structures …",null,null],[12,"state","","Parsing state.",245,null],[12,"chain","","The backing middleware chain for this reader.",245,null],[3,"MiddlewareReaderState","","The state of the binary reader. Exposed to middlewares to …",null,null],[12,"inner","","Raw binary reader.",246,null],[12,"pending_operations","","The pending operations added by the middleware.",246,null],[3,"ModuleEnvironment","","Object containing the standalone environment information.",null,null],[12,"result","","The result to be filled in.",242,null],[12,"imports","","",242,null],[3,"ModuleInfoTranslation","","The result of translating via <code>ModuleEnvironment</code>. Function …",null,null],[12,"module","","ModuleInfo information.",241,null],[12,"function_body_inputs","","References to the function bodies.",241,null],[12,"data_initializers","","References to the data initializers.",241,null],[12,"module_translation_state","","The decoded Wasm types for the module.",241,null],[8,"ModuleMiddleware","","A shared builder for function middlewares.",null,null],[10,"generate_function_middleware","","Generates a <code>FunctionMiddleware</code> for a given function.",243,[[["localfunctionindex",3]],[["box",3],["functionmiddleware",8]]]],[11,"transform_module_info","wasmer_compiler::translator::middleware","Transforms a <code>ModuleInfo</code> struct in-place. This is called …",243,[[["moduleinfo",3]]]],[8,"ModuleMiddlewareChain","wasmer_compiler","Trait for generating middleware chains from \\\"prototype\\\" …",null,null],[10,"generate_function_middleware_chain","","Generates a function middleware chain.",247,[[["localfunctionindex",3]],[["vec",3],["box",3]]]],[10,"apply_on_module_info","","Applies the chain on a <code>ModuleInfo</code> struct.",247,[[["moduleinfo",3]]]],[3,"ModuleTranslationState","","Contains information decoded from the Wasm module that …",null,null],[12,"wasm_types","","A map containing a Wasm module\'s original, raw signatures.",248,null],[3,"TrapInformation","","Information about trap.",null,null],[12,"code_offset","","The offset of the trapping instruction in native code. It …",233,null],[12,"trap_code","","Code of the trap.",233,null],[4,"CompiledFunctionUnwindInfo","","Compiled function unwind information.",null,null],[13,"WindowsX64","","Windows UNWIND_INFO.",236,null],[13,"Dwarf","","The unwind info is added to the Dwarf section in …",236,null],[3,"Features","","Controls which experimental features will be enabled. …",null,null],[12,"threads","","Threads proposal should be enabled",264,null],[12,"reference_types","","Reference Types proposal should be enabled",264,null],[12,"simd","","SIMD proposal should be enabled",264,null],[12,"bulk_memory","","Bulk Memory proposal should be enabled",264,null],[12,"multi_value","","Multi Value proposal should be enabled",264,null],[12,"tail_call","","Tail call proposal should be enabled",264,null],[12,"module_linking","","Module Linking proposal should be enabled",264,null],[12,"multi_memory","","Multi Memory proposal should be enabled",264,null],[12,"memory64","","64-bit Memory proposal should be enabled",264,null],[12,"exceptions","","Wasm exceptions proposal should be enabled",264,null],[6,"CodeOffset","","Offset in bytes from the beginning of the function.",null,null],[6,"Addend","","Addend to add to the symbol value.",null,null],[17,"VERSION","","Version number of this crate.",null,null],[14,"wasm_unsupported","","Return an <code>Err(WasmError::Unsupported(msg))</code> where <code>msg</code> the …",null,null],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[],["bool",15]]],[11,"pointer_metadata","","",1,[[]]],[11,"from","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"into_iter","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"into_searcher","","",4,[[["str",15]],["charpredicatesearcher",3]]],[11,"is_contained_in","","",4,[[["str",15]],["bool",15]]],[11,"is_prefix_of","","",4,[[["str",15]],["bool",15]]],[11,"strip_prefix_of","","",4,[[["str",15]],[["str",15],["option",4]]]],[11,"is_suffix_of","","",4,[[["str",15]],["bool",15]]],[11,"strip_suffix_of","","",4,[[["str",15]],[["str",15],["option",4]]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_future","","",4,[[]]],[11,"equivalent","","",4,[[],["bool",15]]],[11,"pointer_metadata","","",4,[[]]],[11,"resolve_metadata","","",4,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",4,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",4,[[],["result",4]]],[11,"into_fallible_iter","","",4,[[]]],[11,"from","wasmer_compiler::lib::std::collections","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"pointer_metadata","","",5,[[]]],[11,"resolve_metadata","","",5,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",5,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",5,[[],["result",4]]],[11,"from","wasmer_compiler::lib::std::collections::hash_map","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"pointer_metadata","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"pointer_metadata","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"into_iter","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"pointer_metadata","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"into_iter","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"pointer_metadata","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"pointer_metadata","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"pointer_metadata","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"pointer_metadata","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"pointer_metadata","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"pointer_metadata","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"pointer_metadata","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"pointer_metadata","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"pointer_metadata","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"pointer_metadata","","",25,[[]]],[11,"from","wasmer_compiler::lib::std::collections","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[],["bool",15]]],[11,"pointer_metadata","","",26,[[]]],[11,"resolve_metadata","","",26,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",26,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",26,[[],["result",4]]],[11,"from","wasmer_compiler::lib::std::collections::hash_set","",27,[[]]],[11,"into","","",27,[[]]],[11,"into_iter","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"pointer_metadata","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"into_iter","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"pointer_metadata","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"into_iter","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"pointer_metadata","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"into_iter","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"pointer_metadata","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"pointer_metadata","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"into_iter","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"pointer_metadata","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"pointer_metadata","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"into_iter","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"pointer_metadata","","",34,[[]]],[11,"from","wasmer_compiler::lib::std::collections","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[],["bool",15]]],[11,"pointer_metadata","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"pointer_metadata","","",36,[[]]],[11,"from","wasmer_compiler::lib::std::collections::binary_heap","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"pointer_metadata","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"pointer_metadata","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"into_iter","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"pointer_metadata","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"into_iter","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"pointer_metadata","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"into_iter","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"pointer_metadata","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"pointer_metadata","","",42,[[]]],[11,"from","wasmer_compiler::lib::std::collections::btree_map","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"pointer_metadata","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"pointer_metadata","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"pointer_metadata","","",45,[[]]],[11,"from","wasmer_compiler::lib::std::collections","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"equivalent","","",46,[[],["bool",15]]],[11,"pointer_metadata","","",46,[[]]],[11,"from","wasmer_compiler::lib::std::collections::btree_map","",47,[[]]],[11,"into","","",47,[[]]],[11,"into_iter","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"pointer_metadata","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"into_iter","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"pointer_metadata","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"into_iter","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"pointer_metadata","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"pointer_metadata","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"pointer_metadata","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"into_iter","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"pointer_metadata","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"pointer_metadata","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"pointer_metadata","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"pointer_metadata","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"pointer_metadata","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into_iter","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"pointer_metadata","","",57,[[]]],[11,"from","wasmer_compiler::lib::std::collections::btree_set","",58,[[]]],[11,"into","","",58,[[]]],[11,"into_iter","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"pointer_metadata","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"into_iter","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"pointer_metadata","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"into_iter","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"pointer_metadata","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"into_iter","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"pointer_metadata","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"into_iter","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"pointer_metadata","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"into_iter","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"pointer_metadata","","",63,[[]]],[11,"from","wasmer_compiler::lib::std::collections","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"equivalent","","",64,[[],["bool",15]]],[11,"pointer_metadata","","",64,[[]]],[11,"from","wasmer_compiler::lib::std::collections::btree_set","",65,[[]]],[11,"into","","",65,[[]]],[11,"into_iter","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"pointer_metadata","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"into_iter","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"pointer_metadata","","",66,[[]]],[11,"from","wasmer_compiler::lib::std::collections","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"equivalent","","",67,[[],["bool",15]]],[11,"pointer_metadata","","",67,[[]]],[11,"from","wasmer_compiler::lib::std::collections::linked_list","",68,[[]]],[11,"into","","",68,[[]]],[11,"into_iter","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"pointer_metadata","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"into_iter","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"pointer_metadata","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"into_iter","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"pointer_metadata","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"pointer_metadata","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"pointer_metadata","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"pointer_metadata","","",73,[[]]],[11,"from","wasmer_compiler::lib::std::collections","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"equivalent","","",74,[[],["bool",15]]],[11,"pointer_metadata","","",74,[[]]],[11,"from","wasmer_compiler::lib::std::collections::vec_deque","",75,[[]]],[11,"into","","",75,[[]]],[11,"into_iter","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"pointer_metadata","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"into_iter","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"pointer_metadata","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"into_iter","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"pointer_metadata","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"into_iter","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"pointer_metadata","","",78,[[]]],[11,"from","wasmer_compiler::lib::std::collections","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"equivalent","","",79,[[],["bool",15]]],[11,"pointer_metadata","","",79,[[]]],[11,"from","wasmer_compiler::lib::std::fmt","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"pointer_metadata","","",81,[[]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"to_owned","","",265,[[]]],[11,"clone_into","","",265,[[]]],[11,"to_string","","",265,[[],["string",3]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"equivalent","","",265,[[],["bool",15]]],[11,"pointer_metadata","","",265,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"pointer_metadata","","",82,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"pointer_metadata","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"pointer_metadata","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"pointer_metadata","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"pointer_metadata","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"pointer_metadata","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"pointer_metadata","","",92,[[]]],[11,"from","wasmer_compiler::lib::std::str::pattern","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"equivalent","","",100,[[],["bool",15]]],[11,"pointer_metadata","","",100,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"pointer_metadata","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"pointer_metadata","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"pointer_metadata","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"pointer_metadata","","",106,[[]]],[11,"from","wasmer_compiler::lib::std::str","",107,[[]]],[11,"into","","",107,[[]]],[11,"into_iter","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"pointer_metadata","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"into_iter","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"pointer_metadata","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"into_iter","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"pointer_metadata","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"into_iter","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"pointer_metadata","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"into_iter","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"pointer_metadata","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"into_iter","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"pointer_metadata","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"equivalent","","",113,[[],["bool",15]]],[11,"pointer_metadata","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"into_iter","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"to_string","","",114,[[],["string",3]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"pointer_metadata","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"into_iter","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"to_string","","",115,[[],["string",3]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"pointer_metadata","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"into_iter","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"pointer_metadata","","",116,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"to_string","","",118,[[],["string",3]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"equivalent","","",118,[[],["bool",15]]],[11,"pointer_metadata","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"into_iter","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"pointer_metadata","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"into_iter","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"pointer_metadata","","",120,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"into_iter","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"pointer_metadata","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"into_iter","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"pointer_metadata","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"into_iter","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"pointer_metadata","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"into_iter","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"pointer_metadata","","",124,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"into_iter","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"pointer_metadata","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"into_iter","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"pointer_metadata","","",126,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"into_iter","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"pointer_metadata","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"into_iter","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"pointer_metadata","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"into_iter","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"pointer_metadata","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"into_iter","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"pointer_metadata","","",130,[[]]],[11,"from","wasmer_compiler::lib::std::string","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"to_string","","",131,[[],["string",3]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"equivalent","","",131,[[],["bool",15]]],[11,"pointer_metadata","","",131,[[]]],[11,"resolve_metadata","","",131,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",131,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",131,[[],["result",4]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"to_string","","",132,[[],["string",3]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"equivalent","","",132,[[],["bool",15]]],[11,"pointer_metadata","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_string","","",133,[[],["string",3]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"pointer_metadata","","",133,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"into_iter","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"pointer_metadata","","",135,[[]]],[11,"from","wasmer_compiler::lib::std::sync::mpsc","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"pointer_metadata","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"into_iter","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"pointer_metadata","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"into_iter","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"pointer_metadata","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"into_iter","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"pointer_metadata","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"pointer_metadata","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"pointer_metadata","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"to_string","","",142,[[],["string",3]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"equivalent","","",142,[[],["bool",15]]],[11,"pointer_metadata","","",142,[[]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"to_string","","",266,[[],["string",3]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"equivalent","","",266,[[],["bool",15]]],[11,"pointer_metadata","","",266,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"to_string","","",143,[[],["string",3]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"equivalent","","",143,[[],["bool",15]]],[11,"pointer_metadata","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"to_string","","",144,[[],["string",3]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"equivalent","","",144,[[],["bool",15]]],[11,"pointer_metadata","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"to_string","","",145,[[],["string",3]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"equivalent","","",145,[[],["bool",15]]],[11,"pointer_metadata","","",145,[[]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"to_string","","",146,[[],["string",3]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"equivalent","","",146,[[],["bool",15]]],[11,"pointer_metadata","","",146,[[]]],[11,"resolve_metadata","","",146,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",146,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",146,[[],["result",4]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"pointer_metadata","","",147,[[]]],[11,"resolve_metadata","","",147,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",147,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",147,[[],["result",4]]],[11,"from","wasmer_compiler::lib::std::sync::atomic","",148,[[]]],[11,"into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"pointer_metadata","","",148,[[]]],[11,"resolve_metadata","","",148,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",148,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",148,[[],["result",4]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"pointer_metadata","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"equivalent","","",150,[[],["bool",15]]],[11,"pointer_metadata","","",150,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"pointer_metadata","","",151,[[]]],[11,"resolve_metadata","","",151,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",151,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",151,[[],["result",4]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"pointer_metadata","","",152,[[]]],[11,"resolve_metadata","","",152,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",152,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",152,[[],["result",4]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"pointer_metadata","","",153,[[]]],[11,"resolve_metadata","","",153,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",153,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",153,[[],["result",4]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"pointer_metadata","","",154,[[]]],[11,"resolve_metadata","","",154,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",154,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",154,[[],["result",4]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"pointer_metadata","","",155,[[]]],[11,"resolve_metadata","","",155,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",155,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",155,[[],["result",4]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"pointer_metadata","","",156,[[]]],[11,"resolve_metadata","","",156,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",156,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",156,[[],["result",4]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"pointer_metadata","","",157,[[]]],[11,"resolve_metadata","","",157,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",157,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",157,[[],["result",4]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"pointer_metadata","","",158,[[]]],[11,"resolve_metadata","","",158,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",158,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",158,[[],["result",4]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"pointer_metadata","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"pointer_metadata","","",160,[[]]],[11,"from","wasmer_compiler::lib::std::sync","",161,[[]]],[11,"into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"pointer_metadata","","",161,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"pointer_metadata","","",162,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"pointer_metadata","","",163,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"equivalent","","",164,[[],["bool",15]]],[11,"pointer_metadata","","",164,[[]]],[11,"from","","",165,[[]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"pointer_metadata","","",165,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_string","","",166,[[],["string",3]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"pointer_metadata","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"pointer_metadata","","",167,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"pointer_metadata","","",168,[[]]],[11,"from","","",169,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"pointer_metadata","","",169,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_string","","",170,[[],["string",3]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"pointer_metadata","","",170,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_string","","",171,[[],["string",3]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"pointer_metadata","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_string","","",172,[[],["string",3]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"pointer_metadata","","",172,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_string","","",173,[[],["string",3]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"pointer_metadata","","",173,[[]]],[11,"from","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"equivalent","","",174,[[],["bool",15]]],[11,"pointer_metadata","","",174,[[]]],[11,"resolve_metadata","","",174,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",174,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",174,[[],["result",4]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"into_iter","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"pointer_metadata","","",175,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"into_iter","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"pointer_metadata","","",176,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"into_iter","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"pointer_metadata","","",177,[[]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"into_iter","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"pointer_metadata","","",178,[[]]],[11,"from","wasmer_compiler::address_map","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"equivalent","","",179,[[],["bool",15]]],[11,"pointer_metadata","","",179,[[]]],[11,"resolve_metadata","","",179,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",179,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",179,[[],["result",4]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"pointer_metadata","","",180,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"pointer_metadata","","",181,[[]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"equivalent","","",182,[[],["bool",15]]],[11,"pointer_metadata","","",182,[[]]],[11,"resolve_metadata","","",182,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",182,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",182,[[],["result",4]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"pointer_metadata","","",183,[[]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"pointer_metadata","","",184,[[]]],[11,"from","wasmer_compiler::compiler","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"equivalent","","",187,[[],["bool",15]]],[11,"pointer_metadata","","",187,[[]]],[11,"from","wasmer_compiler::error","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_string","","",189,[[],["string",3]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"pointer_metadata","","",189,[[]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_string","","",190,[[],["string",3]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"pointer_metadata","","",190,[[]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_string","","",191,[[],["string",3]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"pointer_metadata","","",191,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_string","","",193,[[],["string",3]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"pointer_metadata","","",193,[[]]],[11,"from","wasmer_compiler::function","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"equivalent","","",194,[[],["bool",15]]],[11,"pointer_metadata","","",194,[[]]],[11,"resolve_metadata","","",194,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",194,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",194,[[],["result",4]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"pointer_metadata","","",195,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"pointer_metadata","","",196,[[]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"equivalent","","",197,[[],["bool",15]]],[11,"pointer_metadata","","",197,[[]]],[11,"resolve_metadata","","",197,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",197,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",197,[[],["result",4]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"pointer_metadata","","",198,[[]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"pointer_metadata","","",199,[[]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"to_owned","","",200,[[]]],[11,"clone_into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"equivalent","","",200,[[],["bool",15]]],[11,"pointer_metadata","","",200,[[]]],[11,"resolve_metadata","","",200,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",200,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",200,[[],["result",4]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"pointer_metadata","","",201,[[]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"pointer_metadata","","",202,[[]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_owned","","",203,[[]]],[11,"clone_into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"equivalent","","",203,[[],["bool",15]]],[11,"pointer_metadata","","",203,[[]]],[11,"resolve_metadata","","",203,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",203,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",203,[[],["result",4]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"pointer_metadata","","",204,[[]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"pointer_metadata","","",205,[[]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"equivalent","","",206,[[],["bool",15]]],[11,"pointer_metadata","","",206,[[]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"into_iter","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"pointer_metadata","","",207,[[]]],[11,"from","wasmer_compiler::jump_table","",208,[[]]],[11,"into","","",208,[[]]],[11,"to_owned","","",208,[[]]],[11,"clone_into","","",208,[[]]],[11,"to_string","","",208,[[],["string",3]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"equivalent","","",208,[[],["bool",15]]],[11,"pointer_metadata","","",208,[[]]],[11,"resolve_metadata","","",208,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",208,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",208,[[],["result",4]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"pointer_metadata","","",209,[[]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"pointer_metadata","","",210,[[]]],[11,"from","wasmer_compiler::module","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"equivalent","","",211,[[],["bool",15]]],[11,"pointer_metadata","","",211,[[]]],[11,"resolve_metadata","","",211,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",211,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",211,[[],["result",4]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"pointer_metadata","","",212,[[]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"pointer_metadata","","",213,[[]]],[11,"from","wasmer_compiler::relocation","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"to_string","","",214,[[],["string",3]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"equivalent","","",214,[[],["bool",15]]],[11,"pointer_metadata","","",214,[[]]],[11,"resolve_metadata","","",214,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",214,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",214,[[],["result",4]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"pointer_metadata","","",215,[[]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"pointer_metadata","","",216,[[]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"equivalent","","",217,[[],["bool",15]]],[11,"pointer_metadata","","",217,[[]]],[11,"resolve_metadata","","",217,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",217,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",217,[[],["result",4]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"pointer_metadata","","",218,[[]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"pointer_metadata","","",219,[[]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"equivalent","","",220,[[],["bool",15]]],[11,"pointer_metadata","","",220,[[]]],[11,"resolve_metadata","","",220,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",220,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",220,[[],["result",4]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"pointer_metadata","","",221,[[]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"pointer_metadata","","",222,[[]]],[11,"from","wasmer_compiler","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"to_string","","",223,[[],["string",3]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"equivalent","","",223,[[],["bool",15]]],[11,"pointer_metadata","","",223,[[]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"to_string","","",224,[[],["string",3]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"equivalent","","",224,[[],["bool",15]]],[11,"pointer_metadata","","",224,[[]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"equivalent","","",225,[[],["bool",15]]],[11,"pointer_metadata","","",225,[[]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"equivalent","","",226,[[],["bool",15]]],[11,"pointer_metadata","","",226,[[]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"to_string","","",227,[[],["string",3]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"equivalent","","",227,[[],["bool",15]]],[11,"pointer_metadata","","",227,[[]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"equivalent","","",229,[[],["bool",15]]],[11,"pointer_metadata","","",229,[[]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"to_string","","",230,[[],["string",3]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"equivalent","","",230,[[],["bool",15]]],[11,"pointer_metadata","","",230,[[]]],[11,"from","wasmer_compiler::target","",231,[[]]],[11,"into","","",231,[[]]],[11,"to_owned","","",231,[[]]],[11,"clone_into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"equivalent","","",231,[[],["bool",15]]],[11,"pointer_metadata","","",231,[[]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"equivalent","","",232,[[],["bool",15]]],[11,"pointer_metadata","","",232,[[]]],[11,"from","wasmer_compiler::trap","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"equivalent","","",233,[[],["bool",15]]],[11,"pointer_metadata","","",233,[[]]],[11,"resolve_metadata","","",233,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",233,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",233,[[],["result",4]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"pointer_metadata","","",234,[[]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"pointer_metadata","","",235,[[]]],[11,"from","wasmer_compiler::unwind","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"equivalent","","",236,[[],["bool",15]]],[11,"pointer_metadata","","",236,[[]]],[11,"resolve_metadata","","",236,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",236,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",236,[[],["result",4]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"pointer_metadata","","",237,[[]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"pointer_metadata","","",238,[[]]],[11,"from","wasmer_compiler::translator::environ","",239,[[]]],[11,"into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"pointer_metadata","","",239,[[]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"pointer_metadata","","",241,[[]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"pointer_metadata","","",242,[[]]],[11,"from","wasmer_compiler::translator::middleware","",245,[[]]],[11,"into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"pointer_metadata","","",245,[[]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"pointer_metadata","","",246,[[]]],[11,"from","wasmer_compiler::translator::state","",248,[[]]],[11,"into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"pointer_metadata","","",248,[[]]],[11,"from","wasmer_compiler::section","",249,[[]]],[11,"into","","",249,[[]]],[11,"to_owned","","",249,[[]]],[11,"clone_into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"equivalent","","",249,[[],["bool",15]]],[11,"pointer_metadata","","",249,[[]]],[11,"resolve_metadata","","",249,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",249,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",249,[[],["result",4]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"equivalent","","",250,[[],["bool",15]]],[11,"pointer_metadata","","",250,[[]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"pointer_metadata","","",251,[[]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"to_owned","","",252,[[]]],[11,"clone_into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"equivalent","","",252,[[],["bool",15]]],[11,"pointer_metadata","","",252,[[]]],[11,"resolve_metadata","","",252,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",252,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",252,[[],["result",4]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"pointer_metadata","","",253,[[]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"pointer_metadata","","",254,[[]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"to_owned","","",255,[[]]],[11,"clone_into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"equivalent","","",255,[[],["bool",15]]],[11,"pointer_metadata","","",255,[[]]],[11,"resolve_metadata","","",255,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",255,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",255,[[],["result",4]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"pointer_metadata","","",256,[[]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"pointer_metadata","","",257,[[]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"to_owned","","",258,[[]]],[11,"clone_into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"equivalent","","",258,[[],["bool",15]]],[11,"pointer_metadata","","",258,[[]]],[11,"resolve_metadata","","",258,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",258,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",258,[[],["result",4]]],[11,"from","","",259,[[]]],[11,"into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"pointer_metadata","","",259,[[]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"pointer_metadata","","",260,[[]]],[11,"from","wasmer_compiler::sourceloc","",261,[[]]],[11,"into","","",261,[[]]],[11,"to_owned","","",261,[[]]],[11,"clone_into","","",261,[[]]],[11,"to_string","","",261,[[],["string",3]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"equivalent","","",261,[[],["bool",15]]],[11,"pointer_metadata","","",261,[[]]],[11,"resolve_metadata","","",261,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",261,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",261,[[],["result",4]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"pointer_metadata","","",262,[[]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"pointer_metadata","","",263,[[]]],[11,"from","wasmer_compiler","",264,[[]]],[11,"into","","",264,[[]]],[11,"to_owned","","",264,[[]]],[11,"clone_into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"equivalent","","",264,[[],["bool",15]]],[11,"pointer_metadata","","",264,[[]]],[11,"resolve_metadata","","",264,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",264,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",264,[[],["result",4]]],[11,"drop","wasmer_compiler::lib::std::sync","",171,[[]]],[11,"drop","","",169,[[]]],[11,"drop","","",170,[[]]],[11,"drop","wasmer_compiler::lib::std::sync::mpsc","",141,[[]]],[11,"drop","wasmer_compiler::lib::std::sync","",166,[[]]],[11,"drop","wasmer_compiler::lib::std::sync::mpsc","",140,[[]]],[11,"drop","","",136,[[]]],[11,"as_ref","wasmer_compiler::lib::std::borrow","",1,[[],["path",3]]],[11,"as_ref","wasmer_compiler::lib::std::string","",131,[[],["path",3]]],[11,"as_ref","","",131,[[],["osstr",3]]],[11,"deref_mut","wasmer_compiler::lib::std::sync","",166,[[]]],[11,"deref_mut","","",171,[[]]],[11,"description","wasmer_compiler::lib::std::str","",113,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::sync::mpsc","",143,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::string","",132,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::sync::mpsc","",142,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::sync","",173,[[],["str",15]]],[11,"cause","","",173,[[],[["option",4],["error",8]]]],[11,"description","wasmer_compiler::lib::std::sync::mpsc","",144,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::boxed","",4,[[],["str",15]]],[11,"cause","","",4,[[],[["option",4],["error",8]]]],[11,"source","","",4,[[],[["option",4],["error",8]]]],[11,"description","wasmer_compiler::lib::std::sync","",172,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::sync::mpsc","",145,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::string","",133,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::sync::mpsc","",266,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::fmt","",265,[[],["str",15]]],[11,"description","wasmer_compiler::lib::std::str","",118,[[],["str",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[["pathbuf",3]],["bool",15]]],[11,"eq","","",1,[[["pathbuf",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",26,[[["hashset",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::sync::mpsc","",144,[[["recvtimeouterror",4]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[["osstring",3]],["bool",15]]],[11,"eq","","",1,[[["osstr",3]],["bool",15]]],[11,"eq","","",1,[[["osstr",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::sync::mpsc","",266,[[["recverror",3]],["bool",15]]],[11,"eq","","",142,[[["senderror",3]],["bool",15]]],[11,"ne","","",142,[[["senderror",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::sync","",164,[[["waittimeoutresult",3]],["bool",15]]],[11,"ne","","",164,[[["waittimeoutresult",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",5,[[["hashmap",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::sync::mpsc","",143,[[["tryrecverror",4]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[["osstr",3]],["bool",15]]],[11,"eq","","",1,[[["path",3]],["bool",15]]],[11,"eq","","",1,[[["path",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::sync::mpsc","",145,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",145,[[["trysenderror",4]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[["path",3]],["bool",15]]],[11,"eq","","",1,[[["osstring",3]],["bool",15]]],[11,"eq","","",1,[[["path",3]],["bool",15]]],[11,"eq","","",1,[[["osstr",3]],["bool",15]]],[11,"build_hasher","wasmer_compiler::lib::std::collections::hash_map","",24,[[],["defaulthasher",3]]],[11,"len","wasmer_compiler::lib::std::collections::hash_set","",29,[[],["usize",15]]],[11,"len","wasmer_compiler::lib::std::collections::hash_map","",14,[[],["usize",15]]],[11,"len","","",6,[[],["usize",15]]],[11,"len","","",9,[[],["usize",15]]],[11,"len","wasmer_compiler::lib::std::collections::hash_set","",27,[[],["usize",15]]],[11,"len","wasmer_compiler::lib::std::collections::hash_map","",7,[[],["usize",15]]],[11,"len","","",11,[[],["usize",15]]],[11,"len","","",15,[[],["usize",15]]],[11,"len","","",8,[[],["usize",15]]],[11,"len","wasmer_compiler::lib::std::collections::hash_set","",28,[[],["usize",15]]],[11,"len","wasmer_compiler::lib::std::collections::hash_map","",13,[[],["usize",15]]],[11,"len","","",10,[[],["usize",15]]],[11,"extend","wasmer_compiler::lib::std::collections","",5,[[]]],[11,"extend_one","","",5,[[]]],[11,"extend_reserve","","",5,[[["usize",15]]]],[11,"extend","","",26,[[]]],[11,"extend_one","","",26,[[]]],[11,"extend_reserve","","",26,[[["usize",15]]]],[11,"extend","","",5,[[]]],[11,"extend_one","","",5,[[]]],[11,"extend_reserve","","",5,[[["usize",15]]]],[11,"extend","","",26,[[]]],[11,"extend_one","","",26,[[]]],[11,"extend_reserve","","",26,[[["usize",15]]]],[11,"default","","Creates an empty <code>HashMap<K, V, S></code>, with the <code>Default</code> value …",5,[[],["hashmap",3]]],[11,"default","wasmer_compiler::lib::std::collections::hash_map","Constructs a new <code>RandomState</code>.",24,[[],["randomstate",3]]],[11,"default","","Creates a new <code>DefaultHasher</code> using <code>new</code>. See its …",25,[[],["defaulthasher",3]]],[11,"default","wasmer_compiler::lib::std::collections","Creates an empty <code>HashSet<T, S></code> with the <code>Default</code> value for …",26,[[],["hashset",3]]],[11,"default","wasmer_compiler::lib::std::sync","Creates a <code>Mutex<T></code>, with the <code>Default</code> value for T.",165,[[],["mutex",3]]],[11,"default","","Creates a <code>Condvar</code> which is ready to be waited on and …",163,[[],["condvar",3]]],[11,"default","wasmer_compiler::lib::std::boxed","",4,[[],[["osstr",3],["box",3],["global",3]]]],[11,"default","wasmer_compiler::lib::std::sync","Creates a new <code>RwLock<T></code>, with the <code>Default</code> value for T.",169,[[],["rwlock",3]]],[11,"default","wasmer_compiler::lib::std::boxed","",4,[[],[["box",3],["cstr",3],["global",3]]]],[11,"from_iter","wasmer_compiler::lib::std::collections","",26,[[],["hashset",3]]],[11,"from_iter","","",5,[[],["hashmap",3]]],[11,"into_iter","wasmer_compiler::lib::std::sync::mpsc","",136,[[],["intoiter",3]]],[11,"into_iter","wasmer_compiler::lib::std::collections","Creates a consuming iterator, that is, one that moves …",26,[[],["intoiter",3]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves …",5,[[],["intoiter",3]]],[11,"partial_cmp","wasmer_compiler::lib::std::borrow","",1,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["pathbuf",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["osstring",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["osstring",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",1,[[["pathbuf",3]],[["option",4],["ordering",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",266,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_set","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::hash_map","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_set","",34,[[],["union",3]]],[11,"clone","wasmer_compiler::lib::std::boxed","",4,[[],[["box",3],["cstr",3],["global",3]]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",140,[[],["sender",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",26,[[],["hashset",3]]],[11,"clone_from","","",26,[[["hashset",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_set","",27,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",142,[[],["senderror",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",5,[[],["hashmap",3]]],[11,"clone_from","","",5,[[["hashmap",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_set","",33,[[],["symmetricdifference",3]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_map","",25,[[],["defaulthasher",3]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",141,[[],["syncsender",3]]],[11,"clone","","",144,[[],["recvtimeouterror",4]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_map","",10,[[],["values",3]]],[11,"clone","wasmer_compiler::lib::std::boxed","",4,[[],[["global",3],["box",3],["path",3]]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",266,[[],["recverror",3]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_map","",9,[[],["keys",3]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",145,[[],["trysenderror",4]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_map","",6,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_set","",31,[[],["intersection",3]]],[11,"clone","wasmer_compiler::lib::std::sync","",164,[[],["waittimeoutresult",3]]],[11,"clone","wasmer_compiler::lib::std::sync::mpsc","",143,[[],["tryrecverror",4]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_map","",24,[[],["randomstate",3]]],[11,"clone","wasmer_compiler::lib::std::boxed","",4,[[],[["osstr",3],["box",3],["global",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::hash_set","",32,[[],["difference",3]]],[11,"next","","",31,[[],["option",4]]],[11,"size_hint","","",31,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",10,[[],["option",4]]],[11,"size_hint","","",10,[[]]],[11,"next","","",11,[[],["option",4]]],[11,"size_hint","","",11,[[]]],[11,"next","","",14,[[],["option",4]]],[11,"size_hint","","",14,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_set","",30,[[],["option",4]]],[11,"size_hint","","",30,[[]]],[11,"next","","",28,[[],["option",4]]],[11,"size_hint","","",28,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",12,[[],["option",4]]],[11,"size_hint","","",12,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_set","",32,[[],["option",4]]],[11,"size_hint","","",32,[[]]],[11,"next","","",34,[[],["option",4]]],[11,"size_hint","","",34,[[]]],[11,"next","","",33,[[],["option",4]]],[11,"size_hint","","",33,[[]]],[11,"next","","",27,[[],["option",4]]],[11,"size_hint","","",27,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",13,[[],["option",4]]],[11,"size_hint","","",13,[[]]],[11,"next","","",8,[[],["option",4]]],[11,"size_hint","","",8,[[]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"next","wasmer_compiler::lib::std::sync::mpsc","",138,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",15,[[],["option",4]]],[11,"size_hint","","",15,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","wasmer_compiler::lib::std::collections::hash_set","",29,[[],["option",4]]],[11,"size_hint","","",29,[[]]],[11,"next","wasmer_compiler::lib::std::sync::mpsc","",137,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::hash_map","",9,[[],["option",4]]],[11,"size_hint","","",9,[[]]],[11,"next","wasmer_compiler::lib::std::sync::mpsc","",139,[[],["option",4]]],[11,"index","wasmer_compiler::lib::std::collections","Returns a reference to the value corresponding to the …",5,[[]]],[11,"write","wasmer_compiler::lib::std::collections::hash_map","",25,[[]]],[11,"finish","","",25,[[],["u64",15]]],[11,"fmt","wasmer_compiler::lib::std::sync","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",266,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::mpsc","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fill_buf","wasmer_compiler::lib::std::boxed","",4,[[],[["error",3],["result",4]]]],[11,"consume","","",4,[[["usize",15]]]],[11,"read_until","","",4,[[["vec",3],["u8",15]],[["usize",15],["result",4],["error",3]]]],[11,"read_line","","",4,[[["string",3]],[["usize",15],["result",4],["error",3]]]],[11,"to_socket_addrs","wasmer_compiler::lib::std::string","",131,[[],[["error",3],["result",4],["intoiter",3]]]],[11,"seek","wasmer_compiler::lib::std::boxed","",4,[[["seekfrom",4]],[["result",4],["error",3],["u64",15]]]],[11,"read","","",4,[[],[["usize",15],["result",4],["error",3]]]],[11,"read_vectored","","",4,[[],[["usize",15],["result",4],["error",3]]]],[11,"is_read_vectored","","",4,[[],["bool",15]]],[11,"initializer","","",4,[[],["initializer",3]]],[11,"read_to_end","","",4,[[["vec",3]],[["usize",15],["result",4],["error",3]]]],[11,"read_to_string","","",4,[[["string",3]],[["usize",15],["result",4],["error",3]]]],[11,"read_exact","","",4,[[],[["result",4],["error",3]]]],[11,"write","","",4,[[],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored","","",4,[[],[["usize",15],["result",4],["error",3]]]],[11,"is_write_vectored","","",4,[[],["bool",15]]],[11,"flush","","",4,[[],[["result",4],["error",3]]]],[11,"write_all","","",4,[[],[["result",4],["error",3]]]],[11,"write_fmt","","",4,[[["arguments",3]],[["result",4],["error",3]]]],[11,"write","wasmer_compiler::lib::std::vec","",174,[[],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored","","",174,[[],[["usize",15],["result",4],["error",3]]]],[11,"is_write_vectored","","",174,[[],["bool",15]]],[11,"write_all","","",174,[[],[["result",4],["error",3]]]],[11,"flush","","",174,[[],[["result",4],["error",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["cstr",3]],[["cstr",3],["cow",4]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a [<code>String</code>] into a box of dyn [<code>Error</code>] + [<code>Send</code>] + […",4,[[["string",3]],[["box",3],["error",8],["global",3]]]],[11,"from","","Converts a <code>str</code> into a box of dyn [<code>Error</code>] + [<code>Send</code>] + [<code>Sync</code>]…",4,[[["str",15]],[["box",3],["error",8],["global",3]]]],[11,"from","","Converts a <code>PathBuf</code> into a <code>Box<Path></code>",4,[[["pathbuf",3]],[["global",3],["box",3],["path",3]]]],[11,"from","","",4,[[["cstr",3],["cow",4]],[["box",3],["cstr",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync","Converts a [<code>OsString</code>] into a [<code>Arc</code>]<code><OsStr></code> without copying …",146,[[["osstring",3]],[["osstr",3],["arc",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a [<code>String</code>] into a box of dyn [<code>Error</code>].",4,[[["string",3]],[["box",3],["error",8],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[["cstr",3]],[["arc",3],["cstr",3]]]],[11,"from","wasmer_compiler::lib::std::sync::mpsc","Converts a <code>SendError<T></code> into a <code>TrySendError<T></code>.",145,[[["senderror",3]],["trysenderror",4]]],[11,"from","wasmer_compiler::lib::std::boxed","",4,[[["path",3]],[["global",3],["box",3],["path",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["path",3]],[["path",3],["cow",4]]]],[11,"from","wasmer_compiler::lib::std::boxed","",4,[[["osstr",3],["cow",4]],[["osstr",3],["box",3],["global",3]]]],[11,"from","","",4,[[["cstr",3]],[["box",3],["cstr",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync","Converts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …",146,[[["path",3]],[["arc",3],["path",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["osstr",3]],[["cow",4],["osstr",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a type of [<code>Error</code>] into a box of dyn [<code>Error</code>].",4,[[],[["error",8],["box",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync::mpsc","Converts a <code>RecvError</code> into a <code>RecvTimeoutError</code>.",144,[[["recverror",3]],["recvtimeouterror",4]]],[11,"from","wasmer_compiler::lib::std::sync","Converts a [<code>CString</code>] into a [<code>Arc</code>]<code><CStr></code> without copying …",146,[[["cstring",3]],[["arc",3],["cstr",3]]]],[11,"from","","Converts a <code>PathBuf</code> into an <code>Arc</code> by moving the <code>PathBuf</code> data …",146,[[["pathbuf",3]],[["arc",3],["path",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a type of [<code>Error</code>] + [<code>Send</code>] + [<code>Sync</code>] into a box of…",4,[[],[["box",3],["error",8],["global",3]]]],[11,"from","","Converts a [<code>Cow</code>] into a box of dyn [<code>Error</code>].",4,[[["cow",4],["str",15]],[["box",3],["error",8],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[["osstr",3]],[["osstr",3],["arc",3]]]],[11,"from","","",173,[[["poisonerror",3]],["trylockerror",4]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["pathbuf",3]],[["path",3],["cow",4]]]],[11,"from","wasmer_compiler::lib::std::sync::mpsc","Converts a <code>RecvError</code> into a <code>TryRecvError</code>.",143,[[["recverror",3]],["tryrecverror",4]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a [<code>OsString</code>] into a [<code>Box</code>]<code><OsStr></code> without copying …",4,[[["osstring",3]],[["osstr",3],["box",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["cstring",3]],[["cstr",3],["cow",4]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a [<code>CString</code>] into a [<code>Box</code>]<code><CStr></code> without copying …",4,[[["cstring",3]],[["box",3],["cstr",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync","Creates a new mutex in an unlocked state ready for use. …",165,[[],["mutex",3]]],[11,"from","wasmer_compiler::lib::std::vec","Converts a [<code>CString</code>] into a [<code>Vec</code>]<code><u8></code>.",174,[[["cstring",3]],[["vec",3],["global",3],["u8",15]]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["cstring",3]],[["cstr",3],["cow",4]]]],[11,"from","wasmer_compiler::lib::std::sync","Creates a new instance of an <code>RwLock<T></code> which is unlocked. …",169,[[],["rwlock",3]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["osstring",3]],[["cow",4],["osstr",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","",4,[[["osstr",3]],[["osstr",3],["box",3],["global",3]]]],[11,"from","","",4,[[["cow",4],["path",3]],[["global",3],["box",3],["path",3]]]],[11,"from","","Converts a [<code>Cow</code>] into a box of dyn [<code>Error</code>] + [<code>Send</code>] + […",4,[[["cow",4],["str",15]],[["box",3],["error",8],["global",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["osstring",3]],[["cow",4],["osstr",3]]]],[11,"from","","",1,[[["pathbuf",3]],[["path",3],["cow",4]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a <code>str</code> into a box of dyn [<code>Error</code>].",4,[[["str",15]],[["box",3],["error",8],["global",3]]]],[11,"deref","wasmer_compiler::lib::std::sync","",171,[[]]],[11,"deref","","",166,[[]]],[11,"deref","","",170,[[]]],[11,"cmp","wasmer_compiler::lib::std::fmt","",265,[[["error",3]],["ordering",4]]],[11,"clone","wasmer_compiler::lib::std::str","",121,[[],["matchindices",3]]],[11,"clone","","",115,[[],["escapedefault",3]]],[11,"clone","","",119,[[],["lines",3]]],[11,"clone","wasmer_compiler::lib::std::sync::atomic","",150,[[],["ordering",4]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",100,[[],["searchstep",4]]],[11,"clone","wasmer_compiler::lib::std::str","",113,[[],["parseboolerror",3]]],[11,"clone","wasmer_compiler::lib::std::fmt","",265,[[],["error",3]]],[11,"clone","wasmer_compiler::lib::std::str","",122,[[],["rmatchindices",3]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",104,[[],["charslicesearcher",3]]],[11,"clone","wasmer_compiler::lib::std::str","",124,[[],["rmatches",3]]],[11,"clone","","",111,[[],["charindices",3]]],[11,"clone","","",114,[[],["escapedebug",3]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",105,[[],["charpredicatesearcher",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",35,[[],["bound",4]]],[11,"clone","wasmer_compiler::lib::std::str","",125,[[],["rsplit",3]]],[11,"clone","","",130,[[],["splitterminator",3]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",103,[[],["charsearcher",3]]],[11,"clone","wasmer_compiler::lib::std::str","",120,[[],["linesany",3]]],[11,"clone","","",123,[[],["matches",3]]],[11,"clone","","",108,[[],["splitasciiwhitespace",3]]],[11,"clone","","",112,[[],["chars",3]]],[11,"clone","","",116,[[],["escapeunicode",3]]],[11,"clone","","",126,[[],["split",3]]],[11,"clone","","",107,[[],["encodeutf16",3]]],[11,"clone","wasmer_compiler::lib::std::fmt","",82,[[],["arguments",3]]],[11,"clone","wasmer_compiler::lib::std::str::pattern","",106,[[],["strsearcher",3]]],[11,"clone","wasmer_compiler::lib::std::str","",128,[[],["splitn",3]]],[11,"clone","","",129,[[],["rsplitterminator",3]]],[11,"clone","","",109,[[],["splitwhitespace",3]]],[11,"clone","","",110,[[],["bytes",3]]],[11,"clone","","",118,[[],["utf8error",3]]],[11,"clone","","",127,[[],["rsplitn",3]]],[11,"default","wasmer_compiler::lib::std::sync::atomic","",159,[[],["atomicisize",3]]],[11,"default","wasmer_compiler::lib::std::fmt","",265,[[],["error",3]]],[11,"default","wasmer_compiler::lib::std::sync::atomic","",157,[[],["atomici64",3]]],[11,"default","","",153,[[],["atomici16",3]]],[11,"default","","",151,[[],["atomici8",3]]],[11,"default","","",155,[[],["atomici32",3]]],[11,"default","","Creates an <code>AtomicBool</code> initialized to <code>false</code>.",148,[[],["atomicbool",3]]],[11,"default","","",156,[[],["atomicu32",3]]],[11,"default","","",160,[[],["atomicusize",3]]],[11,"default","","",154,[[],["atomicu16",3]]],[11,"default","","",158,[[],["atomicu64",3]]],[11,"default","","Creates a null <code>AtomicPtr<T></code>.",149,[[],["atomicptr",3]]],[11,"default","","",152,[[],["atomicu8",3]]],[11,"hash","wasmer_compiler::lib::std::collections","",35,[[]]],[11,"hash","wasmer_compiler::lib::std::sync::atomic","",150,[[]]],[11,"hash","wasmer_compiler::lib::std::fmt","",265,[[]]],[11,"from","wasmer_compiler::lib::std::sync::atomic","Converts an <code>u8</code> into an <code>AtomicU8</code>.",152,[[["u8",15]],["atomicu8",3]]],[11,"from","","Converts an <code>u32</code> into an <code>AtomicU32</code>.",156,[[["u32",15]],["atomicu32",3]]],[11,"from","","Converts an <code>u16</code> into an <code>AtomicU16</code>.",154,[[["u16",15]],["atomicu16",3]]],[11,"from","","Converts an <code>i16</code> into an <code>AtomicI16</code>.",153,[[["i16",15]],["atomici16",3]]],[11,"from","","Converts an <code>u64</code> into an <code>AtomicU64</code>.",158,[[["u64",15]],["atomicu64",3]]],[11,"from","","Converts an <code>i32</code> into an <code>AtomicI32</code>.",155,[[["i32",15]],["atomici32",3]]],[11,"from","","Converts an <code>i8</code> into an <code>AtomicI8</code>.",151,[[["i8",15]],["atomici8",3]]],[11,"from","","Converts an <code>usize</code> into an <code>AtomicUsize</code>.",160,[[["usize",15]],["atomicusize",3]]],[11,"from","","Converts an <code>i64</code> into an <code>AtomicI64</code>.",157,[[["i64",15]],["atomici64",3]]],[11,"from","","Converts a <code>bool</code> into an <code>AtomicBool</code>.",148,[[["bool",15]],["atomicbool",3]]],[11,"from","","Converts an <code>isize</code> into an <code>AtomicIsize</code>.",159,[[["isize",15]],["atomicisize",3]]],[11,"from","","",149,[[],["atomicptr",3]]],[11,"haystack","wasmer_compiler::lib::std::str::pattern","",104,[[],["str",15]]],[11,"next","","",104,[[],["searchstep",4]]],[11,"next_match","","",104,[[],["option",4]]],[11,"next_reject","","",104,[[],["option",4]]],[11,"haystack","","",106,[[],["str",15]]],[11,"next","","",106,[[],["searchstep",4]]],[11,"next_match","","",106,[[],["option",4]]],[11,"haystack","","",105,[[],["str",15]]],[11,"next","","",105,[[],["searchstep",4]]],[11,"next_match","","",105,[[],["option",4]]],[11,"next_reject","","",105,[[],["option",4]]],[11,"haystack","","",103,[[],["str",15]]],[11,"next","","",103,[[],["searchstep",4]]],[11,"next_match","","",103,[[],["option",4]]],[11,"write_str","wasmer_compiler::lib::std::fmt","",92,[[["str",15]],[["error",3],["result",4]]]],[11,"write_char","","",92,[[["char",15]],[["error",3],["result",4]]]],[11,"write_fmt","","",92,[[["arguments",3]],[["error",3],["result",4]]]],[11,"next_back","wasmer_compiler::lib::std::str","",124,[[],[["str",15],["option",4]]]],[11,"next_back","","",121,[[],["option",4]]],[11,"next_back","","",120,[[],[["str",15],["option",4]]]],[11,"next_back","","",130,[[],[["str",15],["option",4]]]],[11,"next_back","","",126,[[],[["str",15],["option",4]]]],[11,"next_back","","",129,[[],[["str",15],["option",4]]]],[11,"next_back","","",119,[[],[["str",15],["option",4]]]],[11,"next_back","","",109,[[],[["str",15],["option",4]]]],[11,"next_back","","",110,[[],[["option",4],["u8",15]]]],[11,"nth_back","","",110,[[["usize",15]],["option",4]]],[11,"rfind","","",110,[[],["option",4]]],[11,"next_back","","",108,[[],[["str",15],["option",4]]]],[11,"next_back","","",112,[[],[["char",15],["option",4]]]],[11,"next_back","","",123,[[],[["str",15],["option",4]]]],[11,"next_back","","",111,[[],["option",4]]],[11,"next_back","","",125,[[],[["str",15],["option",4]]]],[11,"next_back","","",122,[[],["option",4]]],[11,"eq","","",113,[[["parseboolerror",3]],["bool",15]]],[11,"ne","","",113,[[["parseboolerror",3]],["bool",15]]],[11,"eq","","",118,[[["utf8error",3]],["bool",15]]],[11,"ne","","",118,[[["utf8error",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::sync::atomic","",150,[[["ordering",4]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",35,[[["bound",4]],["bool",15]]],[11,"ne","","",35,[[["bound",4]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::fmt","",265,[[["error",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::str::pattern","",100,[[["searchstep",4]],["bool",15]]],[11,"ne","","",100,[[["searchstep",4]],["bool",15]]],[11,"partial_cmp","wasmer_compiler::lib::std::fmt","",265,[[["error",3]],[["option",4],["ordering",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",265,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next_back","wasmer_compiler::lib::std::str::pattern","",105,[[],["searchstep",4]]],[11,"next_match_back","","",105,[[],["option",4]]],[11,"next_reject_back","","",105,[[],["option",4]]],[11,"next_back","","",103,[[],["searchstep",4]]],[11,"next_match_back","","",103,[[],["option",4]]],[11,"next_back","","",104,[[],["searchstep",4]]],[11,"next_match_back","","",104,[[],["option",4]]],[11,"next_reject_back","","",104,[[],["option",4]]],[11,"next_back","","",106,[[],["searchstep",4]]],[11,"next_match_back","","",106,[[],["option",4]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str::pattern","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str::pattern","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",265,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",130,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str::pattern","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str::pattern","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::str","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",127,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::fmt","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync::atomic","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","wasmer_compiler::lib::std::str","",120,[[],[["str",15],["option",4]]]],[11,"size_hint","","",120,[[]]],[11,"next","","",111,[[],["option",4]]],[11,"count","","",111,[[],["usize",15]]],[11,"size_hint","","",111,[[]]],[11,"last","","",111,[[],["option",4]]],[11,"next","","",126,[[],[["str",15],["option",4]]]],[11,"next","","",107,[[],[["option",4],["u16",15]]]],[11,"size_hint","","",107,[[]]],[11,"next","","",114,[[],[["char",15],["option",4]]]],[11,"size_hint","","",114,[[]]],[11,"try_fold","","",114,[[]]],[11,"fold","","",114,[[]]],[11,"next","","",125,[[],[["str",15],["option",4]]]],[11,"next","","",128,[[],[["str",15],["option",4]]]],[11,"next","","",110,[[],[["option",4],["u8",15]]]],[11,"size_hint","","",110,[[]]],[11,"count","","",110,[[],["usize",15]]],[11,"last","","",110,[[],["option",4]]],[11,"nth","","",110,[[["usize",15]],["option",4]]],[11,"all","","",110,[[],["bool",15]]],[11,"any","","",110,[[],["bool",15]]],[11,"find","","",110,[[],["option",4]]],[11,"position","","",110,[[],[["usize",15],["option",4]]]],[11,"rposition","","",110,[[],[["usize",15],["option",4]]]],[11,"__iterator_get_unchecked","","",110,[[["usize",15]],["u8",15]]],[11,"next","","",119,[[],[["str",15],["option",4]]]],[11,"size_hint","","",119,[[]]],[11,"last","","",119,[[],[["str",15],["option",4]]]],[11,"next","","",129,[[],[["str",15],["option",4]]]],[11,"next","","",108,[[],[["str",15],["option",4]]]],[11,"size_hint","","",108,[[]]],[11,"last","","",108,[[],[["str",15],["option",4]]]],[11,"next","","",121,[[],["option",4]]],[11,"next","","",130,[[],[["str",15],["option",4]]]],[11,"next","","",115,[[],[["char",15],["option",4]]]],[11,"size_hint","","",115,[[]]],[11,"try_fold","","",115,[[]]],[11,"fold","","",115,[[]]],[11,"next","","",124,[[],[["str",15],["option",4]]]],[11,"next","","",109,[[],[["str",15],["option",4]]]],[11,"size_hint","","",109,[[]]],[11,"last","","",109,[[],[["str",15],["option",4]]]],[11,"next","","",122,[[],["option",4]]],[11,"next","","",127,[[],[["str",15],["option",4]]]],[11,"next","","",112,[[],[["char",15],["option",4]]]],[11,"count","","",112,[[],["usize",15]]],[11,"size_hint","","",112,[[]]],[11,"last","","",112,[[],[["char",15],["option",4]]]],[11,"next","","",116,[[],[["char",15],["option",4]]]],[11,"size_hint","","",116,[[]]],[11,"try_fold","","",116,[[]]],[11,"fold","","",116,[[]]],[11,"next","","",123,[[],[["str",15],["option",4]]]],[11,"len","","",110,[[],["usize",15]]],[11,"is_empty","","",110,[[],["bool",15]]],[11,"deref","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"deref","wasmer_compiler::lib::std::sync","",146,[[]]],[11,"deref","wasmer_compiler::lib::std::collections::binary_heap","",37,[[]]],[11,"deref","wasmer_compiler::lib::std::string","",131,[[],["str",15]]],[11,"deref","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"deref","wasmer_compiler::lib::std::borrow","",1,[[]]],[11,"poll_next","wasmer_compiler::lib::std::boxed","",4,[[["context",3],["pin",3],["box",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",4,[[]]],[11,"as_ref","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"as_ref","wasmer_compiler::lib::std::borrow","",1,[[]]],[11,"as_ref","wasmer_compiler::lib::std::string","",131,[[]]],[11,"as_ref","","",131,[[],["str",15]]],[11,"as_ref","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"as_ref","wasmer_compiler::lib::std::vec","",178,[[]]],[11,"as_ref","","",177,[[]]],[11,"as_ref","wasmer_compiler::lib::std::sync","",146,[[]]],[11,"as_ref","wasmer_compiler::lib::std::vec","",174,[[],["vec",3]]],[11,"drop","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"drop","wasmer_compiler::lib::std::vec","",177,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::binary_heap","",37,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::linked_list","",73,[[]]],[11,"drop","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"drop","wasmer_compiler::lib::std::string","",135,[[]]],[11,"drop","wasmer_compiler::lib::std::sync","Drops the <code>Arc</code>.",146,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::btree_map","",56,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::binary_heap","Removes heap elements in heap order.",42,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::btree_map","",48,[[]]],[11,"drop","wasmer_compiler::lib::std::sync","Drops the <code>Weak</code> pointer.",147,[[]]],[11,"drop","wasmer_compiler::lib::std::vec","",176,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::vec_deque","",75,[[]]],[11,"drop","wasmer_compiler::lib::std::vec","",178,[[]]],[11,"drop","wasmer_compiler::lib::std::collections::btree_set","",63,[[]]],[11,"drop","wasmer_compiler::lib::std::collections","",46,[[]]],[11,"drop","wasmer_compiler::lib::std::vec","",175,[[]]],[11,"drop","wasmer_compiler::lib::std::collections","",67,[[]]],[11,"drop","","",74,[[]]],[11,"add_assign","wasmer_compiler::lib::std::string","",131,[[["str",15]]]],[11,"add_assign","wasmer_compiler::lib::std::borrow","",1,[[["str",15]]]],[11,"add_assign","","",1,[[["cow",4],["str",15]]]],[11,"deref_mut","wasmer_compiler::lib::std::collections::binary_heap","",37,[[]]],[11,"deref_mut","wasmer_compiler::lib::std::string","",131,[[],["str",15]]],[11,"deref_mut","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"deref_mut","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"eq","wasmer_compiler::lib::std::sync","Equality for two <code>Arc</code>s.",146,[[["arc",3]],["bool",15]]],[11,"ne","","Inequality for two <code>Arc</code>s.",146,[[["arc",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[["str",15]],["bool",15]]],[11,"ne","","",1,[[["str",15]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",74,[[],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[["cow",4]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::string","",132,[[["fromutf8error",3]],["bool",15]]],[11,"ne","","",132,[[["fromutf8error",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",46,[[["btreemap",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::boxed","",4,[[["box",3]],["bool",15]]],[11,"ne","","",4,[[["box",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[],["bool",15]]],[11,"ne","","",1,[[],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",74,[[],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::string","",131,[[["str",15]],["bool",15]]],[11,"ne","","",131,[[["str",15]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",74,[[],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[["vec",3]],["bool",15]]],[11,"ne","","",1,[[["vec",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::vec","",174,[[],["bool",15]]],[11,"ne","","",174,[[],["bool",15]]],[11,"eq","","",174,[[],["bool",15]]],[11,"ne","","",174,[[],["bool",15]]],[11,"eq","","",174,[[],["bool",15]]],[11,"ne","","",174,[[],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[["str",15]],["bool",15]]],[11,"ne","","",1,[[["str",15]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::string","",131,[[["str",15]],["bool",15]]],[11,"ne","","",131,[[["str",15]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[],["bool",15]]],[11,"ne","","",1,[[],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::string","",131,[[["cow",4]],["bool",15]]],[11,"ne","","",131,[[["cow",4]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::vec","",174,[[["vec",3]],["bool",15]]],[11,"ne","","",174,[[["vec",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",74,[[],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::vec","",174,[[],["bool",15]]],[11,"ne","","",174,[[],["bool",15]]],[11,"eq","","",174,[[],["bool",15]]],[11,"ne","","",174,[[],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",74,[[["vec",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::string","",131,[[["string",3]],["bool",15]]],[11,"ne","","",131,[[["string",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",74,[[],["bool",15]]],[11,"eq","","",67,[[["linkedlist",3]],["bool",15]]],[11,"ne","","",67,[[["linkedlist",3]],["bool",15]]],[11,"eq","","",64,[[["btreeset",3]],["bool",15]]],[11,"ne","","",64,[[["btreeset",3]],["bool",15]]],[11,"eq","","",79,[[["tryreserveerror",4]],["bool",15]]],[11,"ne","","",79,[[["tryreserveerror",4]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::borrow","",1,[[["string",3]],["bool",15]]],[11,"ne","","",1,[[["string",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",74,[[["vecdeque",3]],["bool",15]]],[11,"is_empty","wasmer_compiler::lib::std::collections::vec_deque","",78,[[],["bool",15]]],[11,"is_empty","wasmer_compiler::lib::std::collections::binary_heap","",38,[[],["bool",15]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",51,[[],["usize",15]]],[11,"len","","",48,[[],["usize",15]]],[11,"len","wasmer_compiler::lib::std::boxed","",4,[[],["usize",15]]],[11,"is_empty","","",4,[[],["bool",15]]],[11,"len","wasmer_compiler::lib::std::collections::btree_set","",65,[[],["usize",15]]],[11,"is_empty","wasmer_compiler::lib::std::collections::vec_deque","",76,[[],["bool",15]]],[11,"is_empty","wasmer_compiler::lib::std::collections::binary_heap","",39,[[],["bool",15]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",50,[[],["usize",15]]],[11,"len","","",47,[[],["usize",15]]],[11,"len","","",49,[[],["usize",15]]],[11,"len","wasmer_compiler::lib::std::collections::btree_set","",58,[[],["usize",15]]],[11,"is_empty","wasmer_compiler::lib::std::vec","",178,[[],["bool",15]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",57,[[],["usize",15]]],[11,"is_empty","wasmer_compiler::lib::std::collections::vec_deque","",77,[[],["bool",15]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",52,[[],["usize",15]]],[11,"is_empty","wasmer_compiler::lib::std::collections::binary_heap","",41,[[],["bool",15]]],[11,"len","wasmer_compiler::lib::std::collections::btree_map","",53,[[],["usize",15]]],[11,"is_empty","wasmer_compiler::lib::std::vec","",177,[[],["bool",15]]],[11,"call_once","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"index_mut","wasmer_compiler::lib::std::string","",131,[[["usize",15],["range",3]],["str",15]]],[11,"index_mut","","",131,[[["usize",15],["rangeinclusive",3]],["str",15]]],[11,"index_mut","","",131,[[["usize",15],["rangefrom",3]],["str",15]]],[11,"index_mut","wasmer_compiler::lib::std::collections","",74,[[["usize",15]]]],[11,"index_mut","wasmer_compiler::lib::std::string","",131,[[["usize",15],["rangeto",3]],["str",15]]],[11,"index_mut","","",131,[[["rangefull",3]],["str",15]]],[11,"index_mut","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"index_mut","wasmer_compiler::lib::std::string","",131,[[["usize",15],["rangetoinclusive",3]],["str",15]]],[11,"next_back","wasmer_compiler::lib::std::collections::vec_deque","",78,[[],["option",4]]],[11,"rfold","","",78,[[]]],[11,"try_rfold","","",78,[[]]],[11,"next_back","","",76,[[],["option",4]]],[11,"rfold","","",76,[[]]],[11,"next_back","wasmer_compiler::lib::std::collections::linked_list","",70,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",48,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::string","",135,[[],[["char",15],["option",4]]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",50,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::binary_heap","",39,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",57,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::vec","",177,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::linked_list","",68,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",47,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::boxed","",4,[[],["option",4]]],[11,"nth_back","","",4,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::linked_list","",69,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",51,[[],["option",4]]],[11,"next_back","","",53,[[],["option",4]]],[11,"next_back","","",54,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::vec","",176,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",49,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::binary_heap","",38,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_set","",58,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::vec","",178,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::binary_heap","",41,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",52,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::vec_deque","",75,[[],["option",4]]],[11,"next_back","","",77,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_set","",65,[[],["option",4]]],[11,"next_back","","",66,[[],["option",4]]],[11,"next_back","wasmer_compiler::lib::std::collections::btree_map","",55,[[],["option",4]]],[11,"extend","wasmer_compiler::lib::std::string","",131,[[]]],[11,"extend_one","","",131,[[["char",15]]]],[11,"extend_reserve","","",131,[[["usize",15]]]],[11,"extend","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"extend_one","","",174,[[]]],[11,"extend_reserve","","",174,[[["usize",15]]]],[11,"extend","wasmer_compiler::lib::std::string","",131,[[]]],[11,"extend_one","","",131,[[["cow",4],["str",15]]]],[11,"extend","wasmer_compiler::lib::std::collections","",67,[[]]],[11,"extend_one","","",67,[[]]],[11,"extend","wasmer_compiler::lib::std::string","",131,[[]]],[11,"extend","wasmer_compiler::lib::std::collections","",46,[[]]],[11,"extend_one","","",46,[[]]],[11,"extend","","",46,[[]]],[11,"extend_one","","",46,[[]]],[11,"extend","","",36,[[]]],[11,"extend_one","","",36,[[]]],[11,"extend_reserve","","",36,[[["usize",15]]]],[11,"extend","","",74,[[]]],[11,"extend_one","","",74,[[]]],[11,"extend_reserve","","",74,[[["usize",15]]]],[11,"extend","wasmer_compiler::lib::std::string","",131,[[]]],[11,"extend_one","","",131,[[["char",15]]]],[11,"extend_reserve","","",131,[[["usize",15]]]],[11,"extend","wasmer_compiler::lib::std::collections","",67,[[]]],[11,"extend_one","","",67,[[]]],[11,"extend","","",64,[[]]],[11,"extend_one","","",64,[[]]],[11,"extend","","",64,[[]]],[11,"extend_one","","",64,[[]]],[11,"extend","wasmer_compiler::lib::std::string","",131,[[]]],[11,"extend_one","","",131,[[["str",15]]]],[11,"extend","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"extend_one","","",174,[[]]],[11,"extend_reserve","","",174,[[["usize",15]]]],[11,"extend","wasmer_compiler::lib::std::collections","",74,[[]]],[11,"extend_one","","",74,[[]]],[11,"extend_reserve","","",74,[[["usize",15]]]],[11,"extend","wasmer_compiler::lib::std::string","",131,[[]]],[11,"extend_one","","",131,[[["string",3]]]],[11,"extend","wasmer_compiler::lib::std::collections","",36,[[]]],[11,"extend_one","","",36,[[]]],[11,"extend_reserve","","",36,[[["usize",15]]]],[11,"as_inner","wasmer_compiler::lib::std::vec","",178,[[]]],[11,"as_inner","wasmer_compiler::lib::std::collections::binary_heap","",39,[[]]],[11,"default","wasmer_compiler::lib::std::collections","Creates an empty <code>BTreeMap</code>.",46,[[],["btreemap",3]]],[11,"default","wasmer_compiler::lib::std::string","Creates an empty <code>String</code>.",131,[[],["string",3]]],[11,"default","wasmer_compiler::lib::std::sync","Creates a new <code>Arc<T></code>, with the <code>Default</code> value for <code>T</code>.",146,[[],["arc",3]]],[11,"default","wasmer_compiler::lib::std::borrow","Creates an owned Cow<\'a, B> with the default value for …",1,[[],["cow",4]]],[11,"default","wasmer_compiler::lib::std::boxed","",4,[[],[["global",3],["box",3],["str",15]]]],[11,"default","","",4,[[],[["box",3],["global",3]]]],[11,"default","wasmer_compiler::lib::std::vec","Creates an empty <code>Vec<T></code>.",174,[[],[["vec",3],["global",3]]]],[11,"default","wasmer_compiler::lib::std::sync","Constructs a new <code>Weak<T></code>, without allocating memory. …",147,[[],["weak",3]]],[11,"default","wasmer_compiler::lib::std::collections","Creates an empty <code>BinaryHeap<T></code>.",36,[[],["binaryheap",3]]],[11,"default","","Creates an empty <code>LinkedList<T></code>.",67,[[],["linkedlist",3]]],[11,"default","wasmer_compiler::lib::std::boxed","Creates a <code>Box<T></code>, with the <code>Default</code> value for T.",4,[[],[["box",3],["global",3]]]],[11,"default","wasmer_compiler::lib::std::collections","Creates an empty <code>BTreeSet</code>.",64,[[],["btreeset",3]]],[11,"default","","Creates an empty <code>VecDeque<T></code>.",74,[[],["vecdeque",3]]],[11,"from_iter","wasmer_compiler::lib::std::string","",131,[[],["string",3]]],[11,"from_iter","","",131,[[],["string",3]]],[11,"from_iter","","",131,[[],["string",3]]],[11,"from_iter","","",131,[[],["string",3]]],[11,"from_iter","wasmer_compiler::lib::std::collections","",64,[[],["btreeset",3]]],[11,"from_iter","","",74,[[],["vecdeque",3]]],[11,"from_iter","wasmer_compiler::lib::std::vec","",174,[[],[["vec",3],["global",3]]]],[11,"from_iter","wasmer_compiler::lib::std::borrow","",1,[[],[["cow",4],["str",15]]]],[11,"from_iter","","",1,[[],[["cow",4],["str",15]]]],[11,"from_iter","wasmer_compiler::lib::std::sync","Takes each element in the <code>Iterator</code> and collects it into …",146,[[],["arc",3]]],[11,"from_iter","wasmer_compiler::lib::std::collections","",67,[[],["linkedlist",3]]],[11,"from_iter","wasmer_compiler::lib::std::boxed","",4,[[],[["box",3],["global",3]]]],[11,"from_iter","wasmer_compiler::lib::std::borrow","",1,[[],["cow",4]]],[11,"from_iter","wasmer_compiler::lib::std::string","",131,[[],["string",3]]],[11,"from_iter","wasmer_compiler::lib::std::borrow","",1,[[],[["cow",4],["str",15]]]],[11,"from_iter","wasmer_compiler::lib::std::collections","",46,[[],["btreemap",3]]],[11,"from_iter","wasmer_compiler::lib::std::string","",131,[[],["string",3]]],[11,"from_iter","wasmer_compiler::lib::std::collections","",36,[[],["binaryheap",3]]],[11,"resume","wasmer_compiler::lib::std::boxed","",4,[[["pin",3],["box",3]],["generatorstate",4]]],[11,"into_iter","wasmer_compiler::lib::std::collections","Gets an iterator for moving out the <code>BTreeSet</code>\'s contents.",64,[[],["intoiter",3]]],[11,"into_iter","","Creates a consuming iterator, that is, one that moves …",36,[[],["intoiter",3]]],[11,"into_iter","","",46,[[],["intoiter",3]]],[11,"into_iter","wasmer_compiler::lib::std::vec","Creates a consuming iterator, that is, one that moves …",174,[[],["intoiter",3]]],[11,"into_iter","wasmer_compiler::lib::std::collections","Consumes the list into an iterator yielding elements by …",67,[[],["intoiter",3]]],[11,"into_iter","","Consumes the <code>VecDeque</code> into a front-to-back iterator …",74,[[],["intoiter",3]]],[11,"call_mut","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"partial_cmp","wasmer_compiler::lib::std::sync","Partial comparison for two <code>Arc</code>s.",146,[[["arc",3]],[["option",4],["ordering",4]]]],[11,"lt","","Less-than comparison for two <code>Arc</code>s.",146,[[["arc",3]],["bool",15]]],[11,"le","","\'Less than or equal to\' comparison for two <code>Arc</code>s.",146,[[["arc",3]],["bool",15]]],[11,"gt","","Greater-than comparison for two <code>Arc</code>s.",146,[[["arc",3]],["bool",15]]],[11,"ge","","\'Greater than or equal to\' comparison for two <code>Arc</code>s.",146,[[["arc",3]],["bool",15]]],[11,"partial_cmp","wasmer_compiler::lib::std::vec","",174,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::borrow","",1,[[["cow",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::collections","",46,[[["btreemap",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::boxed","",4,[[["box",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["box",3]],["bool",15]]],[11,"le","","",4,[[["box",3]],["bool",15]]],[11,"ge","","",4,[[["box",3]],["bool",15]]],[11,"gt","","",4,[[["box",3]],["bool",15]]],[11,"partial_cmp","wasmer_compiler::lib::std::collections","",67,[[["linkedlist",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_compiler::lib::std::string","",131,[[["string",3]],[["option",4],["ordering",4]]]],[11,"lt","","",131,[[["string",3]],["bool",15]]],[11,"le","","",131,[[["string",3]],["bool",15]]],[11,"gt","","",131,[[["string",3]],["bool",15]]],[11,"ge","","",131,[[["string",3]],["bool",15]]],[11,"partial_cmp","wasmer_compiler::lib::std::collections","",74,[[["vecdeque",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",64,[[["btreeset",3]],[["option",4],["ordering",4]]]],[11,"lt","","",64,[[["btreeset",3]],["bool",15]]],[11,"le","","",64,[[["btreeset",3]],["bool",15]]],[11,"gt","","",64,[[["btreeset",3]],["bool",15]]],[11,"ge","","",64,[[["btreeset",3]],["bool",15]]],[11,"poll","wasmer_compiler::lib::std::boxed","",4,[[["box",3],["context",3],["pin",3]],["poll",4]]],[11,"fmt","wasmer_compiler::lib::std::collections::vec_deque","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::vec_deque","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::borrow","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::vec","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::vec_deque","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::vec_deque","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::vec","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::string","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::vec","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::vec","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_map","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::linked_list","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::btree_set","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::vec","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections::binary_heap","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::boxed","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"borrow_mut","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"borrow_mut","wasmer_compiler::lib::std::string","",131,[[],["str",15]]],[11,"borrow_mut","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"clone","wasmer_compiler::lib::std::collections","",64,[[],["btreeset",3]]],[11,"clone_from","","",64,[[["btreeset",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::vec_deque","",77,[[],["intoiter",3]]],[11,"clone","","",78,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",59,[[],["difference",3]]],[11,"clone","wasmer_compiler::lib::std::sync","Makes a clone of the <code>Arc</code> pointer.",146,[[],["arc",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",66,[[],["range",3]]],[11,"clone","","",61,[[],["intersection",3]]],[11,"clone","wasmer_compiler::lib::std::vec","",174,[[],["vec",3]]],[11,"clone_from","","",174,[[["vec",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::binary_heap","",39,[[],["intoiter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::linked_list","",71,[[],["cursor",3]]],[11,"clone","","",68,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",58,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",79,[[],["tryreserveerror",4]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_map","",54,[[],["range",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",46,[[],["btreemap",3]]],[11,"clone","wasmer_compiler::lib::std::collections::binary_heap","",40,[[],["intoitersorted",3]]],[11,"clone","","",38,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",60,[[],["symmetricdifference",3]]],[11,"clone","wasmer_compiler::lib::std::borrow","",1,[[],["cow",4]]],[11,"clone_from","","",1,[[["cow",4]]]],[11,"clone","wasmer_compiler::lib::std::string","",132,[[],["fromutf8error",3]]],[11,"clone","wasmer_compiler::lib::std::boxed","",4,[[],["box",3]]],[11,"clone_from","","",4,[[["box",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::linked_list","",70,[[],["intoiter",3]]],[11,"clone","wasmer_compiler::lib::std::sync","Makes a clone of the <code>Weak</code> pointer that points to the same …",147,[[],["weak",3]]],[11,"clone","wasmer_compiler::lib::std::vec","",178,[[],["intoiter",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_set","",62,[[],["union",3]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_map","",47,[[],["iter",3]]],[11,"clone","wasmer_compiler::lib::std::boxed","Returns a new box with a <code>clone()</code> of this box\'s contents.",4,[[],["box",3]]],[11,"clone_from","","Copies <code>source</code>\'s contents into <code>self</code> without creating a new …",4,[[["box",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_map","",49,[[],["keys",3]]],[11,"clone","wasmer_compiler::lib::std::string","",131,[[],["string",3]]],[11,"clone_from","","",131,[[["string",3]]]],[11,"clone","wasmer_compiler::lib::std::boxed","",4,[[],[["global",3],["box",3],["str",15]]]],[11,"clone","wasmer_compiler::lib::std::collections","",36,[[],["binaryheap",3]]],[11,"clone_from","","",36,[[["binaryheap",3]]]],[11,"clone","wasmer_compiler::lib::std::collections::btree_map","",50,[[],["values",3]]],[11,"clone","wasmer_compiler::lib::std::collections","",67,[[],["linkedlist",3]]],[11,"clone_from","","",67,[[["linkedlist",3]]]],[11,"clone","","",74,[[],["vecdeque",3]]],[11,"clone_from","","",74,[[["vecdeque",3]]]],[11,"call","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",63,[[],["option",4]]],[11,"size_hint","","",63,[[]]],[11,"next","wasmer_compiler::lib::std::vec","",178,[[],["option",4]]],[11,"size_hint","","",178,[[]]],[11,"count","","",178,[[],["usize",15]]],[11,"__iterator_get_unchecked","","",178,[[["usize",15]]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",65,[[],["option",4]]],[11,"size_hint","","",65,[[]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",38,[[],["option",4]]],[11,"size_hint","","",38,[[]]],[11,"last","","",38,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::vec_deque","",75,[[],["option",4]]],[11,"size_hint","","",75,[[]]],[11,"next","wasmer_compiler::lib::std::collections::linked_list","",68,[[],["option",4]]],[11,"size_hint","","",68,[[]]],[11,"last","","",68,[[],["option",4]]],[11,"next","","",70,[[],["option",4]]],[11,"size_hint","","",70,[[]]],[11,"next","wasmer_compiler::lib::std::collections::vec_deque","",78,[[],["option",4]]],[11,"size_hint","","",78,[[]]],[11,"fold","","",78,[[]]],[11,"try_fold","","",78,[[]]],[11,"nth","","",78,[[["usize",15]],["option",4]]],[11,"last","","",78,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",39,[[],["option",4]]],[11,"size_hint","","",39,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",47,[[],["option",4]]],[11,"size_hint","","",47,[[]]],[11,"last","","",47,[[],["option",4]]],[11,"min","","",47,[[],["option",4]]],[11,"max","","",47,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",40,[[],["option",4]]],[11,"size_hint","","",40,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",48,[[],["option",4]]],[11,"size_hint","","",48,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",59,[[],["option",4]]],[11,"size_hint","","",59,[[]]],[11,"min","","",59,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",52,[[],["option",4]]],[11,"size_hint","","",52,[[]]],[11,"last","","",52,[[],["option",4]]],[11,"min","","",52,[[],["option",4]]],[11,"max","","",52,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::vec","",176,[[],["option",4]]],[11,"size_hint","","",176,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"next","wasmer_compiler::lib::std::boxed","",4,[[],["option",4]]],[11,"size_hint","","",4,[[]]],[11,"nth","","",4,[[["usize",15]],["option",4]]],[11,"last","","",4,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::linked_list","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",66,[[],["option",4]]],[11,"last","","",66,[[],["option",4]]],[11,"min","","",66,[[],["option",4]]],[11,"max","","",66,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",51,[[],["option",4]]],[11,"size_hint","","",51,[[]]],[11,"last","","",51,[[],["option",4]]],[11,"next","","",50,[[],["option",4]]],[11,"size_hint","","",50,[[]]],[11,"last","","",50,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::vec","",177,[[],["option",4]]],[11,"size_hint","","",177,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",49,[[],["option",4]]],[11,"size_hint","","",49,[[]]],[11,"last","","",49,[[],["option",4]]],[11,"min","","",49,[[],["option",4]]],[11,"max","","",49,[[],["option",4]]],[11,"next","","",53,[[],["option",4]]],[11,"size_hint","","",53,[[]]],[11,"last","","",53,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::linked_list","",69,[[],["option",4]]],[11,"size_hint","","",69,[[]]],[11,"last","","",69,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",41,[[],["option",4]]],[11,"size_hint","","",41,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",55,[[],["option",4]]],[11,"last","","",55,[[],["option",4]]],[11,"min","","",55,[[],["option",4]]],[11,"max","","",55,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::binary_heap","",42,[[],["option",4]]],[11,"size_hint","","",42,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",57,[[],["option",4]]],[11,"size_hint","","",57,[[]]],[11,"last","","",57,[[],["option",4]]],[11,"min","","",57,[[],["option",4]]],[11,"max","","",57,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",61,[[],["option",4]]],[11,"size_hint","","",61,[[]]],[11,"min","","",61,[[],["option",4]]],[11,"next","","",58,[[],["option",4]]],[11,"size_hint","","",58,[[]]],[11,"last","","",58,[[],["option",4]]],[11,"min","","",58,[[],["option",4]]],[11,"max","","",58,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::vec","",175,[[],["option",4]]],[11,"size_hint","","",175,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_map","",54,[[],["option",4]]],[11,"last","","",54,[[],["option",4]]],[11,"min","","",54,[[],["option",4]]],[11,"max","","",54,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::vec_deque","",77,[[],["option",4]]],[11,"size_hint","","",77,[[]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",62,[[],["option",4]]],[11,"size_hint","","",62,[[]]],[11,"min","","",62,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::vec_deque","",76,[[],["option",4]]],[11,"size_hint","","",76,[[]]],[11,"fold","","",76,[[]]],[11,"nth","","",76,[[["usize",15]],["option",4]]],[11,"last","","",76,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::collections::btree_set","",60,[[],["option",4]]],[11,"size_hint","","",60,[[]]],[11,"min","","",60,[[],["option",4]]],[11,"next","wasmer_compiler::lib::std::string","",135,[[],[["char",15],["option",4]]]],[11,"size_hint","","",135,[[]]],[11,"last","","",135,[[],[["char",15],["option",4]]]],[11,"index","","",131,[[["usize",15],["range",3]],["str",15]]],[11,"index","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"index","wasmer_compiler::lib::std::string","",131,[[["usize",15],["rangeinclusive",3]],["str",15]]],[11,"index","","",131,[[["rangefull",3]],["str",15]]],[11,"index","","",131,[[["usize",15],["rangetoinclusive",3]],["str",15]]],[11,"index","wasmer_compiler::lib::std::collections","",74,[[["usize",15]]]],[11,"index","wasmer_compiler::lib::std::string","",131,[[["usize",15],["rangeto",3]],["str",15]]],[11,"index","","",131,[[["usize",15],["rangefrom",3]],["str",15]]],[11,"index","wasmer_compiler::lib::std::collections","Returns a reference to the value corresponding to the …",46,[[]]],[11,"finish","wasmer_compiler::lib::std::boxed","",4,[[],["u64",15]]],[11,"write","","",4,[[]]],[11,"write_u8","","",4,[[["u8",15]]]],[11,"write_u16","","",4,[[["u16",15]]]],[11,"write_u32","","",4,[[["u32",15]]]],[11,"write_u64","","",4,[[["u64",15]]]],[11,"write_u128","","",4,[[["u128",15]]]],[11,"write_usize","","",4,[[["usize",15]]]],[11,"write_i8","","",4,[[["i8",15]]]],[11,"write_i16","","",4,[[["i16",15]]]],[11,"write_i32","","",4,[[["i32",15]]]],[11,"write_i64","","",4,[[["i64",15]]]],[11,"write_i128","","",4,[[["i128",15]]]],[11,"write_isize","","",4,[[["isize",15]]]],[11,"fmt","wasmer_compiler::lib::std::string","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::borrow","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::collections","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::boxed","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"borrow","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"borrow","wasmer_compiler::lib::std::string","",131,[[],["str",15]]],[11,"borrow","wasmer_compiler::lib::std::sync","",146,[[]]],[11,"borrow","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"borrow","wasmer_compiler::lib::std::borrow","",1,[[]]],[11,"try_from","wasmer_compiler::lib::std::boxed","",4,[[["box",3],["global",3]],[["box",3],["result",4]]]],[11,"try_from","wasmer_compiler::lib::std::sync","",146,[[["arc",3]],[["result",4],["arc",3]]]],[11,"from_str","wasmer_compiler::lib::std::string","",131,[[["str",15]],[["result",4],["string",3]]]],[11,"to_string","wasmer_compiler::lib::std::borrow","",1,[[],["string",3]]],[11,"to_string","wasmer_compiler::lib::std::string","",131,[[],["string",3]]],[11,"add","wasmer_compiler::lib::std::borrow","",1,[[["cow",4],["str",15]]]],[11,"add","wasmer_compiler::lib::std::string","",131,[[["str",15]],["string",3]]],[11,"add","wasmer_compiler::lib::std::borrow","",1,[[["str",15]]]],[11,"as_mut","wasmer_compiler::lib::std::string","",131,[[],["str",15]]],[11,"as_mut","wasmer_compiler::lib::std::vec","",174,[[],["vec",3]]],[11,"as_mut","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"as_mut","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[["str",15]],[["str",15],["arc",3]]]],[11,"from","wasmer_compiler::lib::std::string","",131,[[["string",3]],["string",3]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[["cow",4]],["arc",3]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a <code>&str</code> into a <code>Box<str></code>",4,[[["str",15]],[["global",3],["box",3],["str",15]]]],[11,"from","","Converts a generic type <code>T</code> into a <code>Box<T></code>",4,[[],[["box",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::string","",131,[[["char",15]],["string",3]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a <code>Box<str></code> into a <code>Box<[u8]></code>",4,[[["box",3],["str",15]],["box",3]]],[11,"from","","Converts a <code>[T; N]</code> into a <code>Box<[T]></code>",4,[[],[["box",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::vec","",174,[[],[["vec",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["vec",3]],["cow",4]]],[11,"from","","",1,[[["str",15]],[["cow",4],["str",15]]]],[11,"from","","",1,[[["string",3]],[["cow",4],["str",15]]]],[11,"from","wasmer_compiler::lib::std::vec","",174,[[["cow",4]],[["vec",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::string","",131,[[["cow",4],["str",15]],["string",3]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[],["cow",4]]],[11,"from","wasmer_compiler::lib::std::boxed","",4,[[["str",15],["cow",4]],[["global",3],["box",3],["str",15]]]],[11,"from","wasmer_compiler::lib::std::vec","Converts a <code>BinaryHeap<T></code> into a <code>Vec<T></code>.",174,[[["binaryheap",3]],[["vec",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[["box",3],["global",3]],["arc",3]]],[11,"from","wasmer_compiler::lib::std::boxed","",4,[[["vec",3]],["box",3]]],[11,"from","","Converts the given <code>String</code> to a boxed <code>str</code> slice that is …",4,[[["string",3]],[["global",3],["box",3],["str",15]]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[],["arc",3]]],[11,"from","wasmer_compiler::lib::std::string","Converts a <code>&mut str</code> into a <code>String</code>.",131,[[["str",15]],["string",3]]],[11,"from","wasmer_compiler::lib::std::vec","",174,[[["box",3]],["vec",3]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["vec",3],["global",3]],["cow",4]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[["string",3]],[["str",15],["arc",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","",4,[[["cow",4]],[["box",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::collections","",79,[[["layouterror",3]],["tryreserveerror",4]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[],["arc",3]]],[11,"from","wasmer_compiler::lib::std::borrow","",1,[[["string",3]],[["cow",4],["str",15]]]],[11,"from","wasmer_compiler::lib::std::string","Converts the given boxed <code>str</code> slice to a <code>String</code>. It is …",131,[[["str",15],["global",3],["box",3]],["string",3]]],[11,"from","wasmer_compiler::lib::std::vec","Turn a <code>VecDeque<T></code> into a <code>Vec<T></code>.",174,[[["vecdeque",3]],[["vec",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::sync","",146,[[["vec",3],["global",3]],["arc",3]]],[11,"from","wasmer_compiler::lib::std::vec","Converts the given <code>String</code> to a vector <code>Vec</code> that holds …",174,[[["string",3]],[["vec",3],["global",3],["u8",15]]]],[11,"from","wasmer_compiler::lib::std::string","",131,[[["str",15]],["string",3]]],[11,"from","wasmer_compiler::lib::std::collections","Converts a <code>Vec<T></code> into a <code>BinaryHeap<T></code>.",36,[[["vec",3],["global",3]],["binaryheap",3]]],[11,"from","wasmer_compiler::lib::std::vec","",174,[[],[["vec",3],["global",3]]]],[11,"from","","",174,[[["str",15]],[["vec",3],["global",3],["u8",15]]]],[11,"from","","",174,[[],[["vec",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","Converts a <code>&[T]</code> into a <code>Box<[T]></code>",4,[[],[["box",3],["global",3]]]],[11,"from","wasmer_compiler::lib::std::collections","Turn a <code>Vec<T></code> into a <code>VecDeque<T></code>.",74,[[["vec",3],["global",3]],["vecdeque",3]]],[11,"write_str","wasmer_compiler::lib::std::string","",131,[[["str",15]],[["error",3],["result",4]]]],[11,"write_char","","",131,[[["char",15]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::boxed","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_compiler::lib::std::sync","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cmp","wasmer_compiler::lib::std::collections","",64,[[["btreeset",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::borrow","",1,[[["cow",4]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::collections","",74,[[["vecdeque",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::boxed","",4,[[["box",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::sync","Comparison for two <code>Arc</code>s.",146,[[["arc",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::vec","",174,[[["vec",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::collections","",67,[[["linkedlist",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::string","",131,[[["string",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::lib::std::collections","",46,[[["btreemap",3]],["ordering",4]]],[11,"hash","wasmer_compiler::lib::std::string","",131,[[]]],[11,"hash","wasmer_compiler::lib::std::borrow","",1,[[]]],[11,"hash","wasmer_compiler::lib::std::collections","",67,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",74,[[]]],[11,"hash","wasmer_compiler::lib::std::sync","",146,[[]]],[11,"hash","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"hash","wasmer_compiler::lib::std::collections","",64,[[]]],[11,"hash","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"size_of_val","wasmer_compiler::lib::std::vec","",174,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",151,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",153,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",159,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",157,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::sync","",169,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",152,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",155,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",160,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",156,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::string","",131,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",158,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::boxed","",4,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::sync","",165,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",148,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::sync","",146,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::collections","",5,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::lib::std::sync::atomic","",154,[[["memoryusagetracker",8]],["usize",15]]],[11,"track","wasmer_compiler::lib::std::collections","",26,[[],["bool",15]]],[11,"track","","",64,[[],["bool",15]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",151,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",64,[[],["result",4]]],[11,"serialize","","",36,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",148,[[],["result",4]]],[11,"serialize","","",153,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::string","",131,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",67,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync","",146,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",157,[[],["result",4]]],[11,"serialize","","",156,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",46,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",158,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",26,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",154,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",35,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",160,[[],["result",4]]],[11,"serialize","","",159,[[],["result",4]]],[11,"serialize","","",155,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync","",147,[[],["result",4]]],[11,"serialize","","",169,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",152,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::fmt","",82,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",5,[[],["result",4]]],[11,"serialize","","",74,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::boxed","",4,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::vec","",174,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::borrow","",1,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync","",165,[[],["result",4]]],[11,"into_deserializer","wasmer_compiler::lib::std::collections","",26,[[]]],[11,"into_deserializer","wasmer_compiler::lib::std::borrow","",1,[[],["cowstrdeserializer",3]]],[11,"into_deserializer","wasmer_compiler::lib::std::collections","",46,[[]]],[11,"into_deserializer","","",64,[[]]],[11,"into_deserializer","wasmer_compiler::lib::std::vec","",174,[[]]],[11,"into_deserializer","wasmer_compiler::lib::std::collections","",5,[[]]],[11,"into_deserializer","wasmer_compiler::lib::std::string","",131,[[],["stringdeserializer",3]]],[11,"custom","wasmer_compiler::lib::std::fmt","",265,[[],["error",3]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",153,[[],[["result",4],["atomici16",3]]]],[11,"deserialize","","",151,[[],[["result",4],["atomici8",3]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",64,[[],[["btreeset",3],["result",4]]]],[11,"deserialize_in_place","","",64,[[["btreeset",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",158,[[],[["atomicu64",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::sync","",169,[[],[["result",4],["rwlock",3]]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",155,[[],[["result",4],["atomici32",3]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",26,[[],[["result",4],["hashset",3]]]],[11,"deserialize_in_place","","",26,[[["hashset",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::sync","",147,[[],[["result",4],["weak",3]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",35,[[],[["result",4],["bound",4]]]],[11,"deserialize","","",36,[[],[["binaryheap",3],["result",4]]]],[11,"deserialize_in_place","","",36,[[["binaryheap",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",160,[[],[["result",4],["atomicusize",3]]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",4,[[],[["result",4],["box",3]]]],[11,"deserialize","","",4,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",74,[[],[["vecdeque",3],["result",4]]]],[11,"deserialize_in_place","","",74,[[["vecdeque",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::sync","",146,[[],[["arc",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",148,[[],[["result",4],["atomicbool",3]]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",4,[[],[["box",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",5,[[],[["result",4],["hashmap",3]]]],[11,"deserialize","","",46,[[],[["btreemap",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",4,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",156,[[],[["result",4],["atomicu32",3]]]],[11,"deserialize","","",152,[[],[["atomicu8",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",4,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_compiler::lib::std::borrow","",1,[[],[["cow",4],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::string","",131,[[],[["string",3],["result",4]]]],[11,"deserialize_in_place","","",131,[[["string",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",154,[[],[["result",4],["atomicu16",3]]]],[11,"deserialize","","",159,[[],[["atomicisize",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::sync","",165,[[],[["result",4],["mutex",3]]]],[11,"deserialize","wasmer_compiler::lib::std::collections","",67,[[],[["result",4],["linkedlist",3]]]],[11,"deserialize_in_place","","",67,[[["linkedlist",3]],["result",4]]],[11,"deserialize","wasmer_compiler::lib::std::sync::atomic","",157,[[],[["atomici64",3],["result",4]]]],[11,"deserialize","wasmer_compiler::lib::std::vec","",174,[[],[["result",4],["vec",3]]]],[11,"deserialize_in_place","","",174,[[["vec",3]],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync","",147,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",154,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync","",146,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",158,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::string","",131,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::vec","",174,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::boxed","",4,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",155,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",5,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",152,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::collections","",26,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::sync::atomic","",151,[[],["result",4]]],[11,"serialize","","",156,[[],["result",4]]],[11,"serialize","","",153,[[],["result",4]]],[11,"serialize","","",148,[[],["result",4]]],[11,"serialize","","",157,[[],["result",4]]],[11,"deserialize","","",153,[[],[["result",4],["atomici16",3]]]],[11,"deserialize","","",155,[[],[["result",4],["atomici32",3]]]],[11,"deserialize","","",157,[[],[["atomici64",3],["result",4]]]],[11,"deserialize","","",154,[[],[["result",4],["atomicu16",3]]]],[11,"deserialize","","",158,[[],[["result",4],["atomicu64",3]]]],[11,"deserialize","","",152,[[],[["atomicu8",3],["result",4]]]],[11,"deserialize","","",151,[[],[["atomici8",3],["result",4]]]],[11,"deserialize","","",156,[[],[["result",4],["atomicu32",3]]]],[11,"deserialize","","",148,[[],[["result",4],["atomicbool",3]]]],[11,"resolve","wasmer_compiler::lib::std::sync","",146,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::lib::std::collections","",26,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::lib::std::sync::atomic","",152,[[["usize",15],["maybeuninit",19],["atomicresolver",3]]]],[11,"resolve","","",156,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::lib::std::string","",131,[[["usize",15],["maybeuninit",19],["stringresolver",3]]]],[11,"resolve","wasmer_compiler::lib::std::vec","",174,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::lib::std::sync::atomic","",154,[[["usize",15],["maybeuninit",19],["atomicresolver",3]]]],[11,"resolve","wasmer_compiler::lib::std::boxed","",4,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::lib::std::sync::atomic","",158,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","","",148,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","","",157,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","","",155,[[["usize",15],["maybeuninit",19],["atomicresolver",3]]]],[11,"resolve","wasmer_compiler::lib::std::collections","",5,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::lib::std::sync","",147,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::lib::std::sync::atomic","",153,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","","",151,[[["usize",15],["maybeuninit",19],["atomicresolver",3]]]],[11,"data_address","wasmer_compiler::lib::std::sync","",146,[[]]],[11,"eq","wasmer_compiler::lib::std::vec","",174,[[["archivedvec",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::collections","",5,[[["archivedhashmap",3]],["bool",15]]],[11,"eq","wasmer_compiler::lib::std::string","",131,[[["archivedstring",3]],["bool",15]]],[11,"serialize","wasmer_compiler","",264,[[],["result",4]]],[11,"fmt","","",264,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",264,[[],["features",3]]],[11,"clone","","",264,[[],["features",3]]],[11,"deserialize","","",264,[[],[["features",3],["result",4]]]],[11,"serialize","","",264,[[],["result",4]]],[11,"resolve","","",264,[[["usize",15],["maybeuninit",19]]]],[11,"eq","","",264,[[["features",3]],["bool",15]]],[11,"ne","","",264,[[["features",3]],["bool",15]]],[11,"size_of_val","","",264,[[["memoryusagetracker",8]],["usize",15]]],[11,"from_fallible_iter","wasmer_compiler::lib::std::collections","",5,[[],[["result",4],["hashmap",3]]]],[11,"from_fallible_iter","wasmer_compiler::lib::std::vec","",174,[[],[["vec",3],["result",4]]]],[11,"from_fallible_iter","wasmer_compiler::lib::std::collections","",64,[[],[["btreeset",3],["result",4]]]],[11,"from_fallible_iter","","",26,[[],[["hashset",3],["result",4]]]],[11,"from_fallible_iter","","",46,[[],[["btreemap",3],["result",4]]]],[11,"next_back","wasmer_compiler::lib::std::boxed","",4,[[],[["result",4],["option",4]]]],[11,"next","","",4,[[],[["result",4],["option",4]]]],[11,"size_hint","","",4,[[]]],[11,"nth","","",4,[[["usize",15]],[["result",4],["option",4]]]],[11,"fmt","wasmer_compiler","",225,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",229,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",224,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",226,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",230,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",223,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",225,[[],["callingconvention",4]]],[11,"clone","","",227,[[],["operatingsystem",4]]],[11,"clone","","",223,[[],["architecture",4]]],[11,"clone","","",229,[[],["pointerwidth",4]]],[11,"clone","","",226,[[],["endianness",4]]],[11,"clone","","",230,[[],["triple",3]]],[11,"clone","","",224,[[],["binaryformat",4]]],[11,"from_str","","",223,[[["str",15]],[["architecture",4],["result",4]]]],[11,"from_str","","",224,[[["str",15]],[["result",4],["binaryformat",4]]]],[11,"from_str","","",227,[[["str",15]],[["result",4],["operatingsystem",4]]]],[11,"from_str","","",230,[[["str",15]],[["triple",3],["result",4]]]],[11,"fmt","","",230,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",227,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",223,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",224,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",226,[[]]],[11,"hash","","",224,[[]]],[11,"hash","","",225,[[]]],[11,"hash","","",230,[[]]],[11,"hash","","",223,[[]]],[11,"hash","","",227,[[]]],[11,"hash","","",229,[[]]],[11,"eq","","",224,[[["binaryformat",4]],["bool",15]]],[11,"eq","","",223,[[["architecture",4]],["bool",15]]],[11,"ne","","",223,[[["architecture",4]],["bool",15]]],[11,"eq","","",225,[[["callingconvention",4]],["bool",15]]],[11,"eq","","",226,[[["endianness",4]],["bool",15]]],[11,"eq","","",227,[[["operatingsystem",4]],["bool",15]]],[11,"ne","","",227,[[["operatingsystem",4]],["bool",15]]],[11,"eq","","",229,[[["pointerwidth",4]],["bool",15]]],[11,"eq","","",230,[[["triple",3]],["bool",15]]],[11,"ne","","",230,[[["triple",3]],["bool",15]]],[11,"deserialize","wasmer_compiler::lib::std::borrow","",1,[[],[["result",4],["cow",4]]]],[11,"deserialize","wasmer_compiler::lib::std::boxed","",4,[[],[["result",4],["box",3]]]],[11,"deserialize","","",4,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_compiler::lib::std::borrow","",1,[[],[["result",4],["cow",4]]]],[11,"deserialize","wasmer_compiler::lib::std::vec","",174,[[],[["result",4],["vec",3]]]],[11,"from","wasmer_compiler::lib::std::boxed","",4,[[["box",3],["global",3]],[["bytes",3],["global",3],["box",3]]]],[11,"serialize","wasmer_compiler::lib::std::borrow","",1,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::boxed","",4,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::borrow","",1,[[],["result",4]]],[11,"serialize","wasmer_compiler::lib::std::vec","",174,[[],["result",4]]],[11,"default","wasmer_compiler::lib::std::boxed","",4,[[],[["bytes",3],["global",3],["box",3]]]],[11,"read_local_count","wasmer_compiler::translator::middleware","",245,[[],[["wasmresult",6],["u32",15]]]],[11,"read_local_decl","","",245,[[],["wasmresult",6]]],[11,"read_operator","","",245,[[],[["wasmresult",6],["operator",4]]]],[11,"current_position","","",245,[[],["usize",15]]],[11,"original_position","","",245,[[],["usize",15]]],[11,"bytes_remaining","","",245,[[],["usize",15]]],[11,"eof","","",245,[[],["bool",15]]],[11,"range","","",245,[[],["range",3]]],[11,"from","wasmer_compiler::lib::std::boxed","",4,[[]]],[11,"from","wasmer_compiler::error","",189,[[["wasmerror",4]]]],[11,"from","","",191,[[["middlewareerror",3]]]],[11,"from","","",191,[[["binaryreadererror",3]]]],[11,"from","","",189,[[["binaryreadererror",3]]]],[11,"extend","wasmer_compiler::translator::middleware","",246,[[["intoiterator",8]]]],[11,"extend","","",246,[[["intoiterator",8]]]],[11,"next","wasmer_compiler::function","",207,[[],["option",4]]],[11,"clone","wasmer_compiler::address_map","",179,[[],["instructionaddressmap",3]]],[11,"clone","","",182,[[],["functionaddressmap",3]]],[11,"clone","wasmer_compiler::compiler","",187,[[],["symbol",4]]],[11,"clone","wasmer_compiler::function","",194,[[],["compiledfunctionframeinfo",3]]],[11,"clone","","",197,[[],["functionbody",3]]],[11,"clone","","",200,[[],["compiledfunction",3]]],[11,"clone","","",203,[[],["dwarf",3]]],[11,"clone","wasmer_compiler::jump_table","",208,[[],["jumptable",3]]],[11,"clone","wasmer_compiler::relocation","",214,[[],["relocationkind",4]]],[11,"clone","","",217,[[],["relocation",3]]],[11,"clone","","",220,[[],["relocationtarget",4]]],[11,"clone","wasmer_compiler::target","",231,[[]]],[11,"clone","","",232,[[],["target",3]]],[11,"clone","wasmer_compiler::trap","",233,[[],["trapinformation",3]]],[11,"clone","wasmer_compiler::unwind","",236,[[],["compiledfunctionunwindinfo",4]]],[11,"clone","wasmer_compiler::section","",250,[[],["archivedsectionindex",3]]],[11,"clone","","",249,[[],["sectionindex",3]]],[11,"clone","","",252,[[],["customsectionprotection",4]]],[11,"clone","","",255,[[],["customsection",3]]],[11,"clone","","",258,[[],["sectionbody",3]]],[11,"clone","wasmer_compiler::sourceloc","",261,[[],["sourceloc",3]]],[11,"default","wasmer_compiler::address_map","",182,[[],["functionaddressmap",3]]],[11,"default","wasmer_compiler::function","",194,[[],["compiledfunctionframeinfo",3]]],[11,"default","wasmer_compiler::target","",232,[[]]],[11,"default","wasmer_compiler::section","",258,[[],["sectionbody",3]]],[11,"default","wasmer_compiler::sourceloc","",261,[[]]],[11,"cmp","wasmer_compiler::jump_table","",208,[[["jumptable",3]],["ordering",4]]],[11,"cmp","wasmer_compiler::section","",250,[[["archivedsectionindex",3]],["ordering",4]]],[11,"cmp","","",249,[[["sectionindex",3]],["ordering",4]]],[11,"eq","wasmer_compiler::address_map","",179,[[["instructionaddressmap",3]],["bool",15]]],[11,"ne","","",179,[[["instructionaddressmap",3]],["bool",15]]],[11,"eq","","",182,[[["functionaddressmap",3]],["bool",15]]],[11,"ne","","",182,[[["functionaddressmap",3]],["bool",15]]],[11,"eq","wasmer_compiler::compiler","",187,[[["symbol",4]],["bool",15]]],[11,"ne","","",187,[[["symbol",4]],["bool",15]]],[11,"eq","wasmer_compiler::function","",194,[[["compiledfunctionframeinfo",3]],["bool",15]]],[11,"ne","","",194,[[["compiledfunctionframeinfo",3]],["bool",15]]],[11,"eq","","",197,[[["functionbody",3]],["bool",15]]],[11,"ne","","",197,[[["functionbody",3]],["bool",15]]],[11,"eq","","",200,[[["compiledfunction",3]],["bool",15]]],[11,"ne","","",200,[[["compiledfunction",3]],["bool",15]]],[11,"eq","","",203,[[["dwarf",3]],["bool",15]]],[11,"ne","","",203,[[["dwarf",3]],["bool",15]]],[11,"eq","","",206,[[["compilation",3]],["bool",15]]],[11,"ne","","",206,[[["compilation",3]],["bool",15]]],[11,"eq","wasmer_compiler::jump_table","",208,[[["jumptable",3]],["bool",15]]],[11,"ne","","",208,[[["jumptable",3]],["bool",15]]],[11,"eq","wasmer_compiler::module","",211,[[["compilemoduleinfo",3]],["bool",15]]],[11,"ne","","",211,[[["compilemoduleinfo",3]],["bool",15]]],[11,"eq","wasmer_compiler::relocation","",214,[[["relocationkind",4]],["bool",15]]],[11,"eq","","",217,[[["relocation",3]],["bool",15]]],[11,"ne","","",217,[[["relocation",3]],["bool",15]]],[11,"eq","","",220,[[["relocationtarget",4]],["bool",15]]],[11,"ne","","",220,[[["relocationtarget",4]],["bool",15]]],[11,"eq","wasmer_compiler::target","",231,[[],["bool",15]]],[11,"eq","","",231,[[["enumset",3]],["bool",15]]],[11,"eq","","",232,[[["target",3]],["bool",15]]],[11,"ne","","",232,[[["target",3]],["bool",15]]],[11,"eq","wasmer_compiler::trap","",233,[[["trapinformation",3]],["bool",15]]],[11,"ne","","",233,[[["trapinformation",3]],["bool",15]]],[11,"eq","wasmer_compiler::unwind","",236,[[["compiledfunctionunwindinfo",4]],["bool",15]]],[11,"ne","","",236,[[["compiledfunctionunwindinfo",4]],["bool",15]]],[11,"eq","wasmer_compiler::section","",250,[[["archivedsectionindex",3]],["bool",15]]],[11,"ne","","",250,[[["archivedsectionindex",3]],["bool",15]]],[11,"eq","","",249,[[["sectionindex",3]],["bool",15]]],[11,"ne","","",249,[[["sectionindex",3]],["bool",15]]],[11,"eq","","",252,[[["customsectionprotection",4]],["bool",15]]],[11,"eq","","",255,[[["customsection",3]],["bool",15]]],[11,"ne","","",255,[[["customsection",3]],["bool",15]]],[11,"eq","","",258,[[["sectionbody",3]],["bool",15]]],[11,"ne","","",258,[[["sectionbody",3]],["bool",15]]],[11,"eq","wasmer_compiler::sourceloc","",261,[[["sourceloc",3]],["bool",15]]],[11,"ne","","",261,[[["sourceloc",3]],["bool",15]]],[11,"partial_cmp","wasmer_compiler::jump_table","",208,[[["jumptable",3]],[["option",4],["ordering",4]]]],[11,"lt","","",208,[[["jumptable",3]],["bool",15]]],[11,"le","","",208,[[["jumptable",3]],["bool",15]]],[11,"gt","","",208,[[["jumptable",3]],["bool",15]]],[11,"ge","","",208,[[["jumptable",3]],["bool",15]]],[11,"partial_cmp","wasmer_compiler::section","",250,[[["archivedsectionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",250,[[["archivedsectionindex",3]],["bool",15]]],[11,"le","","",250,[[["archivedsectionindex",3]],["bool",15]]],[11,"gt","","",250,[[["archivedsectionindex",3]],["bool",15]]],[11,"ge","","",250,[[["archivedsectionindex",3]],["bool",15]]],[11,"partial_cmp","","",249,[[["sectionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",249,[[["sectionindex",3]],["bool",15]]],[11,"le","","",249,[[["sectionindex",3]],["bool",15]]],[11,"gt","","",249,[[["sectionindex",3]],["bool",15]]],[11,"ge","","",249,[[["sectionindex",3]],["bool",15]]],[11,"to_string","wasmer_compiler::target","",231,[[],["string",3]]],[11,"fmt","wasmer_compiler::address_map","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::compiler","",187,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::error","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::function","",194,[[["formatter",3]],["result",6]]],[11,"fmt","","",197,[[["formatter",3]],["result",6]]],[11,"fmt","","",200,[[["formatter",3]],["result",6]]],[11,"fmt","","",203,[[["formatter",3]],["result",6]]],[11,"fmt","","",206,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::jump_table","",208,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::module","",211,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::relocation","",214,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","","",220,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::target","",231,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::trap","",233,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::unwind","",236,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::translator::middleware","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::translator::state","",248,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::section","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",249,[[["formatter",3]],["result",6]]],[11,"fmt","","",252,[[["formatter",3]],["result",6]]],[11,"fmt","","",255,[[["formatter",3]],["result",6]]],[11,"fmt","","",258,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::sourceloc","",261,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::error","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","","",193,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::jump_table","",208,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::relocation","Display trait implementation drops the arch, since its …",214,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler::sourceloc","",261,[[["formatter",3]],["result",6]]],[11,"sub","wasmer_compiler::target","",231,[[]]],[11,"not","","",231,[[]]],[11,"bitand","","",231,[[]]],[11,"bitor","","",231,[[]]],[11,"bitxor","","",231,[[]]],[11,"hash","wasmer_compiler::jump_table","",208,[[]]],[11,"hash","wasmer_compiler::target","",231,[[]]],[11,"hash","","",232,[[]]],[11,"hash","wasmer_compiler::translator::environ","",239,[[]]],[11,"hash","wasmer_compiler::section","",250,[[]]],[11,"hash","","",249,[[]]],[11,"from_str","wasmer_compiler::target","",231,[[["str",15]],["result",4]]],[11,"size_of_val","wasmer_compiler::address_map","",179,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",182,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::function","",194,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",197,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",203,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::jump_table","",208,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::module","",211,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::relocation","",214,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",217,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",220,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::target","",232,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::trap","",233,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::unwind","",236,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::section","",249,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",252,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",255,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",258,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler::sourceloc","",261,[[["memoryusagetracker",8]],["usize",15]]],[11,"deserialize","wasmer_compiler::address_map","",179,[[],["result",4]]],[11,"deserialize","","",182,[[],["result",4]]],[11,"deserialize","wasmer_compiler::function","",194,[[],["result",4]]],[11,"deserialize","","",197,[[],["result",4]]],[11,"deserialize","","",200,[[],["result",4]]],[11,"deserialize","","",203,[[],["result",4]]],[11,"deserialize","","",206,[[],["result",4]]],[11,"deserialize","wasmer_compiler::jump_table","",208,[[],["result",4]]],[11,"deserialize","wasmer_compiler::module","",211,[[],["result",4]]],[11,"deserialize","wasmer_compiler::relocation","",214,[[],["result",4]]],[11,"deserialize","","",217,[[],["result",4]]],[11,"deserialize","","",220,[[],["result",4]]],[11,"deserialize","wasmer_compiler::trap","",233,[[],["result",4]]],[11,"deserialize","wasmer_compiler::unwind","",236,[[],["result",4]]],[11,"deserialize","wasmer_compiler::section","",249,[[],["result",4]]],[11,"deserialize","","",252,[[],["result",4]]],[11,"deserialize","","",255,[[],["result",4]]],[11,"deserialize","","",258,[[],["result",4]]],[11,"deserialize","wasmer_compiler::sourceloc","",261,[[],["result",4]]],[11,"serialize","wasmer_compiler::address_map","",179,[[],["result",4]]],[11,"serialize","","",182,[[],["result",4]]],[11,"serialize","wasmer_compiler::function","",194,[[],["result",4]]],[11,"serialize","","",197,[[],["result",4]]],[11,"serialize","","",200,[[],["result",4]]],[11,"serialize","","",203,[[],["result",4]]],[11,"serialize","","",206,[[],["result",4]]],[11,"serialize","wasmer_compiler::jump_table","",208,[[],["result",4]]],[11,"serialize","wasmer_compiler::module","",211,[[],["result",4]]],[11,"serialize","wasmer_compiler::relocation","",214,[[],["result",4]]],[11,"serialize","","",217,[[],["result",4]]],[11,"serialize","","",220,[[],["result",4]]],[11,"serialize","wasmer_compiler::trap","",233,[[],["result",4]]],[11,"serialize","wasmer_compiler::unwind","",236,[[],["result",4]]],[11,"serialize","wasmer_compiler::section","",249,[[],["result",4]]],[11,"serialize","","",252,[[],["result",4]]],[11,"serialize","","",255,[[],["result",4]]],[11,"serialize","","",258,[[],["result",4]]],[11,"serialize","wasmer_compiler::sourceloc","",261,[[],["result",4]]],[11,"resolve","wasmer_compiler::address_map","",179,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",182,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::function","",194,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",197,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",200,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",203,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::jump_table","",208,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::module","",211,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::relocation","",214,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",217,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",220,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::trap","",233,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::unwind","",236,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::section","",249,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",252,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",255,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",258,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_compiler::sourceloc","",261,[[["usize",15],["maybeuninit",19]]]],[11,"serialize","wasmer_compiler::address_map","",179,[[],["result",4]]],[11,"serialize","","",182,[[],["result",4]]],[11,"serialize","wasmer_compiler::function","",194,[[],["result",4]]],[11,"serialize","","",197,[[],["result",4]]],[11,"serialize","","",200,[[],["result",4]]],[11,"serialize","","",203,[[],["result",4]]],[11,"serialize","wasmer_compiler::jump_table","",208,[[],["result",4]]],[11,"serialize","wasmer_compiler::module","",211,[[],["result",4]]],[11,"serialize","wasmer_compiler::relocation","",214,[[],["result",4]]],[11,"serialize","","",217,[[],["result",4]]],[11,"serialize","","",220,[[],["result",4]]],[11,"serialize","wasmer_compiler::trap","",233,[[],["result",4]]],[11,"serialize","wasmer_compiler::unwind","",236,[[],["result",4]]],[11,"serialize","wasmer_compiler::section","",249,[[],["result",4]]],[11,"serialize","","",252,[[],["result",4]]],[11,"serialize","","",255,[[],["result",4]]],[11,"serialize","","",258,[[],["result",4]]],[11,"serialize","wasmer_compiler::sourceloc","",261,[[],["result",4]]],[11,"new","wasmer_compiler::jump_table","",208,[[["usize",15]]]],[11,"index","","",208,[[],["usize",15]]],[11,"new","wasmer_compiler::section","",249,[[["usize",15]]]],[11,"index","","",249,[[],["usize",15]]],[11,"new","","",250,[[["usize",15]]]],[11,"index","","",250,[[],["usize",15]]],[11,"reserved_value","wasmer_compiler::jump_table","",208,[[],["jumptable",3]]],[11,"is_reserved_value","","",208,[[],["bool",15]]],[11,"reserved_value","wasmer_compiler::section","",249,[[],["sectionindex",3]]],[11,"is_reserved_value","","",249,[[],["bool",15]]],[11,"reserved_value","","",250,[[],["archivedsectionindex",3]]],[11,"is_reserved_value","","",250,[[],["bool",15]]],[11,"enum_into_u32","wasmer_compiler::target","",231,[[],["u32",15]]],[11,"enum_from_u32","","",231,[[["u32",15]]]],[11,"is_borrowed","wasmer_compiler::lib::std::borrow","Returns true if the data is borrowed, i.e. if <code>to_mut</code> …",1,[[],["bool",15]]],[11,"is_owned","","Returns true if the data is owned, i.e. if <code>to_mut</code> would …",1,[[],["bool",15]]],[11,"to_mut","","Acquires a mutable reference to the owned form of the …",1,[[]]],[11,"into_owned","","Extracts the owned data.",1,[[]]],[11,"new","wasmer_compiler::lib::std::boxed","Allocates memory on the heap and then places <code>x</code> into it.",4,[[],[["box",3],["global",3]]]],[11,"new_uninit","","Constructs a new box with uninitialized contents.",4,[[],[["maybeuninit",19],["global",3],["box",3]]]],[11,"new_zeroed","","Constructs a new <code>Box</code> with uninitialized contents, with …",4,[[],[["maybeuninit",19],["global",3],["box",3]]]],[11,"pin","","Constructs a new <code>Pin<Box<T>></code>. If <code>T</code> does not implement …",4,[[],[["pin",3],["box",3]]]],[11,"try_new","","Allocates memory on the heap then places <code>x</code> into it, …",4,[[],[["box",3],["result",4],["allocerror",3]]]],[11,"try_new_uninit","","Constructs a new box with uninitialized contents on the …",4,[[],[["allocerror",3],["result",4],["box",3]]]],[11,"try_new_zeroed","","Constructs a new <code>Box</code> with uninitialized contents, with …",4,[[],[["allocerror",3],["result",4],["box",3]]]],[11,"new_in","","Allocates memory in the given allocator then places <code>x</code> …",4,[[],["box",3]]],[11,"try_new_in","","Allocates memory in the given allocator then places <code>x</code> …",4,[[],[["result",4],["box",3],["allocerror",3]]]],[11,"new_uninit_in","","Constructs a new box with uninitialized contents in the …",4,[[],[["maybeuninit",19],["box",3]]]],[11,"try_new_uninit_in","","Constructs a new box with uninitialized contents in the …",4,[[],[["box",3],["allocerror",3],["result",4]]]],[11,"new_zeroed_in","","Constructs a new <code>Box</code> with uninitialized contents, with …",4,[[],[["maybeuninit",19],["box",3]]]],[11,"try_new_zeroed_in","","Constructs a new <code>Box</code> with uninitialized contents, with …",4,[[],[["box",3],["allocerror",3],["result",4]]]],[11,"pin_in","","Constructs a new <code>Pin<Box<T, A>></code>. If <code>T</code> does not implement …",4,[[],[["pin",3],["box",3]]]],[11,"into_boxed_slice","","Converts a <code>Box<T></code> into a <code>Box<[T]></code>",4,[[["box",3]],["box",3]]],[11,"new_uninit_slice","","Constructs a new boxed slice with uninitialized contents.",4,[[["usize",15]],[["box",3],["global",3]]]],[11,"new_zeroed_slice","","Constructs a new boxed slice with uninitialized contents, …",4,[[["usize",15]],[["box",3],["global",3]]]],[11,"new_uninit_slice_in","","Constructs a new boxed slice with uninitialized contents …",4,[[["usize",15]],["box",3]]],[11,"new_zeroed_slice_in","","Constructs a new boxed slice with uninitialized contents …",4,[[["usize",15]],["box",3]]],[11,"assume_init","","Converts to <code>Box<T, A></code>.",4,[[],["box",3]]],[11,"assume_init","","Converts to <code>Box<[T], A></code>.",4,[[],["box",3]]],[11,"from_raw","","Constructs a box from a raw pointer.",4,[[],[["box",3],["global",3]]]],[11,"from_raw_in","","Constructs a box from a raw pointer in the given …",4,[[],["box",3]]],[11,"into_raw","","Consumes the <code>Box</code>, returning a wrapped raw pointer.",4,[[["box",3]]]],[11,"into_raw_with_allocator","","Consumes the <code>Box</code>, returning a wrapped raw pointer and the …",4,[[["box",3]]]],[11,"allocator","","Returns a reference to the underlying allocator.",4,[[["box",3]]]],[11,"leak","","Consumes and leaks the <code>Box</code>, returning a mutable reference,…",4,[[["box",3]]]],[11,"into_pin","","Converts a <code>Box<T></code> into a <code>Pin<Box<T>></code>",4,[[["box",3]],[["pin",3],["box",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",4,[[],[["result",4],["box",3],["box",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",4,[[],[["box",3],["result",4],["box",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",4,[[],[["result",4],["box",3],["box",3]]]],[11,"new","wasmer_compiler::lib::std::collections","Creates an empty <code>HashMap</code>.",5,[[],[["randomstate",3],["hashmap",3]]]],[11,"with_capacity","","Creates an empty <code>HashMap</code> with the specified capacity.",5,[[["usize",15]],[["randomstate",3],["hashmap",3]]]],[11,"with_hasher","","Creates an empty <code>HashMap</code> which will use the given hash …",5,[[],["hashmap",3]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashMap</code> with the specified capacity, …",5,[[["usize",15]],["hashmap",3]]],[11,"capacity","","Returns the number of elements the map can hold without …",5,[[],["usize",15]]],[11,"keys","","An iterator visiting all keys in arbitrary order. The …",5,[[],["keys",3]]],[11,"values","","An iterator visiting all values in arbitrary order. The …",5,[[],["values",3]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary …",5,[[],["valuesmut",3]]],[11,"iter","","An iterator visiting all key-value pairs in arbitrary …",5,[[],["iter",3]]],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary …",5,[[],["itermut",3]]],[11,"len","","Returns the number of elements in the map.",5,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the map contains no elements.",5,[[],["bool",15]]],[11,"drain","","Clears the map, returning all key-value pairs as an …",5,[[],["drain",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if …",5,[[],["drainfilter",3]]],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the …",5,[[]]],[11,"hasher","","Returns a reference to the map\'s [<code>BuildHasher</code>].",5,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",5,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",5,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It …",5,[[]]],[11,"shrink_to","","Shrinks the capacity of the map with a lower limit. It …",5,[[["usize",15]]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",5,[[],["entry",4]]],[11,"get","","Returns a reference to the value corresponding to the key.",5,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied …",5,[[],["option",4]]],[11,"contains_key","","Returns <code>true</code> if the map contains a value for the …",5,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",5,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",5,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the …",5,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",5,[[],["option",4]]],[11,"retain","","Retains only the elements specified by the predicate.",5,[[]]],[11,"into_keys","","Creates a consuming iterator visiting all the keys in …",5,[[],["intokeys",3]]],[11,"into_values","","Creates a consuming iterator visiting all the values in …",5,[[],["intovalues",3]]],[11,"raw_entry_mut","","Creates a raw entry builder for the HashMap.",5,[[],["rawentrybuildermut",3]]],[11,"raw_entry","","Creates a raw immutable entry builder for the HashMap.",5,[[],["rawentrybuilder",3]]],[11,"from_key","wasmer_compiler::lib::std::collections::hash_map","Creates a <code>RawEntryMut</code> from the given key.",16,[[],["rawentrymut",4]]],[11,"from_key_hashed_nocheck","","Creates a <code>RawEntryMut</code> from the given key and its hash.",16,[[["u64",15]],["rawentrymut",4]]],[11,"from_hash","","Creates a <code>RawEntryMut</code> from the given hash.",16,[[["u64",15]],["rawentrymut",4]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",17,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",17,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",17,[[],["rawentrymut",4]]],[11,"key","","Gets a reference to the key in the entry.",18,[[]]],[11,"key_mut","","Gets a mutable reference to the key in the entry.",18,[[]]],[11,"into_key","","Converts the entry into a mutable reference to the key in …",18,[[]]],[11,"get","","Gets a reference to the value in the entry.",18,[[]]],[11,"into_mut","","Converts the <code>OccupiedEntry</code> into a mutable reference to …",18,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",18,[[]]],[11,"get_key_value","","Gets a reference to the key and value in the entry.",18,[[]]],[11,"get_key_value_mut","","Gets a mutable reference to the key and value in the …",18,[[]]],[11,"into_key_value","","Converts the <code>OccupiedEntry</code> into a mutable reference to …",18,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",18,[[]]],[11,"insert_key","","Sets the value of the entry, and returns the entry\'s old …",18,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",18,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",18,[[]]],[11,"insert","","Sets the value of the entry with the <code>VacantEntry</code>\'s key, …",19,[[]]],[11,"insert_hashed_nocheck","","Sets the value of the entry with the VacantEntry\'s key, …",19,[[["u64",15]]]],[11,"from_key","","Access an entry by key.",20,[[],["option",4]]],[11,"from_key_hashed_nocheck","","Access an entry by a key and its hash.",20,[[["u64",15]],["option",4]]],[11,"from_hash","","Access an entry by hash.",20,[[["u64",15]],["option",4]]],[11,"or_insert","","Ensures a value is in the entry by inserting the default …",21,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",21,[[]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty, …",21,[[]]],[11,"key","","Returns a reference to this entry\'s key.",21,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",21,[[],["entry",4]]],[11,"insert","","Sets the value of the entry, and returns an <code>OccupiedEntry</code>.",21,[[],["occupiedentry",3]]],[11,"or_default","","Ensures a value is in the entry by inserting the default …",21,[[]]],[11,"key","","Gets a reference to the key in the entry.",22,[[]]],[11,"remove_entry","","Take the ownership of the key and value from the map.",22,[[]]],[11,"get","","Gets a reference to the value in the entry.",22,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",22,[[]]],[11,"into_mut","","Converts the <code>OccupiedEntry</code> into a mutable reference to …",22,[[]]],[11,"insert","","Sets the value of the entry, and returns the entry\'s old …",22,[[]]],[11,"remove","","Takes the value out of the entry, and returns it.",22,[[]]],[11,"replace_entry","","Replaces the entry, returning the old key and value. The …",22,[[]]],[11,"replace_key","","Replaces the key in the hash map with the key used to …",22,[[]]],[11,"key","","Gets a reference to the key that would be used when …",23,[[]]],[11,"into_key","","Take ownership of the key.",23,[[]]],[11,"insert","","Sets the value of the entry with the <code>VacantEntry</code>\'s key, …",23,[[]]],[11,"new","","Constructs a new <code>RandomState</code> that is initialized with …",24,[[],["randomstate",3]]],[11,"new","","Creates a new <code>DefaultHasher</code>.",25,[[],["defaulthasher",3]]],[11,"new","wasmer_compiler::lib::std::collections","Creates an empty <code>HashSet</code>.",26,[[],[["randomstate",3],["hashset",3]]]],[11,"with_capacity","","Creates an empty <code>HashSet</code> with the specified capacity.",26,[[["usize",15]],[["randomstate",3],["hashset",3]]]],[11,"capacity","","Returns the number of elements the set can hold without …",26,[[],["usize",15]]],[11,"iter","","An iterator visiting all elements in arbitrary order. The …",26,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",26,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no elements.",26,[[],["bool",15]]],[11,"drain","","Clears the set, returning all elements in an iterator.",26,[[],["drain",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if …",26,[[],["drainfilter",3]]],[11,"clear","","Clears the set, removing all values.",26,[[]]],[11,"with_hasher","","Creates a new empty hash set which will use the given …",26,[[],["hashset",3]]],[11,"with_capacity_and_hasher","","Creates an empty <code>HashSet</code> with the specified capacity, …",26,[[["usize",15]],["hashset",3]]],[11,"hasher","","Returns a reference to the set\'s [<code>BuildHasher</code>].",26,[[]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",26,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",26,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It …",26,[[]]],[11,"shrink_to","","Shrinks the capacity of the set with a lower limit. It …",26,[[["usize",15]]]],[11,"difference","","Visits the values representing the difference, i.e., the …",26,[[["hashset",3]],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference, …",26,[[["hashset",3]],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., …",26,[[["hashset",3]],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the …",26,[[["hashset",3]],["union",3]]],[11,"contains","","Returns <code>true</code> if the set contains a value.",26,[[],["bool",15]]],[11,"get","","Returns a reference to the value in the set, if any, that …",26,[[],["option",4]]],[11,"get_or_insert","","Inserts the given <code>value</code> into the set if it is not …",26,[[]]],[11,"get_or_insert_owned","","Inserts an owned copy of the given <code>value</code> into the set if …",26,[[]]],[11,"get_or_insert_with","","Inserts a value computed from <code>f</code> into the set if the given …",26,[[]]],[11,"is_disjoint","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.…",26,[[["hashset",3]],["bool",15]]],[11,"is_subset","","Returns <code>true</code> if the set is a subset of another, i.e., …",26,[[["hashset",3]],["bool",15]]],[11,"is_superset","","Returns <code>true</code> if the set is a superset of another, i.e., …",26,[[["hashset",3]],["bool",15]]],[11,"insert","","Adds a value to the set.",26,[[],["bool",15]]],[11,"replace","","Adds a value to the set, replacing the existing value, if …",26,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value …",26,[[],["bool",15]]],[11,"take","","Removes and returns the value in the set, if any, that is …",26,[[],["option",4]]],[11,"retain","","Retains only the elements specified by the predicate.",26,[[]]],[11,"as_ref","","Converts from <code>&Bound<T></code> to <code>Bound<&T></code>.",35,[[],["bound",4]]],[11,"as_mut","","Converts from <code>&mut Bound<T></code> to <code>Bound<&T></code>.",35,[[],["bound",4]]],[11,"cloned","","Map a <code>Bound<&T></code> to a <code>Bound<T></code> by cloning the contents of …",35,[[],["bound",4]]],[11,"new","","Creates an empty <code>BinaryHeap</code> as a max-heap.",36,[[],["binaryheap",3]]],[11,"with_capacity","","Creates an empty <code>BinaryHeap</code> with a specific capacity. …",36,[[["usize",15]],["binaryheap",3]]],[11,"peek_mut","","Returns a mutable reference to the greatest item in the …",36,[[],[["peekmut",3],["option",4]]]],[11,"pop","","Removes the greatest item from the binary heap and …",36,[[],["option",4]]],[11,"push","","Pushes an item onto the binary heap.",36,[[]]],[11,"into_sorted_vec","","Consumes the <code>BinaryHeap</code> and returns a vector in sorted …",36,[[],[["vec",3],["global",3]]]],[11,"append","","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …",36,[[["binaryheap",3]]]],[11,"drain_sorted","","Returns an iterator which retrieves elements in heap …",36,[[],["drainsorted",3]]],[11,"retain","","Retains only the elements specified by the predicate.",36,[[]]],[11,"iter","","Returns an iterator visiting all values in the underlying …",36,[[],["iter",3]]],[11,"into_iter_sorted","","Returns an iterator which retrieves elements in heap …",36,[[],["intoitersorted",3]]],[11,"peek","","Returns the greatest item in the binary heap, or <code>None</code> if …",36,[[],["option",4]]],[11,"capacity","","Returns the number of elements the binary heap can hold …",36,[[],["usize",15]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",36,[[["usize",15]]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",36,[[["usize",15]]]],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",36,[[]]],[11,"shrink_to","","Discards capacity with a lower bound.",36,[[["usize",15]]]],[11,"into_vec","","Consumes the <code>BinaryHeap</code> and returns the underlying vector …",36,[[],[["vec",3],["global",3]]]],[11,"len","","Returns the length of the binary heap.",36,[[],["usize",15]]],[11,"is_empty","","Checks if the binary heap is empty.",36,[[],["bool",15]]],[11,"drain","","Clears the binary heap, returning an iterator over the …",36,[[],["drain",3]]],[11,"clear","","Drops all items from the binary heap.",36,[[]]],[11,"pop","wasmer_compiler::lib::std::collections::binary_heap","Removes the peeked value from the heap and returns it.",37,[[["peekmut",3]]]],[11,"or_insert","wasmer_compiler::lib::std::collections::btree_map","Ensures a value is in the entry by inserting the default …",43,[[]]],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result …",43,[[]]],[11,"or_insert_with_key","","Ensures a value is in the entry by inserting, if empty, …",43,[[]]],[11,"key","","Returns a reference to this entry\'s key.",43,[[]]],[11,"and_modify","","Provides in-place mutable access to an occupied entry …",43,[[],["entry",4]]],[11,"or_default","","Ensures a value is in the entry by inserting the default …",43,[[]]],[11,"key","","Gets a reference to the key in the entry.",44,[[]]],[11,"remove_entry","","Take ownership of the key and value from the map.",44,[[]]],[11,"get","","Gets a reference to the value in the entry.",44,[[]]],[11,"get_mut","","Gets a mutable reference to the value in the entry.",44,[[]]],[11,"into_mut","","Converts the entry into a mutable reference to its value.",44,[[]]],[11,"insert","","Sets the value of the entry with the <code>OccupiedEntry</code>\'s key, …",44,[[]]],[11,"remove","","Takes the value of the entry out of the map, and returns …",44,[[]]],[11,"key","","Gets a reference to the key that would be used when …",45,[[]]],[11,"into_key","","Take ownership of the key.",45,[[]]],[11,"insert","","Sets the value of the entry with the <code>VacantEntry</code>\'s key, …",45,[[]]],[11,"new","wasmer_compiler::lib::std::collections","Makes a new, empty <code>BTreeMap</code>.",46,[[],["btreemap",3]]],[11,"clear","","Clears the map, removing all elements.",46,[[]]],[11,"get","","Returns a reference to the value corresponding to the key.",46,[[],["option",4]]],[11,"get_key_value","","Returns the key-value pair corresponding to the supplied …",46,[[],["option",4]]],[11,"first_key_value","","Returns the first key-value pair in the map. The key in …",46,[[],["option",4]]],[11,"first_entry","","Returns the first entry in the map for in-place …",46,[[],[["option",4],["occupiedentry",3]]]],[11,"pop_first","","Removes and returns the first element in the map. The key …",46,[[],["option",4]]],[11,"last_key_value","","Returns the last key-value pair in the map. The key in …",46,[[],["option",4]]],[11,"last_entry","","Returns the last entry in the map for in-place …",46,[[],[["option",4],["occupiedentry",3]]]],[11,"pop_last","","Removes and returns the last element in the map. The key …",46,[[],["option",4]]],[11,"contains_key","","Returns <code>true</code> if the map contains a value for the …",46,[[],["bool",15]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to …",46,[[],["option",4]]],[11,"insert","","Inserts a key-value pair into the map.",46,[[],["option",4]]],[11,"remove","","Removes a key from the map, returning the value at the …",46,[[],["option",4]]],[11,"remove_entry","","Removes a key from the map, returning the stored key and …",46,[[],["option",4]]],[11,"retain","","Retains only the elements specified by the predicate.",46,[[]]],[11,"append","","Moves all elements from <code>other</code> into <code>Self</code>, leaving <code>other</code> …",46,[[["btreemap",3]]]],[11,"range","","Constructs a double-ended iterator over a sub-range of …",46,[[],["range",3]]],[11,"range_mut","","Constructs a mutable double-ended iterator over a …",46,[[],["rangemut",3]]],[11,"entry","","Gets the given key\'s corresponding entry in the map for …",46,[[],["entry",4]]],[11,"split_off","","Splits the collection into two at the given key. Returns …",46,[[],["btreemap",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if …",46,[[],["drainfilter",3]]],[11,"into_keys","","Creates a consuming iterator visiting all the keys, in …",46,[[],["intokeys",3]]],[11,"into_values","","Creates a consuming iterator visiting all the values, in …",46,[[],["intovalues",3]]],[11,"iter","","Gets an iterator over the entries of the map, sorted by …",46,[[],["iter",3]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map, …",46,[[],["itermut",3]]],[11,"keys","","Gets an iterator over the keys of the map, in sorted …",46,[[],["keys",3]]],[11,"values","","Gets an iterator over the values of the map, in order by …",46,[[],["values",3]]],[11,"values_mut","","Gets a mutable iterator over the values of the map, in …",46,[[],["valuesmut",3]]],[11,"len","","Returns the number of elements in the map.",46,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the map contains no elements.",46,[[],["bool",15]]],[11,"new","","Makes a new, empty <code>BTreeSet</code>.",64,[[],["btreeset",3]]],[11,"range","","Constructs a double-ended iterator over a sub-range of …",64,[[],["range",3]]],[11,"difference","","Visits the values representing the difference, i.e., the …",64,[[["btreeset",3]],["difference",3]]],[11,"symmetric_difference","","Visits the values representing the symmetric difference, …",64,[[["btreeset",3]],["symmetricdifference",3]]],[11,"intersection","","Visits the values representing the intersection, i.e., …",64,[[["btreeset",3]],["intersection",3]]],[11,"union","","Visits the values representing the union, i.e., all the …",64,[[["btreeset",3]],["union",3]]],[11,"clear","","Clears the set, removing all values.",64,[[]]],[11,"contains","","Returns <code>true</code> if the set contains a value.",64,[[],["bool",15]]],[11,"get","","Returns a reference to the value in the set, if any, that …",64,[[],["option",4]]],[11,"is_disjoint","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.…",64,[[["btreeset",3]],["bool",15]]],[11,"is_subset","","Returns <code>true</code> if the set is a subset of another, i.e., …",64,[[["btreeset",3]],["bool",15]]],[11,"is_superset","","Returns <code>true</code> if the set is a superset of another, i.e., …",64,[[["btreeset",3]],["bool",15]]],[11,"first","","Returns a reference to the first value in the set, if any.…",64,[[],["option",4]]],[11,"last","","Returns a reference to the last value in the set, if any. …",64,[[],["option",4]]],[11,"pop_first","","Removes the first value from the set and returns it, if …",64,[[],["option",4]]],[11,"pop_last","","Removes the last value from the set and returns it, if …",64,[[],["option",4]]],[11,"insert","","Adds a value to the set.",64,[[],["bool",15]]],[11,"replace","","Adds a value to the set, replacing the existing value, if …",64,[[],["option",4]]],[11,"remove","","Removes a value from the set. Returns whether the value …",64,[[],["bool",15]]],[11,"take","","Removes and returns the value in the set, if any, that is …",64,[[],["option",4]]],[11,"retain","","Retains only the elements specified by the predicate.",64,[[]]],[11,"append","","Moves all elements from <code>other</code> into <code>Self</code>, leaving <code>other</code> …",64,[[["btreeset",3]]]],[11,"split_off","","Splits the collection into two at the given key. Returns …",64,[[],["btreeset",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if …",64,[[],["drainfilter",3]]],[11,"iter","","Gets an iterator that visits the values in the <code>BTreeSet</code> …",64,[[],["iter",3]]],[11,"len","","Returns the number of elements in the set.",64,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the set contains no elements.",64,[[],["bool",15]]],[11,"new","","Creates an empty <code>LinkedList</code>.",67,[[],["linkedlist",3]]],[11,"append","","Moves all elements from <code>other</code> to the end of the list.",67,[[["linkedlist",3]]]],[11,"prepend","","Moves all elements from <code>other</code> to the begin of the list.",67,[[["linkedlist",3]]]],[11,"iter","","Provides a forward iterator.",67,[[],["iter",3]]],[11,"iter_mut","","Provides a forward iterator with mutable references.",67,[[],["itermut",3]]],[11,"cursor_front","","Provides a cursor at the front element.",67,[[],["cursor",3]]],[11,"cursor_front_mut","","Provides a cursor with editing operations at the front …",67,[[],["cursormut",3]]],[11,"cursor_back","","Provides a cursor at the back element.",67,[[],["cursor",3]]],[11,"cursor_back_mut","","Provides a cursor with editing operations at the back …",67,[[],["cursormut",3]]],[11,"is_empty","","Returns <code>true</code> if the <code>LinkedList</code> is empty.",67,[[],["bool",15]]],[11,"len","","Returns the length of the <code>LinkedList</code>.",67,[[],["usize",15]]],[11,"clear","","Removes all elements from the <code>LinkedList</code>.",67,[[]]],[11,"contains","","Returns <code>true</code> if the <code>LinkedList</code> contains an element equal …",67,[[],["bool",15]]],[11,"front","","Provides a reference to the front element, or <code>None</code> if the …",67,[[],["option",4]]],[11,"front_mut","","Provides a mutable reference to the front element, or <code>None</code>…",67,[[],["option",4]]],[11,"back","","Provides a reference to the back element, or <code>None</code> if the …",67,[[],["option",4]]],[11,"back_mut","","Provides a mutable reference to the back element, or <code>None</code> …",67,[[],["option",4]]],[11,"push_front","","Adds an element first in the list.",67,[[]]],[11,"pop_front","","Removes the first element and returns it, or <code>None</code> if the …",67,[[],["option",4]]],[11,"push_back","","Appends an element to the back of a list.",67,[[]]],[11,"pop_back","","Removes the last element from a list and returns it, or …",67,[[],["option",4]]],[11,"split_off","","Splits the list into two at the given index. Returns …",67,[[["usize",15]],["linkedlist",3]]],[11,"remove","","Removes the element at the given index and returns it.",67,[[["usize",15]]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if …",67,[[],["drainfilter",3]]],[11,"index","wasmer_compiler::lib::std::collections::linked_list","Returns the cursor position index within the <code>LinkedList</code>.",71,[[],[["usize",15],["option",4]]]],[11,"move_next","","Moves the cursor to the next element of the <code>LinkedList</code>.",71,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the <code>LinkedList</code>…",71,[[]]],[11,"current","","Returns a reference to the element that the cursor is …",71,[[],["option",4]]],[11,"peek_next","","Returns a reference to the next element.",71,[[],["option",4]]],[11,"peek_prev","","Returns a reference to the previous element.",71,[[],["option",4]]],[11,"index","","Returns the cursor position index within the <code>LinkedList</code>.",72,[[],[["usize",15],["option",4]]]],[11,"move_next","","Moves the cursor to the next element of the <code>LinkedList</code>.",72,[[]]],[11,"move_prev","","Moves the cursor to the previous element of the <code>LinkedList</code>…",72,[[]]],[11,"current","","Returns a reference to the element that the cursor is …",72,[[],["option",4]]],[11,"peek_next","","Returns a reference to the next element.",72,[[],["option",4]]],[11,"peek_prev","","Returns a reference to the previous element.",72,[[],["option",4]]],[11,"as_cursor","","Returns a read-only cursor pointing to the current …",72,[[],["cursor",3]]],[11,"insert_after","","Inserts a new element into the <code>LinkedList</code> after the …",72,[[]]],[11,"insert_before","","Inserts a new element into the <code>LinkedList</code> before the …",72,[[]]],[11,"remove_current","","Removes the current element from the <code>LinkedList</code>.",72,[[],["option",4]]],[11,"remove_current_as_list","","Removes the current element from the <code>LinkedList</code> without …",72,[[],[["linkedlist",3],["option",4]]]],[11,"splice_after","","Inserts the elements from the given <code>LinkedList</code> after the …",72,[[["linkedlist",3]]]],[11,"splice_before","","Inserts the elements from the given <code>LinkedList</code> before the …",72,[[["linkedlist",3]]]],[11,"split_after","","Splits the list into two after the current element. This …",72,[[],["linkedlist",3]]],[11,"split_before","","Splits the list into two before the current element. This …",72,[[],["linkedlist",3]]],[11,"new","wasmer_compiler::lib::std::collections","Creates an empty <code>VecDeque</code>.",74,[[],["vecdeque",3]]],[11,"with_capacity","","Creates an empty <code>VecDeque</code> with space for at least <code>capacity</code>…",74,[[["usize",15]],["vecdeque",3]]],[11,"get","","Provides a reference to the element at the given index.",74,[[["usize",15]],["option",4]]],[11,"get_mut","","Provides a mutable reference to the element at the given …",74,[[["usize",15]],["option",4]]],[11,"swap","","Swaps elements at indices <code>i</code> and <code>j</code>.",74,[[["usize",15]]]],[11,"capacity","","Returns the number of elements the <code>VecDeque</code> can hold …",74,[[],["usize",15]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",74,[[["usize",15]]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",74,[[["usize",15]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly …",74,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",74,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the <code>VecDeque</code> as much as possible.",74,[[]]],[11,"shrink_to","","Shrinks the capacity of the <code>VecDeque</code> with a lower bound.",74,[[["usize",15]]]],[11,"truncate","","Shortens the <code>VecDeque</code>, keeping the first <code>len</code> elements and …",74,[[["usize",15]]]],[11,"iter","","Returns a front-to-back iterator.",74,[[],["iter",3]]],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable …",74,[[],["itermut",3]]],[11,"as_slices","","Returns a pair of slices which contain, in order, the …",74,[[]]],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the …",74,[[]]],[11,"len","","Returns the number of elements in the <code>VecDeque</code>.",74,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the <code>VecDeque</code> is empty.",74,[[],["bool",15]]],[11,"range","","Creates an iterator that covers the specified range in …",74,[[],["iter",3]]],[11,"range_mut","","Creates an iterator that covers the specified mutable …",74,[[],["itermut",3]]],[11,"drain","","Creates a draining iterator that removes the specified …",74,[[],["drain",3]]],[11,"clear","","Clears the <code>VecDeque</code>, removing all values.",74,[[]]],[11,"contains","","Returns <code>true</code> if the <code>VecDeque</code> contains an element equal to …",74,[[],["bool",15]]],[11,"front","","Provides a reference to the front element, or <code>None</code> if the …",74,[[],["option",4]]],[11,"front_mut","","Provides a mutable reference to the front element, or <code>None</code>…",74,[[],["option",4]]],[11,"back","","Provides a reference to the back element, or <code>None</code> if the …",74,[[],["option",4]]],[11,"back_mut","","Provides a mutable reference to the back element, or <code>None</code> …",74,[[],["option",4]]],[11,"pop_front","","Removes the first element and returns it, or <code>None</code> if the …",74,[[],["option",4]]],[11,"pop_back","","Removes the last element from the <code>VecDeque</code> and returns …",74,[[],["option",4]]],[11,"push_front","","Prepends an element to the <code>VecDeque</code>.",74,[[]]],[11,"push_back","","Appends an element to the back of the <code>VecDeque</code>.",74,[[]]],[11,"swap_remove_front","","Removes an element from anywhere in the <code>VecDeque</code> and …",74,[[["usize",15]],["option",4]]],[11,"swap_remove_back","","Removes an element from anywhere in the <code>VecDeque</code> and …",74,[[["usize",15]],["option",4]]],[11,"insert","","Inserts an element at <code>index</code> within the <code>VecDeque</code>, shifting …",74,[[["usize",15]]]],[11,"remove","","Removes and returns the element at <code>index</code> from the <code>VecDeque</code>…",74,[[["usize",15]],["option",4]]],[11,"split_off","","Splits the <code>VecDeque</code> into two at the given index.",74,[[["usize",15]],["vecdeque",3]]],[11,"append","","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …",74,[[["vecdeque",3]]]],[11,"retain","","Retains only the elements specified by the predicate.",74,[[]]],[11,"resize_with","","Modifies the <code>VecDeque</code> in-place so that <code>len()</code> is equal to …",74,[[["usize",15]]]],[11,"make_contiguous","","Rearranges the internal storage of this deque so it is …",74,[[]]],[11,"rotate_left","","Rotates the double-ended queue <code>mid</code> places to the left.",74,[[["usize",15]]]],[11,"rotate_right","","Rotates the double-ended queue <code>k</code> places to the right.",74,[[["usize",15]]]],[11,"binary_search","","Binary searches this sorted <code>VecDeque</code> for a given element.",74,[[],[["usize",15],["result",4]]]],[11,"binary_search_by","","Binary searches this sorted <code>VecDeque</code> with a comparator …",74,[[],[["usize",15],["result",4]]]],[11,"binary_search_by_key","","Binary searches this sorted <code>VecDeque</code> with a key …",74,[[],[["usize",15],["result",4]]]],[11,"resize","","Modifies the <code>VecDeque</code> in-place so that <code>len()</code> is equal to …",74,[[["usize",15]]]],[11,"as_str","wasmer_compiler::lib::std::fmt","Get the formatted string, if it has no arguments to be …",82,[[],[["option",4],["str",15]]]],[11,"entry","","Adds a new entry to the list output.",87,[[["debug",8]],["debuglist",3]]],[11,"entries","","Adds the contents of an iterator of entries to the list …",87,[[],["debuglist",3]]],[11,"finish","","Finishes output and returns any error encountered.",87,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the map output.",88,[[["debug",8]],["debugmap",3]]],[11,"key","","Adds the key part of a new entry to the map output.",88,[[["debug",8]],["debugmap",3]]],[11,"value","","Adds the value part of a new entry to the map output.",88,[[["debug",8]],["debugmap",3]]],[11,"entries","","Adds the contents of an iterator of entries to the map …",88,[[],["debugmap",3]]],[11,"finish","","Finishes output and returns any error encountered.",88,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the set output.",89,[[["debug",8]],["debugset",3]]],[11,"entries","","Adds the contents of an iterator of entries to the set …",89,[[],["debugset",3]]],[11,"finish","","Finishes output and returns any error encountered.",89,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated struct output.",90,[[["debug",8],["str",15]],["debugstruct",3]]],[11,"finish_non_exhaustive","","Marks the struct as non-exhaustive, indicating to the …",90,[[],[["error",3],["result",4]]]],[11,"finish","","Finishes output and returns any error encountered.",90,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated tuple struct output.",91,[[["debug",8]],["debugtuple",3]]],[11,"finish","","Finishes output and returns any error encountered.",91,[[],[["error",3],["result",4]]]],[11,"pad_integral","","Performs the correct padding for an integer which has …",92,[[["bool",15],["str",15]],[["error",3],["result",4]]]],[11,"pad","","This function takes a string slice and emits it to the …",92,[[["str",15]],[["error",3],["result",4]]]],[11,"write_str","","Writes some data to the underlying buffer contained …",92,[[["str",15]],[["error",3],["result",4]]]],[11,"write_fmt","","Writes some formatted information into this instance.",92,[[["arguments",3]],[["error",3],["result",4]]]],[11,"flags","","Flags for formatting",92,[[],["u32",15]]],[11,"fill","","Character used as \'fill\' whenever there is alignment.",92,[[],["char",15]]],[11,"align","","Flag indicating what form of alignment was requested.",92,[[],[["option",4],["alignment",4]]]],[11,"width","","Optionally specified integer width that the output should …",92,[[],[["usize",15],["option",4]]]],[11,"precision","","Optionally specified precision for numeric types. …",92,[[],[["usize",15],["option",4]]]],[11,"sign_plus","","Determines if the <code>+</code> flag was specified.",92,[[],["bool",15]]],[11,"sign_minus","","Determines if the <code>-</code> flag was specified.",92,[[],["bool",15]]],[11,"alternate","","Determines if the <code>#</code> flag was specified.",92,[[],["bool",15]]],[11,"sign_aware_zero_pad","","Determines if the <code>0</code> flag was specified.",92,[[],["bool",15]]],[11,"debug_struct","","Creates a [<code>DebugStruct</code>] builder designed to assist with …",92,[[["str",15]],["debugstruct",3]]],[11,"debug_tuple","","Creates a <code>DebugTuple</code> builder designed to assist with …",92,[[["str",15]],["debugtuple",3]]],[11,"debug_list","","Creates a <code>DebugList</code> builder designed to assist with …",92,[[],["debuglist",3]]],[11,"debug_set","","Creates a <code>DebugSet</code> builder designed to assist with …",92,[[],["debugset",3]]],[11,"debug_map","","Creates a <code>DebugMap</code> builder designed to assist with …",92,[[],["debugmap",3]]],[11,"as_str","wasmer_compiler::lib::std::str","Views the underlying data as a subslice of the original …",111,[[],["str",15]]],[11,"as_str","","Views the underlying data as a subslice of the original …",112,[[],["str",15]]],[11,"valid_up_to","","Returns the index in the given string up to which valid …",118,[[],["usize",15]]],[11,"error_len","","Provides more information about the failure:",118,[[],[["usize",15],["option",4]]]],[11,"as_str","","Returns remainder of the splitted string",125,[[],["str",15]]],[11,"as_str","","Returns remainder of the splitted string",126,[[],["str",15]]],[11,"as_str","","Returns remainder of the splitted string",127,[[],["str",15]]],[11,"as_str","","Returns remainder of the splitted string",128,[[],["str",15]]],[11,"as_str","","Returns remainder of the splitted string",129,[[],["str",15]]],[11,"as_str","","Returns remainder of the splitted string",130,[[],["str",15]]],[11,"new","wasmer_compiler::lib::std::string","Creates a new empty <code>String</code>.",131,[[],["string",3]]],[11,"with_capacity","","Creates a new empty <code>String</code> with a particular capacity.",131,[[["usize",15]],["string",3]]],[11,"from_utf8","","Converts a vector of bytes to a <code>String</code>.",131,[[["vec",3],["global",3],["u8",15]],[["fromutf8error",3],["result",4],["string",3]]]],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid …",131,[[],[["str",15],["cow",4]]]],[11,"from_utf16","","Decode a UTF-16–encoded vector <code>v</code> into a <code>String</code>, …",131,[[],[["result",4],["fromutf16error",3],["string",3]]]],[11,"from_utf16_lossy","","Decode a UTF-16–encoded slice <code>v</code> into a <code>String</code>, replacing…",131,[[],["string",3]]],[11,"into_raw_parts","","Decomposes a <code>String</code> into its raw components.",131,[[]]],[11,"from_raw_parts","","Creates a new <code>String</code> from a length, capacity, and pointer.",131,[[["usize",15]],["string",3]]],[11,"from_utf8_unchecked","","Converts a vector of bytes to a <code>String</code> without checking …",131,[[["vec",3],["global",3],["u8",15]],["string",3]]],[11,"into_bytes","","Converts a <code>String</code> into a byte vector.",131,[[],[["vec",3],["global",3],["u8",15]]]],[11,"as_str","","Extracts a string slice containing the entire <code>String</code>.",131,[[],["str",15]]],[11,"as_mut_str","","Converts a <code>String</code> into a mutable string slice.",131,[[],["str",15]]],[11,"push_str","","Appends a given string slice onto the end of this <code>String</code>.",131,[[["str",15]]]],[11,"capacity","","Returns this <code>String</code>\'s capacity, in bytes.",131,[[],["usize",15]]],[11,"reserve","","Ensures that this <code>String</code>\'s capacity is at least <code>additional</code>…",131,[[["usize",15]]]],[11,"reserve_exact","","Ensures that this <code>String</code>\'s capacity is <code>additional</code> bytes …",131,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",131,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly …",131,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of this <code>String</code> to match its length.",131,[[]]],[11,"shrink_to","","Shrinks the capacity of this <code>String</code> with a lower bound.",131,[[["usize",15]]]],[11,"push","","Appends the given [<code>char</code>] to the end of this <code>String</code>.",131,[[["char",15]]]],[11,"as_bytes","","Returns a byte slice of this <code>String</code>\'s contents.",131,[[]]],[11,"truncate","","Shortens this <code>String</code> to the specified length.",131,[[["usize",15]]]],[11,"pop","","Removes the last character from the string buffer and …",131,[[],[["char",15],["option",4]]]],[11,"remove","","Removes a [<code>char</code>] from this <code>String</code> at a byte position and …",131,[[["usize",15]],["char",15]]],[11,"retain","","Retains only the characters specified by the predicate.",131,[[]]],[11,"insert","","Inserts a character into this <code>String</code> at a byte position.",131,[[["usize",15],["char",15]]]],[11,"insert_str","","Inserts a string slice into this <code>String</code> at a byte …",131,[[["usize",15],["str",15]]]],[11,"as_mut_vec","","Returns a mutable reference to the contents of this <code>String</code>…",131,[[],["vec",3]]],[11,"len","","Returns the length of this <code>String</code>, in bytes, not [<code>char</code>]s …",131,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if this <code>String</code> has a length of zero, and …",131,[[],["bool",15]]],[11,"split_off","","Splits the string into two at the given byte index.",131,[[["usize",15]],["string",3]]],[11,"clear","","Truncates this <code>String</code>, removing all contents.",131,[[]]],[11,"drain","","Creates a draining iterator that removes the specified …",131,[[],["drain",3]]],[11,"replace_range","","Removes the specified range in the string, and replaces …",131,[[["str",15]]]],[11,"into_boxed_str","","Converts this <code>String</code> into a [<code>Box</code>]<code><</code><code>str</code><code>></code>.",131,[[],[["global",3],["box",3],["str",15]]]],[11,"as_bytes","","Returns a slice of [<code>u8</code>]s bytes that were attempted to …",132,[[]]],[11,"into_bytes","","Returns the bytes that were attempted to convert to a …",132,[[],[["vec",3],["global",3],["u8",15]]]],[11,"utf8_error","","Fetch a <code>Utf8Error</code> to get more details about the …",132,[[],["utf8error",3]]],[11,"as_str","","Returns the remaining (sub)string of this iterator as a …",135,[[],["str",15]]],[11,"try_recv","wasmer_compiler::lib::std::sync::mpsc","Attempts to return a pending value on this receiver …",136,[[],[["tryrecverror",4],["result",4]]]],[11,"recv","","Attempts to wait for a value on this receiver, returning …",136,[[],[["result",4],["recverror",3]]]],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning …",136,[[["duration",3]],[["result",4],["recvtimeouterror",4]]]],[11,"recv_deadline","","Attempts to wait for a value on this receiver, returning …",136,[[["instant",3]],[["result",4],["recvtimeouterror",4]]]],[11,"iter","","Returns an iterator that will block waiting for messages, …",136,[[],["iter",3]]],[11,"try_iter","","Returns an iterator that will attempt to yield all …",136,[[],["tryiter",3]]],[11,"send","","Attempts to send a value on this channel, returning it …",140,[[],[["senderror",3],["result",4]]]],[11,"send","","Sends a value on this synchronous channel.",141,[[],[["senderror",3],["result",4]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",141,[[],[["trysenderror",4],["result",4]]]],[11,"new","wasmer_compiler::lib::std::sync","Constructs a new <code>Arc<T></code>.",146,[[],["arc",3]]],[11,"new_cyclic","","Constructs a new <code>Arc<T></code> using a weak reference to itself. …",146,[[],["arc",3]]],[11,"new_uninit","","Constructs a new <code>Arc</code> with uninitialized contents.",146,[[],[["arc",3],["maybeuninit",19]]]],[11,"new_zeroed","","Constructs a new <code>Arc</code> with uninitialized contents, with …",146,[[],[["arc",3],["maybeuninit",19]]]],[11,"pin","","Constructs a new <code>Pin<Arc<T>></code>. If <code>T</code> does not implement …",146,[[],[["arc",3],["pin",3]]]],[11,"try_new","","Constructs a new <code>Arc<T></code>, returning an error if allocation …",146,[[],[["arc",3],["allocerror",3],["result",4]]]],[11,"try_new_uninit","","Constructs a new <code>Arc</code> with uninitialized contents, …",146,[[],[["result",4],["arc",3],["allocerror",3]]]],[11,"try_new_zeroed","","Constructs a new <code>Arc</code> with uninitialized contents, with …",146,[[],[["result",4],["arc",3],["allocerror",3]]]],[11,"try_unwrap","","Returns the inner value, if the <code>Arc</code> has exactly one …",146,[[["arc",3]],[["result",4],["arc",3]]]],[11,"new_uninit_slice","","Constructs a new atomically reference-counted slice with …",146,[[["usize",15]],["arc",3]]],[11,"new_zeroed_slice","","Constructs a new atomically reference-counted slice with …",146,[[["usize",15]],["arc",3]]],[11,"assume_init","","Converts to <code>Arc<T></code>.",146,[[],["arc",3]]],[11,"assume_init","","Converts to <code>Arc<[T]></code>.",146,[[],["arc",3]]],[11,"into_raw","","Consumes the <code>Arc</code>, returning the wrapped pointer.",146,[[["arc",3]]]],[11,"as_ptr","","Provides a raw pointer to the data.",146,[[["arc",3]]]],[11,"from_raw","","Constructs an <code>Arc<T></code> from a raw pointer.",146,[[],["arc",3]]],[11,"downgrade","","Creates a new [<code>Weak</code>] pointer to this allocation.",146,[[["arc",3]],["weak",3]]],[11,"weak_count","","Gets the number of [<code>Weak</code>] pointers to this allocation.",146,[[["arc",3]],["usize",15]]],[11,"strong_count","","Gets the number of strong (<code>Arc</code>) pointers to this …",146,[[["arc",3]],["usize",15]]],[11,"increment_strong_count","","Increments the strong reference count on the <code>Arc<T></code> …",146,[[]]],[11,"decrement_strong_count","","Decrements the strong reference count on the <code>Arc<T></code> …",146,[[]]],[11,"ptr_eq","","Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation …",146,[[["arc",3]],["bool",15]]],[11,"make_mut","","Makes a mutable reference into the given <code>Arc</code>.",146,[[["arc",3]]]],[11,"get_mut","","Returns a mutable reference into the given <code>Arc</code>, if there …",146,[[["arc",3]],["option",4]]],[11,"get_mut_unchecked","","Returns a mutable reference into the given <code>Arc</code>, without …",146,[[["arc",3]]]],[11,"downcast","","Attempt to downcast the <code>Arc<dyn Any + Send + Sync></code> to a …",146,[[],[["result",4],["arc",3],["arc",3]]]],[11,"new","","Constructs a new <code>Weak<T></code>, without allocating any memory. …",147,[[],["weak",3]]],[11,"as_ptr","","Returns a raw pointer to the object <code>T</code> pointed to by this …",147,[[]]],[11,"into_raw","","Consumes the <code>Weak<T></code> and turns it into a raw pointer.",147,[[]]],[11,"from_raw","","Converts a raw pointer previously created by <code>into_raw</code> …",147,[[],["weak",3]]],[11,"upgrade","","Attempts to upgrade the <code>Weak</code> pointer to an [<code>Arc</code>], delaying…",147,[[],[["arc",3],["option",4]]]],[11,"strong_count","","Gets the number of strong (<code>Arc</code>) pointers pointing to this …",147,[[],["usize",15]]],[11,"weak_count","","Gets an approximation of the number of <code>Weak</code> pointers …",147,[[],["usize",15]]],[11,"ptr_eq","","Returns <code>true</code> if the two <code>Weak</code>s point to the same …",147,[[["weak",3]],["bool",15]]],[11,"new","wasmer_compiler::lib::std::sync::atomic","Creates a new <code>AtomicBool</code>.",148,[[["bool",15]],["atomicbool",3]]],[11,"get_mut","","Returns a mutable reference to the underlying [<code>bool</code>].",148,[[],["bool",15]]],[11,"from_mut","","Get atomic access to a <code>&mut bool</code>.",148,[[["bool",15]],["atomicbool",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",148,[[],["bool",15]]],[11,"load","","Loads a value from the bool.",148,[[["ordering",4]],["bool",15]]],[11,"store","","Stores a value into the bool.",148,[[["bool",15],["ordering",4]]]],[11,"swap","","Stores a value into the bool, returning the previous …",148,[[["bool",15],["ordering",4]],["bool",15]]],[11,"compare_and_swap","","Stores a value into the [<code>bool</code>] if the current value is …",148,[[["bool",15],["ordering",4]],["bool",15]]],[11,"compare_exchange","","Stores a value into the [<code>bool</code>] if the current value is …",148,[[["bool",15],["ordering",4]],[["bool",15],["result",4]]]],[11,"compare_exchange_weak","","Stores a value into the [<code>bool</code>] if the current value is …",148,[[["bool",15],["ordering",4]],[["bool",15],["result",4]]]],[11,"fetch_and","","Logical \\\"and\\\" with a boolean value.",148,[[["bool",15],["ordering",4]],["bool",15]]],[11,"fetch_nand","","Logical \\\"nand\\\" with a boolean value.",148,[[["bool",15],["ordering",4]],["bool",15]]],[11,"fetch_or","","Logical \\\"or\\\" with a boolean value.",148,[[["bool",15],["ordering",4]],["bool",15]]],[11,"fetch_xor","","Logical \\\"xor\\\" with a boolean value.",148,[[["bool",15],["ordering",4]],["bool",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying [<code>bool</code>].",148,[[]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",148,[[["ordering",4]],[["bool",15],["result",4]]]],[11,"new","","Creates a new <code>AtomicPtr</code>.",149,[[],["atomicptr",3]]],[11,"get_mut","","Returns a mutable reference to the underlying pointer.",149,[[]]],[11,"from_mut","","Get atomic access to a pointer.",149,[[],["atomicptr",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",149,[[]]],[11,"load","","Loads a value from the pointer.",149,[[["ordering",4]]]],[11,"store","","Stores a value into the pointer.",149,[[["ordering",4]]]],[11,"swap","","Stores a value into the pointer, returning the previous …",149,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the pointer if the current value is …",149,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the pointer if the current value is …",149,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is …",149,[[["ordering",4]],["result",4]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",149,[[["ordering",4]],["result",4]]],[11,"new","","Creates a new atomic integer.",151,[[["i8",15]],["atomici8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",151,[[],["i8",15]]],[11,"from_mut","","Get atomic access to a <code>&mut i8</code>.",151,[[["i8",15]],["atomici8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",151,[[],["i8",15]]],[11,"load","","Loads a value from the atomic integer.",151,[[["ordering",4]],["i8",15]]],[11,"store","","Stores a value into the atomic integer.",151,[[["ordering",4],["i8",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",151,[[["ordering",4],["i8",15]],[["result",4],["i8",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",151,[[["ordering",4],["i8",15]],[["result",4],["i8",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",151,[[["ordering",4]],[["result",4],["i8",15]]]],[11,"fetch_max","","Maximum with the current value.",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_min","","Minimum with the current value.",151,[[["ordering",4],["i8",15]],["i8",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",151,[[]]],[11,"new","","Creates a new atomic integer.",152,[[["u8",15]],["atomicu8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",152,[[],["u8",15]]],[11,"from_mut","","Get atomic access to a <code>&mut u8</code>.",152,[[["u8",15]],["atomicu8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",152,[[],["u8",15]]],[11,"load","","Loads a value from the atomic integer.",152,[[["ordering",4]],["u8",15]]],[11,"store","","Stores a value into the atomic integer.",152,[[["ordering",4],["u8",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",152,[[["ordering",4],["u8",15]],[["result",4],["u8",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",152,[[["ordering",4],["u8",15]],[["result",4],["u8",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",152,[[["ordering",4]],[["result",4],["u8",15]]]],[11,"fetch_max","","Maximum with the current value.",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_min","","Minimum with the current value.",152,[[["ordering",4],["u8",15]],["u8",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",152,[[]]],[11,"new","","Creates a new atomic integer.",153,[[["i16",15]],["atomici16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",153,[[],["i16",15]]],[11,"from_mut","","Get atomic access to a <code>&mut i16</code>.",153,[[["i16",15]],["atomici16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",153,[[],["i16",15]]],[11,"load","","Loads a value from the atomic integer.",153,[[["ordering",4]],["i16",15]]],[11,"store","","Stores a value into the atomic integer.",153,[[["i16",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",153,[[["i16",15],["ordering",4]],[["result",4],["i16",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",153,[[["i16",15],["ordering",4]],[["result",4],["i16",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",153,[[["ordering",4]],[["result",4],["i16",15]]]],[11,"fetch_max","","Maximum with the current value.",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_min","","Minimum with the current value.",153,[[["i16",15],["ordering",4]],["i16",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",153,[[]]],[11,"new","","Creates a new atomic integer.",154,[[["u16",15]],["atomicu16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",154,[[],["u16",15]]],[11,"from_mut","","Get atomic access to a <code>&mut u16</code>.",154,[[["u16",15]],["atomicu16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",154,[[],["u16",15]]],[11,"load","","Loads a value from the atomic integer.",154,[[["ordering",4]],["u16",15]]],[11,"store","","Stores a value into the atomic integer.",154,[[["ordering",4],["u16",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",154,[[["ordering",4],["u16",15]],[["result",4],["u16",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",154,[[["ordering",4],["u16",15]],[["result",4],["u16",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",154,[[["ordering",4]],[["result",4],["u16",15]]]],[11,"fetch_max","","Maximum with the current value.",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_min","","Minimum with the current value.",154,[[["ordering",4],["u16",15]],["u16",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",154,[[]]],[11,"new","","Creates a new atomic integer.",155,[[["i32",15]],["atomici32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",155,[[],["i32",15]]],[11,"from_mut","","Get atomic access to a <code>&mut i32</code>.",155,[[["i32",15]],["atomici32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",155,[[],["i32",15]]],[11,"load","","Loads a value from the atomic integer.",155,[[["ordering",4]],["i32",15]]],[11,"store","","Stores a value into the atomic integer.",155,[[["ordering",4],["i32",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",155,[[["ordering",4],["i32",15]],[["i32",15],["result",4]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",155,[[["ordering",4],["i32",15]],[["i32",15],["result",4]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",155,[[["ordering",4]],[["i32",15],["result",4]]]],[11,"fetch_max","","Maximum with the current value.",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_min","","Minimum with the current value.",155,[[["ordering",4],["i32",15]],["i32",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",155,[[]]],[11,"new","","Creates a new atomic integer.",156,[[["u32",15]],["atomicu32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",156,[[],["u32",15]]],[11,"from_mut","","Get atomic access to a <code>&mut u32</code>.",156,[[["u32",15]],["atomicu32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",156,[[],["u32",15]]],[11,"load","","Loads a value from the atomic integer.",156,[[["ordering",4]],["u32",15]]],[11,"store","","Stores a value into the atomic integer.",156,[[["u32",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",156,[[["u32",15],["ordering",4]],[["result",4],["u32",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",156,[[["u32",15],["ordering",4]],[["result",4],["u32",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",156,[[["ordering",4]],[["result",4],["u32",15]]]],[11,"fetch_max","","Maximum with the current value.",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_min","","Minimum with the current value.",156,[[["u32",15],["ordering",4]],["u32",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",156,[[]]],[11,"new","","Creates a new atomic integer.",157,[[["i64",15]],["atomici64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",157,[[],["i64",15]]],[11,"from_mut","","Get atomic access to a <code>&mut i64</code>.",157,[[["i64",15]],["atomici64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",157,[[],["i64",15]]],[11,"load","","Loads a value from the atomic integer.",157,[[["ordering",4]],["i64",15]]],[11,"store","","Stores a value into the atomic integer.",157,[[["i64",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",157,[[["i64",15],["ordering",4]],[["result",4],["i64",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",157,[[["i64",15],["ordering",4]],[["result",4],["i64",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",157,[[["ordering",4]],[["result",4],["i64",15]]]],[11,"fetch_max","","Maximum with the current value.",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_min","","Minimum with the current value.",157,[[["i64",15],["ordering",4]],["i64",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",157,[[]]],[11,"new","","Creates a new atomic integer.",158,[[["u64",15]],["atomicu64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",158,[[],["u64",15]]],[11,"from_mut","","Get atomic access to a <code>&mut u64</code>.",158,[[["u64",15]],["atomicu64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",158,[[],["u64",15]]],[11,"load","","Loads a value from the atomic integer.",158,[[["ordering",4]],["u64",15]]],[11,"store","","Stores a value into the atomic integer.",158,[[["ordering",4],["u64",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",158,[[["ordering",4],["u64",15]],[["result",4],["u64",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",158,[[["ordering",4],["u64",15]],[["result",4],["u64",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",158,[[["ordering",4]],[["result",4],["u64",15]]]],[11,"fetch_max","","Maximum with the current value.",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_min","","Minimum with the current value.",158,[[["ordering",4],["u64",15]],["u64",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",158,[[]]],[11,"new","","Creates a new atomic integer.",159,[[["isize",15]],["atomicisize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",159,[[],["isize",15]]],[11,"from_mut","","Get atomic access to a <code>&mut isize</code>.",159,[[["isize",15]],["atomicisize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",159,[[],["isize",15]]],[11,"load","","Loads a value from the atomic integer.",159,[[["ordering",4]],["isize",15]]],[11,"store","","Stores a value into the atomic integer.",159,[[["isize",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",159,[[["isize",15],["ordering",4]],[["isize",15],["result",4]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",159,[[["isize",15],["ordering",4]],[["isize",15],["result",4]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",159,[[["ordering",4]],[["isize",15],["result",4]]]],[11,"fetch_max","","Maximum with the current value.",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_min","","Minimum with the current value.",159,[[["isize",15],["ordering",4]],["isize",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",159,[[]]],[11,"new","","Creates a new atomic integer.",160,[[["usize",15]],["atomicusize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",160,[[],["usize",15]]],[11,"from_mut","","Get atomic access to a <code>&mut usize</code>.",160,[[["usize",15]],["atomicusize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",160,[[],["usize",15]]],[11,"load","","Loads a value from the atomic integer.",160,[[["ordering",4]],["usize",15]]],[11,"store","","Stores a value into the atomic integer.",160,[[["usize",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",160,[[["usize",15],["ordering",4]],[["usize",15],["result",4]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",160,[[["usize",15],["ordering",4]],[["usize",15],["result",4]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",160,[[["ordering",4]],[["usize",15],["result",4]]]],[11,"fetch_max","","Maximum with the current value.",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_min","","Minimum with the current value.",160,[[["usize",15],["ordering",4]],["usize",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",160,[[]]],[11,"new","wasmer_compiler::lib::std::sync","Creates a new barrier that can block a given number of …",161,[[["usize",15]],["barrier",3]]],[11,"wait","","Blocks the current thread until all threads have …",161,[[],["barrierwaitresult",3]]],[11,"is_leader","","Returns <code>true</code> if this thread is the \\\"leader thread\\\" for …",162,[[],["bool",15]]],[11,"new","","Creates a new condition variable which is ready to be …",163,[[],["condvar",3]]],[11,"wait","","Blocks the current thread until this condition variable …",163,[[["mutexguard",3]],[["mutexguard",3],["poisonerror",3],["result",4]]]],[11,"wait_while","","Blocks the current thread until this condition variable …",163,[[["mutexguard",3]],[["mutexguard",3],["poisonerror",3],["result",4]]]],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, …",163,[[["u32",15],["mutexguard",3]],[["result",4],["poisonerror",3]]]],[11,"wait_timeout","","Waits on this condition variable for a notification, …",163,[[["mutexguard",3],["duration",3]],[["result",4],["poisonerror",3]]]],[11,"wait_timeout_while","","Waits on this condition variable for a notification, …",163,[[["mutexguard",3],["duration",3]],[["result",4],["poisonerror",3]]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",163,[[]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",163,[[]]],[11,"timed_out","","Returns <code>true</code> if the wait was known to have timed out.",164,[[],["bool",15]]],[11,"new","","Creates a new mutex in an unlocked state ready for use.",165,[[],["mutex",3]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is …",165,[[],[["result",4],["mutexguard",3],["poisonerror",3]]]],[11,"try_lock","","Attempts to acquire this lock.",165,[[],[["mutexguard",3],["trylockerror",4],["result",4]]]],[11,"is_poisoned","","Determines whether the mutex is poisoned.",165,[[],["bool",15]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",165,[[],[["result",4],["poisonerror",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",165,[[],[["result",4],["poisonerror",3]]]],[11,"new","","Creates a new <code>Once</code> value.",167,[[],["once",3]]],[11,"call_once","","Performs an initialization routine once and only once. …",167,[[]]],[11,"call_once_force","","Performs the same function as <code>call_once()</code> except ignores …",167,[[]]],[11,"is_completed","","Returns <code>true</code> if some <code>call_once()</code> call has completed …",167,[[],["bool",15]]],[11,"is_poisoned","","Returns <code>true</code> if the associated [<code>Once</code>] was poisoned prior …",168,[[],["bool",15]]],[11,"new","","Creates a new instance of an <code>RwLock<T></code> which is unlocked.",169,[[],["rwlock",3]]],[11,"read","","Locks this rwlock with shared read access, blocking the …",169,[[],[["rwlockreadguard",3],["result",4],["poisonerror",3]]]],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",169,[[],[["result",4],["rwlockreadguard",3],["trylockerror",4]]]],[11,"write","","Locks this rwlock with exclusive write access, blocking …",169,[[],[["result",4],["rwlockwriteguard",3],["poisonerror",3]]]],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",169,[[],[["result",4],["rwlockwriteguard",3],["trylockerror",4]]]],[11,"is_poisoned","","Determines whether the lock is poisoned.",169,[[],["bool",15]]],[11,"into_inner","","Consumes this <code>RwLock</code>, returning the underlying data.",169,[[],[["result",4],["poisonerror",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",169,[[],[["result",4],["poisonerror",3]]]],[11,"new","","Creates a <code>PoisonError</code>.",172,[[],["poisonerror",3]]],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, …",172,[[]]],[11,"get_ref","","Reaches into this error indicating that a lock is …",172,[[]]],[11,"get_mut","","Reaches into this error indicating that a lock is …",172,[[]]],[11,"new","wasmer_compiler::lib::std::vec","Constructs a new, empty <code>Vec<T></code>.",174,[[],[["vec",3],["global",3]]]],[11,"with_capacity","","Constructs a new, empty <code>Vec<T></code> with the specified …",174,[[["usize",15]],[["vec",3],["global",3]]]],[11,"from_raw_parts","","Creates a <code>Vec<T></code> directly from the raw components of …",174,[[["usize",15]],[["vec",3],["global",3]]]],[11,"new_in","","Constructs a new, empty <code>Vec<T, A></code>.",174,[[],["vec",3]]],[11,"with_capacity_in","","Constructs a new, empty <code>Vec<T, A></code> with the specified …",174,[[["usize",15]],["vec",3]]],[11,"from_raw_parts_in","","Creates a <code>Vec<T, A></code> directly from the raw components of …",174,[[["usize",15]],["vec",3]]],[11,"into_raw_parts","","Decomposes a <code>Vec<T></code> into its raw components.",174,[[]]],[11,"into_raw_parts_with_alloc","","Decomposes a <code>Vec<T></code> into its raw components.",174,[[]]],[11,"capacity","","Returns the number of elements the vector can hold without…",174,[[],["usize",15]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",174,[[["usize",15]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",174,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",174,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly …",174,[[["usize",15]],[["tryreserveerror",4],["result",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",174,[[]]],[11,"shrink_to","","Shrinks the capacity of the vector with a lower bound.",174,[[["usize",15]]]],[11,"into_boxed_slice","","Converts the vector into <code>Box<[T]></code>.",174,[[],["box",3]]],[11,"truncate","","Shortens the vector, keeping the first <code>len</code> elements and …",174,[[["usize",15]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",174,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",174,[[]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",174,[[]]],[11,"as_mut_ptr","","Returns an unsafe mutable pointer to the vector\'s buffer.",174,[[]]],[11,"allocator","","Returns a reference to the underlying allocator.",174,[[]]],[11,"set_len","","Forces the length of the vector to <code>new_len</code>.",174,[[["usize",15]]]],[11,"swap_remove","","Removes an element from the vector and returns it.",174,[[["usize",15]]]],[11,"insert","","Inserts an element at position <code>index</code> within the vector, …",174,[[["usize",15]]]],[11,"remove","","Removes and returns the element at position <code>index</code> within …",174,[[["usize",15]]]],[11,"retain","","Retains only the elements specified by the predicate.",174,[[]]],[11,"dedup_by_key","","Removes all but the first of consecutive elements in the …",174,[[]]],[11,"dedup_by","","Removes all but the first of consecutive elements in the …",174,[[]]],[11,"push","","Appends an element to the back of a collection.",174,[[]]],[11,"pop","","Removes the last element from a vector and returns it, or …",174,[[],["option",4]]],[11,"append","","Moves all the elements of <code>other</code> into <code>Self</code>, leaving <code>other</code> …",174,[[["vec",3]]]],[11,"drain","","Creates a draining iterator that removes the specified …",174,[[],["drain",3]]],[11,"clear","","Clears the vector, removing all values.",174,[[]]],[11,"len","","Returns the number of elements in the vector, also …",174,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the vector contains no elements.",174,[[],["bool",15]]],[11,"split_off","","Splits the collection into two at the given index.",174,[[["usize",15]],["vec",3]]],[11,"resize_with","","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.",174,[[["usize",15]]]],[11,"leak","","Consumes and leaks the <code>Vec</code>, returning a mutable reference …",174,[[]]],[11,"spare_capacity_mut","","Returns the remaining spare capacity of the vector as a …",174,[[]]],[11,"resize","","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.",174,[[["usize",15]]]],[11,"extend_from_slice","","Clones and appends all elements in a slice to the <code>Vec</code>.",174,[[]]],[11,"extend_from_within","","Copies elements from <code>src</code> range to the end of the vector.",174,[[]]],[11,"dedup","","Removes consecutive repeated elements in the vector …",174,[[]]],[11,"splice","","Creates a splicing iterator that replaces the specified …",174,[[],["splice",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if …",174,[[],["drainfilter",3]]],[11,"allocator","","Returns a reference to the underlying allocator.",175,[[]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",177,[[]]],[11,"allocator","","Returns a reference to the underlying allocator.",177,[[]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",178,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable …",178,[[]]],[11,"allocator","","Returns a reference to the underlying allocator.",178,[[]]],[11,"endianness","wasmer_compiler","Return the endianness of this architecture.",223,[[],[["endianness",4],["result",4]]]],[11,"pointer_width","","Return the pointer bit width of this target\'s …",223,[[],[["result",4],["pointerwidth",4]]]],[11,"host","","Return the architecture for the current host.",223,[[],["architecture",4]]],[11,"host","","Return the binary format for the current host.",224,[[],["binaryformat",4]]],[11,"host","","Return the operating system for the current host.",227,[[],["operatingsystem",4]]],[11,"bits","","Return the number of bits in a pointer.",229,[[],["u8",15]]],[11,"bytes","","Return the number of bytes in a pointer.",229,[[],["u8",15]]],[11,"endianness","","Return the endianness of this target\'s architecture.",230,[[],[["endianness",4],["result",4]]]],[11,"pointer_width","","Return the pointer width of this target\'s architecture.",230,[[],[["result",4],["pointerwidth",4]]]],[11,"default_calling_convention","","Return the default calling convention for the given …",230,[[],[["result",4],["callingconvention",4]]]],[11,"data_model","","The C data model for a given target. If the model is not …",230,[[],[["result",4],["cdatamodel",4]]]],[11,"unknown","","Return a <code>Triple</code> with all unknown fields.",230,[[],["triple",3]]],[11,"host","","Return the triple for the current host.",230,[[],["triple",3]]],[11,"new","","Create a new feature",264,[[],["features",3]]],[11,"threads","","Configures whether the WebAssembly threads proposal will …",264,[[["bool",15]],["features",3]]],[11,"reference_types","","Configures whether the WebAssembly reference types …",264,[[["bool",15]],["features",3]]],[11,"simd","","Configures whether the WebAssembly SIMD proposal will be …",264,[[["bool",15]],["features",3]]],[11,"bulk_memory","","Configures whether the WebAssembly bulk memory operations …",264,[[["bool",15]],["features",3]]],[11,"multi_value","","Configures whether the WebAssembly multi-value proposal …",264,[[["bool",15]],["features",3]]],[11,"tail_call","","Configures whether the WebAssembly tail-call proposal will…",264,[[["bool",15]],["features",3]]],[11,"module_linking","","Configures whether the WebAssembly module linking …",264,[[["bool",15]],["features",3]]],[11,"multi_memory","","Configures whether the WebAssembly multi-memory proposal …",264,[[["bool",15]],["features",3]]],[11,"memory64","","Configures whether the WebAssembly 64-bit memory proposal …",264,[[["bool",15]],["features",3]]]],"p":[[8,"ToOwned"],[4,"Cow"],[8,"Borrow"],[8,"BorrowMut"],[3,"Box"],[3,"HashMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[3,"ValuesMut"],[3,"IntoKeys"],[3,"IntoValues"],[3,"RawEntryBuilderMut"],[4,"RawEntryMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"DefaultHasher"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DrainFilter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[4,"Bound"],[3,"BinaryHeap"],[3,"PeekMut"],[3,"Iter"],[3,"IntoIter"],[3,"IntoIterSorted"],[3,"Drain"],[3,"DrainSorted"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"BTreeMap"],[3,"Iter"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"IntoKeys"],[3,"IntoValues"],[3,"Range"],[3,"RangeMut"],[3,"DrainFilter"],[3,"IterMut"],[3,"Iter"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"DrainFilter"],[3,"BTreeSet"],[3,"IntoIter"],[3,"Range"],[3,"LinkedList"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Cursor"],[3,"CursorMut"],[3,"DrainFilter"],[3,"VecDeque"],[3,"Drain"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[4,"TryReserveError"],[13,"AllocError"],[4,"Alignment"],[3,"Arguments"],[8,"Binary"],[8,"Octal"],[8,"Debug"],[8,"Display"],[3,"DebugList"],[3,"DebugMap"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"Formatter"],[8,"Write"],[8,"LowerExp"],[8,"UpperExp"],[8,"LowerHex"],[8,"Pointer"],[8,"UpperHex"],[8,"Pattern"],[4,"SearchStep"],[8,"Searcher"],[8,"ReverseSearcher"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"EncodeUtf16"],[3,"SplitAsciiWhitespace"],[3,"SplitWhitespace"],[3,"Bytes"],[3,"CharIndices"],[3,"Chars"],[3,"ParseBoolError"],[3,"EscapeDebug"],[3,"EscapeDefault"],[3,"EscapeUnicode"],[8,"FromStr"],[3,"Utf8Error"],[3,"Lines"],[3,"LinesAny"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"RSplit"],[3,"Split"],[3,"RSplitN"],[3,"SplitN"],[3,"RSplitTerminator"],[3,"SplitTerminator"],[3,"String"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"ToString"],[3,"Drain"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"Sender"],[3,"SyncSender"],[3,"SendError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Arc"],[3,"Weak"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Condvar"],[3,"WaitTimeoutResult"],[3,"Mutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"PoisonError"],[4,"TryLockError"],[3,"Vec"],[3,"DrainFilter"],[3,"Splice"],[3,"Drain"],[3,"IntoIter"],[3,"InstructionAddressMap"],[3,"ArchivedInstructionAddressMap"],[3,"InstructionAddressMapResolver"],[3,"FunctionAddressMap"],[3,"ArchivedFunctionAddressMap"],[3,"FunctionAddressMapResolver"],[8,"CompilerConfig"],[8,"Compiler"],[4,"Symbol"],[8,"SymbolRegistry"],[4,"CompileError"],[3,"MiddlewareError"],[4,"WasmError"],[13,"InvalidWebAssembly"],[4,"ParseCpuFeatureError"],[3,"CompiledFunctionFrameInfo"],[3,"ArchivedCompiledFunctionFrameInfo"],[3,"CompiledFunctionFrameInfoResolver"],[3,"FunctionBody"],[3,"ArchivedFunctionBody"],[3,"FunctionBodyResolver"],[3,"CompiledFunction"],[3,"ArchivedCompiledFunction"],[3,"CompiledFunctionResolver"],[3,"Dwarf"],[3,"ArchivedDwarf"],[3,"DwarfResolver"],[3,"Compilation"],[3,"Iter"],[3,"JumpTable"],[3,"ArchivedJumpTable"],[3,"JumpTableResolver"],[3,"CompileModuleInfo"],[3,"ArchivedCompileModuleInfo"],[3,"CompileModuleInfoResolver"],[4,"RelocationKind"],[4,"ArchivedRelocationKind"],[4,"RelocationKindResolver"],[3,"Relocation"],[3,"ArchivedRelocation"],[3,"RelocationResolver"],[4,"RelocationTarget"],[4,"ArchivedRelocationTarget"],[4,"RelocationTargetResolver"],[4,"Architecture"],[4,"BinaryFormat"],[4,"CallingConvention"],[4,"Endianness"],[4,"OperatingSystem"],[13,"MacOSX"],[4,"PointerWidth"],[3,"Triple"],[4,"CpuFeature"],[3,"Target"],[3,"TrapInformation"],[3,"ArchivedTrapInformation"],[3,"TrapInformationResolver"],[4,"CompiledFunctionUnwindInfo"],[4,"ArchivedCompiledFunctionUnwindInfo"],[4,"CompiledFunctionUnwindInfoResolver"],[3,"FunctionBodyData"],[8,"FunctionBinaryReader"],[3,"ModuleInfoTranslation"],[3,"ModuleEnvironment"],[8,"ModuleMiddleware"],[8,"FunctionMiddleware"],[3,"MiddlewareBinaryReader"],[3,"MiddlewareReaderState"],[8,"ModuleMiddlewareChain"],[3,"ModuleTranslationState"],[3,"SectionIndex"],[3,"ArchivedSectionIndex"],[3,"SectionIndexResolver"],[4,"CustomSectionProtection"],[4,"ArchivedCustomSectionProtection"],[4,"CustomSectionProtectionResolver"],[3,"CustomSection"],[3,"ArchivedCustomSection"],[3,"CustomSectionResolver"],[3,"SectionBody"],[3,"ArchivedSectionBody"],[3,"SectionBodyResolver"],[3,"SourceLoc"],[3,"ArchivedSourceLoc"],[3,"SourceLocResolver"],[3,"Features"],[3,"Error"],[3,"RecvError"]],"a":{"alloc":[567,5361,5741],"calloc":[5363],"compare_and_swap":[5831,5832],"delete":[5418,5500,5558,5594],"length":[5402,5474,5524,5574,5601,5613,5665,5769,6119],"malloc":[567,5361,5741,6086],"realloc":[6094,6095,6096,6097,6098,6099],"{:?}":[265],"{}":[268]}},\
"wasmer_compiler_cranelift":{"doc":"A WebAssembly <code>Compiler</code> implementation using Cranelift.","i":[[0,"address_map","wasmer_compiler_cranelift","",null,null],[5,"get_function_address_map","wasmer_compiler_cranelift::address_map","",null,[[["usize",15],["targetisa",8],["range",3],["context",3]],["functionaddressmap",3]]],[0,"compiler","wasmer_compiler_cranelift","Support for compiling with Cranelift.",null,null],[3,"CraneliftCompiler","wasmer_compiler_cranelift::compiler","A compiler that compiles a WebAssembly module with …",null,null],[12,"config","","",0,null],[11,"new","","Creates a new Cranelift compiler",0,[[["cranelift",3]]]],[11,"config","","Gets the WebAssembly features for this Compiler",0,[[],["cranelift",3]]],[0,"config","wasmer_compiler_cranelift","",null,null],[4,"CraneliftOptLevel","wasmer_compiler_cranelift::config","Possible optimization levels for the Cranelift codegen …",null,null],[13,"None","","No optimizations performed, minimizes compilation time by …",1,null],[13,"Speed","","Generates the fastest possible code, but may take longer.",1,null],[13,"SpeedAndSize","","Similar to <code>speed</code>, but also performs transformations aimed …",1,null],[3,"Cranelift","","Global configuration options used to create an …",null,null],[12,"enable_nan_canonicalization","","",2,null],[12,"enable_verifier","","",2,null],[12,"enable_simd","","",2,null],[12,"enable_pic","","",2,null],[12,"opt_level","","",2,null],[12,"middlewares","","The middleware chain.",2,null],[11,"new","","Creates a new configuration object with the default …",2,[[]]],[11,"canonicalize_nans","","Enable NaN canonicalization.",2,[[["bool",15]]]],[11,"enable_simd","","Enable SIMD support.",2,[[["bool",15]]]],[11,"opt_level","","The optimization levels when optimizing the IR.",2,[[["craneliftoptlevel",4]]]],[11,"isa","","Generates the ISA for the provided target",2,[[["target",3]],[["box",3],["targetisa",8]]]],[11,"flags","","Generates the flags for the compiler",2,[[],["flags",3]]],[0,"debug","wasmer_compiler_cranelift","",null,null],[0,"address_map","wasmer_compiler_cranelift::debug","Data structures to provide transformation of the source",null,null],[6,"ValueLabelsRanges","wasmer_compiler_cranelift::debug::address_map","Value ranges for functions.",null,null],[6,"StackSlots","","Stack slots for functions.",null,null],[4,"ModuleInfoMemoryOffset","","Memory definition offset in the VMContext structure.",null,null],[13,"None","","Not available.",3,null],[13,"Defined","","Offset to the defined memory.",3,null],[13,"Imported","","Offset to the imported memory.",3,null],[3,"ModuleInfoVmctxInfo","","ModuleInfo <code>vmctx</code> related info.",null,null],[12,"memory_offset","","The memory definition offset in the VMContext structure.",4,null],[12,"stack_slots","","The functions stack slots.",4,null],[0,"dwarf","wasmer_compiler_cranelift","",null,null],[3,"WriterRelocate","wasmer_compiler_cranelift::dwarf","",null,null],[12,"relocs","","",5,null],[12,"writer","","",5,null],[18,"FUNCTION_SYMBOL","","",5,null],[11,"new","","",5,[[["endianness",4],["option",4]]]],[11,"into_section","","",5,[[],["customsection",3]]],[0,"func_environ","wasmer_compiler_cranelift","",null,null],[5,"get_function_name","wasmer_compiler_cranelift::func_environ","Compute an <code>ir::ExternalName</code> for a given wasm function …",null,[[["functionindex",3]],["externalname",4]]],[5,"type_of_vmmemory_definition_current_length","","The type of the <code>current_length</code> field.",null,[[["vmoffsets",3]],["type",3]]],[5,"type_of_vmtable_definition_current_elements","","The type of the <code>current_elements</code> field.",null,[[["vmoffsets",3]],["type",3]]],[3,"FuncEnvironment","","The <code>FuncEnvironment</code> implementation for use by the …",null,null],[12,"target_config","","Target-specified configuration.",6,null],[12,"module","","The module-level environment which this function-level …",6,null],[12,"type_stack","","A stack tracking the type of local variables.",6,null],[12,"signatures","","The module function signatures",6,null],[12,"vmctx","","The Cranelift global holding the vmctx address.",6,null],[12,"memory32_size_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"table_size_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"memory_grow_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"table_grow_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"table_copy_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"table_init_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"elem_drop_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"memory_copy_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"memory_fill_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"memory_init_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"data_drop_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"table_get_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"table_set_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"func_ref_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"table_fill_sig","","The external function signature for implementing wasm\'s …",6,null],[12,"externref_inc_sig","","The external function signature for implementing …",6,null],[12,"externref_dec_sig","","The external function signature for implementing …",6,null],[12,"offsets","","Offsets to struct fields accessed by JIT code.",6,null],[12,"memory_styles","","The memory styles",6,null],[12,"table_styles","","The table styles",6,null],[11,"new","","",6,[[["primarymap",3],["primarymap",3],["primarymap",3],["targetfrontendconfig",3],["moduleinfo",3]]]],[11,"pointer_type","","",6,[[],["type",3]]],[11,"vmctx","","",6,[[["function",3]],["globalvalue",3]]],[11,"get_table_fill_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_table_fill_func","","",6,[[["function",3],["tableindex",3]]]],[11,"get_externref_inc_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_externref_inc_func","","",6,[[["function",3]]]],[11,"get_externref_dec_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_externref_dec_func","","",6,[[["function",3]]]],[11,"get_func_ref_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_func_ref_func","","",6,[[["function",3],["functionindex",3]]]],[11,"get_table_get_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_table_get_func","","",6,[[["function",3],["tableindex",3]]]],[11,"get_table_set_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_table_set_func","","",6,[[["function",3],["tableindex",3]]]],[11,"get_table_grow_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_table_grow_func","","Return the table.grow function signature to call for the …",6,[[["function",3],["tableindex",3]]]],[11,"get_memory_grow_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_grow_func","","Return the memory.grow function signature to call for the …",6,[[["function",3],["memoryindex",3]]]],[11,"get_table_size_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_table_size_func","","Return the memory.size function signature to call for the …",6,[[["function",3],["tableindex",3]]]],[11,"get_memory32_size_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_size_func","","Return the memory.size function signature to call for the …",6,[[["function",3],["memoryindex",3]]]],[11,"get_table_copy_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_table_copy_func","","",6,[[["function",3],["tableindex",3]]]],[11,"get_table_init_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_table_init_func","","",6,[[["function",3],["tableindex",3]]]],[11,"get_elem_drop_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_elem_drop_func","","",6,[[["function",3]]]],[11,"get_memory_copy_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_copy_func","","",6,[[["function",3],["memoryindex",3]]]],[11,"get_memory_fill_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_fill_func","","",6,[[["function",3],["memoryindex",3]]]],[11,"get_memory_init_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_memory_init_func","","",6,[[["function",3]]]],[11,"get_data_drop_sig","","",6,[[["function",3]],["sigref",3]]],[11,"get_data_drop_func","","",6,[[["function",3]]]],[11,"translate_load_builtin_function_address","","Translates load of builtin function and returns a pair of …",6,[[["funccursor",3],["vmbuiltinfunctionindex",3]]]],[0,"sink","wasmer_compiler_cranelift","Support for compiling with Cranelift.",null,null],[3,"RelocSink","wasmer_compiler_cranelift::sink","Implementation of a relocation sink that just saves all …",null,null],[12,"module","","",7,null],[12,"local_func_index","","Current function index.",7,null],[12,"func_relocs","","Relocations recorded for the function.",7,null],[11,"new","","Return a new <code>RelocSink</code> instance.",7,[[["functionindex",3],["moduleinfo",3]]]],[3,"TrapSink","","",null,null],[12,"traps","","",8,null],[11,"new","","",8,[[]]],[5,"translate_ir_trapcode","","Translates the Cranelift IR TrapCode into generic Trap …",null,[[["trapcode",4]],["trapcode",4]]],[0,"trampoline","wasmer_compiler_cranelift","",null,null],[0,"dynamic_function","wasmer_compiler_cranelift::trampoline","A trampoline generator for calling dynamic host functions …",null,null],[5,"make_trampoline_dynamic_function","wasmer_compiler_cranelift::trampoline::dynamic_function","Create a trampoline for invoking a WebAssembly function.",null,[[["functiontype",3],["vmoffsets",3],["targetisa",8],["functionbuildercontext",3]],[["compileerror",4],["result",4],["functionbody",3]]]],[0,"function_call","wasmer_compiler_cranelift::trampoline","A trampoline generator for calling Wasm functions easily.",null,null],[5,"make_trampoline_function_call","wasmer_compiler_cranelift::trampoline::function_call","Create a trampoline for invoking a WebAssembly function.",null,[[["targetisa",8],["functionbuildercontext",3],["functiontype",3]],[["compileerror",4],["result",4],["functionbody",3]]]],[0,"binemit","wasmer_compiler_cranelift::trampoline","",null,null],[3,"NullTrapSink","wasmer_compiler_cranelift::trampoline::binemit","A <code>TrapSink</code> implementation that does nothing, which is …",null,null],[6,"CodeOffset","","Offset in bytes from the beginning of the function.",null,null],[3,"NullStackMapSink","","Placeholder StackMapSink that does nothing.",null,null],[8,"TrapSink","","A trait for receiving trap codes and offsets.",null,null],[10,"trap","","Add trap information for a specific offset.",9,[[["u32",15],["sourceloc",3],["trapcode",4]]]],[3,"TrampolineRelocSink","","We don\'t expect trampoline compilation to produce any …",null,null],[5,"pretty_error","wasmer_compiler_cranelift::trampoline","Pretty-print a Cranelift error.",null,[[["targetisa",8],["codegenerror",4],["option",4],["function",3]],["string",3]]],[3,"Context","","Persistent data structures and compilation pipeline.",null,null],[12,"func","","The function we\'re compiling.",10,null],[12,"cfg","","The control flow graph of <code>func</code>.",10,null],[12,"domtree","","Dominator tree for <code>func</code>.",10,null],[12,"regalloc","","Register allocation context.",10,null],[12,"loop_analysis","","Loop analysis of <code>func</code>.",10,null],[12,"redundant_reload_remover","","Redundant-reload remover context.",10,null],[12,"mach_compile_result","","Result of MachBackend compilation, if computed.",10,null],[12,"want_disasm","","Flag: do we want a disassembly with the MachCompileResult?",10,null],[3,"FunctionBuilder","","Temporary object used to build a single Cranelift IR …",null,null],[12,"func","","The function currently being built. This field is public …",11,null],[12,"srcloc","","Source location to assign to all new instructions.",11,null],[12,"func_ctx","","",11,null],[12,"position","","",11,null],[3,"FunctionBuilderContext","","Structure used for translating a series of functions into …",null,null],[12,"ssa","","",12,null],[12,"blocks","","",12,null],[12,"types","","",12,null],[0,"translator","wasmer_compiler_cranelift","Tools for translating wasm function bytecode to Cranelift …",null,null],[0,"code_translator","wasmer_compiler_cranelift::translator","This module contains the bulk of the interesting code …",null,null],[5,"translate_operator","wasmer_compiler_cranelift::translator::code_translator","Translates wasm operators into Cranelift IR instructions. …",null,[[["functranslationstate",3],["functionbuilder",3],["operator",4],["moduletranslationstate",3]],["wasmresult",6]]],[5,"translate_unreachable_operator","","Deals with a Wasm instruction located in an unreachable …",null,[[["functranslationstate",3],["functionbuilder",3],["operator",4],["moduletranslationstate",3]],["wasmresult",6]]],[5,"get_heap_addr","","Get the address+offset to use for a heap access.",null,[[["heap",3],["value",3],["u32",15],["functionbuilder",3],["type",3]]]],[5,"prepare_load","","Prepare for a load; factors out common functionality …",null,[[["u32",15],["functranslationstate",3],["functionbuilder",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"translate_load","","Translate a load instruction.",null,[[["memoryimmediate",3],["functranslationstate",3],["opcode",4],["functionbuilder",3],["type",3]],["wasmresult",6]]],[5,"translate_store","","Translate a store instruction.",null,[[["functranslationstate",3],["opcode",4],["functionbuilder",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"mem_op_size","","",null,[[["opcode",4],["type",3]],["u32",15]]],[5,"translate_icmp","","",null,[[["intcc",4],["functionbuilder",3],["functranslationstate",3]]]],[5,"finalise_atomic_mem_addr","","",null,[[["memoryimmediate",3],["value",3],["functranslationstate",3],["functionbuilder",3],["type",3]],[["wasmresult",6],["value",3]]]],[5,"translate_atomic_rmw","","",null,[[["type",3],["atomicrmwop",4],["functranslationstate",3],["functionbuilder",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"translate_atomic_cas","","",null,[[["type",3],["functranslationstate",3],["functionbuilder",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"translate_atomic_load","","",null,[[["type",3],["functranslationstate",3],["functionbuilder",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"translate_atomic_store","","",null,[[["type",3],["functranslationstate",3],["functionbuilder",3],["memoryimmediate",3]],["wasmresult",6]]],[5,"translate_vector_icmp","","",null,[[["functranslationstate",3],["intcc",4],["functionbuilder",3],["type",3]]]],[5,"translate_fcmp","","",null,[[["functranslationstate",3],["functionbuilder",3],["floatcc",4]]]],[5,"translate_vector_fcmp","","",null,[[["floatcc",4],["functranslationstate",3],["functionbuilder",3],["type",3]]]],[5,"translate_br_if","","",null,[[["u32",15],["functionbuilder",3],["functranslationstate",3]]]],[5,"translate_br_if_args","","",null,[[["u32",15],["functranslationstate",3]]]],[5,"type_of","","Determine the returned value type of a WebAssembly …",null,[[["operator",4]],["type",3]]],[5,"optionally_bitcast_vector","","Some SIMD operations only operate on I8X16 in CLIF; this …",null,[[["value",3],["functionbuilder",3],["type",3]],["value",3]]],[5,"is_non_canonical_v128","","",null,[[["type",3]],["bool",15]]],[5,"canonicalise_v128_values","","Cast to I8X16, any vector values in <code>values</code> that are of …",null,[[["smallvec",3],["functionbuilder",3]]]],[5,"canonicalise_then_jump","","Generate a <code>jump</code> instruction, but first cast all 128-bit …",null,[[["functionbuilder",3],["block",3]],["inst",3]]],[5,"canonicalise_then_brz","","The same but for a <code>brz</code> instruction.",null,[[["functionbuilder",3],["value",3],["block",3]],["inst",3]]],[5,"canonicalise_then_brnz","","The same but for a <code>brnz</code> instruction.",null,[[["functionbuilder",3],["value",3],["block",3]],["inst",3]]],[5,"pop1_with_bitcast","","A helper for popping and bitcasting a single value; since …",null,[[["type",3],["functionbuilder",3],["functranslationstate",3]],["value",3]]],[5,"pop2_with_bitcast","","A helper for popping and bitcasting two values; since …",null,[[["type",3],["functionbuilder",3],["functranslationstate",3]]]],[5,"bitcast_arguments","","A helper for bitcasting a sequence of values (e.g. …",null,[[["functionbuilder",3]]]],[5,"wasm_param_types","","A helper to extract all the <code>Type</code> listings of each …",null,[[],[["type",3],["vec",3]]]],[0,"func_environ","wasmer_compiler_cranelift::translator","All the runtime support necessary for the wasm to …",null,null],[4,"GlobalVariable","wasmer_compiler_cranelift::translator::func_environ","The value of a WebAssembly global variable.",null,null],[13,"Const","","This is a constant global with a value known at compile …",13,null],[13,"Memory","","This is a variable in memory that should be referenced …",13,null],[12,"gv","wasmer_compiler_cranelift::translator::func_environ::GlobalVariable","The address of the global variable storage.",14,null],[12,"offset","","An offset to add to the address.",14,null],[12,"ty","","The global variable\'s type.",14,null],[13,"Custom","wasmer_compiler_cranelift::translator::func_environ","This is a global variable that needs to be handled by the …",13,null],[4,"ReturnMode","","How to return from functions.",null,null],[13,"NormalReturns","","Use normal return instructions as needed.",15,null],[13,"FallthroughReturn","","Use a single fallthrough return at the end of the …",15,null],[8,"TargetEnvironment","","Environment affecting the translation of a WebAssembly.",null,null],[10,"target_config","","Get the information needed to produce Cranelift IR for …",16,[[],["targetfrontendconfig",3]]],[11,"pointer_type","","Get the Cranelift integer type to use for native pointers.",16,[[],["type",3]]],[11,"pointer_bytes","","Get the size of a native pointer, in bytes.",16,[[],["u8",15]]],[11,"reference_type","","Get the Cranelift reference type to use for native …",16,[[],["type",3]]],[8,"FuncEnvironment","","Environment affecting the translation of a single …",null,null],[11,"is_wasm_parameter","","Is the given parameter of the given function a wasm-level …",17,[[["signature",3],["usize",15]],["bool",15]]],[11,"is_wasm_return","","Is the given return of the given function a wasm-level …",17,[[["signature",3],["usize",15]],["bool",15]]],[11,"return_mode","","Should the code be structured to use a single …",17,[[],["returnmode",4]]],[10,"make_global","","Set up the necessary preamble definitions in <code>func</code> to …",17,[[["function",3],["globalindex",3]],[["globalvariable",4],["wasmresult",6]]]],[10,"make_heap","","Set up the necessary preamble definitions in <code>func</code> to …",17,[[["function",3],["memoryindex",3]],[["heap",3],["wasmresult",6]]]],[10,"make_table","","Set up the necessary preamble definitions in <code>func</code> to …",17,[[["function",3],["tableindex",3]],[["wasmresult",6],["table",3]]]],[10,"make_indirect_sig","","Set up a signature definition in the preamble of <code>func</code> …",17,[[["function",3],["signatureindex",3]],[["sigref",3],["wasmresult",6]]]],[10,"make_direct_func","","Set up an external function definition in the preamble of …",17,[[["function",3],["functionindex",3]],[["wasmresult",6],["funcref",3]]]],[10,"translate_call_indirect","","Translate a <code>call_indirect</code> WebAssembly instruction at <code>pos</code>.",17,[[["signatureindex",3],["funccursor",3],["value",3],["table",3],["sigref",3],["tableindex",3]],[["wasmresult",6],["inst",3]]]],[11,"translate_call","","Translate a <code>call</code> WebAssembly instruction at <code>pos</code>.",17,[[["funcref",3],["funccursor",3],["functionindex",3]],[["wasmresult",6],["inst",3]]]],[10,"translate_memory_grow","","Translate a <code>memory.grow</code> WebAssembly instruction.",17,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],[["wasmresult",6],["value",3]]]],[10,"translate_memory_size","","Translates a <code>memory.size</code> WebAssembly instruction.",17,[[["heap",3],["funccursor",3],["memoryindex",3]],[["wasmresult",6],["value",3]]]],[10,"translate_memory_copy","","Translate a <code>memory.copy</code> WebAssembly instruction.",17,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],["wasmresult",6]]],[10,"translate_memory_fill","","Translate a <code>memory.fill</code> WebAssembly instruction.",17,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],["wasmresult",6]]],[10,"translate_memory_init","","Translate a <code>memory.init</code> WebAssembly instruction.",17,[[["heap",3],["funccursor",3],["u32",15],["memoryindex",3],["value",3]],["wasmresult",6]]],[10,"translate_data_drop","","Translate a <code>data.drop</code> WebAssembly instruction.",17,[[["u32",15],["funccursor",3]],["wasmresult",6]]],[10,"translate_table_size","","Translate a <code>table.size</code> WebAssembly instruction.",17,[[["table",3],["funccursor",3],["tableindex",3]],[["wasmresult",6],["value",3]]]],[10,"translate_table_grow","","Translate a <code>table.grow</code> WebAssembly instruction.",17,[[["funccursor",3],["value",3],["table",3],["tableindex",3]],[["wasmresult",6],["value",3]]]],[10,"translate_table_get","","Translate a <code>table.get</code> WebAssembly instruction.",17,[[["value",3],["table",3],["functionbuilder",3],["tableindex",3]],[["wasmresult",6],["value",3]]]],[10,"translate_table_set","","Translate a <code>table.set</code> WebAssembly instruction.",17,[[["value",3],["table",3],["functionbuilder",3],["tableindex",3]],["wasmresult",6]]],[10,"translate_table_copy","","Translate a <code>table.copy</code> WebAssembly instruction.",17,[[["funccursor",3],["value",3],["table",3],["tableindex",3]],["wasmresult",6]]],[10,"translate_table_fill","","Translate a <code>table.fill</code> WebAssembly instruction.",17,[[["funccursor",3],["value",3],["tableindex",3]],["wasmresult",6]]],[10,"translate_externref_inc","","Translates an externref ref count increment.",17,[[["value",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_externref_dec","","Translates an externref ref count decrement.",17,[[["value",3],["funccursor",3]],["wasmresult",6]]],[10,"translate_table_init","","Translate a <code>table.init</code> WebAssembly instruction.",17,[[["u32",15],["funccursor",3],["value",3],["table",3],["tableindex",3]],["wasmresult",6]]],[10,"translate_elem_drop","","Translate a <code>elem.drop</code> WebAssembly instruction.",17,[[["u32",15],["funccursor",3]],["wasmresult",6]]],[10,"translate_ref_null","","Translate a <code>ref.null T</code> WebAssembly instruction.",17,[[["funccursor",3],["type",4]],[["wasmresult",6],["value",3]]]],[11,"translate_ref_is_null","","Translate a <code>ref.is_null</code> WebAssembly instruction.",17,[[["funccursor",3],["value",3]],[["wasmresult",6],["value",3]]]],[10,"translate_ref_func","","Translate a <code>ref.func</code> WebAssembly instruction.",17,[[["funccursor",3],["functionindex",3]],[["wasmresult",6],["value",3]]]],[10,"translate_custom_global_get","","Translate a <code>global.get</code> WebAssembly instruction at <code>pos</code> for …",17,[[["funccursor",3],["globalindex",3]],[["wasmresult",6],["value",3]]]],[10,"translate_custom_global_set","","Translate a <code>global.set</code> WebAssembly instruction at <code>pos</code> for …",17,[[["funccursor",3],["value",3],["globalindex",3]],["wasmresult",6]]],[10,"translate_atomic_wait","","Translate an <code>i32.atomic.wait</code> or <code>i64.atomic.wait</code> …",17,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],[["wasmresult",6],["value",3]]]],[10,"translate_atomic_notify","","Translate an <code>atomic.notify</code> WebAssembly instruction. The …",17,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_loop_header","","Emit code at the beginning of every wasm loop.",17,[[["funccursor",3]],["wasmresult",6]]],[11,"before_translate_operator","","Optional callback for the <code>FunctionEnvironment</code> performing …",17,[[["functionbuilder",3],["operator",4],["functranslationstate",3]],["wasmresult",6]]],[11,"after_translate_operator","","Optional callback for the <code>FunctionEnvironment</code> performing …",17,[[["functionbuilder",3],["operator",4],["functranslationstate",3]],["wasmresult",6]]],[10,"get_global_type","","Get the type of the global at the given index.",17,[[["globalindex",3]],[["option",4],["wasmertype",4]]]],[10,"push_local_decl_on_stack","","Push a local declaration on to the stack to track the …",17,[[["wasmertype",4]]]],[10,"push_params_on_stack","","Push locals for a the params of a function on to the …",17,[[["localfunctionindex",3]]]],[10,"get_local_type","","Get the type of the local at the given index.",17,[[["u32",15]],[["option",4],["wasmertype",4]]]],[10,"get_local_types","","Get the types of all the current locals.",17,[[]]],[10,"get_function_type","","Get the type of the local at the given index.",17,[[["functionindex",3]],[["option",4],["functiontype",3]]]],[10,"get_function_sig","","Get the type of a function with the given signature index.",17,[[["signatureindex",3]],[["option",4],["functiontype",3]]]],[10,"translate_drop_locals","","Drops all locals that need to be dropped. Useful for …",17,[[["functionbuilder",3]],["wasmresult",6]]],[0,"func_state","wasmer_compiler_cranelift::translator","WebAssembly module and function translation state.",null,null],[4,"ElseData","wasmer_compiler_cranelift::translator::func_state","Information about the presence of an associated <code>else</code> for …",null,null],[13,"NoElse","","The <code>if</code> does not already have an <code>else</code> block.",18,null],[12,"branch_inst","wasmer_compiler_cranelift::translator::func_state::ElseData","If we discover that we need an <code>else</code> block, this is the …",19,null],[13,"WithElse","wasmer_compiler_cranelift::translator::func_state","We have already allocated an <code>else</code> block.",18,null],[12,"else_block","wasmer_compiler_cranelift::translator::func_state::ElseData","This is the <code>else</code> block.",20,null],[4,"ControlStackFrame","wasmer_compiler_cranelift::translator::func_state","A control stack frame can be an <code>if</code>, a <code>block</code> or a <code>loop</code>, …",null,null],[13,"If","","",21,null],[12,"destination","wasmer_compiler_cranelift::translator::func_state::ControlStackFrame","",22,null],[12,"else_data","","",22,null],[12,"num_param_values","","",22,null],[12,"num_return_values","","",22,null],[12,"original_stack_size","","",22,null],[12,"exit_is_branched_to","","",22,null],[12,"blocktype","","",22,null],[12,"head_is_reachable","","Was the head of the <code>if</code> reachable?",22,null],[12,"consequent_ends_reachable","","What was the reachability at the end of the consequent?",22,null],[13,"Block","wasmer_compiler_cranelift::translator::func_state","",21,null],[12,"destination","wasmer_compiler_cranelift::translator::func_state::ControlStackFrame","",23,null],[12,"num_param_values","","",23,null],[12,"num_return_values","","",23,null],[12,"original_stack_size","","",23,null],[12,"exit_is_branched_to","","",23,null],[13,"Loop","wasmer_compiler_cranelift::translator::func_state","",21,null],[12,"destination","wasmer_compiler_cranelift::translator::func_state::ControlStackFrame","",24,null],[12,"header","","",24,null],[12,"num_param_values","","",24,null],[12,"num_return_values","","",24,null],[12,"original_stack_size","","",24,null],[11,"num_return_values","wasmer_compiler_cranelift::translator::func_state","",21,[[],["usize",15]]],[11,"num_param_values","","",21,[[],["usize",15]]],[11,"following_code","","",21,[[],["block",3]]],[11,"br_destination","","",21,[[],["block",3]]],[11,"original_stack_size","","Private helper. Use <code>truncate_value_stack_to_else_params()</code> …",21,[[],["usize",15]]],[11,"is_loop","","",21,[[],["bool",15]]],[11,"exit_is_branched_to","","",21,[[],["bool",15]]],[11,"set_branched_to_exit","","",21,[[]]],[11,"truncate_value_stack_to_else_params","","Pop values from the value stack so that it is left at the …",21,[[["vec",3]]]],[11,"truncate_value_stack_to_original_size","","Pop values from the value stack so that it is left at the …",21,[[["vec",3]]]],[3,"ValueExtraInfo","","Extra info about values. For example, on the stack.",null,null],[12,"ref_counted","","Whether or not the value should be ref counted.",25,null],[3,"FuncTranslationState","","Contains information passed along during a function\'s …",null,null],[12,"stack","","A stack of values corresponding to the active values in …",26,null],[12,"control_stack","","A stack of active control flow operations at this point …",26,null],[12,"reachable","","Is the current translation state still reachable? This is …",26,null],[12,"globals","","",26,null],[12,"heaps","","",26,null],[12,"tables","","",26,null],[12,"signatures","","",26,null],[12,"functions","","",26,null],[11,"reachable","","True if the current translation state expresses reachable …",26,[[],["bool",15]]],[11,"new","","Construct a new, empty, <code>FuncTranslationState</code>",26,[[]]],[11,"clear","","",26,[[]]],[11,"initialize","","Initialize the state for compiling a function with the …",26,[[["signature",3],["block",3]]]],[11,"push1_extra","","Push a value with extra info attached.",26,[[]]],[11,"push1","","Push a value with default extra info.",26,[[["value",3]]]],[11,"pushn","","Push multiple values.",26,[[]]],[11,"pop1","","Pop one value.",26,[[]]],[11,"peek1","","Peek at the top of the stack without popping it.",26,[[]]],[11,"pop2","","Pop two values. Return them in the order they were pushed.",26,[[]]],[11,"pop3","","Pop three values. Return them in the order they were …",26,[[]]],[11,"ensure_length_is_at_least","","Helper to ensure the the stack size is at least as big as …",26,[[["usize",15]]]],[11,"popn","","Pop the top <code>n</code> values on the stack.",26,[[["usize",15]]]],[11,"peekn","","Peek at the top <code>n</code> values on the stack in the order they …",26,[[["usize",15]]]],[11,"peekn_mut","","Peek at the top <code>n</code> values on the stack in the order they …",26,[[["usize",15]]]],[11,"push_block","","Push a block on the control stack.",26,[[["usize",15],["block",3]]]],[11,"push_loop","","Push a loop on the control stack.",26,[[["usize",15],["block",3]]]],[11,"push_if","","Push an if on the control stack.",26,[[["usize",15],["block",3],["typeorfunctype",4],["elsedata",4]]]],[11,"get_global","","Get the <code>GlobalVariable</code> reference that should be used to …",26,[[["function",3],["u32",15]],[["globalvariable",4],["wasmresult",6]]]],[11,"get_heap","","Get the <code>Heap</code> reference that should be used to access …",26,[[["function",3],["u32",15]],[["heap",3],["wasmresult",6]]]],[11,"get_or_create_table","","Get the <code>Table</code> reference that should be used to access …",26,[[["function",3],["u32",15]],[["wasmresult",6],["table",3]]]],[11,"get_indirect_sig","","Get the <code>SigRef</code> reference that should be used to make an …",26,[[["function",3],["u32",15]],["wasmresult",6]]],[11,"get_direct_func","","Get the <code>FuncRef</code> reference that should be used to make a …",26,[[["function",3],["u32",15]],["wasmresult",6]]],[5,"num_wasm_parameters","","",null,[[["signature",3]],["usize",15]]],[0,"func_translator","wasmer_compiler_cranelift::translator","Standalone WebAssembly to Cranelift IR translator.",null,null],[3,"FuncTranslator","wasmer_compiler_cranelift::translator::func_translator","WebAssembly to Cranelift IR function translator.",null,null],[12,"func_ctx","","",27,null],[12,"state","","",27,null],[11,"new","","Create a new translator.",27,[[]]],[11,"translate","","Translate a binary WebAssembly function.",27,[[["functionbinaryreader",8],["function",3],["localfunctionindex",3],["moduletranslationstate",3]],["wasmresult",6]]],[11,"translate_from_reader","","Translate a binary WebAssembly function from a …",27,[[["functionbinaryreader",8],["function",3],["moduletranslationstate",3]],["wasmresult",6]]],[5,"declare_wasm_parameters","","Declare local variables for the signature parameters that …",null,[[["functionbuilder",3],["block",3]],["usize",15]]],[5,"parse_local_decls","","Parse the local variable declarations that precede the …",null,[[["functionbinaryreader",8],["functionbuilder",3],["usize",15]],["wasmresult",6]]],[5,"declare_locals","","Declare <code>count</code> local variables of the same type, starting …",null,[[["u32",15],["usize",15],["functionbuilder",3],["type",4]],["wasmresult",6]]],[5,"parse_function_body","","Parse the function body in <code>reader</code>.",null,[[["functionbinaryreader",8],["functranslationstate",3],["functionbuilder",3],["moduletranslationstate",3]],["wasmresult",6]]],[5,"cur_srcloc","","Get the current source location from a reader.",null,[[["functionbinaryreader",8]],["sourceloc",3]]],[0,"translation_utils","wasmer_compiler_cranelift::translator","Helper functions and structures for the translation.",null,null],[5,"signature_to_cranelift_ir","wasmer_compiler_cranelift::translator::translation_utils","Helper function translate a Function signature into …",null,[[["functiontype",3],["targetfrontendconfig",3]],["signature",3]]],[5,"reference_type","","Helper function translating wasmparser types to Cranelift …",null,[[["targetfrontendconfig",3]],[["wasmresult",6],["type",3]]]],[5,"type_to_irtype","","Helper function translating wasmparser types to Cranelift …",null,[[["type",4],["targetfrontendconfig",3]],[["wasmresult",6],["type",3]]]],[5,"irlibcall_to_libcall","","Transform Cranelift LibCall into runtime LibCall",null,[[["libcall",4]],["libcall",4]]],[5,"irreloc_to_relocationkind","","Transform Cranelift Reloc to compiler Relocation",null,[[["reloc",4]],["relocationkind",4]]],[5,"block_with_params","","Create a <code>Block</code> with the given Wasm parameters.",null,[[["functionbuilder",3]],[["block",3],["wasmresult",6]]]],[5,"f32_translation","","Turns a <code>wasmparser</code> <code>f32</code> into a <code>Cranelift</code> one.",null,[[["ieee32",3]],["ieee32",3]]],[5,"f64_translation","","Turns a <code>wasmparser</code> <code>f64</code> into a <code>Cranelift</code> one.",null,[[["ieee64",3]],["ieee64",3]]],[5,"get_vmctx_value_label","","Special VMContext value label. It is tracked as …",null,[[],["valuelabel",3]]],[5,"transform_jump_table","","Transforms Cranelift JumpTable\'s into runtime JumpTables",null,[[["u32",15],["jumptable",3],["craneliftsecondarymap",3]],[["u32",15],["jumptable",3],["secondarymap",3]]]],[0,"unwind","wasmer_compiler_cranelift::translator","A <code>Compilation</code> contains the compiled function bodies for a …",null,null],[4,"CraneliftUnwindInfo","wasmer_compiler_cranelift::translator::unwind","Cranelift specific unwind info",null,null],[13,"WindowsX64","","Windows Unwind info",28,null],[13,"FDE","","Dwarf FDE",28,null],[13,"None","","No Unwind info attached",28,null],[11,"maybe_into_to_windows_unwind","","Transform the <code>CraneliftUnwindInfo</code> to the Windows format.",28,[[],[["option",4],["compiledfunctionunwindinfo",4]]]],[5,"compiled_function_unwind_info","","Constructs unwind info object from Cranelift IR",null,[[["context",3],["targetisa",8]],[["compileerror",4],["result",4],["craneliftunwindinfo",4]]]],[3,"CraneliftCompiler","wasmer_compiler_cranelift","A compiler that compiles a WebAssembly module with …",null,null],[12,"config","","",0,null],[3,"Cranelift","","Global configuration options used to create an …",null,null],[12,"enable_nan_canonicalization","","",2,null],[12,"enable_verifier","","",2,null],[12,"enable_simd","","",2,null],[12,"enable_pic","","",2,null],[12,"opt_level","","",2,null],[12,"middlewares","","The middleware chain.",2,null],[4,"CraneliftOptLevel","","Possible optimization levels for the Cranelift codegen …",null,null],[13,"None","","No optimizations performed, minimizes compilation time by …",1,null],[13,"Speed","","Generates the fastest possible code, but may take longer.",1,null],[13,"SpeedAndSize","","Similar to <code>speed</code>, but also performs transformations aimed …",1,null],[4,"ModuleInfoMemoryOffset","","Memory definition offset in the VMContext structure.",null,null],[13,"None","","Not available.",3,null],[13,"Defined","","Offset to the defined memory.",3,null],[13,"Imported","","Offset to the imported memory.",3,null],[3,"ModuleInfoVmctxInfo","","ModuleInfo <code>vmctx</code> related info.",null,null],[12,"memory_offset","","The memory definition offset in the VMContext structure.",4,null],[12,"stack_slots","","The functions stack slots.",4,null],[6,"ValueLabelsRanges","","Value ranges for functions.",null,null],[5,"make_trampoline_function_call","","Create a trampoline for invoking a WebAssembly function.",null,[[["targetisa",8],["functionbuildercontext",3],["functiontype",3]],[["compileerror",4],["result",4],["functionbody",3]]]],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","wasmer_compiler_cranelift::compiler","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::config","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::debug::address_map","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::dwarf","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::func_environ","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::sink","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::trampoline::binemit","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"pointer_metadata","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"pointer_metadata","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"pointer_metadata","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::trampoline","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"pointer_metadata","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::translator::func_environ","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"pointer_metadata","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[],["bool",15]]],[11,"pointer_metadata","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::translator::func_state","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"pointer_metadata","","",21,[[]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"pointer_metadata","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"pointer_metadata","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::translator::func_translator","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"pointer_metadata","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","wasmer_compiler_cranelift::translator::unwind","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"pointer_metadata","","",28,[[]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"trap","wasmer_compiler_cranelift::trampoline::binemit","",29,[[["u32",15],["sourceloc",3],["trapcode",4]]]],[11,"default","","",29,[[],["nulltrapsink",3]]],[11,"add_stack_map","","",30,[[["u32",15],["stackmap",3]]]],[11,"target_config","wasmer_compiler_cranelift::func_environ","",6,[[],["targetfrontendconfig",3]]],[11,"is_wasm_parameter","","",6,[[["signature",3],["usize",15]],["bool",15]]],[11,"make_table","","",6,[[["function",3],["tableindex",3]],[["wasmresult",6],["table",3]]]],[11,"translate_table_grow","","",6,[[["value",3],["funccursor",3],["table",3],["tableindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_table_get","","",6,[[["value",3],["table",3],["functionbuilder",3],["tableindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_table_set","","",6,[[["value",3],["table",3],["functionbuilder",3],["tableindex",3]],["wasmresult",6]]],[11,"translate_table_fill","","",6,[[["value",3],["funccursor",3],["tableindex",3]],["wasmresult",6]]],[11,"translate_externref_inc","","",6,[[["value",3],["funccursor",3]],["wasmresult",6]]],[11,"translate_externref_dec","","",6,[[["value",3],["funccursor",3]],["wasmresult",6]]],[11,"translate_ref_null","","",6,[[["type",4],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_ref_is_null","","",6,[[["value",3],["funccursor",3]],[["wasmresult",6],["value",3]]]],[11,"translate_ref_func","","",6,[[["funccursor",3],["functionindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_custom_global_get","","",6,[[["funccursor",3],["globalindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_custom_global_set","","",6,[[["value",3],["funccursor",3],["globalindex",3]],["wasmresult",6]]],[11,"make_heap","","",6,[[["function",3],["memoryindex",3]],[["heap",3],["wasmresult",6]]]],[11,"make_global","","",6,[[["function",3],["globalindex",3]],[["globalvariable",4],["wasmresult",6]]]],[11,"make_indirect_sig","","",6,[[["function",3],["signatureindex",3]],[["sigref",3],["wasmresult",6]]]],[11,"make_direct_func","","",6,[[["function",3],["functionindex",3]],[["wasmresult",6],["funcref",3]]]],[11,"translate_call_indirect","","",6,[[["signatureindex",3],["funccursor",3],["value",3],["table",3],["sigref",3],["tableindex",3]],[["wasmresult",6],["inst",3]]]],[11,"translate_call","","",6,[[["funcref",3],["funccursor",3],["functionindex",3]],[["wasmresult",6],["inst",3]]]],[11,"translate_memory_grow","","",6,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_memory_size","","",6,[[["heap",3],["funccursor",3],["memoryindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_memory_copy","","",6,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],["wasmresult",6]]],[11,"translate_memory_fill","","",6,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],["wasmresult",6]]],[11,"translate_memory_init","","",6,[[["heap",3],["funccursor",3],["u32",15],["memoryindex",3],["value",3]],["wasmresult",6]]],[11,"translate_data_drop","","",6,[[["u32",15],["funccursor",3]],["wasmresult",6]]],[11,"translate_table_size","","",6,[[["table",3],["funccursor",3],["tableindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_table_copy","","",6,[[["funccursor",3],["value",3],["table",3],["tableindex",3]],["wasmresult",6]]],[11,"translate_table_init","","",6,[[["u32",15],["funccursor",3],["value",3],["table",3],["tableindex",3]],["wasmresult",6]]],[11,"translate_elem_drop","","",6,[[["u32",15],["funccursor",3]],["wasmresult",6]]],[11,"translate_atomic_wait","","",6,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],[["wasmresult",6],["value",3]]]],[11,"translate_atomic_notify","","",6,[[["heap",3],["funccursor",3],["value",3],["memoryindex",3]],[["wasmresult",6],["value",3]]]],[11,"get_global_type","","",6,[[["globalindex",3]],[["option",4],["wasmertype",4]]]],[11,"push_local_decl_on_stack","","",6,[[["wasmertype",4]]]],[11,"push_params_on_stack","","",6,[[["localfunctionindex",3]]]],[11,"get_local_type","","",6,[[["u32",15]],[["option",4],["wasmertype",4]]]],[11,"get_local_types","","",6,[[]]],[11,"get_function_type","","",6,[[["functionindex",3]],[["option",4],["functiontype",3]]]],[11,"get_function_sig","","",6,[[["signatureindex",3]],[["option",4],["functiontype",3]]]],[11,"translate_drop_locals","","",6,[[["functionbuilder",3]],["wasmresult",6]]],[11,"clone","wasmer_compiler_cranelift::config","",1,[[],["craneliftoptlevel",4]]],[11,"clone","","",2,[[],["cranelift",3]]],[11,"clone","wasmer_compiler_cranelift::debug::address_map","",3,[[],["moduleinfomemoryoffset",4]]],[11,"clone","","",4,[[],["moduleinfovmctxinfo",3]]],[11,"clone","wasmer_compiler_cranelift::dwarf","",5,[[],["writerrelocate",3]]],[11,"clone","wasmer_compiler_cranelift::translator::func_environ","",13,[[],["globalvariable",4]]],[11,"clone","","",15,[[],["returnmode",4]]],[11,"clone","wasmer_compiler_cranelift::translator::func_state","",25,[[],["valueextrainfo",3]]],[11,"default","wasmer_compiler_cranelift::config","",2,[[]]],[11,"default","wasmer_compiler_cranelift::translator::func_state","",25,[[],["valueextrainfo",3]]],[11,"eq","wasmer_compiler_cranelift::translator::func_environ","",15,[[["returnmode",4]],["bool",15]]],[11,"fmt","wasmer_compiler_cranelift::config","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_cranelift::debug::address_map","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_cranelift::dwarf","",5,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_cranelift::translator::func_environ","",15,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_cranelift::translator::func_state","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"reloc_external","wasmer_compiler_cranelift::sink","",7,[[["externalname",4],["addend",6],["reloc",4],["sourceloc",3],["codeoffset",6]]]],[11,"reloc_constant","","",7,[[["constantoffset",6],["reloc",4],["codeoffset",6]]]],[11,"reloc_jt","","",7,[[["jumptable",3],["reloc",4],["codeoffset",6]]]],[11,"reloc_external","wasmer_compiler_cranelift::trampoline::binemit","",31,[[["addend",6],["reloc",4],["sourceloc",3],["externalname",4],["codeoffset",6]]]],[11,"reloc_constant","","",31,[[["constantoffset",6],["reloc",4],["codeoffset",6]]]],[11,"reloc_jt","","",31,[[["jumptable",3],["reloc",4],["codeoffset",6]]]],[11,"trap","wasmer_compiler_cranelift::sink","",8,[[["trapcode",4],["sourceloc",3],["codeoffset",6]]]],[11,"endian","wasmer_compiler_cranelift::dwarf","",5,[[]]],[11,"len","","",5,[[],["usize",15]]],[11,"write","","",5,[[],["result",6]]],[11,"write_at","","",5,[[["usize",15]],["result",6]]],[11,"write_address","","",5,[[["address",4],["u8",15]],["result",6]]],[11,"write_offset","","",5,[[["usize",15],["u8",15],["sectionid",4]],["result",6]]],[11,"write_offset_at","","",5,[[["usize",15],["u8",15],["sectionid",4]],["result",6]]],[11,"size_of_val","wasmer_compiler_cranelift::compiler","",0,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler_cranelift::config","",1,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",2,[[["memoryusagetracker",8]],["usize",15]]],[11,"enable_pic","","",2,[[]]],[11,"enable_verifier","","",2,[[]]],[11,"compiler","","Transform it into the compiler",2,[[["box",3]],[["box",3],["compiler",8]]]],[11,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",2,[[["modulemiddleware",8],["arc",3]]]],[11,"get_middlewares","wasmer_compiler_cranelift::compiler","Get the middlewares for this compiler",0,[[]]],[11,"compile_module","","Compile the module using Cranelift, producing a …",0,[[["target",3],["primarymap",3],["functionbodydata",3],["compilemoduleinfo",3],["localfunctionindex",3],["moduletranslationstate",3]],[["compilation",3],["compileerror",4],["result",4]]]],[11,"new","wasmer_compiler_cranelift::trampoline","Allocate a new compilation context.",10,[[],["context",3]]],[11,"for_function","","Allocate a new compilation context with an existing …",10,[[["function",3]],["context",3]]],[11,"clear","","Clear all data structures in this context.",10,[[]]],[11,"set_disasm","","Set the flag to request a disassembly when compiling with …",10,[[["bool",15]]]],[11,"compile_and_emit","","Compile the function, and emit machine code into a <code>Vec<u8></code>…",10,[[["targetisa",8],["vec",3],["relocsink",8],["trapsink",8],["stackmapsink",8]],[["result",4],["codeinfo",3],["codegenerror",4]]]],[11,"compile","","Compile the function.",10,[[["targetisa",8]],[["result",4],["codeinfo",3],["codegenerror",4]]]],[11,"emit_to_memory","","Emit machine code directly into raw memory.",10,[[["targetisa",8],["relocsink",8],["trapsink",8],["stackmapsink",8]],["codeinfo",3]]],[11,"create_unwind_info","","Creates unwind information for the function.",10,[[["targetisa",8]],[["codegenerror",4],["option",4],["result",4]]]],[11,"verify","","Run the verifier on the function.",10,[[],[["verifiererrors",3],["result",4]]]],[11,"verify_if","","Run the verifier only if the <code>enable_verifier</code> setting is …",10,[[],[["codegenerror",4],["result",4]]]],[11,"verify_locations","","Run the locations verifier on the function.",10,[[["targetisa",8]],[["verifiererrors",3],["result",4]]]],[11,"verify_locations_if","","Run the locations verifier only if the <code>enable_verifier</code> …",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"dce","","Perform dead-code elimination on the function.",10,[[],[["codegenerror",4],["result",4]]]],[11,"remove_constant_phis","","Perform constant-phi removal on the function.",10,[[],[["codegenerror",4],["result",4]]]],[11,"preopt","","Perform pre-legalization rewrites on the function.",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"canonicalize_nans","","Perform NaN canonicalizing rewrites on the function.",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"legalize","","Run the legalizer for <code>isa</code> on the function.",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"postopt","","Perform post-legalization rewrites on the function.",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"compute_cfg","","Compute the control flow graph.",10,[[]]],[11,"compute_domtree","","Compute dominator tree.",10,[[]]],[11,"compute_loop_analysis","","Compute the loop analysis.",10,[[]]],[11,"flowgraph","","Compute the control flow graph and dominator tree.",10,[[]]],[11,"simple_gvn","","Perform simple GVN on the function.",10,[[],[["codegenerror",4],["result",4]]]],[11,"licm","","Perform LICM on the function.",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"eliminate_unreachable_code","","Perform unreachable code elimination.",10,[[],[["codegenerror",4],["result",4]]]],[11,"regalloc","","Run the register allocator.",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"prologue_epilogue","","Insert prologue and epilogues after computing the stack …",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"redundant_reload_remover","","Do redundant-reload removal after allocation of both …",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"shrink_instructions","","Run the instruction shrinking pass.",10,[[["targetisa",8]],[["codegenerror",4],["result",4]]]],[11,"relax_branches","","Run the branch relaxation pass and return information …",10,[[["targetisa",8]],[["result",4],["codeinfo",3],["codegenerror",4]]]],[11,"build_value_labels_ranges","","Builds ranges and location for specified value labels.",10,[[["targetisa",8]],[["codegenerror",4],["hashmap",3],["result",4]]]],[11,"new","","Creates a new FunctionBuilder structure that will operate …",11,[[["functionbuildercontext",3],["function",3]],["functionbuilder",3]]],[11,"current_block","","Get the block that this builder is currently at.",11,[[],[["block",3],["option",4]]]],[11,"set_srcloc","","Set the source location that should be assigned to all …",11,[[["sourceloc",3]]]],[11,"create_block","","Creates a new <code>Block</code> and returns its reference.",11,[[],["block",3]]],[11,"insert_block_after","","Insert <code>block</code> in the layout <em>after</em> the existing block <code>after</code>.",11,[[["block",3]]]],[11,"switch_to_block","","After the call to this function, new instructions will be …",11,[[["block",3]]]],[11,"seal_block","","Declares that all the predecessors of this block are …",11,[[["block",3]]]],[11,"seal_all_blocks","","Effectively calls seal_block on all unsealed blocks in …",11,[[]]],[11,"declare_var","","In order to use a variable in a <code>use_var</code>, you need to …",11,[[["type",3],["variable",3]]]],[11,"use_var","","Returns the Cranelift IR value corresponding to the …",11,[[["variable",3]],["value",3]]],[11,"def_var","","Register a new definition of a user variable. The type of …",11,[[["value",3],["variable",3]]]],[11,"set_val_label","","Set label for Value",11,[[["value",3],["valuelabel",3]]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by …",11,[[["jumptabledata",3]],["jumptable",3]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by …",11,[[["stackslotdata",3]],["stackslot",3]]],[11,"import_signature","","Adds a signature which can later be used to declare an …",11,[[["signature",3]],["sigref",3]]],[11,"import_function","","Declare an external function import.",11,[[["extfuncdata",3]],["funcref",3]]],[11,"create_global_value","","Declares a global value accessible to the function.",11,[[["globalvaluedata",4]],["globalvalue",3]]],[11,"create_heap","","Declares a heap accessible to the function.",11,[[["heapdata",3]],["heap",3]]],[11,"ins","","Returns an object with the <code>InstBuilder</code> trait that allows …",11,[[],["funcinstbuilder",3]]],[11,"ensure_inserted_block","","Make sure that the current block is inserted in the …",11,[[]]],[11,"cursor","","Returns a <code>FuncCursor</code> pointed at the current position …",11,[[],["funccursor",3]]],[11,"append_block_params_for_function_params","","Append parameters to the given <code>Block</code> corresponding to the …",11,[[["block",3]]]],[11,"append_block_params_for_function_returns","","Append parameters to the given <code>Block</code> corresponding to the …",11,[[["block",3]]]],[11,"finalize","","Declare that translation of the current function is …",11,[[]]],[11,"block_params","","Retrieves all the parameters for a <code>Block</code> currently …",11,[[["block",3]]]],[11,"signature","","Retrieves the signature with reference <code>sigref</code> previously …",11,[[["sigref",3]],[["option",4],["signature",3]]]],[11,"append_block_param","","Creates a parameter for a specific <code>Block</code> by appending it …",11,[[["block",3],["type",3]],["value",3]]],[11,"inst_results","","Returns the result values of an instruction.",11,[[["inst",3]]]],[11,"change_jump_destination","","Changes the destination of a jump instruction after …",11,[[["block",3],["inst",3]]]],[11,"is_unreachable","","Returns <code>true</code> if and only if the current <code>Block</code> is sealed …",11,[[],["bool",15]]],[11,"is_pristine","","Returns <code>true</code> if and only if no instructions have been …",11,[[],["bool",15]]],[11,"is_filled","","Returns <code>true</code> if and only if a terminator instruction has …",11,[[],["bool",15]]],[11,"display","","Returns a displayable object for the function as it is.",11,[[],["displayfunction",3]]],[11,"call_memcpy","","Calls libc.memcpy",11,[[["targetfrontendconfig",3],["value",3]]]],[11,"emit_small_memory_copy","","Optimised memcpy or memmove for small copies.",11,[[["value",3],["u64",15],["u8",15],["targetfrontendconfig",3],["bool",15]]]],[11,"call_memset","","Calls libc.memset",11,[[["targetfrontendconfig",3],["value",3]]]],[11,"emit_small_memset","","Calls libc.memset",11,[[["value",3],["u8",15],["u64",15],["targetfrontendconfig",3]]]],[11,"call_memmove","","Calls libc.memmove",11,[[["targetfrontendconfig",3],["value",3]]]],[11,"new","","Creates a FunctionBuilderContext structure. The structure …",12,[[],["functionbuildercontext",3]]]],"p":[[3,"CraneliftCompiler"],[4,"CraneliftOptLevel"],[3,"Cranelift"],[4,"ModuleInfoMemoryOffset"],[3,"ModuleInfoVmctxInfo"],[3,"WriterRelocate"],[3,"FuncEnvironment"],[3,"RelocSink"],[3,"TrapSink"],[8,"TrapSink"],[3,"Context"],[3,"FunctionBuilder"],[3,"FunctionBuilderContext"],[4,"GlobalVariable"],[13,"Memory"],[4,"ReturnMode"],[8,"TargetEnvironment"],[8,"FuncEnvironment"],[4,"ElseData"],[13,"NoElse"],[13,"WithElse"],[4,"ControlStackFrame"],[13,"If"],[13,"Block"],[13,"Loop"],[3,"ValueExtraInfo"],[3,"FuncTranslationState"],[3,"FuncTranslator"],[4,"CraneliftUnwindInfo"],[3,"NullTrapSink"],[3,"NullStackMapSink"],[3,"TrampolineRelocSink"]]},\
"wasmer_compiler_llvm":{"doc":"","i":[[0,"abi","wasmer_compiler_llvm","",null,null],[0,"aarch64_systemv","wasmer_compiler_llvm::abi","",null,null],[3,"Aarch64SystemV","wasmer_compiler_llvm::abi::aarch64_systemv","Implementation of the [<code>Abi</code>] trait for the Aarch64 ABI on …",null,null],[0,"x86_64_systemv","wasmer_compiler_llvm::abi","",null,null],[3,"X86_64SystemV","wasmer_compiler_llvm::abi::x86_64_systemv","Implementation of the [<code>Abi</code>] trait for the AMD64 SystemV …",null,null],[5,"get_abi","wasmer_compiler_llvm::abi","",null,[[["targetmachine",3]],[["abi",8],["box",3]]]],[8,"Abi","","We need to produce different LLVM IR for different …",null,null],[10,"get_vmctx_ptr_param","","Given a function definition, retrieve the parameter that …",0,[[["functionvalue",3]],["pointervalue",3]]],[10,"func_type_to_llvm","","Given a wasm function type, produce an llvm function …",0,[[["context",3],["intrinsics",3],["option",4],["funcsig",3],["vmoffsets",3]],[["result",4],["compileerror",4]]]],[10,"args_to_call","","Marshall wasm stack values into function parameters.",0,[[["funcsig",3],["builder",3],["functiontype",3],["pointervalue",3]],[["basicvalueenum",4],["vec",3]]]],[10,"rets_from_call","","Given a CallSite, extract the returned values and return …",0,[[["callsitevalue",3],["builder",3],["funcsig",3],["intrinsics",3]],[["basicvalueenum",4],["vec",3]]]],[10,"is_sret","","Whether the llvm equivalent of this wasm function has an …",0,[[["funcsig",3]],[["bool",15],["result",4],["compileerror",4]]]],[10,"pack_values_for_register_return","","Pack LLVM IR values representing individual wasm values …",0,[[["builder",3],["functiontype",3],["intrinsics",3]],[["result",4],["basicvalueenum",4],["compileerror",4]]]],[0,"compiler","wasmer_compiler_llvm","",null,null],[3,"LLVMCompiler","wasmer_compiler_llvm::compiler","A compiler that compiles a WebAssembly module with LLVM, …",null,null],[12,"config","","",1,null],[11,"new","","Creates a new LLVM compiler",1,[[["llvm",3]],["llvmcompiler",3]]],[11,"config","","Gets the config for this Compiler",1,[[],["llvm",3]]],[3,"ShortNames","","",null,null],[11,"compile_native_object","","",1,[[["compilemoduleinfo",3],["primarymap",3],["target",3],["moduletranslationstate",3],["symbolregistry",8]],[["result",4],["vec",3],["compileerror",4]]]],[0,"config","wasmer_compiler_llvm","",null,null],[4,"LLVMOptLevel","wasmer_compiler_llvm::config","Defines the optimization level used to compile a <code>Module</code>.",null,null],[13,"None","","",2,null],[13,"Less","","",2,null],[13,"Default","","",2,null],[13,"Aggressive","","",2,null],[6,"InkwellModule","","The InkWell ModuleInfo type",null,null],[6,"InkwellMemoryBuffer","","The InkWell MemoryBuffer type",null,null],[4,"CompiledKind","","The compiled function kind, used for debugging in the …",null,null],[13,"Local","","",3,null],[13,"FunctionCallTrampoline","","",3,null],[13,"DynamicFunctionTrampoline","","",3,null],[13,"Module","","",3,null],[8,"LLVMCallbacks","","Callbacks to the different LLVM compilation phases.",null,null],[10,"preopt_ir","","",4,[[["compiledkind",4],["inkwellmodule",6]]]],[10,"postopt_ir","","",4,[[["compiledkind",4],["inkwellmodule",6]]]],[10,"obj_memory_buffer","","",4,[[["compiledkind",4],["inkwellmemorybuffer",6]]]],[3,"LLVM","","",null,null],[12,"enable_nan_canonicalization","","",5,null],[12,"enable_verifier","","",5,null],[12,"opt_level","","",5,null],[12,"is_pic","","",5,null],[12,"callbacks","","",5,null],[12,"middlewares","","The middleware chain.",5,null],[11,"new","","Creates a new configuration object with the default …",5,[[]]],[11,"canonicalize_nans","","Enable NaN canonicalization.",5,[[["bool",15]]]],[11,"opt_level","","The optimization levels when optimizing the IR.",5,[[["llvmoptlevel",4]]]],[11,"callbacks","","Callbacks that will triggered in the different compilation…",5,[[["arc",3],["option",4]]]],[11,"reloc_mode","","",5,[[],["relocmode",4]]],[11,"code_model","","",5,[[],["codemodel",4]]],[11,"target_triple","","",5,[[["target",3]],["targettriple",3]]],[11,"target_machine","","Generates the target machine for the current target",5,[[["target",3]],["targetmachine",3]]],[0,"object_file","wasmer_compiler_llvm","",null,null],[5,"map_tryfromint_err","wasmer_compiler_llvm::object_file","",null,[[["tryfrominterror",3]],["compileerror",4]]],[5,"map_object_err","","",null,[[["error",3]],["compileerror",4]]],[3,"CompiledFunction","","",null,null],[12,"compiled_function","","",6,null],[12,"custom_sections","","",6,null],[12,"eh_frame_section_indices","","",6,null],[5,"load_object_file","","",null,[[["relocationtarget",4],["str",15]],[["compileerror",4],["result",4],["compiledfunction",3]]]],[0,"trampoline","wasmer_compiler_llvm","",null,null],[0,"wasm","wasmer_compiler_llvm::trampoline","",null,null],[3,"FuncTrampoline","wasmer_compiler_llvm::trampoline::wasm","",null,null],[12,"ctx","","",7,null],[12,"target_machine","","",7,null],[12,"abi","","",7,null],[17,"FUNCTION_SECTION","","",null,null],[11,"new","","",7,[[["targetmachine",3]]]],[11,"trampoline_to_module","","",7,[[["llvm",3],["functiontype",3],["str",15]],[["result",4],["compileerror",4],["module",3]]]],[11,"trampoline","","",7,[[["llvm",3],["functiontype",3],["str",15]],[["result",4],["compileerror",4],["functionbody",3]]]],[11,"dynamic_trampoline_to_module","","",7,[[["llvm",3],["functiontype",3],["str",15]],[["result",4],["compileerror",4],["module",3]]]],[11,"dynamic_trampoline","","",7,[[["llvm",3],["functiontype",3],["str",15]],[["result",4],["compileerror",4],["functionbody",3]]]],[11,"generate_trampoline","","",7,[[["context",3],["functiontype",3],["functionvalue",3],["intrinsics",3]],[["compileerror",4],["result",4]]]],[11,"generate_dynamic_trampoline","","",7,[[["context",3],["functiontype",3],["functionvalue",3],["intrinsics",3]],[["compileerror",4],["result",4]]]],[0,"translator","wasmer_compiler_llvm","",null,null],[0,"code","wasmer_compiler_llvm::translator","",null,null],[17,"FUNCTION_SECTION","wasmer_compiler_llvm::translator::code","",null,null],[5,"to_compile_error","","",null,[[],["compileerror",4]]],[3,"FuncTranslator","","",null,null],[12,"ctx","","",8,null],[12,"target_machine","","",8,null],[12,"abi","","",8,null],[11,"new","","",8,[[["targetmachine",3]]]],[11,"translate_to_module","","",8,[[["primarymap",3],["primarymap",3],["llvm",3],["moduleinfo",3],["localfunctionindex",3],["moduletranslationstate",3],["functionbodydata",3],["symbolregistry",8]],[["result",4],["compileerror",4],["module",3]]]],[11,"translate","","",8,[[["primarymap",3],["primarymap",3],["llvm",3],["moduleinfo",3],["localfunctionindex",3],["moduletranslationstate",3],["functionbodydata",3],["symbolregistry",8]],[["compileerror",4],["result",4],["compiledfunction",3]]]],[3,"LLVMFunctionCodeGenerator","","",null,null],[12,"context","","",9,null],[12,"builder","","",9,null],[12,"alloca_builder","","",9,null],[12,"intrinsics","","",9,null],[12,"state","","",9,null],[12,"function","","",9,null],[12,"locals","","",9,null],[12,"ctx","","",9,null],[12,"unreachable_depth","","",9,null],[12,"memory_styles","","",9,null],[12,"_table_styles","","",9,null],[12,"module","","",9,null],[12,"module_translation","","",9,null],[12,"wasm_module","","",9,null],[12,"symbol_registry","","",9,null],[12,"abi","","",9,null],[11,"translate_operator","","",9,[[["u32",15],["operator",4]],[["compileerror",4],["result",4]]]],[5,"is_f32_arithmetic","","",null,[[["u32",15]],["bool",15]]],[5,"is_f64_arithmetic","","",null,[[["u64",15]],["bool",15]]],[17,"LEF32_GEQ_I32_MIN","","Least Exact Float (32 bits) greater-than-or-equal-to …",null,null],[17,"GEF32_LEQ_I32_MAX","","Greatest Exact Float (32 bits) less-than-or-equal-to …",null,null],[17,"LEF64_GEQ_I32_MIN","","Least Exact Float (64 bits) greater-than-or-equal-to …",null,null],[17,"GEF64_LEQ_I32_MAX","","Greatest Exact Float (64 bits) less-than-or-equal-to …",null,null],[17,"LEF32_GEQ_U32_MIN","","Least Exact Float (32 bits) greater-than-or-equal-to …",null,null],[17,"GEF32_LEQ_U32_MAX","","Greatest Exact Float (32 bits) less-than-or-equal-to …",null,null],[17,"LEF64_GEQ_U32_MIN","","Least Exact Float (64 bits) greater-than-or-equal-to …",null,null],[17,"GEF64_LEQ_U32_MAX","","Greatest Exact Float (64 bits) less-than-or-equal-to …",null,null],[17,"LEF32_GEQ_I64_MIN","","Least Exact Float (32 bits) greater-than-or-equal-to …",null,null],[17,"GEF32_LEQ_I64_MAX","","Greatest Exact Float (32 bits) less-than-or-equal-to …",null,null],[17,"LEF64_GEQ_I64_MIN","","Least Exact Float (64 bits) greater-than-or-equal-to …",null,null],[17,"GEF64_LEQ_I64_MAX","","Greatest Exact Float (64 bits) less-than-or-equal-to …",null,null],[17,"LEF32_GEQ_U64_MIN","","Least Exact Float (32 bits) greater-than-or-equal-to …",null,null],[17,"GEF32_LEQ_U64_MAX","","Greatest Exact Float (32 bits) less-than-or-equal-to …",null,null],[17,"LEF64_GEQ_U64_MIN","","Least Exact Float (64 bits) greater-than-or-equal-to …",null,null],[17,"GEF64_LEQ_U64_MAX","","Greatest Exact Float (64 bits) less-than-or-equal-to …",null,null],[0,"intrinsics","wasmer_compiler_llvm::translator","Code for dealing with LLVM and VM intrinsics.",null,null],[5,"type_to_llvm_ptr","wasmer_compiler_llvm::translator::intrinsics","",null,[[["type",4],["intrinsics",3]],[["result",4],["pointertype",3],["compileerror",4]]]],[5,"type_to_llvm","","",null,[[["type",4],["intrinsics",3]],[["basictypeenum",4],["result",4],["compileerror",4]]]],[3,"Intrinsics","","Struct containing LLVM and VM intrinsics.",null,null],[12,"ctlz_i32","","",10,null],[12,"ctlz_i64","","",10,null],[12,"cttz_i32","","",10,null],[12,"cttz_i64","","",10,null],[12,"ctpop_i32","","",10,null],[12,"ctpop_i64","","",10,null],[12,"sqrt_f32","","",10,null],[12,"sqrt_f64","","",10,null],[12,"sqrt_f32x4","","",10,null],[12,"sqrt_f64x2","","",10,null],[12,"ceil_f32","","",10,null],[12,"ceil_f64","","",10,null],[12,"floor_f32","","",10,null],[12,"floor_f64","","",10,null],[12,"trunc_f32","","",10,null],[12,"trunc_f64","","",10,null],[12,"nearbyint_f32","","",10,null],[12,"nearbyint_f64","","",10,null],[12,"fabs_f32","","",10,null],[12,"fabs_f64","","",10,null],[12,"fabs_f32x4","","",10,null],[12,"fabs_f64x2","","",10,null],[12,"copysign_f32","","",10,null],[12,"copysign_f64","","",10,null],[12,"copysign_f32x4","","",10,null],[12,"copysign_f64x2","","",10,null],[12,"sadd_sat_i8x16","","",10,null],[12,"sadd_sat_i16x8","","",10,null],[12,"uadd_sat_i8x16","","",10,null],[12,"uadd_sat_i16x8","","",10,null],[12,"ssub_sat_i8x16","","",10,null],[12,"ssub_sat_i16x8","","",10,null],[12,"usub_sat_i8x16","","",10,null],[12,"usub_sat_i16x8","","",10,null],[12,"expect_i1","","",10,null],[12,"trap","","",10,null],[12,"debug_trap","","",10,null],[12,"personality","","",10,null],[12,"readonly","","",10,null],[12,"stack_probe","","",10,null],[12,"void_ty","","",10,null],[12,"i1_ty","","",10,null],[12,"i8_ty","","",10,null],[12,"i16_ty","","",10,null],[12,"i32_ty","","",10,null],[12,"i64_ty","","",10,null],[12,"i128_ty","","",10,null],[12,"f32_ty","","",10,null],[12,"f64_ty","","",10,null],[12,"i1x128_ty","","",10,null],[12,"i8x16_ty","","",10,null],[12,"i16x8_ty","","",10,null],[12,"i32x4_ty","","",10,null],[12,"i64x2_ty","","",10,null],[12,"f32x4_ty","","",10,null],[12,"f64x2_ty","","",10,null],[12,"i8_ptr_ty","","",10,null],[12,"i16_ptr_ty","","",10,null],[12,"i32_ptr_ty","","",10,null],[12,"i64_ptr_ty","","",10,null],[12,"i128_ptr_ty","","",10,null],[12,"f32_ptr_ty","","",10,null],[12,"f64_ptr_ty","","",10,null],[12,"anyfunc_ty","","",10,null],[12,"funcref_ty","","",10,null],[12,"externref_ty","","",10,null],[12,"anyref_ty","","",10,null],[12,"i1_zero","","",10,null],[12,"i8_zero","","",10,null],[12,"i32_zero","","",10,null],[12,"i64_zero","","",10,null],[12,"i128_zero","","",10,null],[12,"f32_zero","","",10,null],[12,"f64_zero","","",10,null],[12,"f32x4_zero","","",10,null],[12,"f64x2_zero","","",10,null],[12,"trap_unreachable","","",10,null],[12,"trap_call_indirect_null","","",10,null],[12,"trap_call_indirect_sig","","",10,null],[12,"trap_memory_oob","","",10,null],[12,"trap_illegal_arithmetic","","",10,null],[12,"trap_integer_division_by_zero","","",10,null],[12,"trap_bad_conversion_to_integer","","",10,null],[12,"trap_unaligned_atomic","","",10,null],[12,"trap_table_access_oob","","",10,null],[12,"experimental_stackmap","","",10,null],[12,"table_copy","","",10,null],[12,"table_init","","",10,null],[12,"table_fill","","",10,null],[12,"table_size","","",10,null],[12,"imported_table_size","","",10,null],[12,"table_get","","",10,null],[12,"imported_table_get","","",10,null],[12,"table_set","","",10,null],[12,"imported_table_set","","",10,null],[12,"table_grow","","",10,null],[12,"imported_table_grow","","",10,null],[12,"func_ref","","",10,null],[12,"elem_drop","","",10,null],[12,"throw_trap","","",10,null],[12,"vmfunction_import_ptr_ty","","",10,null],[12,"vmfunction_import_body_element","","",10,null],[12,"vmfunction_import_vmctx_element","","",10,null],[12,"vmmemory_definition_ptr_ty","","",10,null],[12,"vmmemory_definition_base_element","","",10,null],[12,"vmmemory_definition_current_length_element","","",10,null],[12,"memory32_grow_ptr_ty","","",10,null],[12,"imported_memory32_grow_ptr_ty","","",10,null],[12,"memory32_size_ptr_ty","","",10,null],[12,"imported_memory32_size_ptr_ty","","",10,null],[12,"ctx_ptr_ty","","",10,null],[11,"declare","","Create an [<code>Intrinsics</code>] for the given [<code>Context</code>].",10,[[["context",3],["module",3]]]],[4,"MemoryCache","","",null,null],[13,"Dynamic","","The memory moves around.",11,null],[12,"ptr_to_base_ptr","wasmer_compiler_llvm::translator::intrinsics::MemoryCache","",12,null],[12,"ptr_to_current_length","","",12,null],[13,"Static","wasmer_compiler_llvm::translator::intrinsics","The memory is always in the same place.",11,null],[12,"base_ptr","wasmer_compiler_llvm::translator::intrinsics::MemoryCache","",13,null],[3,"TableCache","wasmer_compiler_llvm::translator::intrinsics","",null,null],[12,"ptr_to_base_ptr","","",14,null],[12,"ptr_to_bounds","","",14,null],[4,"GlobalCache","","",null,null],[13,"Mut","","",15,null],[12,"ptr_to_value","wasmer_compiler_llvm::translator::intrinsics::GlobalCache","",16,null],[13,"Const","wasmer_compiler_llvm::translator::intrinsics","",15,null],[12,"value","wasmer_compiler_llvm::translator::intrinsics::GlobalCache","",17,null],[3,"FunctionCache","wasmer_compiler_llvm::translator::intrinsics","",null,null],[12,"func","","",18,null],[12,"vmctx","","",18,null],[12,"attrs","","",18,null],[3,"CtxType","","",null,null],[12,"ctx_ptr_value","","",19,null],[12,"wasm_module","","",19,null],[12,"cache_builder","","",19,null],[12,"abi","","",19,null],[12,"cached_memories","","",19,null],[12,"cached_tables","","",19,null],[12,"cached_sigindices","","",19,null],[12,"cached_globals","","",19,null],[12,"cached_functions","","",19,null],[12,"cached_memory_grow","","",19,null],[12,"cached_memory_size","","",19,null],[12,"offsets","","",19,null],[11,"new","","",19,[[["abi",8],["functionvalue",3],["wasmercompilermodule",3],["builder",3]],["ctxtype",3]]],[11,"basic","","",19,[[],["basicvalueenum",4]]],[11,"memory","","",19,[[["intrinsics",3],["primarymap",3],["module",3],["memoryindex",3]],["memorycache",4]]],[11,"table_prepare","","",19,[[["tableindex",3],["module",3],["intrinsics",3]]]],[11,"table","","",19,[[["tableindex",3],["module",3],["intrinsics",3]]]],[11,"dynamic_sigindex","","",19,[[["signatureindex",3],["module",3],["intrinsics",3]],["intvalue",3]]],[11,"global","","",19,[[["globalindex",3],["module",3],["intrinsics",3]],[["result",4],["globalcache",4],["compileerror",4]]]],[11,"add_func","","",19,[[["functionindex",3],["basicvalueenum",4],["pointervalue",3]]]],[11,"local_func","","",19,[[["localfunctionindex",3],["context",3],["functype",3],["str",15],["functionindex",3],["module",3],["intrinsics",3]],[["functioncache",3],["result",4],["compileerror",4]]]],[11,"func","","",19,[[["context",3],["functionindex",3],["functype",3],["intrinsics",3]],[["functioncache",3],["result",4],["compileerror",4]]]],[11,"memory_grow","","",19,[[["memoryindex",3],["intrinsics",3]],["pointervalue",3]]],[11,"memory_size","","",19,[[["memoryindex",3],["intrinsics",3]],["pointervalue",3]]],[11,"get_offsets","","",19,[[],["vmoffsets",3]]],[5,"tbaa_label","","",null,[[["instructionvalue",3],["string",3],["module",3],["intrinsics",3]]]],[0,"state","wasmer_compiler_llvm::translator","",null,null],[4,"ControlFrame","wasmer_compiler_llvm::translator::state","",null,null],[13,"Block","","",20,null],[12,"next","wasmer_compiler_llvm::translator::state::ControlFrame","",21,null],[12,"phis","","",21,null],[12,"stack_size_snapshot","","",21,null],[13,"Loop","wasmer_compiler_llvm::translator::state","",20,null],[12,"body","wasmer_compiler_llvm::translator::state::ControlFrame","",22,null],[12,"next","","",22,null],[12,"phis","","",22,null],[12,"loop_body_phis","","",22,null],[12,"stack_size_snapshot","","",22,null],[13,"IfElse","wasmer_compiler_llvm::translator::state","",20,null],[12,"if_then","wasmer_compiler_llvm::translator::state::ControlFrame","",23,null],[12,"if_else","","",23,null],[12,"next","","",23,null],[12,"then_phis","","",23,null],[12,"else_phis","","",23,null],[12,"next_phis","","",23,null],[12,"stack_size_snapshot","","",23,null],[12,"if_else_state","","",23,null],[4,"IfElseState","wasmer_compiler_llvm::translator::state","",null,null],[13,"If","","",24,null],[13,"Else","","",24,null],[11,"code_after","","",20,[[],["basicblock",3]]],[11,"br_dest","","",20,[[],["basicblock",3]]],[11,"phis","","",20,[[]]],[11,"loop_body_phis","","PHI nodes for stack values in the loop body.",20,[[]]],[11,"is_loop","","",20,[[],["bool",15]]],[3,"ExtraInfo","","",null,null],[12,"state","","",25,null],[11,"pending_f32_nan","","",25,[[],["extrainfo",3]]],[11,"pending_f64_nan","","",25,[[],["extrainfo",3]]],[11,"arithmetic_f32","","",25,[[],["extrainfo",3]]],[11,"arithmetic_f64","","",25,[[],["extrainfo",3]]],[11,"has_pending_f32_nan","","",25,[[],["bool",15]]],[11,"has_pending_f64_nan","","",25,[[],["bool",15]]],[11,"is_arithmetic_f32","","",25,[[],["bool",15]]],[11,"is_arithmetic_f64","","",25,[[],["bool",15]]],[11,"strip_pending","","",25,[[],["extrainfo",3]]],[3,"State","","",null,null],[12,"stack","","",26,null],[12,"control_stack","","",26,null],[12,"reachable","","",26,null],[11,"new","","",26,[[]]],[11,"has_control_frames","","",26,[[],["bool",15]]],[11,"reset_stack","","",26,[[["controlframe",4]]]],[11,"outermost_frame","","",26,[[],[["controlframe",4],["compileerror",4],["result",4]]]],[11,"frame_at_depth","","",26,[[["u32",15]],[["controlframe",4],["compileerror",4],["result",4]]]],[11,"frame_at_depth_mut","","",26,[[["u32",15]],[["compileerror",4],["controlframe",4],["result",4]]]],[11,"pop_frame","","",26,[[],[["compileerror",4],["result",4],["controlframe",4]]]],[11,"push1","","",26,[[["basicvalue",8]]]],[11,"push1_extra","","",26,[[["basicvalue",8],["extrainfo",3]]]],[11,"pop1","","",26,[[],[["result",4],["basicvalueenum",4],["compileerror",4]]]],[11,"pop1_extra","","",26,[[],[["result",4],["compileerror",4]]]],[11,"pop2","","",26,[[],[["result",4],["compileerror",4]]]],[11,"pop2_extra","","",26,[[],[["result",4],["compileerror",4]]]],[11,"pop3","","",26,[[],[["result",4],["compileerror",4]]]],[11,"pop3_extra","","",26,[[],[["result",4],["compileerror",4]]]],[11,"peek1_extra","","",26,[[],[["result",4],["compileerror",4]]]],[11,"peekn","","",26,[[["usize",15]],[["result",4],["vec",3],["compileerror",4]]]],[11,"peekn_extra","","",26,[[["usize",15]],[["result",4],["compileerror",4]]]],[11,"popn_save_extra","","",26,[[["usize",15]],[["result",4],["vec",3],["compileerror",4]]]],[11,"popn","","",26,[[["usize",15]],[["compileerror",4],["result",4]]]],[11,"push_block","","",26,[[["smallvec",3],["basicblock",3]]]],[11,"push_loop","","",26,[[["smallvec",3],["basicblock",3]]]],[11,"push_if","","",26,[[["smallvec",3],["basicblock",3]]]],[3,"LLVMCompiler","wasmer_compiler_llvm","A compiler that compiles a WebAssembly module with LLVM, …",null,null],[12,"config","","",1,null],[4,"CompiledKind","","The compiled function kind, used for debugging in the …",null,null],[13,"Local","","",3,null],[13,"FunctionCallTrampoline","","",3,null],[13,"DynamicFunctionTrampoline","","",3,null],[13,"Module","","",3,null],[6,"InkwellMemoryBuffer","","The InkWell MemoryBuffer type",null,null],[6,"InkwellModule","","The InkWell ModuleInfo type",null,null],[8,"LLVMCallbacks","","Callbacks to the different LLVM compilation phases.",null,null],[10,"preopt_ir","","",4,[[["compiledkind",4],["inkwellmodule",6]]]],[10,"postopt_ir","","",4,[[["compiledkind",4],["inkwellmodule",6]]]],[10,"obj_memory_buffer","","",4,[[["compiledkind",4],["inkwellmemorybuffer",6]]]],[4,"LLVMOptLevel","","Defines the optimization level used to compile a <code>Module</code>.",null,null],[13,"None","","",2,null],[13,"Less","","",2,null],[13,"Default","","",2,null],[13,"Aggressive","","",2,null],[3,"LLVM","","",null,null],[12,"enable_nan_canonicalization","","",5,null],[12,"enable_verifier","","",5,null],[12,"opt_level","","",5,null],[12,"is_pic","","",5,null],[12,"callbacks","","",5,null],[12,"middlewares","","The middleware chain.",5,null],[11,"from","wasmer_compiler_llvm::abi::aarch64_systemv","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"pointer_metadata","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","wasmer_compiler_llvm::abi::x86_64_systemv","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"pointer_metadata","","",28,[[]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"from","wasmer_compiler_llvm::compiler","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"pointer_metadata","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","wasmer_compiler_llvm","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","wasmer_compiler_llvm::config","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","wasmer_compiler_llvm::object_file","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","wasmer_compiler_llvm::trampoline::wasm","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","wasmer_compiler_llvm::translator::code","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","wasmer_compiler_llvm::translator::intrinsics","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"pointer_metadata","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"pointer_metadata","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"pointer_metadata","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","wasmer_compiler_llvm::translator::state","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"pointer_metadata","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"pointer_metadata","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[],["bool",15]]],[11,"pointer_metadata","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"pointer_metadata","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"fmt","wasmer_compiler_llvm","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","Returns the default value for <code>OptimizationLevel</code>, namely …",2,[[],["optimizationlevel",4]]],[11,"clone","","",2,[[],["optimizationlevel",4]]],[11,"eq","","",2,[[["optimizationlevel",4]],["bool",15]]],[11,"get_vmctx_ptr_param","wasmer_compiler_llvm::abi::aarch64_systemv","",27,[[["functionvalue",3]],["pointervalue",3]]],[11,"func_type_to_llvm","","",27,[[["context",3],["intrinsics",3],["option",4],["funcsig",3],["vmoffsets",3]],[["result",4],["compileerror",4]]]],[11,"args_to_call","","",27,[[["funcsig",3],["builder",3],["functiontype",3],["pointervalue",3]],[["basicvalueenum",4],["vec",3]]]],[11,"rets_from_call","","",27,[[["callsitevalue",3],["builder",3],["funcsig",3],["intrinsics",3]],[["basicvalueenum",4],["vec",3]]]],[11,"is_sret","","",27,[[["funcsig",3]],[["bool",15],["result",4],["compileerror",4]]]],[11,"pack_values_for_register_return","","",27,[[["builder",3],["functiontype",3],["intrinsics",3]],[["result",4],["basicvalueenum",4],["compileerror",4]]]],[11,"get_vmctx_ptr_param","wasmer_compiler_llvm::abi::x86_64_systemv","",28,[[["functionvalue",3]],["pointervalue",3]]],[11,"func_type_to_llvm","","",28,[[["context",3],["intrinsics",3],["option",4],["funcsig",3],["vmoffsets",3]],[["result",4],["compileerror",4]]]],[11,"args_to_call","","",28,[[["funcsig",3],["builder",3],["functiontype",3],["pointervalue",3]],[["basicvalueenum",4],["vec",3]]]],[11,"rets_from_call","","",28,[[["callsitevalue",3],["builder",3],["funcsig",3],["intrinsics",3]],[["basicvalueenum",4],["vec",3]]]],[11,"is_sret","","",28,[[["funcsig",3]],[["bool",15],["result",4],["compileerror",4]]]],[11,"pack_values_for_register_return","","",28,[[["builder",3],["functiontype",3],["intrinsics",3]],[["result",4],["basicvalueenum",4],["compileerror",4]]]],[11,"clone","wasmer_compiler_llvm::config","",3,[[],["compiledkind",4]]],[11,"clone","","",5,[[],["llvm",3]]],[11,"clone","wasmer_compiler_llvm::translator::intrinsics","",11,[[],["memorycache",4]]],[11,"clone","","",15,[[],["globalcache",4]]],[11,"clone","","",18,[[],["functioncache",3]]],[11,"clone","wasmer_compiler_llvm::translator::state","",25,[[],["extrainfo",3]]],[11,"default","wasmer_compiler_llvm::config","",5,[[],["llvm",3]]],[11,"default","wasmer_compiler_llvm::translator::state","",25,[[],["extrainfo",3]]],[11,"eq","","",25,[[["extrainfo",3]],["bool",15]]],[11,"ne","","",25,[[["extrainfo",3]],["bool",15]]],[11,"fmt","wasmer_compiler_llvm::config","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_llvm::translator::state","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"bitand","","",25,[[]]],[11,"bitor","","",25,[[]]],[11,"bitor_assign","","",25,[[]]],[11,"hash","","",25,[[]]],[11,"size_of_val","wasmer_compiler_llvm::compiler","",1,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler_llvm::config","",5,[[["memoryusagetracker",8]],["usize",15]]],[11,"enable_pic","","Emit code suitable for dlopen.",5,[[]]],[11,"enable_verifier","","Whether to verify compiler IR.",5,[[]]],[11,"compiler","","Transform it into the compiler.",5,[[["box",3]],[["compiler",8],["box",3]]]],[11,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",5,[[["modulemiddleware",8],["arc",3]]]],[11,"get_middlewares","wasmer_compiler_llvm::compiler","Get the middlewares for this compiler",1,[[]]],[11,"experimental_native_compile_module","","",1,[[["compilemoduleinfo",3],["primarymap",3],["target",3],["moduletranslationstate",3],["symbolregistry",8]],[["result",4],["option",4]]]],[11,"compile_module","","Compile the module using LLVM, producing a compilation …",1,[[["localfunctionindex",3],["compilemoduleinfo",3],["primarymap",3],["target",3],["moduletranslationstate",3],["functionbodydata",3]],[["compileerror",4],["result",4],["compilation",3]]]],[11,"symbol_to_name","","",29,[[["symbol",4]],["string",3]]],[11,"name_to_symbol","","",29,[[["str",15]],[["symbol",4],["option",4]]]],[11,"splat_vector","wasmer_compiler_llvm::translator::code","",9,[[["vectortype",3],["basicvalueenum",4]],["vectorvalue",3]]],[11,"trunc_sat","","",9,[[["floatmathtype",8],["intvalue",3],["u64",15]],["intvalue",3]]],[11,"trunc_sat_scalar","","",9,[[["u64",15],["floatvalue",3],["inttype",3]],["intvalue",3]]],[11,"trap_if_not_representable_as_int","","",9,[[["floatvalue",3],["u64",15]]]],[11,"trap_if_zero_or_overflow","","",9,[[["intvalue",3]]]],[11,"trap_if_zero","","",9,[[["intvalue",3]]]],[11,"v128_into_int_vec","","",9,[[["vectortype",3],["basicvalueenum",4],["extrainfo",3]]]],[11,"v128_into_i8x16","","",9,[[["basicvalueenum",4],["extrainfo",3]]]],[11,"v128_into_i16x8","","",9,[[["basicvalueenum",4],["extrainfo",3]]]],[11,"v128_into_i32x4","","",9,[[["basicvalueenum",4],["extrainfo",3]]]],[11,"v128_into_i64x2","","",9,[[["basicvalueenum",4],["extrainfo",3]]]],[11,"v128_into_f32x4","","",9,[[["basicvalueenum",4],["extrainfo",3]]]],[11,"v128_into_f64x2","","",9,[[["basicvalueenum",4],["extrainfo",3]]]],[11,"apply_pending_canonicalization","","",9,[[["basicvalueenum",4],["extrainfo",3]],["basicvalueenum",4]]],[11,"canonicalize_nans","","",9,[[["basicvalueenum",4]],["basicvalueenum",4]]],[11,"mark_memaccess_nodelete","","",9,[[["instructionvalue",3],["memoryindex",3]],[["compileerror",4],["result",4]]]],[11,"annotate_user_memaccess","","",9,[[["u32",15],["instructionvalue",3],["memoryimmediate",3],["memoryindex",3]],[["compileerror",4],["result",4]]]],[11,"resolve_memory_ptr","","",9,[[["pointertype",3],["usize",15],["memoryimmediate",3],["memoryindex",3],["intvalue",3]],[["pointervalue",3],["compileerror",4],["result",4]]]],[11,"trap_if_misaligned","","",9,[[["memoryimmediate",3],["pointervalue",3]]]],[11,"finalize","","",9,[[["functiontype",3]],[["compileerror",4],["result",4]]]]],"p":[[8,"Abi"],[3,"LLVMCompiler"],[4,"LLVMOptLevel"],[4,"CompiledKind"],[8,"LLVMCallbacks"],[3,"LLVM"],[3,"CompiledFunction"],[3,"FuncTrampoline"],[3,"FuncTranslator"],[3,"LLVMFunctionCodeGenerator"],[3,"Intrinsics"],[4,"MemoryCache"],[13,"Dynamic"],[13,"Static"],[3,"TableCache"],[4,"GlobalCache"],[13,"Mut"],[13,"Const"],[3,"FunctionCache"],[3,"CtxType"],[4,"ControlFrame"],[13,"Block"],[13,"Loop"],[13,"IfElse"],[4,"IfElseState"],[3,"ExtraInfo"],[3,"State"],[3,"Aarch64SystemV"],[3,"X86_64SystemV"],[3,"ShortNames"]]},\
"wasmer_compiler_singlepass":{"doc":"A WebAssembly <code>Compiler</code> implementation using Singlepass.","i":[[0,"address_map","wasmer_compiler_singlepass","",null,null],[5,"get_function_address_map","wasmer_compiler_singlepass::address_map","",null,[[["usize",15],["vec",3],["instructionaddressmap",3],["functionbodydata",3]],["functionaddressmap",3]]],[0,"codegen_x64","wasmer_compiler_singlepass","",null,null],[3,"FuncGen","wasmer_compiler_singlepass::codegen_x64","The singlepass per-function code generator.",null,null],[12,"module","","Static module information.",0,null],[12,"config","","ModuleInfo compilation config.",0,null],[12,"vmoffsets","","Offsets of vmctx fields.",0,null],[12,"memory_styles","","",0,null],[12,"signature","","Function signature.",0,null],[12,"assembler","","The assembler.",0,null],[12,"locals","","Memory locations of local variables.",0,null],[12,"local_types","","Types of local variables, including arguments.",0,null],[12,"value_stack","","Value stack.",0,null],[12,"fp_stack","","Metadata about floating point values on the stack.",0,null],[12,"control_stack","","A list of frames describing the current control stack.",0,null],[12,"machine","","Low-level machine state.",0,null],[12,"unreachable_depth","","Nesting level of unreachable code.",0,null],[12,"fsm","","Function state map. Not yet used in the reborn version …",0,null],[12,"trap_table","","Trap table.",0,null],[12,"relocations","","Relocation information.",0,null],[12,"special_labels","","A set of special labels for trapping.",0,null],[12,"src_loc","","The source location for the current operator.",0,null],[12,"instructions_address_map","","Map from byte offset into wasm function to range of …",0,null],[3,"SpecialLabelSet","","",null,null],[12,"integer_division_by_zero","","",1,null],[12,"heap_access_oob","","",1,null],[12,"table_access_oob","","",1,null],[12,"indirect_call_null","","",1,null],[12,"bad_signature","","",1,null],[3,"TrapTable","","A trap table for a <code>RunnableModuleInfo</code>.",null,null],[12,"offset_to_code","","Mappings from offsets in generated machine code to the …",2,null],[3,"FloatValue","","Metadata about a floating-point value.",null,null],[12,"canonicalization","","Do we need to canonicalize the value before its bit …",3,null],[12,"depth","","Corresponding depth in the main value stack.",3,null],[11,"new","","",3,[[["usize",15]]]],[11,"cncl_f32","","",3,[[["usize",15]]]],[11,"cncl_f64","","",3,[[["usize",15]]]],[11,"promote","","",3,[[["usize",15]],["floatvalue",3]]],[11,"demote","","",3,[[["usize",15]],["floatvalue",3]]],[4,"CanonicalizeType","","Type of a pending canonicalization floating point value. …",null,null],[13,"F32","","",4,null],[13,"F64","","",4,null],[11,"to_size","","",4,[[],["size",4]]],[8,"PopMany","","",null,null],[10,"peek1","","",5,[[],[["codegenerror",3],["result",4]]]],[10,"pop1","","",5,[[],[["result",4],["codegenerror",3]]]],[10,"pop2","","",5,[[],[["result",4],["codegenerror",3]]]],[8,"WpTypeExt","","",null,null],[10,"is_float","","",6,[[],["bool",15]]],[3,"ControlFrame","","",null,null],[12,"label","","",7,null],[12,"loop_like","","",7,null],[12,"if_else","","",7,null],[12,"returns","","",7,null],[12,"value_stack_depth","","",7,null],[12,"fp_stack_depth","","",7,null],[12,"state","","",7,null],[12,"state_diff_id","","",7,null],[4,"IfElseState","","",null,null],[13,"None","","",8,null],[13,"If","","",8,null],[13,"Else","","",8,null],[3,"CodegenError","","",null,null],[12,"message","","",9,null],[3,"I2O1","","Abstraction for a 2-input, 1-output operator. Can be an …",null,null],[12,"loc_a","","",10,null],[12,"loc_b","","",10,null],[12,"ret","","",10,null],[11,"set_srcloc","","Set the source location of the Wasm to the given offset.",0,[[["u32",15]]]],[11,"get_location_released","","",0,[[["location",4]],["location",4]]],[11,"pop_value_released","","",0,[[],["location",4]]],[11,"i2o1_prepare","","Prepare data for binary operator with 2 inputs and 1 …",0,[[["wptype",4]],["i2o1",3]]],[11,"mark_trappable","","",0,[[]]],[11,"mark_range_with_trap_code","","Marks each address in the code range emitted by <code>f</code> with …",0,[[["fnonce",8],["trapcode",4]]]],[11,"mark_address_with_trap_code","","Marks one address as trappable with trap code <code>code</code>.",0,[[["trapcode",4]]]],[11,"canonicalize_nan","","Canonicalizes the floating point value at <code>input</code> into …",0,[[["location",4],["size",4]]]],[11,"emit_relaxed_xdiv","","Moves <code>loc</code> to a valid location for <code>div</code>/<code>idiv</code>.",0,[[["location",4],["size",4]]]],[11,"emit_relaxed_zx_sx","","Moves <code>src</code> and <code>dst</code> to valid locations for <code>movzx</code>/<code>movsx</code>.",0,[[["location",4],["size",4]],[["codegenerror",3],["result",4]]]],[11,"emit_relaxed_binop","","Moves <code>src</code> and <code>dst</code> to valid locations for generic …",0,[[["location",4],["size",4]]]],[11,"emit_relaxed_avx","","Moves <code>src1</code> and <code>src2</code> to valid locations and possibly adds …",0,[[["location",4]],[["codegenerror",3],["result",4]]]],[11,"emit_relaxed_avx_base","","Moves <code>src1</code> and <code>src2</code> to valid locations and possibly adds …",0,[[["location",4],["fnonce",8]],[["codegenerror",3],["result",4]]]],[11,"emit_binop_i32","","I32 binary operation with both operands popped from the …",0,[[]]],[11,"emit_binop_i64","","I64 binary operation with both operands popped from the …",0,[[]]],[11,"emit_cmpop_i32_dynamic_b","","I32 comparison with <code>loc_b</code> from input.",0,[[["location",4],["condition",4]],[["codegenerror",3],["result",4]]]],[11,"emit_cmpop_i32","","I32 comparison with both operands popped from the virtual …",0,[[["condition",4]],[["codegenerror",3],["result",4]]]],[11,"emit_cmpop_i64_dynamic_b","","I64 comparison with <code>loc_b</code> from input.",0,[[["location",4],["condition",4]],[["codegenerror",3],["result",4]]]],[11,"emit_cmpop_i64","","I64 comparison with both operands popped from the virtual …",0,[[["condition",4]],[["codegenerror",3],["result",4]]]],[11,"emit_xcnt_i32","","I32 <code>lzcnt</code>/<code>tzcnt</code>/<code>popcnt</code> with operand popped from the …",0,[[],[["codegenerror",3],["result",4]]]],[11,"emit_xcnt_i64","","I64 <code>lzcnt</code>/<code>tzcnt</code>/<code>popcnt</code> with operand popped from the …",0,[[],[["codegenerror",3],["result",4]]]],[11,"emit_shift_i32","","I32 shift with both operands popped from the virtual …",0,[[]]],[11,"emit_shift_i64","","I64 shift with both operands popped from the virtual …",0,[[]]],[11,"emit_fp_binop_avx","","Floating point (AVX) binary operation with both operands …",0,[[],[["codegenerror",3],["result",4]]]],[11,"emit_fp_cmpop_avx","","Floating point (AVX) comparison with both operands popped …",0,[[],[["codegenerror",3],["result",4]]]],[11,"emit_fp_unop_avx","","Floating point (AVX) unop with both operands popped from …",0,[[],[["codegenerror",3],["result",4]]]],[11,"emit_call_sysv","","Emits a System V call sequence.",0,[[["fnonce",8],["iterator",8]],[["codegenerror",3],["result",4]]]],[11,"_emit_call_sysv_label","","Emits a System V call sequence, specialized for labels as …",0,[[["dynamiclabel",3],["iterator",8]],[["codegenerror",3],["result",4]]]],[11,"emit_memory_op","","Emits a memory operation.",0,[[["location",4],["usize",15],["bool",15],["memoryimmediate",3],["fnonce",8]],[["codegenerror",3],["result",4]]]],[11,"emit_compare_and_swap","","Emits a memory operation.",0,[[["location",4],["usize",15],["size",4],["memoryimmediate",3],["fnonce",8]],[["codegenerror",3],["result",4]]]],[11,"emit_f32_int_conv_check","","",0,[[["f32",15],["xmm",4]]]],[11,"emit_f32_int_conv_check_trap","","",0,[[["xmm",4],["f32",15]]]],[11,"emit_f32_int_conv_check_sat","","",0,[[["f32",15],["option",4],["xmm",4],["fnonce",8]]]],[11,"emit_f64_int_conv_check","","",0,[[["f64",15],["xmm",4]]]],[11,"emit_f64_int_conv_check_trap","","",0,[[["xmm",4],["f64",15]]]],[11,"emit_f64_int_conv_check_sat","","",0,[[["f64",15],["option",4],["xmm",4],["fnonce",8]]]],[11,"get_state_diff","","",0,[[],["usize",15]]],[11,"emit_head","","",0,[[],[["codegenerror",3],["result",4]]]],[11,"mark_instruction_address_end","","Pushes the instruction to the address map, calculating …",0,[[["usize",15]]]],[11,"new","","",0,[[["moduleinfo",3],["primarymap",3],["primarymap",3],["localfunctionindex",3],["singlepass",3],["vmoffsets",3]],[["result",4],["funcgen",3],["codegenerror",3]]]],[11,"has_control_frames","","",0,[[],["bool",15]]],[11,"feed_operator","","",0,[[["operator",4]],[["codegenerror",3],["result",4]]]],[11,"finalize","","",0,[[["functionbodydata",3]],["compiledfunction",3]]],[5,"type_to_wp_type","","",null,[[["type",4]],["wptype",4]]],[5,"sort_call_movs","","",null,[[]]],[5,"gen_std_trampoline","","",null,[[["functiontype",3]],["functionbody",3]]],[5,"gen_std_dynamic_import_trampoline","","Generates dynamic import function call trampoline for a …",null,[[["vmoffsets",3],["functiontype",3]],["functionbody",3]]],[5,"gen_import_call_trampoline","","",null,[[["vmoffsets",3],["functionindex",3],["functiontype",3]],["customsection",3]]],[17,"GEF32_LT_I32_MIN","","Greatest Exact Float (32 bits) less-than i32::MIN when …",null,null],[17,"LEF32_GT_I32_MAX","","Least Exact Float (32 bits) greater-than i32::MAX when …",null,null],[17,"GEF32_LT_I64_MIN","","Greatest Exact Float (32 bits) less-than i64::MIN when …",null,null],[17,"LEF32_GT_I64_MAX","","Least Exact Float (32 bits) greater-than i64::MAX when …",null,null],[17,"GEF32_LT_U32_MIN","","Greatest Exact Float (32 bits) less-than u32::MIN when …",null,null],[17,"LEF32_GT_U32_MAX","","Least Exact Float (32 bits) greater-than u32::MAX when …",null,null],[17,"GEF32_LT_U64_MIN","","Greatest Exact Float (32 bits) less-than u64::MIN when …",null,null],[17,"LEF32_GT_U64_MAX","","Least Exact Float (32 bits) greater-than u64::MAX when …",null,null],[17,"GEF64_LT_I32_MIN","","Greatest Exact Float (64 bits) less-than i32::MIN when …",null,null],[17,"LEF64_GT_I32_MAX","","Least Exact Float (64 bits) greater-than i32::MAX when …",null,null],[17,"GEF64_LT_I64_MIN","","Greatest Exact Float (64 bits) less-than i64::MIN when …",null,null],[17,"LEF64_GT_I64_MAX","","Least Exact Float (64 bits) greater-than i64::MAX when …",null,null],[17,"GEF64_LT_U32_MIN","","Greatest Exact Float (64 bits) less-than u32::MIN when …",null,null],[17,"LEF64_GT_U32_MAX","","Least Exact Float (64 bits) greater-than u32::MAX when …",null,null],[17,"GEF64_LT_U64_MIN","","Greatest Exact Float (64 bits) less-than u64::MIN when …",null,null],[17,"LEF64_GT_U64_MAX","","Least Exact Float (64 bits) greater-than u64::MAX when …",null,null],[0,"common_decl","wasmer_compiler_singlepass","",null,null],[3,"RegisterIndex","wasmer_compiler_singlepass::common_decl","",null,null],[12,"0","","",11,null],[4,"WasmAbstractValue","","Whether a value is determined at compile-time or run-time.",null,null],[13,"Runtime","","This value is only known at runtime.",12,null],[13,"Const","","A constant value.",12,null],[3,"MachineState","","A container for the state of a running wasm instance.",null,null],[12,"stack_values","","Stack values.",13,null],[12,"register_values","","Register values.",13,null],[12,"prev_frame","","Previous frame.",13,null],[12,"wasm_stack","","Wasm stack.",13,null],[12,"wasm_inst_offset","","Wasm instruction offset.",13,null],[3,"MachineStateDiff","","A diff of two <code>MachineState</code>s.",null,null],[12,"last","","Link to the previous diff this diff is based on, or <code>None</code> …",14,null],[12,"stack_push","","What values are pushed onto the stack?",14,null],[12,"stack_pop","","How many values are popped from the stack?",14,null],[12,"reg_diff","","Register diff.",14,null],[12,"prev_frame_diff","","Changes in the previous frame\'s data.",14,null],[12,"wasm_stack_push","","Values pushed to the Wasm stack.",14,null],[12,"wasm_stack_pop","","of values popped from the Wasm stack.",14,null],[12,"wasm_inst_offset","","Wasm instruction offset.",14,null],[4,"MachineValue","","A kind of machine value.",null,null],[13,"Undefined","","Undefined.",15,null],[13,"Vmctx","","Vmctx.",15,null],[13,"_VmctxDeref","","Vmctx Deref.",15,null],[13,"PreserveRegister","","Preserve Register.",15,null],[13,"CopyStackBPRelative","","Copy Stack BP Relative.",15,null],[13,"ExplicitShadow","","Explicit Shadow.",15,null],[13,"WasmStack","","Wasm Stack.",15,null],[13,"WasmLocal","","Wasm Local.",15,null],[13,"_TwoHalves","","Two Halves.",15,null],[3,"FunctionStateMap","","A map of function states.",null,null],[12,"initial","","Initial.",16,null],[12,"local_function_id","","Local Function Id.",16,null],[12,"locals","","Locals.",16,null],[12,"shadow_size","","Shadow size.",16,null],[12,"diffs","","Diffs.",16,null],[12,"wasm_function_header_target_offset","","Wasm Function Header target offset.",16,null],[12,"wasm_offset_to_target_offset","","Wasm offset to target offset",16,null],[12,"loop_offsets","","Loop offsets.",16,null],[12,"call_offsets","","Call offsets.",16,null],[12,"trappable_offsets","","Trappable offsets.",16,null],[4,"SuspendOffset","","A kind of suspend offset.",null,null],[13,"_Loop","","A loop.",17,null],[13,"Call","","A call.",17,null],[13,"Trappable","","A trappable.",17,null],[3,"OffsetInfo","","Description of a machine code range following an offset.",null,null],[12,"end_offset","","Exclusive range-end offset.",18,null],[12,"diff_id","","Index pointing to the <code>MachineStateDiff</code> entry.",18,null],[12,"activate_offset","","Offset at which execution can be continued.",18,null],[11,"new","","Creates a new <code>FunctionStateMap</code> with the given parameters.",16,[[["usize",15],["wasmabstractvalue",4],["machinestate",3],["vec",3]],["functionstatemap",3]]],[11,"diff","","Creates a <code>MachineStateDiff</code> from self and the given …",13,[[["machinestate",3]],["machinestatediff",3]]],[11,"_build_state","","Creates a <code>MachineState</code> from the given <code>&FunctionStateMap</code>.",14,[[["functionstatemap",3]],["machinestate",3]]],[0,"compiler","wasmer_compiler_singlepass","Support for compiling with Singlepass.",null,null],[3,"SinglepassCompiler","wasmer_compiler_singlepass::compiler","A compiler that compiles a WebAssembly module with …",null,null],[12,"config","","",19,null],[11,"new","","Creates a new Singlepass compiler",19,[[["singlepass",3]]]],[11,"config","","Gets the config for this Compiler",19,[[],["singlepass",3]]],[8,"ToCompileError","","",null,null],[10,"to_compile_error","","",20,[[],["compileerror",4]]],[5,"to_compile_error","","",null,[[["tocompileerror",8]],["compileerror",4]]],[8,"IntoParIterIfRayon","","",null,null],[16,"Output","","",21,null],[10,"into_par_iter_if_rayon","","",21,[[]]],[0,"config","wasmer_compiler_singlepass","",null,null],[3,"Singlepass","wasmer_compiler_singlepass::config","",null,null],[12,"enable_nan_canonicalization","","",22,null],[12,"enable_stack_check","","",22,null],[12,"middlewares","","The middleware chain.",22,null],[11,"new","","Creates a new configuration object with the default …",22,[[]]],[11,"enable_stack_check","","Enable stack check.",22,[[["bool",15]]]],[11,"canonicalize_nans","","Enable NaN canonicalization.",22,[[["bool",15]]]],[0,"emitter_x64","wasmer_compiler_singlepass","",null,null],[5,"_dummy","wasmer_compiler_singlepass::emitter_x64","Dynasm proc-macro checks for an <code>.arch</code> expression in a …",null,[[["assembler",6]]]],[4,"Location","","",null,null],[13,"Imm8","","",23,null],[13,"Imm32","","",23,null],[13,"Imm64","","",23,null],[13,"GPR","","",23,null],[13,"XMM","","",23,null],[13,"Memory","","",23,null],[13,"MemoryAddTriple","","",23,null],[4,"Condition","","",null,null],[13,"None","","",24,null],[13,"Above","","",24,null],[13,"AboveEqual","","",24,null],[13,"Below","","",24,null],[13,"BelowEqual","","",24,null],[13,"Greater","","",24,null],[13,"GreaterEqual","","",24,null],[13,"Less","","",24,null],[13,"LessEqual","","",24,null],[13,"Equal","","",24,null],[13,"NotEqual","","",24,null],[13,"Signed","","",24,null],[13,"Carry","","",24,null],[4,"Size","","",null,null],[13,"S8","","",25,null],[13,"S16","","",25,null],[13,"S32","","",25,null],[13,"S64","","",25,null],[4,"XMMOrMemory","","",null,null],[13,"XMM","","",26,null],[13,"Memory","","",26,null],[4,"GPROrMemory","","",null,null],[13,"GPR","","",27,null],[13,"Memory","","",27,null],[8,"Emitter","","",null,null],[16,"Label","","",28,null],[16,"Offset","","",28,null],[10,"get_label","","",28,[[]]],[10,"get_offset","","",28,[[]]],[10,"get_jmp_instr_size","","",28,[[],["u8",15]]],[11,"finalize_function","","",28,[[]]],[10,"emit_u64","","",28,[[["u64",15]]]],[10,"emit_bytes","","",28,[[]]],[10,"emit_label","","",28,[[]]],[10,"emit_nop","","",28,[[]]],[10,"emit_nop_n","","A high-level assembler method. Emits an instruction …",28,[[["usize",15]]]],[10,"emit_mov","","",28,[[["location",4],["size",4]]]],[10,"emit_lea","","",28,[[["location",4],["size",4]]]],[10,"emit_lea_label","","",28,[[["location",4]]]],[10,"emit_cdq","","",28,[[]]],[10,"emit_cqo","","",28,[[]]],[10,"emit_xor","","",28,[[["location",4],["size",4]]]],[10,"emit_jmp","","",28,[[["condition",4]]]],[10,"emit_jmp_location","","",28,[[["location",4]]]],[10,"emit_set","","",28,[[["condition",4],["gpr",4]]]],[10,"emit_push","","",28,[[["location",4],["size",4]]]],[10,"emit_pop","","",28,[[["location",4],["size",4]]]],[10,"emit_cmp","","",28,[[["location",4],["size",4]]]],[10,"emit_add","","",28,[[["location",4],["size",4]]]],[10,"emit_sub","","",28,[[["location",4],["size",4]]]],[10,"emit_neg","","",28,[[["location",4],["size",4]]]],[10,"emit_imul","","",28,[[["location",4],["size",4]]]],[10,"emit_imul_imm32_gpr64","","",28,[[["u32",15],["gpr",4]]]],[10,"emit_div","","",28,[[["location",4],["size",4]]]],[10,"emit_idiv","","",28,[[["location",4],["size",4]]]],[10,"emit_shl","","",28,[[["location",4],["size",4]]]],[10,"emit_shr","","",28,[[["location",4],["size",4]]]],[10,"emit_sar","","",28,[[["location",4],["size",4]]]],[10,"emit_rol","","",28,[[["location",4],["size",4]]]],[10,"emit_ror","","",28,[[["location",4],["size",4]]]],[10,"emit_and","","",28,[[["location",4],["size",4]]]],[10,"emit_or","","",28,[[["location",4],["size",4]]]],[10,"emit_bsr","","",28,[[["location",4],["size",4]]]],[10,"emit_bsf","","",28,[[["location",4],["size",4]]]],[10,"emit_popcnt","","",28,[[["location",4],["size",4]]]],[10,"emit_movzx","","",28,[[["location",4],["size",4]]]],[10,"emit_movsx","","",28,[[["location",4],["size",4]]]],[10,"emit_xchg","","",28,[[["location",4],["size",4]]]],[10,"emit_lock_xadd","","",28,[[["location",4],["size",4]]]],[10,"emit_lock_cmpxchg","","",28,[[["location",4],["size",4]]]],[10,"emit_rep_stosq","","",28,[[]]],[10,"emit_btc_gpr_imm8_32","","",28,[[["gpr",4],["u8",15]]]],[10,"emit_btc_gpr_imm8_64","","",28,[[["gpr",4],["u8",15]]]],[10,"emit_cmovae_gpr_32","","",28,[[["gpr",4]]]],[10,"emit_cmovae_gpr_64","","",28,[[["gpr",4]]]],[10,"emit_vmovaps","","",28,[[["xmmormemory",4]]]],[10,"emit_vmovapd","","",28,[[["xmmormemory",4]]]],[10,"emit_vxorps","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vxorpd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vaddss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vaddsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vsubss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vsubsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vmulss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vmulsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vdivss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vdivsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vmaxss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vmaxsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vminss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vminsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpeqss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpeqsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpneqss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpneqsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpltss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpltsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpless","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmplesd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpgtss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpgtsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpgess","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpgesd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpunordss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpunordsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpordss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcmpordsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vsqrtss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vsqrtsd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vroundss_nearest","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vroundss_floor","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vroundss_ceil","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vroundss_trunc","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vroundsd_nearest","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vroundsd_floor","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vroundsd_ceil","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vroundsd_trunc","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcvtss2sd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vcvtsd2ss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_ucomiss","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_ucomisd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_cvttss2si_32","","",28,[[["xmmormemory",4],["gpr",4]]]],[10,"emit_cvttss2si_64","","",28,[[["xmmormemory",4],["gpr",4]]]],[10,"emit_cvttsd2si_32","","",28,[[["xmmormemory",4],["gpr",4]]]],[10,"emit_cvttsd2si_64","","",28,[[["xmmormemory",4],["gpr",4]]]],[10,"emit_vcvtsi2ss_32","","",28,[[["xmm",4],["gprormemory",4]]]],[10,"emit_vcvtsi2ss_64","","",28,[[["xmm",4],["gprormemory",4]]]],[10,"emit_vcvtsi2sd_32","","",28,[[["xmm",4],["gprormemory",4]]]],[10,"emit_vcvtsi2sd_64","","",28,[[["xmm",4],["gprormemory",4]]]],[10,"emit_vblendvps","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_vblendvpd","","",28,[[["xmm",4],["xmmormemory",4]]]],[10,"emit_test_gpr_64","","",28,[[["gpr",4]]]],[10,"emit_ud2","","",28,[[]]],[10,"emit_ret","","",28,[[]]],[10,"emit_call_label","","",28,[[]]],[10,"emit_call_location","","",28,[[["location",4]]]],[10,"emit_call_register","","",28,[[["gpr",4]]]],[10,"emit_bkpt","","",28,[[]]],[10,"emit_host_redirection","","",28,[[["gpr",4]]]],[11,"arch_has_itruncf","","",28,[[],["bool",15]]],[11,"arch_emit_i32_trunc_sf32","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_i32_trunc_sf64","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_i32_trunc_uf32","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_i32_trunc_uf64","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_i64_trunc_sf32","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_i64_trunc_sf64","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_i64_trunc_uf32","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_i64_trunc_uf64","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_has_fconverti","","",28,[[],["bool",15]]],[11,"arch_emit_f32_convert_si32","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_f32_convert_si64","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_f32_convert_ui32","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_f32_convert_ui64","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_f64_convert_si32","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_f64_convert_si64","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_f64_convert_ui32","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_emit_f64_convert_ui64","","",28,[[["xmm",4],["gpr",4]]]],[11,"arch_has_fneg","","",28,[[],["bool",15]]],[11,"arch_emit_f32_neg","","",28,[[["xmm",4]]]],[11,"arch_emit_f64_neg","","",28,[[["xmm",4]]]],[11,"arch_has_xzcnt","","",28,[[],["bool",15]]],[11,"arch_emit_lzcnt","","",28,[[["location",4],["size",4]]]],[11,"arch_emit_tzcnt","","",28,[[["location",4],["size",4]]]],[11,"arch_supports_canonicalize_nan","","",28,[[],["bool",15]]],[11,"arch_requires_indirect_call_trampoline","","",28,[[],["bool",15]]],[11,"arch_emit_indirect_call_with_trampoline","","",28,[[["location",4]]]],[11,"arch_emit_entry_trampoline","","",28,[[]]],[11,"arch_mov64_imm_offset","","",28,[[],["usize",15]]],[0,"machine","wasmer_compiler_singlepass","",null,null],[17,"NATIVE_PAGE_SIZE","wasmer_compiler_singlepass::machine","",null,null],[3,"MachineStackOffset","","",null,null],[12,"0","","",29,null],[3,"Machine","","",null,null],[12,"used_gprs","","",30,null],[12,"used_xmms","","",30,null],[12,"stack_offset","","",30,null],[12,"save_area_offset","","",30,null],[12,"state","","",30,null],[12,"track_state","","",30,null],[11,"new","","",30,[[]]],[11,"get_stack_offset","","",30,[[],["usize",15]]],[11,"get_used_gprs","","",30,[[],[["vec",3],["gpr",4]]]],[11,"get_used_xmms","","",30,[[],[["vec",3],["xmm",4]]]],[11,"get_vmctx_reg","","",30,[[],["gpr",4]]],[11,"pick_gpr","","Picks an unused general purpose register for …",30,[[],[["gpr",4],["option",4]]]],[11,"pick_temp_gpr","","Picks an unused general purpose register for internal …",30,[[],[["gpr",4],["option",4]]]],[11,"acquire_temp_gpr","","Acquires a temporary GPR.",30,[[],[["gpr",4],["option",4]]]],[11,"release_temp_gpr","","Releases a temporary GPR.",30,[[["gpr",4]]]],[11,"reserve_unused_temp_gpr","","Specify that a given register is in use.",30,[[["gpr",4]],["gpr",4]]],[11,"pick_xmm","","Picks an unused XMM register.",30,[[],[["xmm",4],["option",4]]]],[11,"pick_temp_xmm","","Picks an unused XMM register for internal temporary use.",30,[[],[["xmm",4],["option",4]]]],[11,"acquire_temp_xmm","","Acquires a temporary XMM register.",30,[[],[["xmm",4],["option",4]]]],[11,"release_temp_xmm","","Releases a temporary XMM register.",30,[[["xmm",4]]]],[11,"acquire_locations","","Acquires locations from the machine state.",30,[[["bool",15]],["smallvec",3]]],[11,"release_locations","","Releases locations used for stack value.",30,[[]]],[11,"release_locations_only_regs","","",30,[[]]],[11,"release_locations_only_stack","","",30,[[]]],[11,"release_locations_only_osr_state","","",30,[[["usize",15]]]],[11,"release_locations_keep_state","","",30,[[]]],[11,"init_locals","","",30,[[["usize",15]],[["vec",3],["location",4]]]],[11,"finalize_locals","","",30,[[]]],[11,"get_param_location","","",30,[[["usize",15]],["location",4]]],[0,"x64_decl","wasmer_compiler_singlepass","X64 structures.",null,null],[4,"GPR","wasmer_compiler_singlepass::x64_decl","General-purpose registers.",null,null],[13,"RAX","","RAX register",31,null],[13,"RCX","","RCX register",31,null],[13,"RDX","","RDX register",31,null],[13,"RBX","","RBX register",31,null],[13,"RSP","","RSP register",31,null],[13,"RBP","","RBP register",31,null],[13,"RSI","","RSI register",31,null],[13,"RDI","","RDI register",31,null],[13,"R8","","R8 register",31,null],[13,"R9","","R9 register",31,null],[13,"R10","","R10 register",31,null],[13,"R11","","R11 register",31,null],[13,"R12","","R12 register",31,null],[13,"R13","","R13 register",31,null],[13,"R14","","R14 register",31,null],[13,"R15","","R15 register",31,null],[4,"XMM","","XMM registers.",null,null],[13,"XMM0","","XMM register 0",32,null],[13,"XMM1","","XMM register 1",32,null],[13,"XMM2","","XMM register 2",32,null],[13,"XMM3","","XMM register 3",32,null],[13,"XMM4","","XMM register 4",32,null],[13,"XMM5","","XMM register 5",32,null],[13,"XMM6","","XMM register 6",32,null],[13,"XMM7","","XMM register 7",32,null],[13,"XMM8","","XMM register 8",32,null],[13,"XMM9","","XMM register 9",32,null],[13,"XMM10","","XMM register 10",32,null],[13,"XMM11","","XMM register 11",32,null],[13,"XMM12","","XMM register 12",32,null],[13,"XMM13","","XMM register 13",32,null],[13,"XMM14","","XMM register 14",32,null],[13,"XMM15","","XMM register 15",32,null],[4,"X64Register","","A machine register under the x86-64 architecture.",null,null],[13,"GPR","","General-purpose registers.",33,null],[13,"XMM","","XMM (floating point/SIMD) registers.",33,null],[11,"to_index","","Returns the index of the register.",33,[[],["registerindex",3]]],[11,"_from_dwarf_regnum","","Converts a DWARF regnum to X64Register.",33,[[["u16",15]],[["option",4],["x64register",4]]]],[11,"_prefix_mov_to_stack","","Returns the instruction prefix for <code>movq %this_reg, ?(%rsp)</code>…",33,[[],["option",4]]],[3,"ArgumentRegisterAllocator","","An allocator that allocates registers for function …",null,null],[12,"n_gprs","","",34,null],[12,"n_xmms","","",34,null],[11,"next","","Allocates a register for argument type <code>ty</code>. Returns <code>None</code> …",34,[[["type",4]],[["option",4],["x64register",4]]]],[5,"new_machine_state","","Create a new <code>MachineState</code> with default values.",null,[[],["machinestate",3]]],[3,"SinglepassCompiler","wasmer_compiler_singlepass","A compiler that compiles a WebAssembly module with …",null,null],[12,"config","","",19,null],[3,"Singlepass","","",null,null],[12,"enable_nan_canonicalization","","",22,null],[12,"enable_stack_check","","",22,null],[12,"middlewares","","The middleware chain.",22,null],[11,"from","wasmer_compiler_singlepass::codegen_x64","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","wasmer_compiler_singlepass::common_decl","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[],["bool",15]]],[11,"pointer_metadata","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[],["bool",15]]],[11,"pointer_metadata","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"pointer_metadata","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"pointer_metadata","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[],["bool",15]]],[11,"pointer_metadata","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"pointer_metadata","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"pointer_metadata","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","wasmer_compiler_singlepass::compiler","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"pointer_metadata","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","wasmer_compiler_singlepass::config","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"pointer_metadata","","",22,[[]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"from","wasmer_compiler_singlepass::emitter_x64","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[],["bool",15]]],[11,"pointer_metadata","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[],["bool",15]]],[11,"pointer_metadata","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[],["bool",15]]],[11,"pointer_metadata","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[],["bool",15]]],[11,"pointer_metadata","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"pointer_metadata","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","wasmer_compiler_singlepass::machine","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"pointer_metadata","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"pointer_metadata","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","wasmer_compiler_singlepass::x64_decl","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[],["bool",15]]],[11,"pointer_metadata","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[],["bool",15]]],[11,"pointer_metadata","","",32,[[]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[],["bool",15]]],[11,"pointer_metadata","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"pointer_metadata","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"to_compile_error","wasmer_compiler_singlepass::codegen_x64","",9,[[],["compileerror",4]]],[11,"clone","","",2,[[],["traptable",3]]],[11,"clone","","",3,[[],["floatvalue",3]]],[11,"clone","","",4,[[],["canonicalizetype",4]]],[11,"clone","","",8,[[],["ifelsestate",4]]],[11,"clone","wasmer_compiler_singlepass::common_decl","",11,[[],["registerindex",3]]],[11,"clone","","",12,[[],["wasmabstractvalue",4]]],[11,"clone","","",13,[[],["machinestate",3]]],[11,"clone","","",14,[[],["machinestatediff",3]]],[11,"clone","","",15,[[],["machinevalue",4]]],[11,"clone","","",16,[[],["functionstatemap",3]]],[11,"clone","","",17,[[],["suspendoffset",4]]],[11,"clone","","",18,[[],["offsetinfo",3]]],[11,"clone","wasmer_compiler_singlepass::config","",22,[[],["singlepass",3]]],[11,"clone","wasmer_compiler_singlepass::emitter_x64","",23,[[],["location",4]]],[11,"clone","","",24,[[],["condition",4]]],[11,"clone","","",25,[[],["size",4]]],[11,"clone","","",26,[[],["xmmormemory",4]]],[11,"clone","","",27,[[],["gprormemory",4]]],[11,"clone","wasmer_compiler_singlepass::x64_decl","",31,[[],["gpr",4]]],[11,"clone","","",32,[[],["xmm",4]]],[11,"clone","","",33,[[],["x64register",4]]],[11,"default","wasmer_compiler_singlepass::codegen_x64","",2,[[],["traptable",3]]],[11,"default","wasmer_compiler_singlepass::common_decl","",14,[[],["machinestatediff",3]]],[11,"default","wasmer_compiler_singlepass::config","",22,[[],["singlepass",3]]],[11,"default","wasmer_compiler_singlepass::x64_decl","",34,[[],["argumentregisterallocator",3]]],[11,"cmp","wasmer_compiler_singlepass::emitter_x64","",23,[[["location",4]],["ordering",4]]],[11,"cmp","","",25,[[["size",4]],["ordering",4]]],[11,"cmp","wasmer_compiler_singlepass::x64_decl","",31,[[["gpr",4]],["ordering",4]]],[11,"cmp","","",32,[[["xmm",4]],["ordering",4]]],[11,"eq","wasmer_compiler_singlepass::common_decl","",11,[[["registerindex",3]],["bool",15]]],[11,"ne","","",11,[[["registerindex",3]],["bool",15]]],[11,"eq","","",12,[[["wasmabstractvalue",4]],["bool",15]]],[11,"ne","","",12,[[["wasmabstractvalue",4]],["bool",15]]],[11,"eq","","",15,[[["machinevalue",4]],["bool",15]]],[11,"ne","","",15,[[["machinevalue",4]],["bool",15]]],[11,"eq","wasmer_compiler_singlepass::emitter_x64","",23,[[["location",4]],["bool",15]]],[11,"ne","","",23,[[["location",4]],["bool",15]]],[11,"eq","","",24,[[["condition",4]],["bool",15]]],[11,"eq","","",25,[[["size",4]],["bool",15]]],[11,"eq","","",26,[[["xmmormemory",4]],["bool",15]]],[11,"ne","","",26,[[["xmmormemory",4]],["bool",15]]],[11,"eq","wasmer_compiler_singlepass::x64_decl","",31,[[["gpr",4]],["bool",15]]],[11,"eq","","",32,[[["xmm",4]],["bool",15]]],[11,"eq","","",33,[[["x64register",4]],["bool",15]]],[11,"ne","","",33,[[["x64register",4]],["bool",15]]],[11,"partial_cmp","wasmer_compiler_singlepass::emitter_x64","",23,[[["location",4]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["location",4]],["bool",15]]],[11,"le","","",23,[[["location",4]],["bool",15]]],[11,"gt","","",23,[[["location",4]],["bool",15]]],[11,"ge","","",23,[[["location",4]],["bool",15]]],[11,"partial_cmp","","",25,[[["size",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_compiler_singlepass::x64_decl","",31,[[["gpr",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",32,[[["xmm",4]],[["option",4],["ordering",4]]]],[11,"fmt","wasmer_compiler_singlepass::codegen_x64","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_singlepass::common_decl","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_singlepass::config","",22,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_singlepass::emitter_x64","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_compiler_singlepass::x64_decl","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"hash","wasmer_compiler_singlepass::common_decl","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",15,[[]]],[11,"hash","wasmer_compiler_singlepass::emitter_x64","",23,[[]]],[11,"hash","wasmer_compiler_singlepass::x64_decl","",31,[[]]],[11,"hash","","",32,[[]]],[11,"size_of_val","wasmer_compiler_singlepass::compiler","",19,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_compiler_singlepass::config","",22,[[["memoryusagetracker",8]],["usize",15]]],[11,"enable_pic","","",22,[[]]],[11,"compiler","","Transform it into the compiler",22,[[["box",3]],[["box",3],["compiler",8]]]],[11,"default_features_for_target","","Gets the default features for this compiler in the given …",22,[[["target",3]],["features",3]]],[11,"push_middleware","","Pushes a middleware onto the back of the middleware chain.",22,[[["arc",3],["modulemiddleware",8]]]],[11,"get_middlewares","wasmer_compiler_singlepass::compiler","Get the middlewares for this compiler",19,[[]]],[11,"compile_module","","Compile the module using Singlepass, producing a …",19,[[["compilemoduleinfo",3],["localfunctionindex",3],["moduletranslationstate",3],["target",3],["primarymap",3],["functionbodydata",3]],[["compilation",3],["result",4],["compileerror",4]]]]],"p":[[3,"FuncGen"],[3,"SpecialLabelSet"],[3,"TrapTable"],[3,"FloatValue"],[4,"CanonicalizeType"],[8,"PopMany"],[8,"WpTypeExt"],[3,"ControlFrame"],[4,"IfElseState"],[3,"CodegenError"],[3,"I2O1"],[3,"RegisterIndex"],[4,"WasmAbstractValue"],[3,"MachineState"],[3,"MachineStateDiff"],[4,"MachineValue"],[3,"FunctionStateMap"],[4,"SuspendOffset"],[3,"OffsetInfo"],[3,"SinglepassCompiler"],[8,"ToCompileError"],[8,"IntoParIterIfRayon"],[3,"Singlepass"],[4,"Location"],[4,"Condition"],[4,"Size"],[4,"XMMOrMemory"],[4,"GPROrMemory"],[8,"Emitter"],[3,"MachineStackOffset"],[3,"Machine"],[4,"GPR"],[4,"XMM"],[4,"X64Register"],[3,"ArgumentRegisterAllocator"]]},\
"wasmer_derive":{"doc":"","i":[[0,"parse","wasmer_derive","",null,null],[4,"WasmerAttr","wasmer_derive::parse","",null,null],[13,"Export","","",0,null],[12,"identifier","wasmer_derive::parse::WasmerAttr","The identifier is an override, otherwise we use the field …",1,null],[12,"optional","","",1,null],[12,"aliases","","",1,null],[12,"span","","",1,null],[3,"ExportExpr","wasmer_derive::parse","",null,null],[12,"name","","",2,null],[12,"optional","","",2,null],[12,"aliases","","",2,null],[3,"ExportOptions","","",null,null],[12,"name","","",3,null],[12,"optional","","",3,null],[12,"aliases","","",3,null],[3,"WasmerAttrInner","","",null,null],[12,"0","","",4,null],[24,"WasmerEnv","wasmer_derive","",null,null],[5,"impl_wasmer_env_for_struct","","",null,[[["ident",3],["generics",3],["datastruct",3]],["tokenstream",3]]],[5,"impl_wasmer_env","","",null,[[["deriveinput",3]],["tokenstream",3]]],[5,"derive_struct_fields","","",null,[[["datastruct",3]]]],[5,"get_identifier","","",null,[[["type",4]],["tokenstream",3]]],[11,"from","wasmer_derive::parse","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"parse","","",3,[[["parsestream",6]],["result",6]]],[11,"parse","","",2,[[["parsestream",6]],["result",6]]],[11,"parse","","",4,[[["parsestream",6]],["result",6]]],[11,"parse","","",0,[[["parsestream",6]],["result",6]]]],"p":[[4,"WasmerAttr"],[13,"Export"],[3,"ExportExpr"],[3,"ExportOptions"],[3,"WasmerAttrInner"]]},\
"wasmer_emscripten":{"doc":"","i":[[0,"macros","wasmer_emscripten","",null,null],[0,"bitwise","","",null,null],[5,"_llvm_bswap_i64","wasmer_emscripten::bitwise","emscripten: _llvm_bswap_i64",null,[[["emenv",3],["i32",15]],["i32",15]]],[0,"emscripten_target","wasmer_emscripten","",null,null],[5,"asm_const_i","wasmer_emscripten::emscripten_target","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"exit_with_live_runtime","","",null,[[["emenv",3]]]],[5,"setTempRet0","","",null,[[["emenv",3],["i32",15]]]],[5,"getTempRet0","","",null,[[["emenv",3]],["i32",15]]],[5,"_alarm","","",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_atexit","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"__Unwind_Backtrace","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"__Unwind_FindEnclosingFunction","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"__Unwind_GetIPInfo","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___cxa_find_matching_catch_2","","",null,[[["emenv",3]],["i32",15]]],[5,"___cxa_find_matching_catch_3","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___cxa_free_exception","","",null,[[["emenv",3],["i32",15]]]],[5,"___resumeException","","",null,[[["emenv",3],["i32",15]]]],[5,"_dladdr","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___gxx_personality_v0","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_getdtablesize","","",null,[[["emenv",3]],["i32",15]]],[5,"_gethostbyaddr","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_gethostbyname","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_gethostbyname_r","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_getloadavg","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_getnameinfo","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_i","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_ii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iiii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iifi","","",null,[[["f64",15],["i32",15],["emenv",3]],["i32",15]]],[5,"invoke_v","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_vi","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_vii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_dii","","",null,[[["emenv",3],["i32",15]],["f64",15]]],[5,"invoke_diiii","","",null,[[["emenv",3],["i32",15]],["f64",15]]],[5,"invoke_iiiii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iiiiii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iiiiiii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iiiiiiii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iiiiiiiii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iiiiiiiiii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iiiiiiiiiii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_vd","","",null,[[["f64",15],["emenv",3],["i32",15]]]],[5,"invoke_viiiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viiiiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viiiiiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viiiiiiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viiiiiiiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viiiiiiiiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_iij","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iji","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iiji","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_iiijj","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_j","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_ji","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_jii","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_jij","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_jjj","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"invoke_viiij","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viiijiiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viiijiiiiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viij","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viiji","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viijiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viijj","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_vj","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_vjji","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_vij","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_viji","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_vijiii","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_vijj","","",null,[[["emenv",3],["i32",15]]]],[5,"invoke_vidd","","",null,[[["f64",15],["i32",15],["emenv",3]]]],[5,"invoke_viid","","",null,[[["f64",15],["emenv",3],["i32",15]]]],[5,"invoke_viidii","","",null,[[["f64",15],["i32",15],["emenv",3]]]],[5,"invoke_viidddddddd","","",null,[[["f64",15],["i32",15],["emenv",3]]]],[0,"env","wasmer_emscripten","",null,null],[0,"unix","wasmer_emscripten::env","",null,null],[5,"_getenv","wasmer_emscripten::env::unix","emscripten: _getenv // (name: *const char) -> *const …",null,[[["emenv",3],["i32",15]],["u32",15]]],[5,"_setenv","","emscripten: _setenv // (name: *const char, name: *const …",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_putenv","","emscripten: _putenv // (name: *const char);",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_unsetenv","","emscripten: _unsetenv // (name: *const char);",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_getpwnam","","",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_getgrnam","","",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_sysconf","","",null,[[["c_int",6],["emenv",3]],["i32",15]]],[5,"_gai_strerror","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_getaddrinfo","","",null,[[["emaddrinfo",3],["wasmptr",3],["c_char",6],["wasmptr",3],["emenv",3],["wasmptr",3]],["i32",15]]],[5,"call_malloc","wasmer_emscripten::env","",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"call_malloc_with_cast","","",null,[[["u32",15],["emenv",3]],[["copy",8],["wasmptr",3]]]],[5,"call_memalign","","",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"call_memset","","",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"get_emscripten_data","","",null,[[["emenv",3]],[["emscriptendata",3],["mutexguard",3]]]],[5,"_getpagesize","","",null,[[["emenv",3]],["u32",15]]],[5,"_times","","",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"___build_environment","","",null,[[["c_int",6],["emenv",3]]]],[5,"___assert_fail","","",null,[[["c_int",6],["emenv",3]]]],[5,"_pathconf","","",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_fpathconf","","",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[3,"EmAddrInfo","","",null,null],[12,"ai_flags","","",0,null],[12,"ai_family","","",0,null],[12,"ai_socktype","","",0,null],[12,"ai_protocol","","",0,null],[12,"ai_addrlen","","",0,null],[12,"ai_addr","","",0,null],[12,"ai_canonname","","",0,null],[12,"ai_next","","",0,null],[3,"EmSockAddr","","",null,null],[12,"sa_family","","",1,null],[12,"sa_data","","",1,null],[0,"errno","wasmer_emscripten","",null,null],[5,"___seterrno","wasmer_emscripten::errno","",null,[[["emenv",3],["i32",15]]]],[0,"exception","wasmer_emscripten","",null,null],[5,"___cxa_allocate_exception","wasmer_emscripten::exception","emscripten: ___cxa_allocate_exception",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"___cxa_current_primary_exception","","",null,[[["emenv",3]],["u32",15]]],[5,"___cxa_decrement_exception_refcount","","",null,[[["u32",15],["emenv",3]]]],[5,"___cxa_increment_exception_refcount","","",null,[[["u32",15],["emenv",3]]]],[5,"___cxa_rethrow_primary_exception","","",null,[[["u32",15],["emenv",3]]]],[5,"___cxa_throw","","emscripten: ___cxa_throw TODO: We don\'t have support for …",null,[[["u32",15],["emenv",3]]]],[5,"___cxa_begin_catch","","",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"___cxa_end_catch","","",null,[[["emenv",3]]]],[5,"___cxa_uncaught_exception","","",null,[[["emenv",3]],["i32",15]]],[5,"___cxa_pure_virtual","","",null,[[["emenv",3]]]],[0,"exec","wasmer_emscripten","",null,null],[5,"execvp","wasmer_emscripten::exec","",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"execl","","execl",null,[[["varargs",3],["emenv",3],["i32",15]],["i32",15]]],[5,"execle","","execle",null,[[["varargs",3],["emenv",3],["i32",15]],["i32",15]]],[0,"exit","wasmer_emscripten","",null,null],[5,"exit","wasmer_emscripten::exit","",null,[[["emenv",3],["i32",15]]]],[0,"inet","wasmer_emscripten","",null,null],[5,"addr","wasmer_emscripten::inet","",null,[[["emenv",3],["i32",15]],["i32",15]]],[0,"io","wasmer_emscripten","",null,null],[0,"unix","wasmer_emscripten::io","",null,null],[5,"putchar","wasmer_emscripten::io::unix","putchar",null,[[["emenv",3],["i32",15]]]],[5,"printf","","printf",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"chroot","","chroot",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"getpwuid","","getpwuid",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"getprotobyname","wasmer_emscripten::io","getprotobyname",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"getprotobynumber","","getprotobynumber",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"sigdelset","","sigdelset",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"sigfillset","","sigfillset",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"tzset","","tzset",null,[[["emenv",3]]]],[5,"strptime","","strptime",null,[[["emenv",3],["i32",15]],["i32",15]]],[0,"jmp","wasmer_emscripten","",null,null],[5,"__setjmp","wasmer_emscripten::jmp","setjmp",null,[[["u32",15],["emenv",3]],["c_int",6]]],[5,"__longjmp","","longjmp",null,[[["u32",15],["c_int",6],["emenv",3]]]],[3,"LongJumpRet","","",null,null],[5,"_longjmp","","_longjmp",null,[[["c_int",6],["emenv",3],["i32",15]]]],[0,"libc","wasmer_emscripten","",null,null],[5,"current_sigrtmax","wasmer_emscripten::libc","",null,[[],["i32",15]]],[5,"current_sigrtmin","","",null,[[],["i32",15]]],[5,"endpwent","","",null,[[]]],[5,"execv","","",null,[[["i32",15]],["i32",15]]],[5,"fexecve","","",null,[[["i32",15]],["i32",15]]],[5,"fpathconf","","",null,[[["i32",15]],["i32",15]]],[5,"getitimer","","",null,[[["i32",15]],["i32",15]]],[5,"getpwent","","",null,[[],["i32",15]]],[5,"killpg","","",null,[[["i32",15]],["i32",15]]],[5,"pathconf","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"setpwent","","",null,[[]]],[5,"sigismember","","",null,[[["i32",15]],["i32",15]]],[5,"sigpending","","",null,[[["i32",15]],["i32",15]]],[0,"linking","wasmer_emscripten","",null,null],[5,"_dlopen","wasmer_emscripten::linking","emscripten: dlopen(filename: *const c_char, flag: c_int) …",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_dlclose","","emscripten: dlclose(handle: *mut c_void) -> c_int",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_dlsym","","emscripten: dlsym(handle: *mut c_void, symbol: *const …",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_dlerror","","emscripten: dlerror() -> *mut c_char",null,[[["emenv",3]],["i32",15]]],[0,"lock","wasmer_emscripten","",null,null],[5,"___lock","wasmer_emscripten::lock","",null,[[["c_int",6],["emenv",3]]]],[5,"___unlock","","",null,[[["c_int",6],["emenv",3]]]],[5,"___wait","","",null,[[["u32",15],["emenv",3]]]],[5,"_flock","","",null,[[["u32",15],["emenv",3]],["u32",15]]],[0,"math","wasmer_emscripten","",null,null],[5,"_llvm_copysign_f32","wasmer_emscripten::math","",null,[[["f64",15]],["f64",15]]],[5,"_llvm_copysign_f64","","",null,[[["f64",15]],["f64",15]]],[5,"_llvm_log10_f64","","emscripten: _llvm_log10_f64",null,[[["f64",15]],["f64",15]]],[5,"_llvm_log2_f64","","emscripten: _llvm_log2_f64",null,[[["f64",15]],["f64",15]]],[5,"_llvm_sin_f64","","emscripten: _llvm_sin_f64",null,[[["f64",15]],["f64",15]]],[5,"_llvm_cos_f64","","emscripten: _llvm_cos_f64",null,[[["f64",15]],["f64",15]]],[5,"_llvm_log10_f32","","",null,[[["f64",15]],["f64",15]]],[5,"_llvm_log2_f32","","",null,[[["f64",15]],["f64",15]]],[5,"_llvm_exp2_f32","","",null,[[["f32",15]],["f32",15]]],[5,"_llvm_exp2_f64","","",null,[[["f64",15]],["f64",15]]],[5,"_llvm_trunc_f64","","",null,[[["f64",15]],["f64",15]]],[5,"_llvm_fma_f64","","",null,[[["f64",15]],["f64",15]]],[5,"_emscripten_random","","",null,[[["emenv",3]],["f64",15]]],[5,"f64_rem","","",null,[[["f64",15]],["f64",15]]],[5,"pow","","",null,[[["f64",15]],["f64",15]]],[5,"exp","","",null,[[["f64",15]],["f64",15]]],[5,"log","","",null,[[["f64",15]],["f64",15]]],[5,"sqrt","","",null,[[["f64",15]],["f64",15]]],[5,"floor","","",null,[[["f64",15]],["f64",15]]],[5,"fabs","","",null,[[["f64",15]],["f64",15]]],[5,"f64_to_int","","",null,[[["f64",15]],["i32",15]]],[0,"memory","wasmer_emscripten","",null,null],[5,"_emscripten_memcpy_big","wasmer_emscripten::memory","emscripten: _emscripten_memcpy_big",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"_emscripten_get_heap_size","","emscripten: _emscripten_get_heap_size",null,[[["emenv",3]],["u32",15]]],[5,"align_up","","",null,[[["usize",15]],["usize",15]]],[5,"_emscripten_resize_heap","","emscripten: _emscripten_resize_heap Note: this function …",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"sbrk","","emscripten: sbrk",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"get_total_memory","","emscripten: getTotalMemory",null,[[["emenv",3]],["u32",15]]],[5,"enlarge_memory","","emscripten: enlargeMemory",null,[[["emenv",3]],["u32",15]]],[5,"abort_on_cannot_grow_memory","","emscripten: abortOnCannotGrowMemory",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"abort_on_cannot_grow_memory_old","","emscripten: abortOnCannotGrowMemory",null,[[["emenv",3]],["u32",15]]],[5,"segfault","","emscripten: segfault",null,[[["emenv",3]]]],[5,"alignfault","","emscripten: alignfault",null,[[["emenv",3]]]],[5,"ftfault","","emscripten: ftfault",null,[[["emenv",3]]]],[5,"___map_file","","emscripten: ___map_file",null,[[["u32",15],["emenv",3]],["c_int",6]]],[0,"process","wasmer_emscripten","",null,null],[6,"PidT","wasmer_emscripten::process","",null,null],[5,"abort_with_message","","",null,[[["emenv",3],["str",15]]]],[5,"em_abort","","The name of this call is <code>abort</code> but we want to avoid …",null,[[["u32",15],["emenv",3]]]],[5,"_abort","","",null,[[["emenv",3]]]],[5,"_prctl","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_fork","","",null,[[["emenv",3]],["pid_t",6]]],[5,"_endgrent","","",null,[[["emenv",3]]]],[5,"_execve","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_exit","","",null,[[["c_int",6],["emenv",3]]]],[5,"_kill","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_sched_yield","","",null,[[["emenv",3]],["i32",15]]],[5,"_llvm_stacksave","","",null,[[["emenv",3]],["i32",15]]],[5,"_llvm_stackrestore","","",null,[[["emenv",3],["i32",15]]]],[5,"_raise","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_sem_init","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_sem_destroy","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_sem_post","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_sem_wait","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_getgrent","","",null,[[["emenv",3]],["c_int",6]]],[5,"_setgrent","","",null,[[["emenv",3]]]],[5,"_setgroups","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_setitimer","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_usleep","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_nanosleep","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_utime","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_utimes","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_wait","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_wait3","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_wait4","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_waitid","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_waitpid","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"abort_stack_overflow","","",null,[[["c_int",6],["emenv",3]]]],[5,"_llvm_trap","","",null,[[["emenv",3]]]],[5,"_llvm_eh_typeid_for","","",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_system","","",null,[[["emenv",3],["i32",15]],["c_int",6]]],[5,"_popen","","",null,[[["emenv",3],["i32",15]],["c_int",6]]],[0,"pthread","wasmer_emscripten","",null,null],[5,"_pthread_attr_destroy","wasmer_emscripten::pthread","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_attr_getstack","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_attr_init","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_attr_setstacksize","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_cleanup_pop","","",null,[[["emenv",3],["i32",15]]]],[5,"_pthread_cleanup_push","","",null,[[["emenv",3],["i32",15]]]],[5,"_pthread_cond_destroy","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_cond_init","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_cond_signal","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_cond_timedwait","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_cond_wait","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_condattr_destroy","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_condattr_init","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_condattr_setclock","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_create","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_detach","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_equal","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_exit","","",null,[[["emenv",3],["i32",15]]]],[5,"_pthread_getattr_np","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_getspecific","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_join","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_self","","",null,[[["emenv",3]],["i32",15]]],[5,"_pthread_key_create","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_mutex_destroy","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_mutex_init","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_mutexattr_destroy","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_mutexattr_init","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_mutexattr_settype","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_once","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_rwlock_destroy","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_rwlock_init","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_rwlock_rdlock","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_rwlock_unlock","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_rwlock_wrlock","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_setcancelstate","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_setspecific","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_pthread_sigmask","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[0,"ptr","wasmer_emscripten","This is a wrapper around the <code>WasmPtr</code> abstraction that …",null,null],[3,"Array","wasmer_emscripten::ptr","The <code>Array</code> marker type. This type can be used like …",null,null],[8,"FromToNativeWasmType","","A trait to convert a Rust value to a <code>WasmNativeType</code> value,…",null,null],[16,"Native","","Native Wasm type.",2,null],[10,"from_native","","Convert a value of kind <code>Self::Native</code> to <code>Self</code>.",2,[[]]],[10,"to_native","","Convert self to <code>Self::Native</code>.",2,[[]]],[3,"Memory","","A WebAssembly <code>memory</code> instance.",null,null],[12,"store","","",3,null],[12,"vm_memory","","",3,null],[8,"ValueType","","Trait for a Value type. A Value type is a type that is …",null,null],[3,"WasmPtr","","",null,null],[12,"0","","",4,null],[11,"new","","",4,[[["u32",15]]]],[11,"offset","","",4,[[],["u32",15]]],[11,"deref","","",4,[[["memory",3]],[["option",4],["cell",3]]]],[11,"deref_mut","","",4,[[["memory",3]],[["option",4],["cell",3]]]],[11,"deref","","",4,[[["u32",15],["memory",3]],["option",4]]],[11,"deref_mut","","",4,[[["u32",15],["memory",3]],["option",4]]],[11,"get_utf8_str","","",4,[[["u32",15],["memory",3]],[["option",4],["str",15]]]],[11,"get_utf8_string","","",4,[[["u32",15],["memory",3]],[["string",3],["option",4]]]],[0,"signal","wasmer_emscripten","",null,null],[5,"_sigemptyset","wasmer_emscripten::signal","",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_sigaction","","",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_siginterrupt","","",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_sigaddset","","",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_sigsuspend","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_sigprocmask","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_signal","","",null,[[["u32",15],["emenv",3],["i32",15]],["i32",15]]],[0,"storage","wasmer_emscripten","",null,null],[5,"align_memory","wasmer_emscripten::storage","",null,[[["u32",15]],["u32",15]]],[5,"static_alloc","","",null,[[["u32",15],["u32",15]],["u32",15]]],[0,"syscalls","wasmer_emscripten","",null,null],[0,"unix","wasmer_emscripten::syscalls","",null,null],[17,"TCGETS","wasmer_emscripten::syscalls::unix","",null,null],[17,"TCSETSW","","",null,null],[17,"WASM_FIONBIO","","",null,null],[17,"WASM_FIOCLEX","","",null,null],[17,"WASM_TIOCSPGRP","","",null,null],[17,"WASM_TIOCGWINSZ","","",null,null],[17,"WASM_TCGETS","","",null,null],[17,"WASM_TCSETSW","","",null,null],[5,"translate_ioctl","","",null,[[["u32",15]],["c_ulong",6]]],[17,"SO_NOSIGPIPE","","",null,null],[5,"___syscall5","","open",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall9","","link",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall77","","getrusage",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall83","","symlink",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall85","","readlink",null,[[["c_int",6],["varargs",3],["emenv",3]],["i32",15]]],[5,"___syscall194","","ftruncate64",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall198","","lchown",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall205","","getgroups",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall212","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall219","","madvise",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall33","","access",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall34","","nice",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall39","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall41","","dup",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall200","","getgid32",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall201","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall202","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall207","","fchown",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall330","","dup3",null,[[["c_int",6],["varargs",3],["emenv",3]],["pid_t",6]]],[5,"___syscall54","","ioctl",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[17,"SOCK_NON_BLOCK","","",null,null],[17,"SOCK_CLOEXC","","",null,null],[5,"___syscall102","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"translate_socket_name_flag","","OSX and BSD have completely different values, we must …",null,[[["i32",15]],["i32",15]]],[5,"___syscall132","","getpgid",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[3,"EmPollFd","","",null,null],[12,"fd","","",5,null],[12,"events","","",5,null],[12,"revents","","",5,null],[5,"___syscall168","","poll",null,[[["varargs",3],["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall180","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall181","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall94","","fchmod",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall114","","wait4",null,[[["c_int",6],["varargs",3],["emenv",3]],["pid_t",6]]],[5,"___syscall118","","fsync",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall142","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall148","","fdatasync",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall57","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall122","","uname",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall196","","lstat64",null,[[["varargs",3],["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall199","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall220","","",null,[[["varargs",3],["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall221","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall324","","fallocate",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall1","wasmer_emscripten::syscalls","exit",null,[[["c_int",6],["varargs",3],["emenv",3]]]],[5,"___syscall3","","read",null,[[["varargs",3],["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall4","","write",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall6","","close",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall12","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall10","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall14","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall15","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall20","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall21","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall25","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall29","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall32","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall33","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall36","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall38","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["i32",15]]],[5,"___syscall40","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall42","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall51","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall52","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall53","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall60","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall63","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall64","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall66","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall75","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall91","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall96","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall97","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall110","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall121","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall125","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall133","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall144","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall147","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall150","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall151","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall152","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall153","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall163","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall183","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["i32",15]]],[5,"___syscall192","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall140","","lseek",null,[[["varargs",3],["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall145","","readv",null,[[["c_int",6],["varargs",3],["emenv",3]],["i32",15]]],[5,"___syscall146","","",null,[[["varargs",3],["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall191","","",null,[[["varargs",3],["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall193","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall195","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall197","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall209","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall211","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall218","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall268","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall269","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall272","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall295","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall296","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall297","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall298","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall300","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall301","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall302","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall303","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall304","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall305","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall306","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall307","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall308","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall320","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall331","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall333","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall334","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall337","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___syscall340","","",null,[[["c_int",6],["varargs",3],["emenv",3]],["c_int",6]]],[5,"___syscall345","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[0,"time","wasmer_emscripten","",null,null],[5,"_gettimeofday","wasmer_emscripten::time","emscripten: _gettimeofday",null,[[["c_int",6],["emenv",3]],["c_int",6]]],[5,"_clock_getres","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_clock_gettime","","emscripten: _clock_gettime",null,[[["c_int",6],["clockid_t",6],["emenv",3]],["c_int",6]]],[5,"_clock_settime","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"___clock_gettime","","emscripten: ___clock_gettime",null,[[["c_int",6],["clockid_t",6],["emenv",3]],["c_int",6]]],[5,"_clock","","emscripten: _clock",null,[[["emenv",3]],["c_int",6]]],[5,"_difftime","","emscripten: _difftime",null,[[["u32",15],["emenv",3]],["f64",15]]],[5,"_gmtime_r","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_mktime","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_gmtime","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[3,"guest_tm","","",null,null],[12,"tm_sec","","",6,null],[12,"tm_min","","",6,null],[12,"tm_hour","","",6,null],[12,"tm_mday","","",6,null],[12,"tm_mon","","",6,null],[12,"tm_year","","",6,null],[12,"tm_wday","","",6,null],[12,"tm_yday","","",6,null],[12,"tm_isdst","","",6,null],[12,"tm_gmtoff","","",6,null],[12,"tm_zone","","",6,null],[5,"_tvset","","emscripten: _tvset",null,[[["emenv",3]]]],[5,"fmt_time","","formats time as a C string",null,[[["u32",15],["emenv",3]]]],[5,"_asctime","","emscripten: _asctime",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"_asctime_r","","emscripten: _asctime_r",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"_localtime","","emscripten: _localtime",null,[[["u32",15],["emenv",3]],["c_int",6]]],[5,"_localtime_r","","emscripten: _localtime_r",null,[[["u32",15],["emenv",3]],["c_int",6]]],[5,"_time","","emscripten: _time",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_ctime_r","","",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"_ctime","","",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"_timegm","","emscripten: _timegm",null,[[["u32",15],["emenv",3]],["i32",15]]],[5,"_strftime","","emscripten: _strftime",null,[[["u32",15],["c_int",6],["emenv",3]],["i32",15]]],[5,"_strftime_l","","emscripten: _strftime_l",null,[[["u32",15],["c_int",6],["emenv",3]],["i32",15]]],[0,"ucontext","wasmer_emscripten","",null,null],[5,"_getcontext","wasmer_emscripten::ucontext","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_makecontext","","",null,[[["emenv",3],["i32",15]]]],[5,"_setcontext","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[5,"_swapcontext","","",null,[[["emenv",3],["i32",15]],["i32",15]]],[0,"unistd","wasmer_emscripten","",null,null],[5,"confstr","wasmer_emscripten::unistd","",null,[[["emenv",3],["i32",15]],["i32",15]]],[0,"utils","wasmer_emscripten","",null,null],[5,"is_emscripten_module","wasmer_emscripten::utils","We check if a provided module is an Emscripten generated …",null,[[["module",3]],["bool",15]]],[5,"get_emscripten_table_size","","",null,[[["module",3]],[["result",4],["string",3]]]],[5,"get_emscripten_memory_size","","",null,[[["module",3]],[["result",4],["string",3]]]],[5,"get_emscripten_metadata","","Reads values written by <code>-s EMIT_EMSCRIPTEN_METADATA=1</code> …",null,[[["module",3]],[["option",4],["string",3],["result",4]]]],[5,"write_to_buf","","",null,[[["u32",15],["emenv",3]],["u32",15]]],[5,"copy_cstr_into_wasm","","This function expects nullbyte to be appended.",null,[[["emenv",3]],["u32",15]]],[5,"allocate_on_stack","","",null,[[["u32",15],["emenv",3]]]],[5,"allocate_cstr_on_stack","","",null,[[["emenv",3],["str",15]]]],[5,"copy_terminated_array_of_cstrs","","",null,[[["emenv",3]],["u32",15]]],[3,"GuestStat","","",null,null],[12,"st_dev","","",7,null],[12,"__st_dev_padding","","",7,null],[12,"__st_ino_truncated","","",7,null],[12,"st_mode","","",7,null],[12,"st_nlink","","",7,null],[12,"st_uid","","",7,null],[12,"st_gid","","",7,null],[12,"st_rdev","","",7,null],[12,"__st_rdev_padding","","",7,null],[12,"st_size","","",7,null],[12,"st_blksize","","",7,null],[12,"st_blocks","","",7,null],[12,"st_atime","","",7,null],[12,"st_mtime","","",7,null],[12,"st_ctime","","",7,null],[12,"st_ino","","",7,null],[5,"copy_stat_into_wasm","","",null,[[["u32",15],["emenv",3],["stat",3]]]],[5,"read_string_from_wasm","","",null,[[["u32",15],["memory",3]],["string",3]]],[5,"get_cstr_path","","This function trys to find an entry in mapdir translating …",null,[[["emenv",3]],[["cstring",3],["option",4]]]],[5,"get_current_directory","","gets the current directory handles mapdir logic",null,[[["emenv",3]],[["pathbuf",3],["option",4]]]],[0,"varargs","wasmer_emscripten","",null,null],[3,"VarArgs","wasmer_emscripten::varargs","",null,null],[12,"pointer","","",8,null],[11,"get","","",8,[[["emenv",3]],["sized",8]]],[11,"get_str","","",8,[[["emenv",3]]]],[5,"align_memory","wasmer_emscripten","",null,[[["u32",15]],["u32",15]]],[5,"static_alloc","","",null,[[["u32",15],["u32",15]],["u32",15]]],[5,"allocate_cstr_on_stack","","",null,[[["emenv",3],["str",15]]]],[5,"allocate_on_stack","","",null,[[["u32",15],["emenv",3]]]],[5,"get_emscripten_memory_size","","",null,[[["module",3]],[["result",4],["string",3]]]],[5,"get_emscripten_metadata","","Reads values written by <code>-s EMIT_EMSCRIPTEN_METADATA=1</code> …",null,[[["module",3]],[["option",4],["string",3],["result",4]]]],[5,"get_emscripten_table_size","","",null,[[["module",3]],[["result",4],["string",3]]]],[5,"is_emscripten_module","","We check if a provided module is an Emscripten generated …",null,[[["module",3]],["bool",15]]],[3,"EmEnv","","The environment provided to the Emscripten imports.",null,null],[12,"memory","","",9,null],[12,"data","","",9,null],[11,"new","","",9,[[["emscriptenglobalsdata",3],["hashmap",3],["pathbuf",3],["string",3]]]],[11,"set_memory","","",9,[[["memory",3]]]],[11,"memory","","Get a reference to the memory",9,[[["u32",15]],["memory",3]]],[3,"LibcDirWrapper","","",null,null],[12,"0","","",10,null],[17,"TOTAL_STACK","","",null,null],[17,"STATIC_BUMP","","",null,null],[3,"OLD_ABORT_ON_CANNOT_GROW_MEMORY_SIG","","",null,null],[12,"__private_field","","",11,null],[17,"GLOBAL_BASE","","",null,null],[17,"STATIC_BASE","","",null,null],[3,"EmscriptenData","","",null,null],[12,"globals","","",12,null],[12,"malloc","","",12,null],[12,"free","","",12,null],[12,"memalign","","",12,null],[12,"memset","","",12,null],[12,"stack_alloc","","",12,null],[12,"jumps","","",12,null],[12,"opened_dirs","","",12,null],[12,"dyn_call_i","","",12,null],[12,"dyn_call_ii","","",12,null],[12,"dyn_call_iii","","",12,null],[12,"dyn_call_iiii","","",12,null],[12,"dyn_call_iifi","","",12,null],[12,"dyn_call_v","","",12,null],[12,"dyn_call_vi","","",12,null],[12,"dyn_call_vii","","",12,null],[12,"dyn_call_viii","","",12,null],[12,"dyn_call_viiii","","",12,null],[12,"dyn_call_dii","","",12,null],[12,"dyn_call_diiii","","",12,null],[12,"dyn_call_iiiii","","",12,null],[12,"dyn_call_iiiiii","","",12,null],[12,"dyn_call_iiiiiii","","",12,null],[12,"dyn_call_iiiiiiii","","",12,null],[12,"dyn_call_iiiiiiiii","","",12,null],[12,"dyn_call_iiiiiiiiii","","",12,null],[12,"dyn_call_iiiiiiiiiii","","",12,null],[12,"dyn_call_vd","","",12,null],[12,"dyn_call_viiiii","","",12,null],[12,"dyn_call_viiiiii","","",12,null],[12,"dyn_call_viiiiiii","","",12,null],[12,"dyn_call_viiiiiiii","","",12,null],[12,"dyn_call_viiiiiiiii","","",12,null],[12,"dyn_call_viiiiiiiiii","","",12,null],[12,"dyn_call_iij","","",12,null],[12,"dyn_call_iji","","",12,null],[12,"dyn_call_iiji","","",12,null],[12,"dyn_call_iiijj","","",12,null],[12,"dyn_call_j","","",12,null],[12,"dyn_call_ji","","",12,null],[12,"dyn_call_jii","","",12,null],[12,"dyn_call_jij","","",12,null],[12,"dyn_call_jjj","","",12,null],[12,"dyn_call_viiij","","",12,null],[12,"dyn_call_viiijiiii","","",12,null],[12,"dyn_call_viiijiiiiii","","",12,null],[12,"dyn_call_viij","","",12,null],[12,"dyn_call_viiji","","",12,null],[12,"dyn_call_viijiii","","",12,null],[12,"dyn_call_viijj","","",12,null],[12,"dyn_call_vj","","",12,null],[12,"dyn_call_vjji","","",12,null],[12,"dyn_call_vij","","",12,null],[12,"dyn_call_viji","","",12,null],[12,"dyn_call_vijiii","","",12,null],[12,"dyn_call_vijj","","",12,null],[12,"dyn_call_viid","","",12,null],[12,"dyn_call_vidd","","",12,null],[12,"dyn_call_viidii","","",12,null],[12,"dyn_call_viidddddddd","","",12,null],[12,"temp_ret_0","","",12,null],[12,"stack_save","","",12,null],[12,"stack_restore","","",12,null],[12,"set_threw","","",12,null],[12,"mapped_dirs","","",12,null],[11,"malloc_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"malloc_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"free_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"free_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"memalign_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"memalign_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"memset_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"memset_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"stack_alloc_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"stack_alloc_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_i_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_i_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_ii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_ii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iifi_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iifi_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_v_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_v_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_vi_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_vi_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_vii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_vii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_dii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_dii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_diiii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_diiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiiii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiiiii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiiiii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiiiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiiiiiiiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiiiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_vd_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_vd_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiiiiii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiiiiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiiiiiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiiiiiiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiiiiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iij_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iji_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiji_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_iiji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_iiijj_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_iiijj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_j_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_j_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_ji_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_ji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_jii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_jii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_jij_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_jij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_jjj_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_jjj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiij_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiijiiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiijiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiijiiiiii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viiijiiiiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viij_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viiji_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viiji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viijiii_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viijiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viijj_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viijj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_vj_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_vj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_vjji_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_vjji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_vij_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_vij_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viji_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"dyn_call_viji_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_vijiii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_vijiii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_vijj_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_vijj_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viid_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viid_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_vidd_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_vidd_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viidii_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viidii_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"dyn_call_viidddddddd_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"dyn_call_viidddddddd_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"stack_save_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"stack_save_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"stack_restore_ref","","Get access to the underlying data.",12,[[],[["nativefunc",3],["option",4]]]],[11,"stack_restore_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"set_threw_ref","","Get access to the underlying data.",12,[[],[["option",4],["nativefunc",3]]]],[11,"set_threw_ref_unchecked","","Gets the item without checking if it\'s been initialized.",12,[[],["nativefunc",3]]],[11,"new","","",12,[[["emscriptenglobalsdata",3],["hashmap",3],["pathbuf",3],["string",3]],["emscriptendata",3]]],[5,"set_up_emscripten","","Call the global constructors for C++ and set up the …",null,[[["instance",3]],[["runtimeerror",3],["result",4]]]],[5,"emscripten_call_main","","Call the main function in emscripten, assumes that the …",null,[[["instance",3],["emenv",3],["str",15]],[["runtimeerror",3],["result",4]]]],[5,"run_emscripten_instance","","Top level function to execute emscripten",null,[[["str",15],["string",3],["option",4],["vec",3],["instance",3],["emscriptenglobals",3],["emenv",3]],[["runtimeerror",3],["result",4]]]],[5,"store_module_arguments","","",null,[[["vec",3],["emenv",3],["str",15]]]],[5,"emscripten_set_up_memory","","",null,[[["emscriptenglobalsdata",3],["memory",3]],[["result",4],["string",3]]]],[3,"EmscriptenGlobalsData","","",null,null],[12,"abort","","",13,null],[12,"stacktop","","",13,null],[12,"stack_max","","",13,null],[12,"dynamictop_ptr","","",13,null],[12,"dynamic_base","","",13,null],[12,"memory_base","","",13,null],[12,"table_base","","",13,null],[12,"temp_double_ptr","","",13,null],[12,"use_old_abort_on_cannot_grow_memory","","",13,null],[3,"EmscriptenGlobals","","",null,null],[12,"data","","",14,null],[12,"memory","","",14,null],[12,"table","","",14,null],[12,"memory_min","","",14,null],[12,"memory_max","","",14,null],[12,"null_function_names","","",14,null],[11,"new","","",14,[[["store",3],["module",3]],[["result",4],["string",3]]]],[5,"generate_emscripten_env","","",null,[[["store",3],["emscriptenglobals",3],["emenv",3]],["importobject",3]]],[5,"nullfunc","","",null,[[["u32",15],["emenv",3]]]],[17,"VERSION","","The current version of this crate",null,null],[11,"from","wasmer_emscripten::env","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","wasmer_emscripten::jmp","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"pointer_metadata","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","wasmer_emscripten::ptr","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"pointer_metadata","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from_array","","",4,[[]]],[11,"from_slice","","",4,[[],[["tryfromsliceerror",3],["result",4]]]],[11,"into_array","","",4,[[]]],[11,"empty_array","","",4,[[]]],[11,"from_c_struct","","",4,[[]]],[11,"into_c_struct","","",4,[[]]],[11,"wasm_types","","",4,[[]]],[11,"equivalent","","",4,[[],["bool",15]]],[11,"pointer_metadata","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","wasmer_emscripten::syscalls::unix","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","wasmer_emscripten::time","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","wasmer_emscripten::utils","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","wasmer_emscripten::varargs","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_array","","",8,[[]]],[11,"from_slice","","",8,[[],[["tryfromsliceerror",3],["result",4]]]],[11,"into_array","","",8,[[]]],[11,"empty_array","","",8,[[]]],[11,"from_c_struct","","",8,[[]]],[11,"into_c_struct","","",8,[[]]],[11,"wasm_types","","",8,[[]]],[11,"pointer_metadata","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","wasmer_emscripten","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"pointer_metadata","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"pointer_metadata","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"pointer_metadata","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"fmt","wasmer_emscripten::ptr","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"to_export","","",3,[[],["export",4]]],[11,"get_self_from_extern","","",3,[[["extern",4]],[["exporterror",4],["memory",3],["result",4]]]],[11,"clone","","",3,[[],["memory",3]]],[11,"size_of_val","","",3,[[["memoryusagetracker",8]],["usize",15]]],[11,"clone","wasmer_emscripten::env","",0,[[],["emaddrinfo",3]]],[11,"clone","","",1,[[],["emsockaddr",3]]],[11,"clone","wasmer_emscripten::jmp","",15,[[],["longjumpret",3]]],[11,"clone","wasmer_emscripten::ptr","",4,[[]]],[11,"clone","wasmer_emscripten::syscalls::unix","",5,[[],["empollfd",3]]],[11,"clone","wasmer_emscripten::varargs","",8,[[],["varargs",3]]],[11,"clone","wasmer_emscripten","",9,[[],["emenv",3]]],[11,"clone","","",10,[[],["libcdirwrapper",3]]],[11,"clone","","",12,[[],["emscriptendata",3]]],[11,"clone","","",13,[[],["emscriptenglobalsdata",3]]],[11,"default","","",12,[[],["emscriptendata",3]]],[11,"default","","",13,[[],["emscriptenglobalsdata",3]]],[11,"eq","wasmer_emscripten::ptr","",4,[[],["bool",15]]],[11,"deref","wasmer_emscripten","",10,[[]]],[11,"deref","","",11,[[],["functiontype",3]]],[11,"fmt","wasmer_emscripten::env","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten::jmp","",15,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten::ptr","",4,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten::syscalls::unix","",5,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_emscripten::jmp","",15,[[["formatter",3]],["result",6]]],[11,"initialize","wasmer_emscripten","",11,[[]]],[11,"init_with_instance","","",9,[[["instance",3]],[["result",4],["hostenviniterror",4]]]],[11,"init_with_instance","","",12,[[["instance",3]],[["result",4],["hostenviniterror",4]]]],[11,"to_native","wasmer_emscripten::ptr","",4,[[]]],[11,"from_native","","",4,[[]]],[11,"to_native","wasmer_emscripten::varargs","",8,[[]]],[11,"from_native","","",8,[[]]],[11,"new","wasmer_emscripten::ptr","Creates a new host <code>Memory</code> from the provided [<code>MemoryType</code>].",3,[[["store",3],["memorytype",3]],[["memoryerror",4],["result",4],["memory",3]]]],[11,"ty","","Returns the [<code>MemoryType</code>] of the <code>Memory</code>.",3,[[],["memorytype",3]]],[11,"store","","Returns the [<code>Store</code>] where the <code>Memory</code> belongs.",3,[[],["store",3]]],[11,"data_unchecked","","Retrieve a slice of the memory contents.",3,[[]]],[11,"data_unchecked_mut","","Retrieve a mutable slice of the memory contents.",3,[[]]],[11,"data_ptr","","Returns the pointer to the raw bytes of the <code>Memory</code>.",3,[[]]],[11,"data_size","","Returns the size (in bytes) of the <code>Memory</code>.",3,[[],["u64",15]]],[11,"size","","Returns the size (in [<code>Pages</code>]) of the <code>Memory</code>.",3,[[],["pages",3]]],[11,"grow","","Grow memory by the specified amount of WebAssembly [<code>Pages</code>]…",3,[[],[["result",4],["memoryerror",4],["pages",3]]]],[11,"view","","Return a \\\"view\\\" of the currently accessible memory. By …",3,[[],[["nonatomically",3],["memoryview",3]]]],[11,"same","","Returns whether or not these two memories refer to the …",3,[[["memory",3]],["bool",15]]]],"p":[[3,"EmAddrInfo"],[3,"EmSockAddr"],[8,"FromToNativeWasmType"],[3,"Memory"],[3,"WasmPtr"],[3,"EmPollFd"],[3,"guest_tm"],[3,"GuestStat"],[3,"VarArgs"],[3,"EmEnv"],[3,"LibcDirWrapper"],[3,"OLD_ABORT_ON_CANNOT_GROW_MEMORY_SIG"],[3,"EmscriptenData"],[3,"EmscriptenGlobalsData"],[3,"EmscriptenGlobals"],[3,"LongJumpRet"],[3,"Array"]]},\
"wasmer_engine":{"doc":"Generic Engine abstraction for Wasmer Engines.","i":[[0,"artifact","wasmer_engine","",null,null],[8,"Artifact","wasmer_engine::artifact","An <code>Artifact</code> is the product that the <code>Engine</code> implementation …",null,null],[10,"module","","Return a reference-counted pointer to the module",0,[[],[["arc",3],["moduleinfo",3]]]],[10,"module_ref","","Return a pointer to a module.",0,[[],["moduleinfo",3]]],[10,"module_mut","","Gets a mutable reference to the info.",0,[[],[["moduleinfo",3],["option",4]]]],[10,"register_frame_info","","Register thie <code>Artifact</code> stack frame information into the …",0,[[]]],[10,"features","","Returns the features for this Artifact",0,[[],["features",3]]],[10,"memory_styles","","Returns the memory styles associated with this <code>Artifact</code>.",0,[[],["primarymap",3]]],[10,"table_styles","","Returns the table plans associated with this <code>Artifact</code>.",0,[[],["primarymap",3]]],[10,"data_initializers","","Returns data initializers to pass to …",0,[[]]],[10,"finished_functions","","Returns the functions allocated in memory or this <code>Artifact</code>…",0,[[],["boxedslice",3]]],[10,"finished_function_call_trampolines","","Returns the function call trampolines allocated in memory …",0,[[],["boxedslice",3]]],[10,"finished_dynamic_function_trampolines","","Returns the dynamic function trampolines allocated in …",0,[[],["boxedslice",3]]],[10,"signatures","","Returns the associated VM signatures for this <code>Artifact</code>.",0,[[],["boxedslice",3]]],[10,"func_data_registry","","Get the func data registry",0,[[],["funcdataregistry",3]]],[10,"serialize","","Serializes an artifact into bytes",0,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"serialize_to_file","","Serializes an artifact into a file path",0,[[["path",3]],[["serializeerror",4],["result",4]]]],[11,"preinstantiate","","Do preinstantiation logic that is executed before …",0,[[],[["instantiationerror",4],["result",4]]]],[11,"instantiate","","Crate an <code>Instance</code> from this <code>Artifact</code>.",0,[[["resolver",8],["tunables",8],["any",8],["box",3]],[["result",4],["instantiationerror",4],["instancehandle",3]]]],[11,"finish_instantiation","","Finishes the instantiation of a just created …",0,[[["instancehandle",3]],[["instantiationerror",4],["result",4]]]],[8,"Upcastable","","Trait needed to get downcasting from <code>WasiFile</code> to work.",null,null],[10,"upcast_any_ref","","",1,[[],["any",8]]],[10,"upcast_any_mut","","",1,[[],["any",8]]],[10,"upcast_any_box","","",1,[[["box",3]],[["any",8],["box",3]]]],[11,"downcast_ref","","Try to downcast the artifact into a given type.",0,[[],["option",4]]],[11,"downcast_mut","","Try to downcast the artifact into a given type mutably.",0,[[],["option",4]]],[0,"engine","wasmer_engine","JIT compilation.",null,null],[8,"Engine","wasmer_engine::engine","A unimplemented Wasmer <code>Engine</code>.",null,null],[10,"target","","Gets the target",2,[[],["target",3]]],[10,"register_signature","","Register a signature",2,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[10,"register_function_metadata","","Register a function\'s data.",2,[[["vmcallercheckedanyfunc",3]],["vmfuncref",3]]],[10,"lookup_signature","","Lookup a signature",2,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[10,"validate","","Validates a WebAssembly module",2,[[],[["compileerror",4],["result",4]]]],[10,"compile","","Compile a WebAssembly binary",2,[[["tunables",8]],[["result",4],["arc",3],["compileerror",4]]]],[10,"deserialize","","Deserializes a WebAssembly module",2,[[],[["deserializeerror",4],["result",4],["arc",3]]]],[11,"deserialize_from_file","","Deserializes a WebAssembly module from a path",2,[[["path",3]],[["deserializeerror",4],["result",4],["arc",3]]]],[10,"id","","A unique identifier for this object.",2,[[],["engineid",3]]],[10,"cloned","","Clone the engine",2,[[],[["arc",3],["engine",8]]]],[3,"EngineId","","A unique identifier for an Engine.",null,null],[12,"id","","",3,null],[11,"id","","Format this identifier as a string.",3,[[],["string",3]]],[0,"error","wasmer_engine","The WebAssembly possible errors",null,null],[4,"SerializeError","wasmer_engine::error","The Serialize error can occur when serializing a compiled …",null,null],[13,"Io","","An IO error",4,null],[13,"Generic","","A generic serialization error",4,null],[4,"DeserializeError","","The Deserialize error can occur when loading a compiled …",null,null],[13,"Io","","An IO error",5,null],[13,"Generic","","A generic deserialization error",5,null],[13,"Incompatible","","Incompatible serialized binary",5,null],[13,"CorruptedBinary","","The provided binary is corrupted",5,null],[13,"Compiler","","The binary was valid, but we got an error when trying to …",5,null],[4,"ImportError","","An ImportError.",null,null],[13,"IncompatibleType","","Incompatible Import Type. This error occurs when the …",6,null],[13,"UnknownImport","","Unknown Import. This error occurs when an import was …",6,null],[4,"LinkError","","The WebAssembly.LinkError object indicates an error during…",null,null],[13,"Import","","An error occurred when checking the import types.",7,null],[13,"Trap","","A trap ocurred during linking.",7,null],[13,"Resource","","Insufficient resources available for linking.",7,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Link","","A linking ocurred during instantiation.",8,null],[13,"Start","","A runtime error occured while invoking the start function",8,null],[0,"export","wasmer_engine","",null,null],[4,"Export","wasmer_engine::export","The value of an export passed from one instance to …",null,null],[13,"Function","","A function export value.",9,null],[13,"Table","","A table export value.",9,null],[13,"Memory","","A memory export value.",9,null],[13,"Global","","A global export value.",9,null],[3,"ExportFunctionMetadata","","Extra metadata about <code>ExportFunction</code>s.",null,null],[12,"host_env","","This field is stored here to be accessible by <code>Drop</code>.",10,null],[12,"import_init_function_ptr","","Function pointer to …",10,null],[12,"host_env_clone_fn","","A function analogous to <code>Clone::clone</code> that returns a …",10,null],[12,"host_env_drop_fn","","The destructor to free the host environment.",10,null],[11,"new","","Create an <code>ExportFunctionMetadata</code> type with information …",10,[[["option",4],["importinitializerfuncptr",6]]]],[3,"ExportFunction","","A function export value with an extra function pointer to …",null,null],[12,"vm_function","","The VM function, containing most of the data.",11,null],[12,"metadata","","Contains functions necessary to create and initialize …",11,null],[0,"resolver","wasmer_engine","Define the <code>Resolver</code> trait, allowing custom resolution for …",null,null],[8,"Resolver","wasmer_engine::resolver","Import resolver connects imports with available exported …",null,null],[10,"resolve","","Resolves an import a WebAssembly module to an export it\'s …",12,[[["u32",15],["str",15]],[["export",4],["option",4]]]],[8,"NamedResolver","","Import resolver connects imports with available exported …",null,null],[10,"resolve_by_name","","Resolves an import a WebAssembly module to an export it\'s …",13,[[["str",15]],[["export",4],["option",4]]]],[3,"NullResolver","","<code>Resolver</code> implementation that always resolves to <code>None</code>. …",null,null],[5,"get_extern_from_import","","Get an <code>ExternType</code> given a import index.",null,[[["importindex",4],["moduleinfo",3]],["externtype",4]]],[5,"get_extern_from_export","","Get an <code>ExternType</code> given an export (and Engine signatures …",null,[[["export",4],["moduleinfo",3]],["externtype",4]]],[5,"resolve_imports","","This function allows to match all imports of a <code>ModuleInfo</code> …",null,[[["boxedslice",3],["primarymap",3],["primarymap",3],["resolver",8],["moduleinfo",3]],[["result",4],["imports",3],["linkerror",4]]]],[3,"NamedResolverChain","","A [<code>Resolver</code>] that links two resolvers together in a chain.",null,null],[12,"a","","",14,null],[12,"b","","",14,null],[8,"ChainableNamedResolver","","A trait for chaining resolvers together.",null,null],[11,"chain_front","","Chain a resolver in front of the current resolver.",15,[[],["namedresolverchain",3]]],[11,"chain_back","","Chain a resolver behind the current resolver.",15,[[],["namedresolverchain",3]]],[0,"trap","wasmer_engine","",null,null],[0,"error","wasmer_engine::trap","",null,null],[3,"RuntimeError","wasmer_engine::trap::error","A struct representing an aborted instruction execution, …",null,null],[12,"inner","","",16,null],[4,"RuntimeErrorSource","","The source of the <code>RuntimeError</code>.",null,null],[13,"Generic","","",17,null],[13,"User","","",17,null],[13,"Trap","","",17,null],[3,"RuntimeErrorInner","","",null,null],[12,"source","","The source error (this can be a custom user <code>Error</code> or a […",18,null],[12,"wasm_trace","","The reconstructed Wasm trace (from the native trace and …",18,null],[12,"native_trace","","The native backtrace",18,null],[5,"_assert_trap_is_sync_and_send","","",null,[[["trap",4]]]],[11,"new","","Creates a new generic <code>RuntimeError</code> with the given <code>message</code>.",16,[[["into",8],["string",3]]]],[11,"from_trap","","Create a new RuntimeError from a Trap.",16,[[["trap",4]]]],[11,"raise","","Raises a custom user Error",16,[[["error",8],["box",3]]]],[11,"new_with_trace","","",16,[[["usize",15],["backtrace",3],["globalframeinfo",3],["option",4],["runtimeerrorsource",4]]]],[11,"message","","Returns a reference the <code>message</code> stored in <code>Trap</code>.",16,[[],["string",3]]],[11,"trace","","Returns a list of function frames in WebAssembly code …",16,[[]]],[11,"downcast","","Attempts to downcast the <code>RuntimeError</code> to a concrete type.",16,[[],[["result",4],["error",8]]]],[11,"to_trap","","Returns trap code, if it\'s a Trap",16,[[],[["option",4],["trapcode",4]]]],[11,"is","","Returns true if the <code>RuntimeError</code> is the same as T",16,[[],["bool",15]]],[0,"frame_info","wasmer_engine::trap","This module is used for having backtraces in the Wasm …",null,null],[3,"FRAME_INFO","wasmer_engine::trap::frame_info","This is a global cache of backtrace frame information for …",null,null],[12,"__private_field","","",19,null],[3,"GlobalFrameInfo","","",null,null],[12,"ranges","","An internal map that keeps track of backtrace frame …",20,null],[3,"GlobalFrameInfoRegistration","","An RAII structure used to unregister a module\'s frame …",null,null],[12,"key","","The key that will be removed from the global <code>ranges</code> map …",21,null],[3,"ModuleInfoFrameInfo","","",null,null],[12,"start","","",22,null],[12,"functions","","",22,null],[12,"module","","",22,null],[12,"frame_infos","","",22,null],[11,"function_debug_info","","",22,[[["localfunctionindex",3]],["compiledfunctionframeinfo",3]]],[11,"function_info","","Gets a function given a pc",22,[[["usize",15]],[["option",4],["functioninfo",3]]]],[3,"FunctionInfo","","",null,null],[12,"start","","",23,null],[12,"local_index","","",23,null],[11,"lookup_frame_info","","Fetches frame information about a program counter in a …",20,[[["usize",15]],[["frameinfo",3],["option",4]]]],[11,"lookup_trap_info","","Fetches trap information about a program counter in a …",20,[[["usize",15]],[["option",4],["trapinformation",3]]]],[11,"module_info","","Gets a module given a pc",20,[[["usize",15]],[["option",4],["moduleinfoframeinfo",3]]]],[3,"FunctionExtent","","Represents a continuous region of executable memory …",null,null],[12,"ptr","","Entry point for normal entry of the function. All …",24,null],[12,"length","","Length in bytes.",24,null],[5,"register","","Registers a new compiled module\'s frame information.",null,[[["arc",3],["moduleinfo",3],["compiledfunctionframeinfo",3],["primarymap",3],["boxedslice",3],["localfunctionindex",3]],[["globalframeinforegistration",3],["option",4]]]],[3,"FrameInfo","","Description of a frame in a backtrace for a …",null,null],[12,"module_name","","",25,null],[12,"func_index","","",25,null],[12,"function_name","","",25,null],[12,"func_start","","",25,null],[12,"instr","","",25,null],[11,"func_index","","Returns the WebAssembly function index for this frame.",25,[[],["u32",15]]],[11,"module_name","","Returns the identifer of the module that this frame is …",25,[[],["str",15]]],[11,"function_name","","Returns a descriptive name of the function for this …",25,[[],[["option",4],["str",15]]]],[11,"module_offset","","Returns the offset within the original wasm module this …",25,[[],["usize",15]]],[11,"func_offset","","Returns the offset from the original wasm module\'s …",25,[[],["usize",15]]],[0,"tunables","wasmer_engine","",null,null],[8,"Tunables","wasmer_engine::tunables","An engine delegates the creation of memories, tables, and …",null,null],[10,"memory_style","","Construct a <code>MemoryStyle</code> for the provided <code>MemoryType</code>",26,[[["memorytype",3]],["memorystyle",4]]],[10,"table_style","","Construct a <code>TableStyle</code> for the provided <code>TableType</code>",26,[[["tabletype",3]],["tablestyle",4]]],[10,"create_host_memory","","Create a memory owned by the host given a [<code>MemoryType</code>] …",26,[[["memorystyle",4],["memorytype",3]],[["arc",3],["memoryerror",4],["result",4]]]],[10,"create_vm_memory","","Create a memory owned by the VM given a [<code>MemoryType</code>] and …",26,[[["vmmemorydefinition",3],["memorystyle",4],["memorytype",3],["nonnull",3]],[["arc",3],["memoryerror",4],["result",4]]]],[10,"create_host_table","","Create a table owned by the host given a [<code>TableType</code>] and …",26,[[["tabletype",3],["tablestyle",4]],[["string",3],["result",4],["arc",3]]]],[10,"create_vm_table","","Create a table owned by the VM given a [<code>TableType</code>] and a […",26,[[["tablestyle",4],["tabletype",3],["vmtabledefinition",3],["nonnull",3]],[["string",3],["result",4],["arc",3]]]],[11,"create_global","","Create a global with an unset value.",26,[[["globaltype",3]],[["string",3],["result",4],["arc",3]]]],[11,"create_memories","","Allocate memory for just the memories of the current …",26,[[["moduleinfo",3],["primarymap",3]],[["result",4],["primarymap",3],["linkerror",4]]]],[11,"create_tables","","Allocate memory for just the tables of the current module.",26,[[["primarymap",3],["moduleinfo",3]],[["result",4],["primarymap",3],["linkerror",4]]]],[11,"create_globals","","Allocate memory for just the globals of the current …",26,[[["moduleinfo",3]],[["result",4],["primarymap",3],["linkerror",4]]]],[8,"Artifact","wasmer_engine","An <code>Artifact</code> is the product that the <code>Engine</code> implementation …",null,null],[10,"module","","Return a reference-counted pointer to the module",0,[[],[["arc",3],["moduleinfo",3]]]],[10,"module_ref","","Return a pointer to a module.",0,[[],["moduleinfo",3]]],[10,"module_mut","","Gets a mutable reference to the info.",0,[[],[["moduleinfo",3],["option",4]]]],[10,"register_frame_info","","Register thie <code>Artifact</code> stack frame information into the …",0,[[]]],[10,"features","","Returns the features for this Artifact",0,[[],["features",3]]],[10,"memory_styles","","Returns the memory styles associated with this <code>Artifact</code>.",0,[[],["primarymap",3]]],[10,"table_styles","","Returns the table plans associated with this <code>Artifact</code>.",0,[[],["primarymap",3]]],[10,"data_initializers","","Returns data initializers to pass to …",0,[[]]],[10,"finished_functions","","Returns the functions allocated in memory or this <code>Artifact</code>…",0,[[],["boxedslice",3]]],[10,"finished_function_call_trampolines","","Returns the function call trampolines allocated in memory …",0,[[],["boxedslice",3]]],[10,"finished_dynamic_function_trampolines","","Returns the dynamic function trampolines allocated in …",0,[[],["boxedslice",3]]],[10,"signatures","","Returns the associated VM signatures for this <code>Artifact</code>.",0,[[],["boxedslice",3]]],[10,"func_data_registry","","Get the func data registry",0,[[],["funcdataregistry",3]]],[10,"serialize","","Serializes an artifact into bytes",0,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"serialize_to_file","wasmer_engine::artifact","Serializes an artifact into a file path",0,[[["path",3]],[["serializeerror",4],["result",4]]]],[11,"preinstantiate","","Do preinstantiation logic that is executed before …",0,[[],[["instantiationerror",4],["result",4]]]],[11,"instantiate","","Crate an <code>Instance</code> from this <code>Artifact</code>.",0,[[["resolver",8],["tunables",8],["any",8],["box",3]],[["result",4],["instantiationerror",4],["instancehandle",3]]]],[11,"finish_instantiation","","Finishes the instantiation of a just created …",0,[[["instancehandle",3]],[["instantiationerror",4],["result",4]]]],[8,"Engine","wasmer_engine","A unimplemented Wasmer <code>Engine</code>.",null,null],[10,"target","","Gets the target",2,[[],["target",3]]],[10,"register_signature","","Register a signature",2,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[10,"register_function_metadata","","Register a function\'s data.",2,[[["vmcallercheckedanyfunc",3]],["vmfuncref",3]]],[10,"lookup_signature","","Lookup a signature",2,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[10,"validate","","Validates a WebAssembly module",2,[[],[["compileerror",4],["result",4]]]],[10,"compile","","Compile a WebAssembly binary",2,[[["tunables",8]],[["result",4],["arc",3],["compileerror",4]]]],[10,"deserialize","","Deserializes a WebAssembly module",2,[[],[["deserializeerror",4],["result",4],["arc",3]]]],[11,"deserialize_from_file","wasmer_engine::engine","Deserializes a WebAssembly module from a path",2,[[["path",3]],[["deserializeerror",4],["result",4],["arc",3]]]],[10,"id","wasmer_engine","A unique identifier for this object.",2,[[],["engineid",3]]],[10,"cloned","","Clone the engine",2,[[],[["arc",3],["engine",8]]]],[3,"EngineId","","A unique identifier for an Engine.",null,null],[12,"id","","",3,null],[4,"DeserializeError","","The Deserialize error can occur when loading a compiled …",null,null],[13,"Io","","An IO error",5,null],[13,"Generic","","A generic deserialization error",5,null],[13,"Incompatible","","Incompatible serialized binary",5,null],[13,"CorruptedBinary","","The provided binary is corrupted",5,null],[13,"Compiler","","The binary was valid, but we got an error when trying to …",5,null],[4,"ImportError","","An ImportError.",null,null],[13,"IncompatibleType","","Incompatible Import Type. This error occurs when the …",6,null],[13,"UnknownImport","","Unknown Import. This error occurs when an import was …",6,null],[4,"InstantiationError","","An error while instantiating a module.",null,null],[13,"Link","","A linking ocurred during instantiation.",8,null],[13,"Start","","A runtime error occured while invoking the start function",8,null],[4,"LinkError","","The WebAssembly.LinkError object indicates an error during…",null,null],[13,"Import","","An error occurred when checking the import types.",7,null],[13,"Trap","","A trap ocurred during linking.",7,null],[13,"Resource","","Insufficient resources available for linking.",7,null],[4,"SerializeError","","The Serialize error can occur when serializing a compiled …",null,null],[13,"Io","","An IO error",4,null],[13,"Generic","","A generic serialization error",4,null],[4,"Export","","The value of an export passed from one instance to …",null,null],[13,"Function","","A function export value.",9,null],[13,"Table","","A table export value.",9,null],[13,"Memory","","A memory export value.",9,null],[13,"Global","","A global export value.",9,null],[3,"ExportFunction","","A function export value with an extra function pointer to …",null,null],[12,"vm_function","","The VM function, containing most of the data.",11,null],[12,"metadata","","Contains functions necessary to create and initialize …",11,null],[3,"ExportFunctionMetadata","","Extra metadata about <code>ExportFunction</code>s.",null,null],[12,"host_env","","This field is stored here to be accessible by <code>Drop</code>.",10,null],[12,"import_init_function_ptr","","Function pointer to …",10,null],[12,"host_env_clone_fn","","A function analogous to <code>Clone::clone</code> that returns a …",10,null],[12,"host_env_drop_fn","","The destructor to free the host environment.",10,null],[5,"resolve_imports","","This function allows to match all imports of a <code>ModuleInfo</code> …",null,[[["boxedslice",3],["primarymap",3],["primarymap",3],["resolver",8],["moduleinfo",3]],[["result",4],["imports",3],["linkerror",4]]]],[8,"ChainableNamedResolver","","A trait for chaining resolvers together.",null,null],[11,"chain_front","wasmer_engine::resolver","Chain a resolver in front of the current resolver.",15,[[],["namedresolverchain",3]]],[11,"chain_back","","Chain a resolver behind the current resolver.",15,[[],["namedresolverchain",3]]],[8,"NamedResolver","wasmer_engine","Import resolver connects imports with available exported …",null,null],[10,"resolve_by_name","","Resolves an import a WebAssembly module to an export it\'s …",13,[[["str",15]],[["export",4],["option",4]]]],[3,"NamedResolverChain","","A [<code>Resolver</code>] that links two resolvers together in a chain.",null,null],[12,"a","","",14,null],[12,"b","","",14,null],[3,"NullResolver","","<code>Resolver</code> implementation that always resolves to <code>None</code>. …",null,null],[8,"Resolver","","Import resolver connects imports with available exported …",null,null],[10,"resolve","","Resolves an import a WebAssembly module to an export it\'s …",12,[[["u32",15],["str",15]],[["export",4],["option",4]]]],[3,"RuntimeError","","A struct representing an aborted instruction execution, …",null,null],[12,"inner","","",16,null],[5,"register_frame_info","","Registers a new compiled module\'s frame information.",null,[[["arc",3],["moduleinfo",3],["compiledfunctionframeinfo",3],["primarymap",3],["boxedslice",3],["localfunctionindex",3]],[["globalframeinforegistration",3],["option",4]]]],[3,"FrameInfo","","Description of a frame in a backtrace for a …",null,null],[12,"module_name","","",25,null],[12,"func_index","","",25,null],[12,"function_name","","",25,null],[12,"func_start","","",25,null],[12,"instr","","",25,null],[3,"FunctionExtent","","Represents a continuous region of executable memory …",null,null],[12,"ptr","","Entry point for normal entry of the function. All …",24,null],[12,"length","","Length in bytes.",24,null],[3,"GlobalFrameInfoRegistration","","An RAII structure used to unregister a module\'s frame …",null,null],[12,"key","","The key that will be removed from the global <code>ranges</code> map …",21,null],[3,"FRAME_INFO","","This is a global cache of backtrace frame information for …",null,null],[12,"__private_field","","",19,null],[8,"Tunables","","An engine delegates the creation of memories, tables, and …",null,null],[10,"memory_style","","Construct a <code>MemoryStyle</code> for the provided <code>MemoryType</code>",26,[[["memorytype",3]],["memorystyle",4]]],[10,"table_style","","Construct a <code>TableStyle</code> for the provided <code>TableType</code>",26,[[["tabletype",3]],["tablestyle",4]]],[10,"create_host_memory","","Create a memory owned by the host given a [<code>MemoryType</code>] …",26,[[["memorystyle",4],["memorytype",3]],[["arc",3],["memoryerror",4],["result",4]]]],[10,"create_vm_memory","","Create a memory owned by the VM given a [<code>MemoryType</code>] and …",26,[[["vmmemorydefinition",3],["memorystyle",4],["memorytype",3],["nonnull",3]],[["arc",3],["memoryerror",4],["result",4]]]],[10,"create_host_table","","Create a table owned by the host given a [<code>TableType</code>] and …",26,[[["tabletype",3],["tablestyle",4]],[["string",3],["result",4],["arc",3]]]],[10,"create_vm_table","","Create a table owned by the VM given a [<code>TableType</code>] and a […",26,[[["tablestyle",4],["tabletype",3],["vmtabledefinition",3],["nonnull",3]],[["string",3],["result",4],["arc",3]]]],[11,"create_global","wasmer_engine::tunables","Create a global with an unset value.",26,[[["globaltype",3]],[["string",3],["result",4],["arc",3]]]],[11,"create_memories","","Allocate memory for just the memories of the current …",26,[[["moduleinfo",3],["primarymap",3]],[["result",4],["primarymap",3],["linkerror",4]]]],[11,"create_tables","","Allocate memory for just the tables of the current module.",26,[[["primarymap",3],["moduleinfo",3]],[["result",4],["primarymap",3],["linkerror",4]]]],[11,"create_globals","","Allocate memory for just the globals of the current …",26,[[["moduleinfo",3]],[["result",4],["primarymap",3],["linkerror",4]]]],[17,"VERSION","wasmer_engine","Version number of this crate.",null,null],[11,"from","wasmer_engine::engine","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"pointer_metadata","","",3,[[]]],[11,"from","wasmer_engine::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"from","wasmer_engine::export","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"from","wasmer_engine::resolver","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"pointer_metadata","","",27,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"pointer_metadata","","",14,[[]]],[11,"from","wasmer_engine::trap::error","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"pointer_metadata","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"pointer_metadata","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"from","wasmer_engine::trap::frame_info","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"pointer_metadata","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"pointer_metadata","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"pointer_metadata","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"pointer_metadata","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"pointer_metadata","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"pointer_metadata","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"pointer_metadata","","",25,[[]]],[11,"resolve","wasmer_engine::resolver","",27,[[["u32",15],["str",15]],[["export",4],["option",4]]]],[11,"resolve_by_name","","",14,[[["str",15]],[["export",4],["option",4]]]],[11,"drop","wasmer_engine::export","",10,[[]]],[11,"drop","wasmer_engine::trap::frame_info","",21,[[]]],[11,"from","wasmer_engine::error","",4,[[["error",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"from","wasmer_engine::export","",9,[[["vmextern",4]]]],[11,"from","","",9,[[["exportfunction",3]]]],[11,"from","","",9,[[["vmtable",3]]]],[11,"from","","",9,[[["vmmemory",3]]]],[11,"from","","",9,[[["vmglobal",3]]]],[11,"from","wasmer_engine::trap::error","",16,[[["trap",4]]]],[11,"clone","wasmer_engine::engine","",3,[[]]],[11,"clone","wasmer_engine::export","",9,[[],["export",4]]],[11,"clone","","",11,[[],["exportfunction",3]]],[11,"clone","wasmer_engine::resolver","",14,[[]]],[11,"clone","wasmer_engine::trap::error","",16,[[],["runtimeerror",3]]],[11,"clone","wasmer_engine::trap::frame_info","",25,[[],["frameinfo",3]]],[11,"default","wasmer_engine::engine","",3,[[]]],[11,"default","wasmer_engine::trap::frame_info","",20,[[],["globalframeinfo",3]]],[11,"cmp","wasmer_engine::engine","",3,[[["engineid",3]],["ordering",4]]],[11,"eq","","",3,[[["engineid",3]],["bool",15]]],[11,"ne","","",3,[[["engineid",3]],["bool",15]]],[11,"eq","wasmer_engine::export","",10,[[["exportfunctionmetadata",3]],["bool",15]]],[11,"ne","","",10,[[["exportfunctionmetadata",3]],["bool",15]]],[11,"eq","","",11,[[["exportfunction",3]],["bool",15]]],[11,"ne","","",11,[[["exportfunction",3]],["bool",15]]],[11,"partial_cmp","wasmer_engine::engine","",3,[[["engineid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["engineid",3]],["bool",15]]],[11,"le","","",3,[[["engineid",3]],["bool",15]]],[11,"gt","","",3,[[["engineid",3]],["bool",15]]],[11,"ge","","",3,[[["engineid",3]],["bool",15]]],[11,"deref","wasmer_engine::trap::frame_info","",19,[[],["rwlock",3]]],[11,"fmt","wasmer_engine::engine","",3,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine::export","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine::trap::error","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine::trap::frame_info","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_engine::trap::error","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"source","wasmer_engine::error","",4,[[],[["option",4],["error",8]]]],[11,"source","","",5,[[],[["option",4],["error",8]]]],[11,"source","","",7,[[],[["option",4],["error",8]]]],[11,"source","","",8,[[],[["option",4],["error",8]]]],[11,"source","wasmer_engine::trap::error","",16,[[],[["option",4],["error",8]]]],[11,"size_of_val","wasmer_engine::engine","",3,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine::export","",10,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",11,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine::trap::frame_info","",21,[[["memoryusagetracker",8]],["usize",15]]],[11,"initialize","","",19,[[]]]],"p":[[8,"Artifact"],[8,"Upcastable"],[8,"Engine"],[3,"EngineId"],[4,"SerializeError"],[4,"DeserializeError"],[4,"ImportError"],[4,"LinkError"],[4,"InstantiationError"],[4,"Export"],[3,"ExportFunctionMetadata"],[3,"ExportFunction"],[8,"Resolver"],[8,"NamedResolver"],[3,"NamedResolverChain"],[8,"ChainableNamedResolver"],[3,"RuntimeError"],[4,"RuntimeErrorSource"],[3,"RuntimeErrorInner"],[3,"FRAME_INFO"],[3,"GlobalFrameInfo"],[3,"GlobalFrameInfoRegistration"],[3,"ModuleInfoFrameInfo"],[3,"FunctionInfo"],[3,"FunctionExtent"],[3,"FrameInfo"],[8,"Tunables"],[3,"NullResolver"]]},\
"wasmer_engine_dummy":{"doc":"","i":[[0,"artifact","wasmer_engine_dummy","Define <code>DummyArtifact</code> to allow compiling and instantiating …",null,null],[3,"DummyArtifactMetadata","wasmer_engine_dummy::artifact","Serializable struct for the artifact",null,null],[12,"module","","",0,null],[12,"features","","",0,null],[12,"data_initializers","","",0,null],[12,"memory_styles","","",0,null],[12,"table_styles","","",0,null],[3,"DummyArtifact","","A Dummy artifact.",null,null],[12,"metadata","","",1,null],[12,"finished_functions","","",1,null],[12,"finished_function_call_trampolines","","",1,null],[12,"finished_dynamic_function_trampolines","","",1,null],[12,"signatures","","",1,null],[12,"func_data_registry","","",1,null],[5,"dummy_function","","",null,[[]]],[5,"dummy_trampoline","","",null,[[]]],[18,"MAGIC_HEADER","","",1,null],[11,"is_deserializable","","Check if the provided bytes look like a serialized …",1,[[],["bool",15]]],[11,"new","","Compile a data buffer into a <code>DummyArtifact</code>, which may …",1,[[["dummyengine",3],["tunables",8]],[["result",4],["compileerror",4]]]],[11,"deserialize","","Deserialize a DummyArtifact",1,[[["dummyengine",3]],[["deserializeerror",4],["result",4]]]],[11,"from_parts","","Construct a <code>DummyArtifact</code> from component parts.",1,[[["dummyartifactmetadata",3],["dummyengine",3]],[["result",4],["compileerror",4]]]],[0,"engine","wasmer_engine_dummy","Dummy Engine.",null,null],[5,"dummy_trampoline","wasmer_engine_dummy::engine","",null,[[]]],[3,"DummyEngine","","A WebAssembly <code>Dummy</code> Engine.",null,null],[12,"signatures","","",2,null],[12,"func_data","","",2,null],[12,"features","","",2,null],[12,"target","","",2,null],[12,"engine_id","","",2,null],[11,"new","","",2,[[]]],[11,"features","","",2,[[],["features",3]]],[11,"func_data","","Shared func metadata registry.",2,[[],["arc",3]]],[3,"DummyArtifact","wasmer_engine_dummy","A Dummy artifact.",null,null],[12,"metadata","","",1,null],[12,"finished_functions","","",1,null],[12,"finished_function_call_trampolines","","",1,null],[12,"finished_dynamic_function_trampolines","","",1,null],[12,"signatures","","",1,null],[12,"func_data_registry","","",1,null],[3,"DummyEngine","","A WebAssembly <code>Dummy</code> Engine.",null,null],[12,"signatures","","",2,null],[12,"func_data","","",2,null],[12,"features","","",2,null],[12,"target","","",2,null],[12,"engine_id","","",2,null],[11,"from","wasmer_engine_dummy::artifact","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"from","wasmer_engine_dummy::engine","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"clone","","",2,[[],["dummyengine",3]]],[11,"size_of_val","wasmer_engine_dummy::artifact","",0,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",1,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine_dummy::engine","",2,[[["memoryusagetracker",8]],["usize",15]]],[11,"deserialize","wasmer_engine_dummy::artifact","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"module","","",1,[[],[["moduleinfo",3],["arc",3]]]],[11,"module_ref","","",1,[[],["moduleinfo",3]]],[11,"module_mut","","",1,[[],[["option",4],["moduleinfo",3]]]],[11,"register_frame_info","","",1,[[]]],[11,"features","","",1,[[],["features",3]]],[11,"data_initializers","","",1,[[]]],[11,"memory_styles","","",1,[[],["primarymap",3]]],[11,"table_styles","","",1,[[],["primarymap",3]]],[11,"finished_functions","","",1,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",1,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",1,[[],["boxedslice",3]]],[11,"signatures","","",1,[[],["boxedslice",3]]],[11,"func_data_registry","","",1,[[],["funcdataregistry",3]]],[11,"serialize","","",1,[[],[["result",4],["vec",3],["serializeerror",4]]]],[11,"target","wasmer_engine_dummy::engine","Get the tunables",2,[[],["target",3]]],[11,"register_signature","","Register a signature",2,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"register_function_metadata","","",2,[[["vmcallercheckedanyfunc",3]],["vmfuncref",3]]],[11,"lookup_signature","","Lookup a signature",2,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[11,"validate","","Validates a WebAssembly module",2,[[],[["compileerror",4],["result",4]]]],[11,"compile","","Compile a WebAssembly binary",2,[[["tunables",8]],[["compileerror",4],["result",4],["arc",3]]]],[11,"deserialize","","Deserializes a WebAssembly module (binary content of a …",2,[[],[["deserializeerror",4],["arc",3],["result",4]]]],[11,"id","","",2,[[],["engineid",3]]],[11,"cloned","","",2,[[],[["arc",3],["engine",8]]]]],"p":[[3,"DummyArtifactMetadata"],[3,"DummyArtifact"],[3,"DummyEngine"]]},\
"wasmer_engine_jit":{"doc":"JIT backend for Wasmer compilers.","i":[[0,"artifact","wasmer_engine_jit","Define <code>JITArtifact</code> to allow compiling and instantiating …",null,null],[17,"SERIALIZED_METADATA_LENGTH_OFFSET","wasmer_engine_jit::artifact","",null,null],[17,"SERIALIZED_METADATA_CONTENT_OFFSET","","",null,null],[3,"JITArtifact","","A compiled wasm module, ready to be instantiated.",null,null],[12,"serializable","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[12,"func_data_registry","","",0,null],[12,"frame_info_registration","","",0,null],[12,"finished_function_lengths","","",0,null],[18,"MAGIC_HEADER","","",0,null],[11,"is_deserializable","","Check if the provided bytes look like a serialized …",0,[[],["bool",15]]],[11,"new","","Compile a data buffer into a <code>JITArtifact</code>, which may then …",0,[[["tunables",8],["jitengine",3]],[["compileerror",4],["result",4]]]],[11,"deserialize","","Deserialize a JITArtifact",0,[[["jitengine",3]],[["deserializeerror",4],["result",4]]]],[11,"from_parts","","Construct a <code>JITArtifact</code> from component parts.",0,[[["serializablemodule",3],["jitengineinner",3]],[["compileerror",4],["result",4]]]],[11,"get_default_extension","","Get the default extension when serializing this artifact",0,[[["triple",3]],["str",15]]],[5,"pad_and_extend","","It pads the data with the desired alignment",null,[[["vec",3]],["usize",15]]],[0,"builder","wasmer_engine_jit","",null,null],[3,"JIT","wasmer_engine_jit::builder","The JIT builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[11,"new","","Create a new JIT",1,[[]]],[11,"headless","","Create a new headless JIT",1,[[]]],[11,"target","","Set the target",1,[[["target",3]]]],[11,"features","","Set the features",1,[[["features",3]]]],[11,"engine","","Build the <code>JITEngine</code> for this configuration",1,[[],["jitengine",3]]],[0,"code_memory","wasmer_engine_jit","Memory management for executable code.",null,null],[17,"ARCH_FUNCTION_ALIGNMENT","wasmer_engine_jit::code_memory","The optimal alignment for functions.",null,null],[17,"DATA_SECTION_ALIGNMENT","","The optimal alignment for data.",null,null],[3,"CodeMemory","","Memory manager for executable code.",null,null],[12,"unwind_registry","","",2,null],[12,"mmap","","",2,null],[12,"start_of_nonexecutable_pages","","",2,null],[11,"new","","Create a new <code>CodeMemory</code> instance.",2,[[]]],[11,"unwind_registry_mut","","Mutably get the UnwindRegistry.",2,[[],["unwindregistry",3]]],[11,"allocate","","Allocate a single contiguous block of memory for the …",2,[[],[["result",4],["string",3]]]],[11,"publish","","Apply the page permissions.",2,[[]]],[11,"function_allocation_size","","Calculates the allocation size of the given compiled …",2,[[["functionbody",3]],["usize",15]]],[11,"copy_function","","Copies the data of the compiled function to the given …",2,[[["unwindregistry",3],["functionbody",3]]]],[11,"view_as_mut_vmfunc_slice","","Convert mut a slice from u8 to VMFunctionBody.",2,[[]]],[5,"round_up","","",null,[[["usize",15]],["usize",15]]],[0,"engine","wasmer_engine_jit","JIT compilation.",null,null],[3,"JITEngine","wasmer_engine_jit::engine","A WebAssembly <code>JIT</code> Engine.",null,null],[12,"inner","","",3,null],[12,"target","","The target for the compiler",3,null],[12,"engine_id","","",3,null],[11,"new","","Create a new <code>JITEngine</code> with the given config",3,[[["compiler",8],["target",3],["box",3],["features",3]]]],[11,"headless","","Create a headless <code>JITEngine</code>",3,[[]]],[11,"inner","","",3,[[],[["jitengineinner",3],["mutexguard",3]]]],[11,"inner_mut","","",3,[[],[["jitengineinner",3],["mutexguard",3]]]],[3,"JITEngineInner","","The inner contents of <code>JITEngine</code>",null,null],[12,"compiler","","The compiler",4,null],[12,"features","","The features to compile the Wasm module with",4,null],[12,"code_memory","","The code memory is responsible of publishing the compiled …",4,null],[12,"signatures","","The signature registry is used mainly to operate with …",4,null],[12,"func_data","","The backing storage of <code>VMFuncRef</code>s. This centralized store …",4,null],[11,"compiler","","Gets the compiler associated to this engine.",4,[[],[["compileerror",4],["result",4],["compiler",8]]]],[11,"validate","","Validate the module",4,[[],[["result",4],["compileerror",4]]]],[11,"features","","The Wasm features",4,[[],["features",3]]],[11,"allocate","","Allocate compiled functions into memory",4,[[["moduleinfo",3],["primarymap",3],["primarymap",3],["primarymap",3],["primarymap",3]],[["result",4],["compileerror",4]]]],[11,"publish_compiled_code","","Make memory containing compiled code executable.",4,[[]]],[11,"publish_eh_frame","","Register DWARF-type exception handling information …",4,[[["option",4]],[["result",4],["compileerror",4]]]],[11,"signatures","","Shared signature registry.",4,[[],["signatureregistry",3]]],[11,"func_data","","Shared func metadata registry.",4,[[],["arc",3]]],[0,"link","wasmer_engine_jit","Linking for JIT-compiled code.",null,null],[5,"apply_relocation","wasmer_engine_jit::link","",null,[[["usize",15],["primarymap",3],["primarymap",3],["relocation",3],["primarymap",3]]]],[5,"link_module","","Links a module, patching the allocated functions with the …",null,[[["moduleinfo",3],["primarymap",3],["primarymap",3],["primarymap",3],["relocations",6],["primarymap",3]]]],[0,"serialize","wasmer_engine_jit","",null,null],[3,"SerializableCompilation","wasmer_engine_jit::serialize","The compilation related data for a serialized modules",null,null],[12,"function_bodies","","",5,null],[12,"function_relocations","","",5,null],[12,"function_jt_offsets","","",5,null],[12,"function_frame_info","","",5,null],[12,"function_call_trampolines","","",5,null],[12,"dynamic_function_trampolines","","",5,null],[12,"custom_sections","","",5,null],[12,"custom_section_relocations","","",5,null],[12,"debug","","",5,null],[3,"ArchivedSerializableCompilation","","",null,null],[12,"function_bodies","","",6,null],[12,"function_relocations","","",6,null],[12,"function_jt_offsets","","",6,null],[12,"function_frame_info","","",6,null],[12,"function_call_trampolines","","",6,null],[12,"dynamic_function_trampolines","","",6,null],[12,"custom_sections","","",6,null],[12,"custom_section_relocations","","",6,null],[12,"debug","","",6,null],[3,"SerializableCompilationResolver","","",null,null],[12,"function_bodies","","",7,null],[12,"function_relocations","","",7,null],[12,"function_jt_offsets","","",7,null],[12,"function_frame_info","","",7,null],[12,"function_call_trampolines","","",7,null],[12,"dynamic_function_trampolines","","",7,null],[12,"custom_sections","","",7,null],[12,"custom_section_relocations","","",7,null],[12,"debug","","",7,null],[3,"SerializableModule","","Serializable struct that is able to serialize from and to …",null,null],[12,"compilation","","",8,null],[12,"compile_info","","",8,null],[12,"data_initializers","","",8,null],[3,"ArchivedSerializableModule","","",null,null],[12,"compilation","","",9,null],[12,"compile_info","","",9,null],[12,"data_initializers","","",9,null],[3,"SerializableModuleResolver","","",null,null],[12,"compilation","","",10,null],[12,"compile_info","","",10,null],[12,"data_initializers","","",10,null],[5,"to_serialize_error","","",null,[[],["serializeerror",4]]],[17,"HOST_ENDIAN","","",null,null],[11,"serialize","","Serialize a Module into bytes The bytes will have the …",8,[[],[["result",4],["serializeerror",4],["vec",3]]]],[11,"deserialize","","Deserialize a Module from a slice. The slice must have …",8,[[],[["deserializeerror",4],["result",4]]]],[11,"archive_from_slice","","SafetyThis method is unsafe. Please check …",8,[[],[["archivedserializablemodule",3],["deserializeerror",4],["result",4]]]],[11,"deserialize_from_archive","","",8,[[["archivedserializablemodule",3]],[["deserializeerror",4],["result",4]]]],[0,"unwind","wasmer_engine_jit","",null,null],[0,"systemv","wasmer_engine_jit::unwind","Module for System V ABI unwind registry.",null,null],[5,"__register_frame","wasmer_engine_jit::unwind::systemv","",null,null],[5,"__deregister_frame","","",null,null],[3,"UnwindRegistry","","Represents a registry of function unwind information for …",null,null],[12,"registrations","","",11,null],[12,"published","","",11,null],[11,"new","","Creates a new unwind registry with the given base address.",11,[[]]],[11,"register","","Registers a function given the start offset, length, and …",11,[[["usize",15],["u32",15],["compiledfunctionunwindinfo",4]],[["result",4],["string",3]]]],[11,"publish","","Publishes all registered functions.",11,[[["option",4]],[["result",4],["string",3]]]],[11,"register_frames","","",11,[[]]],[3,"JITArtifact","wasmer_engine_jit","A compiled wasm module, ready to be instantiated.",null,null],[12,"serializable","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[12,"func_data_registry","","",0,null],[12,"frame_info_registration","","",0,null],[12,"finished_function_lengths","","",0,null],[3,"JIT","","The JIT builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[3,"CodeMemory","","Memory manager for executable code.",null,null],[12,"unwind_registry","","",2,null],[12,"mmap","","",2,null],[12,"start_of_nonexecutable_pages","","",2,null],[3,"JITEngine","","A WebAssembly <code>JIT</code> Engine.",null,null],[12,"inner","","",3,null],[12,"target","","The target for the compiler",3,null],[12,"engine_id","","",3,null],[5,"link_module","","Links a module, patching the allocated functions with the …",null,[[["moduleinfo",3],["primarymap",3],["primarymap",3],["primarymap",3],["relocations",6],["primarymap",3]]]],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","wasmer_engine_jit::artifact","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"from","wasmer_engine_jit::builder","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"from","wasmer_engine_jit::code_memory","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"from","wasmer_engine_jit::engine","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"from","wasmer_engine_jit::serialize","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"resolve_metadata","","",5,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",5,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",5,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"resolve_metadata","","",8,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",8,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",8,[[],["result",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"from","wasmer_engine_jit::unwind::systemv","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"clone","wasmer_engine_jit::engine","",3,[[],["jitengine",3]]],[11,"size_of_val","wasmer_engine_jit::artifact","",0,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine_jit::code_memory","",2,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine_jit::engine","",3,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",4,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine_jit::serialize","",5,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",8,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine_jit::unwind::systemv","",11,[[["memoryusagetracker",8]],["usize",15]]],[11,"resolve","wasmer_engine_jit::serialize","",5,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",8,[[["usize",15],["maybeuninit",19]]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"module","wasmer_engine_jit::artifact","",0,[[],[["arc",3],["moduleinfo",3]]]],[11,"module_ref","","",0,[[],["moduleinfo",3]]],[11,"module_mut","","",0,[[],[["moduleinfo",3],["option",4]]]],[11,"register_frame_info","","",0,[[]]],[11,"features","","",0,[[],["features",3]]],[11,"data_initializers","","",0,[[]]],[11,"memory_styles","","",0,[[],["primarymap",3]]],[11,"table_styles","","",0,[[],["primarymap",3]]],[11,"finished_functions","","",0,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",0,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",0,[[],["boxedslice",3]]],[11,"signatures","","",0,[[],["boxedslice",3]]],[11,"func_data_registry","","",0,[[],["funcdataregistry",3]]],[11,"serialize","","",0,[[],[["result",4],["serializeerror",4],["vec",3]]]],[11,"target","wasmer_engine_jit::engine","The target",3,[[],["target",3]]],[11,"register_signature","","Register a signature",3,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"register_function_metadata","","",3,[[["vmcallercheckedanyfunc",3]],["vmfuncref",3]]],[11,"lookup_signature","","Lookup a signature",3,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[11,"validate","","Validates a WebAssembly module",3,[[],[["result",4],["compileerror",4]]]],[11,"compile","","Compile a WebAssembly binary",3,[[["tunables",8]],[["arc",3],["compileerror",4],["result",4]]]],[11,"deserialize","","Deserializes a WebAssembly module",3,[[],[["result",4],["deserializeerror",4],["arc",3]]]],[11,"id","","",3,[[],["engineid",3]]],[11,"cloned","","",3,[[],[["engine",8],["arc",3]]]]],"p":[[3,"JITArtifact"],[3,"JIT"],[3,"CodeMemory"],[3,"JITEngine"],[3,"JITEngineInner"],[3,"SerializableCompilation"],[3,"ArchivedSerializableCompilation"],[3,"SerializableCompilationResolver"],[3,"SerializableModule"],[3,"ArchivedSerializableModule"],[3,"SerializableModuleResolver"],[3,"UnwindRegistry"]]},\
"wasmer_engine_native":{"doc":"Native backend for Wasmer compilers.","i":[[0,"artifact","wasmer_engine_native","Define <code>NativeArtifact</code> to allow compiling and …",null,null],[3,"NativeArtifact","wasmer_engine_native::artifact","A compiled wasm module, ready to be instantiated.",null,null],[12,"sharedobject_path","","",0,null],[12,"metadata","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"func_data_registry","","",0,null],[12,"signatures","","",0,null],[5,"to_compile_error","","",null,[[],["compileerror",4]]],[17,"WASMER_METADATA_SYMBOL","","",null,null],[18,"MAGIC_HEADER_MH_CIGAM_64","","",0,null],[18,"MAGIC_HEADER_ELF_32","","",0,null],[18,"MAGIC_HEADER_ELF_64","","",0,null],[18,"MAGIC_HEADER_COFF_64","","",0,null],[11,"is_deserializable","","Check if the provided bytes look like <code>NativeArtifact</code>.",0,[[],["bool",15]]],[11,"generate_metadata","","Generate a compilation",0,[[["compiler",8],["features",3],["tunables",8]],[["compileerror",4],["result",4]]]],[11,"new","","Compile a data buffer into a <code>NativeArtifact</code>, which may …",0,[[["nativeengine",3],["tunables",8]],[["compileerror",4],["result",4]]]],[11,"get_default_extension","","Get the default extension when serializing this artifact",0,[[["triple",3]],["str",15]]],[11,"from_parts_crosscompiled","","Construct a <code>NativeArtifact</code> from component parts.",0,[[["pathbuf",3],["modulemetadata",3]],[["compileerror",4],["result",4]]]],[11,"from_parts","","Construct a <code>NativeArtifact</code> from component parts.",0,[[["nativeengineinner",3],["modulemetadata",3],["library",3],["pathbuf",3]],[["compileerror",4],["result",4]]]],[11,"deserialize","","Deserialize a <code>NativeArtifact</code> from bytes.",0,[[["nativeengine",3]],[["result",4],["deserializeerror",4]]]],[11,"deserialize_from_file","","Deserialize a <code>NativeArtifact</code> from a file path.",0,[[["nativeengine",3],["path",3]],[["result",4],["deserializeerror",4]]]],[11,"deserialize_from_file_unchecked","","Deserialize a <code>NativeArtifact</code> from a file path (unchecked).",0,[[["nativeengine",3],["path",3]],[["result",4],["deserializeerror",4]]]],[11,"metadata","","Used in test deserialize metadata is correct",0,[[],["modulemetadata",3]]],[0,"builder","wasmer_engine_native","",null,null],[3,"Native","wasmer_engine_native::builder","The Native builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[11,"new","","Create a new Native",1,[[]]],[11,"headless","","Create a new headless Native",1,[[]]],[11,"target","","Set the target",1,[[["target",3]]]],[11,"features","","Set the features",1,[[["features",3]]]],[11,"engine","","Build the <code>NativeEngine</code> for this configuration",1,[[],["nativeengine",3]]],[0,"engine","wasmer_engine_native","Native Engine.",null,null],[3,"NativeEngine","wasmer_engine_native::engine","A WebAssembly <code>Native</code> Engine.",null,null],[12,"inner","","",2,null],[12,"target","","The target for the compiler",2,null],[12,"engine_id","","",2,null],[11,"new","","Create a new <code>NativeEngine</code> with the given config",2,[[["target",3],["compiler",8],["box",3],["features",3]]]],[11,"headless","","Create a headless <code>NativeEngine</code>",2,[[]]],[11,"set_deterministic_prefixer","","Sets a prefixer for the wasm module, so we can avoid any …",2,[[]]],[11,"inner","","",2,[[],[["mutexguard",3],["nativeengineinner",3]]]],[11,"inner_mut","","",2,[[],[["mutexguard",3],["nativeengineinner",3]]]],[4,"Linker","","",null,null],[13,"None","","",3,null],[13,"Clang11","","",3,null],[13,"Clang10","","",3,null],[13,"Clang","","",3,null],[13,"Gcc","","",3,null],[11,"find_linker","","",3,[[["bool",15]]]],[11,"executable","","",3,[[],["str",15]]],[3,"NativeEngineInner","","The inner contents of <code>NativeEngine</code>",null,null],[12,"compiler","","The compiler",4,null],[12,"features","","The WebAssembly features to use",4,null],[12,"signatures","","The signature registry is used mainly to operate with …",4,null],[12,"func_data","","The backing storage of <code>VMFuncRef</code>s. This centralized store …",4,null],[12,"prefixer","","The prefixer returns the a String to prefix each of the …",4,null],[12,"is_cross_compiling","","Whether the native engine will cross-compile.",4,null],[12,"linker","","The linker to use.",4,null],[12,"libraries","","List of libraries loaded by this engine.",4,null],[11,"compiler","","Gets the compiler associated to this engine.",4,[[],[["compiler",8],["result",4],["compileerror",4]]]],[11,"get_prefix","","",4,[[],["string",3]]],[11,"features","","",4,[[],["features",3]]],[11,"validate","","Validate the module",4,[[],[["result",4],["compileerror",4]]]],[11,"signatures","","Shared signature registry.",4,[[],["signatureregistry",3]]],[11,"func_data","","Shared func metadata registry.",4,[[],["arc",3]]],[11,"is_cross_compiling","","",4,[[],["bool",15]]],[11,"linker","","",4,[[],["linker",4]]],[11,"add_library","","",4,[[["library",3]]]],[0,"serialize","wasmer_engine_native","",null,null],[5,"to_compile_error","wasmer_engine_native::serialize","",null,[[],["compileerror",4]]],[3,"ModuleMetadata","","Serializable struct that represents the compiled metadata.",null,null],[12,"compile_info","","",5,null],[12,"prefix","","",5,null],[12,"data_initializers","","",5,null],[12,"function_body_lengths","","",5,null],[3,"ArchivedModuleMetadata","","",null,null],[12,"compile_info","","",6,null],[12,"prefix","","",6,null],[12,"data_initializers","","",6,null],[12,"function_body_lengths","","",6,null],[3,"ModuleMetadataResolver","","",null,null],[12,"compile_info","","",7,null],[12,"prefix","","",7,null],[12,"data_initializers","","",7,null],[12,"function_body_lengths","","",7,null],[3,"ModuleMetadataSymbolRegistry","","",null,null],[12,"prefix","","",8,null],[11,"split","","",5,[[]]],[11,"get_symbol_registry","","",5,[[],["modulemetadatasymbolregistry",3]]],[11,"serialize","","",5,[[],[["result",4],["vec",3],["compileerror",4]]]],[11,"deserialize","","",5,[[],[["result",4],["deserializeerror",4]]]],[11,"archive_from_slice","","",5,[[],[["result",4],["archivedmodulemetadata",3],["deserializeerror",4]]]],[11,"deserialize_from_archive","","",5,[[["archivedmodulemetadata",3]],[["result",4],["deserializeerror",4]]]],[3,"NativeArtifact","wasmer_engine_native","A compiled wasm module, ready to be instantiated.",null,null],[12,"sharedobject_path","","",0,null],[12,"metadata","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"func_data_registry","","",0,null],[12,"signatures","","",0,null],[3,"Native","","The Native builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[3,"NativeEngine","","A WebAssembly <code>Native</code> Engine.",null,null],[12,"inner","","",2,null],[12,"target","","The target for the compiler",2,null],[12,"engine_id","","",2,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","wasmer_engine_native::artifact","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"pointer_metadata","","",0,[[]]],[11,"from","wasmer_engine_native::builder","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"pointer_metadata","","",1,[[]]],[11,"from","wasmer_engine_native::engine","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"pointer_metadata","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"pointer_metadata","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"pointer_metadata","","",4,[[]]],[11,"from","wasmer_engine_native::serialize","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"vzip","","",5,[[]]],[11,"pointer_metadata","","",5,[[]]],[11,"resolve_metadata","","",5,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",5,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",5,[[],["result",4]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"pointer_metadata","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"pointer_metadata","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"pointer_metadata","","",8,[[]]],[11,"clone","wasmer_engine_native::engine","",2,[[],["nativeengine",3]]],[11,"clone","","",3,[[],["linker",4]]],[11,"eq","wasmer_engine_native::serialize","",5,[[["modulemetadata",3]],["bool",15]]],[11,"ne","","",5,[[["modulemetadata",3]],["bool",15]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"size_of_val","wasmer_engine_native::artifact","",0,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine_native::engine","",2,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",3,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",4,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine_native::serialize","",5,[[["memoryusagetracker",8]],["usize",15]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"resolve","","",5,[[["usize",15],["maybeuninit",19]]]],[11,"serialize","","",5,[[],["result",4]]],[11,"symbol_to_name","","",8,[[["symbol",4]],["string",3]]],[11,"name_to_symbol","","",8,[[["str",15]],[["symbol",4],["option",4]]]],[11,"module","wasmer_engine_native::artifact","",0,[[],[["arc",3],["moduleinfo",3]]]],[11,"module_ref","","",0,[[],["moduleinfo",3]]],[11,"module_mut","","",0,[[],[["option",4],["moduleinfo",3]]]],[11,"register_frame_info","","",0,[[]]],[11,"features","","",0,[[],["features",3]]],[11,"data_initializers","","",0,[[]]],[11,"memory_styles","","",0,[[],["primarymap",3]]],[11,"table_styles","","",0,[[],["primarymap",3]]],[11,"finished_functions","","",0,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",0,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",0,[[],["boxedslice",3]]],[11,"signatures","","",0,[[],["boxedslice",3]]],[11,"func_data_registry","","",0,[[],["funcdataregistry",3]]],[11,"preinstantiate","","",0,[[],[["instantiationerror",4],["result",4]]]],[11,"serialize","","Serialize a NativeArtifact",0,[[],[["result",4],["vec",3],["serializeerror",4]]]],[11,"target","wasmer_engine_native::engine","The target",2,[[],["target",3]]],[11,"register_signature","","Register a signature",2,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"register_function_metadata","","",2,[[["vmcallercheckedanyfunc",3]],["vmfuncref",3]]],[11,"lookup_signature","","Lookup a signature",2,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[11,"validate","","Validates a WebAssembly module",2,[[],[["result",4],["compileerror",4]]]],[11,"compile","","Compile a WebAssembly binary",2,[[["tunables",8]],[["arc",3],["result",4],["compileerror",4]]]],[11,"deserialize","","Deserializes a WebAssembly module (binary content of a …",2,[[],[["arc",3],["result",4],["deserializeerror",4]]]],[11,"deserialize_from_file","","Deserializes a WebAssembly module from a path It should …",2,[[["path",3]],[["arc",3],["result",4],["deserializeerror",4]]]],[11,"id","","",2,[[],["engineid",3]]],[11,"cloned","","",2,[[],[["arc",3],["engine",8]]]]],"p":[[3,"NativeArtifact"],[3,"Native"],[3,"NativeEngine"],[4,"Linker"],[3,"NativeEngineInner"],[3,"ModuleMetadata"],[3,"ArchivedModuleMetadata"],[3,"ModuleMetadataResolver"],[3,"ModuleMetadataSymbolRegistry"]]},\
"wasmer_engine_object_file":{"doc":"Object file backend for Wasmer compilers.","i":[[0,"artifact","wasmer_engine_object_file","Define <code>ObjectFileArtifact</code> to allow compiling and …",null,null],[3,"ObjectFileArtifact","wasmer_engine_object_file::artifact","A compiled wasm module, ready to be instantiated.",null,null],[12,"metadata","","",0,null],[12,"module_bytes","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[12,"func_data_registry","","",0,null],[12,"metadata_length","","Length of the serialized metadata",0,null],[12,"symbol_registry","","",0,null],[5,"to_compile_error","","",null,[[],["compileerror",4]]],[17,"WASMER_METADATA_SYMBOL","","",null,null],[18,"MAGIC_HEADER_MH_CIGAM_64","","",0,null],[18,"MAGIC_HEADER_ELF_32","","",0,null],[18,"MAGIC_HEADER_ELF_64","","",0,null],[18,"MAGIC_HEADER_COFF_64","","",0,null],[11,"is_deserializable","","Check if the provided bytes look like <code>ObjectFileArtifact</code>.",0,[[],["bool",15]]],[11,"generate_metadata","","Generate a compilation",0,[[["features",3],["compiler",8],["tunables",8]],[["result",4],["compileerror",4]]]],[11,"new","","Compile a data buffer into a <code>ObjectFileArtifact</code>, which …",0,[[["objectfileengine",3],["tunables",8]],[["result",4],["compileerror",4]]]],[11,"get_default_extension","","Get the default extension when serializing this artifact",0,[[["triple",3]],["str",15]]],[11,"from_parts_crosscompiled","","Construct a <code>ObjectFileArtifact</code> from component parts.",0,[[["objectfileengineinner",3],["usize",15],["vec",3],["modulemetadata",3],["u8",15]],[["result",4],["compileerror",4]]]],[11,"deserialize","","Deserialize a <code>ObjectFileArtifact</code> from bytes.",0,[[["objectfileengine",3]],[["deserializeerror",4],["result",4]]]],[11,"symbol_registry","","Get the <code>SymbolRegistry</code> used to generate the names used in …",0,[[],["symbolregistry",8]]],[11,"metadata_length","","The length in bytes of the metadata in the serialized …",0,[[],["usize",15]]],[0,"builder","wasmer_engine_object_file","",null,null],[3,"ObjectFile","wasmer_engine_object_file::builder","The ObjectFile builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[11,"new","","Create a new ObjectFile",1,[[]]],[11,"headless","","Create a new headless ObjectFile",1,[[]]],[11,"target","","Set the target",1,[[["target",3]]]],[11,"features","","Set the features",1,[[["features",3]]]],[11,"engine","","Build the <code>ObjectFileEngine</code> for this configuration",1,[[],["objectfileengine",3]]],[0,"engine","wasmer_engine_object_file","",null,null],[3,"ObjectFileEngine","wasmer_engine_object_file::engine","A WebAssembly <code>ObjectFile</code> Engine.",null,null],[12,"inner","","",2,null],[12,"target","","The target for the compiler",2,null],[12,"engine_id","","",2,null],[11,"new","","Create a new <code>ObjectFileEngine</code> with the given config",2,[[["compiler",8],["box",3],["target",3],["features",3]]]],[11,"headless","","Create a headless <code>ObjectFileEngine</code>",2,[[]]],[11,"set_deterministic_prefixer","","Sets a prefixer for the wasm module, so we can avoid any …",2,[[]]],[11,"inner","","",2,[[],[["objectfileengineinner",3],["mutexguard",3]]]],[11,"inner_mut","","",2,[[],[["objectfileengineinner",3],["mutexguard",3]]]],[3,"ObjectFileEngineInner","","The inner contents of <code>ObjectFileEngine</code>",null,null],[12,"compiler","","The compiler",3,null],[12,"features","","The WebAssembly features to use",3,null],[12,"signatures","","The signature registry is used mainly to operate with …",3,null],[12,"func_data","","The backing storage of <code>VMFuncRef</code>s. This centralized store …",3,null],[12,"prefixer","","The prefixer returns the a String to prefix each of the …",3,null],[11,"compiler","","Gets the compiler associated to this engine.",3,[[],[["result",4],["compiler",8],["compileerror",4]]]],[11,"get_prefix","","",3,[[],["string",3]]],[11,"features","","",3,[[],["features",3]]],[11,"validate","","Validate the module",3,[[],[["result",4],["compileerror",4]]]],[11,"signatures","","Shared signature registry.",3,[[],["signatureregistry",3]]],[11,"func_data","","Shared func metadata registry.",3,[[],["arc",3]]],[0,"serialize","wasmer_engine_object_file","",null,null],[3,"ModuleMetadata","wasmer_engine_object_file::serialize","Serializable struct that represents the compiled metadata.",null,null],[12,"compile_info","","",4,null],[12,"prefix","","",4,null],[12,"data_initializers","","",4,null],[12,"function_body_lengths","","",4,null],[3,"ModuleMetadataSymbolRegistry","","",null,null],[12,"prefix","","",5,null],[11,"split","","",4,[[]]],[11,"get_symbol_registry","","",4,[[],["modulemetadatasymbolregistry",3]]],[3,"ObjectFileArtifact","wasmer_engine_object_file","A compiled wasm module, ready to be instantiated.",null,null],[12,"metadata","","",0,null],[12,"module_bytes","","",0,null],[12,"finished_functions","","",0,null],[12,"finished_function_call_trampolines","","",0,null],[12,"finished_dynamic_function_trampolines","","",0,null],[12,"signatures","","",0,null],[12,"func_data_registry","","",0,null],[12,"metadata_length","","Length of the serialized metadata",0,null],[12,"symbol_registry","","",0,null],[3,"ObjectFile","","The ObjectFile builder",null,null],[12,"compiler_config","","",1,null],[12,"target","","",1,null],[12,"features","","",1,null],[3,"ObjectFileEngine","","A WebAssembly <code>ObjectFile</code> Engine.",null,null],[12,"inner","","",2,null],[12,"target","","The target for the compiler",2,null],[12,"engine_id","","",2,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","wasmer_engine_object_file::artifact","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","wasmer_engine_object_file::builder","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","wasmer_engine_object_file::engine","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","wasmer_engine_object_file::serialize","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"clone","wasmer_engine_object_file::engine","",2,[[],["objectfileengine",3]]],[11,"fmt","wasmer_engine_object_file::serialize","",4,[[["formatter",3]],["result",6]]],[11,"size_of_val","wasmer_engine_object_file::artifact","",0,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine_object_file::engine","",2,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",3,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_engine_object_file::serialize","",4,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",5,[[["memoryusagetracker",8]],["usize",15]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"symbol_to_name","","",5,[[["symbol",4]],["string",3]]],[11,"name_to_symbol","","",5,[[["str",15]],[["option",4],["symbol",4]]]],[11,"module","wasmer_engine_object_file::artifact","",0,[[],[["arc",3],["moduleinfo",3]]]],[11,"module_ref","","",0,[[],["moduleinfo",3]]],[11,"module_mut","","",0,[[],[["option",4],["moduleinfo",3]]]],[11,"register_frame_info","","",0,[[]]],[11,"features","","",0,[[],["features",3]]],[11,"data_initializers","","",0,[[]]],[11,"memory_styles","","",0,[[],["primarymap",3]]],[11,"table_styles","","",0,[[],["primarymap",3]]],[11,"finished_functions","","",0,[[],["boxedslice",3]]],[11,"finished_function_call_trampolines","","",0,[[],["boxedslice",3]]],[11,"finished_dynamic_function_trampolines","","",0,[[],["boxedslice",3]]],[11,"signatures","","",0,[[],["boxedslice",3]]],[11,"func_data_registry","","",0,[[],["funcdataregistry",3]]],[11,"preinstantiate","","",0,[[],[["result",4],["instantiationerror",4]]]],[11,"serialize","","Serialize a ObjectFileArtifact",0,[[],[["serializeerror",4],["result",4],["vec",3]]]],[11,"target","wasmer_engine_object_file::engine","The target",2,[[],["target",3]]],[11,"register_signature","","Register a signature",2,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"register_function_metadata","","",2,[[["vmcallercheckedanyfunc",3]],["vmfuncref",3]]],[11,"lookup_signature","","Lookup a signature",2,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[11,"validate","","Validates a WebAssembly module",2,[[],[["result",4],["compileerror",4]]]],[11,"compile","","Compile a WebAssembly binary",2,[[["tunables",8]],[["result",4],["arc",3],["compileerror",4]]]],[11,"deserialize","","Deserializes a WebAssembly module (binary content of a …",2,[[],[["result",4],["arc",3],["deserializeerror",4]]]],[11,"deserialize_from_file","","Deserializes a WebAssembly module from a path It should …",2,[[["path",3]],[["result",4],["arc",3],["deserializeerror",4]]]],[11,"id","","",2,[[],["engineid",3]]],[11,"cloned","","",2,[[],[["arc",3],["engine",8]]]]],"p":[[3,"ObjectFileArtifact"],[3,"ObjectFile"],[3,"ObjectFileEngine"],[3,"ObjectFileEngineInner"],[3,"ModuleMetadata"],[3,"ModuleMetadataSymbolRegistry"]]},\
"wasmer_integration_tests_cli":{"doc":"CLI integration tests","i":[[0,"assets","wasmer_integration_tests_cli","",null,null],[17,"C_ASSET_PATH","wasmer_integration_tests_cli::assets","",null,null],[17,"ASSET_PATH","","",null,null],[17,"WASMER_INCLUDE_PATH","","",null,null],[17,"WASMER_PATH","","",null,null],[17,"LIBWASMER_PATH","","",null,null],[5,"get_libwasmer_path","","Get the path to the <code>libwasmer.a</code> static library.",null,[[],["pathbuf",3]]],[5,"get_wasmer_path","","Get the path to the <code>wasmer</code> executable to be used in this …",null,[[],["pathbuf",3]]],[0,"link_code","wasmer_integration_tests_cli","",null,null],[3,"LinkCode","wasmer_integration_tests_cli::link_code","Data used to run a linking command for generated …",null,null],[12,"current_dir","","The directory to operate in.",0,null],[12,"linker_path","","Path to the linker used to run the linking command.",0,null],[12,"optimization_flag","","String used as an optimization flag.",0,null],[12,"object_paths","","Paths of objects to link.",0,null],[12,"output_path","","Path to the output target.",0,null],[12,"libwasmer_path","","Path to the static libwasmer library.",0,null],[11,"run","","",0,[[],["result",6]]],[0,"util","wasmer_integration_tests_cli","",null,null],[4,"Compiler","wasmer_integration_tests_cli::util","",null,null],[13,"Cranelift","","",1,null],[13,"LLVM","","",1,null],[13,"Singlepass","","",1,null],[11,"to_flag","","",1,[[],["str",15]]],[4,"Engine","","",null,null],[13,"Jit","","",2,null],[13,"Native","","",2,null],[13,"ObjectFile","","",2,null],[11,"to_flag","","",2,[[],["str",15]]],[5,"run_code","","",null,[[["path",3]],[["string",3],["result",6]]]],[11,"from","wasmer_integration_tests_cli::link_code","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","wasmer_integration_tests_cli::util","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"clone","","",1,[[],["compiler",4]]],[11,"clone","","",2,[[],["engine",4]]],[11,"default","wasmer_integration_tests_cli::link_code","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_integration_tests_cli::util","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[3,"LinkCode"],[4,"Compiler"],[4,"Engine"]]},\
"wasmer_middlewares":{"doc":"","i":[[0,"metering","wasmer_middlewares","<code>metering</code> is a middleware for tracking how many operators …",null,null],[3,"MeteringGlobalIndexes","wasmer_middlewares::metering","",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[11,"remaining_points","","The global index in the current module for remaining …",0,[[],["globalindex",3]]],[11,"points_exhausted","","The global index in the current module for a boolean …",0,[[],["globalindex",3]]],[3,"Metering","","The module-level metering middleware.",null,null],[12,"initial_limit","","Initial limit of points.",1,null],[12,"cost_function","","Function that maps each operator to a cost in \\\"points\\\".",1,null],[12,"global_indexes","","The global indexes for metering points.",1,null],[3,"FunctionMetering","","The function-level metering middleware.",null,null],[12,"cost_function","","Function that maps each operator to a cost in \\\"points\\\".",2,null],[12,"global_indexes","","The global indexes for metering points.",2,null],[12,"accumulated_cost","","Accumulated cost of the current basic block.",2,null],[4,"MeteringPoints","","",null,null],[13,"Remaining","","The given number of metering points is left for the …",3,null],[13,"Exhausted","","The execution was terminated because the metering points …",3,null],[11,"new","","Creates a <code>Metering</code> middleware.",1,[[["u64",15]]]],[5,"get_remaining_points","","Get the remaining points in an <code>Instance</code>.",null,[[["instance",3]],["meteringpoints",4]]],[5,"set_remaining_points","","Set the provided remaining points in an <code>Instance</code>.",null,[[["u64",15],["instance",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"clone","","",0,[[],["meteringglobalindexes",3]]],[11,"eq","","",3,[[["meteringpoints",4]],["bool",15]]],[11,"ne","","",3,[[["meteringpoints",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"size_of_val","","",0,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",1,[[["memoryusagetracker",8]],["usize",15]]],[11,"feed","","",2,[[["operator",4],["middlewarereaderstate",3]],[["middlewareerror",3],["result",4]]]],[11,"generate_function_middleware","","Generates a <code>FunctionMiddleware</code> for a given function.",1,[[["localfunctionindex",3]],[["box",3],["functionmiddleware",8]]]],[11,"transform_module_info","","Transforms a <code>ModuleInfo</code> struct in-place. This is called …",1,[[["moduleinfo",3]]]]],"p":[[3,"MeteringGlobalIndexes"],[3,"Metering"],[3,"FunctionMetering"],[4,"MeteringPoints"]]},\
"wasmer_object":{"doc":"Object creator for Wasm Compilations.","i":[[0,"error","wasmer_object","",null,null],[4,"ObjectError","wasmer_object::error","The Object error can occur when creating an object file …",null,null],[13,"UnsupportedBinaryFormat","","The object was provided a not-supported binary format",0,null],[13,"UnsupportedArchitecture","","The object was provided a not-supported architecture",0,null],[13,"UnknownEndianness","","The object was provided an unknown endianness",0,null],[13,"Write","","The object was provided a not-supported architecture",0,null],[0,"module","wasmer_object","",null,null],[5,"get_object_for_target","wasmer_object::module","Create an object for a given target <code>Triple</code>.",null,[[["triple",3]],[["object",3],["result",4],["objecterror",4]]]],[5,"emit_data","","Write data into an existing object.",null,[[["object",3],["u64",15]],[["objecterror",4],["result",4]]]],[5,"emit_compilation","","Emit the compilation result into an existing object.",null,[[["object",3],["triple",3],["compilation",3]],[["objecterror",4],["result",4]]]],[4,"ObjectError","wasmer_object","The Object error can occur when creating an object file …",null,null],[13,"UnsupportedBinaryFormat","","The object was provided a not-supported binary format",0,null],[13,"UnsupportedArchitecture","","The object was provided a not-supported architecture",0,null],[13,"UnknownEndianness","","The object was provided an unknown endianness",0,null],[13,"Write","","The object was provided a not-supported architecture",0,null],[5,"emit_compilation","","Emit the compilation result into an existing object.",null,[[["object",3],["triple",3],["compilation",3]],[["objecterror",4],["result",4]]]],[5,"emit_data","","Write data into an existing object.",null,[[["object",3],["u64",15]],[["objecterror",4],["result",4]]]],[5,"get_object_for_target","","Create an object for a given target <code>Triple</code>.",null,[[["triple",3]],[["object",3],["result",4],["objecterror",4]]]],[11,"from","wasmer_object::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"from","","",0,[[["objectwriteerror",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]]],"p":[[4,"ObjectError"]]},\
"wasmer_types":{"doc":"This are the common types and utility tools for using …","i":[[0,"lib","wasmer_types","The <code>lib</code> module defines a <code>std</code> module that is identical …",null,null],[0,"std","wasmer_types::lib","Custom <code>std</code> module.",null,null],[0,"any","wasmer_types::lib::std","This module implements the <code>Any</code> trait, which enables …",null,null],[8,"Any","wasmer_types::lib::std::any","A trait to emulate dynamic typing.",null,null],[10,"type_id","","Gets the <code>TypeId</code> of <code>self</code>.",0,[[],["typeid",3]]],[3,"TypeId","","A <code>TypeId</code> represents a globally unique identifier for a …",null,null],[12,"t","","",1,null],[5,"type_name","","Returns the name of a type as a string slice.",null,[[],["str",15]]],[5,"type_name_of_val","","Returns the name of the type of the pointed-to value as a …",null,[[],["str",15]]],[0,"borrow","wasmer_types::lib::std","A module for working with borrowed data.",null,null],[8,"ToOwned","wasmer_types::lib::std::borrow","A generalization of <code>Clone</code> to borrowed data.",null,null],[16,"Owned","","The resulting type after obtaining ownership.",2,null],[10,"to_owned","","Creates owned data from borrowed data, usually by cloning.",2,[[]]],[11,"clone_into","","Uses borrowed data to replace owned data, usually by …",2,[[]]],[4,"Cow","","A clone-on-write smart pointer.",null,null],[13,"Borrowed","","Borrowed data.",3,null],[13,"Owned","","Owned data.",3,null],[8,"Borrow","","A trait for borrowing data.",null,null],[10,"borrow","","Immutably borrows from an owned value.",4,[[]]],[8,"BorrowMut","","A trait for mutably borrowing data.",null,null],[10,"borrow_mut","","Mutably borrows from an owned value.",5,[[]]],[0,"boxed","wasmer_types::lib::std","A pointer type for heap allocation.",null,null],[3,"Box","wasmer_types::lib::std::boxed","A pointer type for heap allocation.",null,null],[12,"0","","",6,null],[12,"1","","",6,null],[0,"cell","wasmer_types::lib::std","Shareable mutable containers.",null,null],[3,"Cell","wasmer_types::lib::std::cell","A mutable memory location.",null,null],[12,"value","","",7,null],[3,"RefCell","","A mutable memory location with dynamically checked borrow …",null,null],[12,"borrow","","",8,null],[12,"value","","",8,null],[3,"BorrowError","","An error returned by [<code>RefCell::try_borrow</code>].",null,null],[12,"_private","","",9,null],[3,"BorrowMutError","","An error returned by [<code>RefCell::try_borrow_mut</code>].",null,null],[12,"_private","","",10,null],[3,"Ref","","Wraps a borrowed reference to a value in a <code>RefCell</code> box. A …",null,null],[12,"value","","",11,null],[12,"borrow","","",11,null],[3,"RefMut","","A wrapper type for a mutably borrowed value from a …",null,null],[12,"value","","",12,null],[12,"borrow","","",12,null],[3,"UnsafeCell","","The core primitive for interior mutability in Rust.",null,null],[12,"value","","",13,null],[0,"cmp","wasmer_types::lib::std","Functionality for ordering and comparison.",null,null],[8,"PartialEq","wasmer_types::lib::std::cmp","Trait for equality comparisons which are partial …",null,null],[10,"eq","","This method tests for <code>self</code> and <code>other</code> values to be equal, …",14,[[],["bool",15]]],[11,"ne","","This method tests for <code>!=</code>.",14,[[],["bool",15]]],[8,"Eq","","Trait for equality comparisons which are equivalence …",null,null],[4,"Ordering","","An <code>Ordering</code> is the result of a comparison between two …",null,null],[13,"Less","","An ordering where a compared value is less than another.",15,null],[13,"Equal","","An ordering where a compared value is equal to another.",15,null],[13,"Greater","","An ordering where a compared value is greater than …",15,null],[3,"Reverse","","A helper struct for reverse ordering.",null,null],[12,"0","","",16,null],[8,"Ord","","Trait for types that form a total order.",null,null],[10,"cmp","","This method returns an [<code>Ordering</code>] between <code>self</code> and <code>other</code>.",17,[[],["ordering",4]]],[11,"max","","Compares and returns the maximum of two values.",17,[[]]],[11,"min","","Compares and returns the minimum of two values.",17,[[]]],[11,"clamp","","Restrict a value to a certain interval.",17,[[]]],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between <code>self</code> and <code>other</code> …",18,[[],[["option",4],["ordering",4]]]],[11,"lt","","This method tests less than (for <code>self</code> and <code>other</code>) and is …",18,[[],["bool",15]]],[11,"le","","This method tests less than or equal to (for <code>self</code> and …",18,[[],["bool",15]]],[11,"gt","","This method tests greater than (for <code>self</code> and <code>other</code>) and …",18,[[],["bool",15]]],[11,"ge","","This method tests greater than or equal to (for <code>self</code> and …",18,[[],["bool",15]]],[5,"min","","Compares and returns the minimum of two values.",null,[[]]],[5,"min_by","","Returns the minimum of two values with respect to the …",null,[[]]],[5,"min_by_key","","Returns the element that gives the minimum value from the …",null,[[]]],[5,"max","","Compares and returns the maximum of two values.",null,[[]]],[5,"max_by","","Returns the maximum of two values with respect to the …",null,[[]]],[5,"max_by_key","","Returns the element that gives the maximum value from the …",null,[[]]],[14,"PartialEq","","Derive macro generating an impl of the trait <code>PartialEq</code>.",null,null],[14,"Eq","","Derive macro generating an impl of the trait <code>Eq</code>.",null,null],[14,"Ord","","Derive macro generating an impl of the trait <code>Ord</code>.",null,null],[14,"PartialOrd","","Derive macro generating an impl of the trait <code>PartialOrd</code>.",null,null],[0,"convert","wasmer_types::lib::std","Traits for conversions between types.",null,null],[5,"identity","wasmer_types::lib::std::convert","The identity function.",null,[[]]],[8,"AsRef","","Used to do a cheap reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",19,[[]]],[8,"AsMut","","Used to do a cheap mutable-to-mutable reference …",null,null],[10,"as_mut","","Performs the conversion.",20,[[]]],[8,"Into","","A value-to-value conversion that consumes the input …",null,null],[10,"into","","Performs the conversion.",21,[[]]],[8,"From","","Used to do value-to-value conversions while consuming the …",null,null],[10,"from","","Performs the conversion.",22,[[]]],[8,"TryInto","","An attempted conversion that consumes <code>self</code>, which may or …",null,null],[16,"Error","","The type returned in the event of a conversion error.",23,null],[10,"try_into","","Performs the conversion.",23,[[],["result",4]]],[8,"TryFrom","","Simple and safe type conversions that may fail in a …",null,null],[16,"Error","","The type returned in the event of a conversion error.",24,null],[10,"try_from","","Performs the conversion.",24,[[],["result",4]]],[4,"Infallible","","The error type for errors that can never happen.",null,null],[8,"FloatToInt","","Supporting trait for inherent methods of <code>f32</code> and <code>f64</code> such …",null,null],[0,"fmt","wasmer_types::lib::std","Utilities for formatting and printing <code>String</code>s.",null,null],[5,"format","wasmer_types::lib::std::fmt","The <code>format</code> function takes an [<code>Arguments</code>] struct and …",null,[[["arguments",3]],["string",3]]],[4,"Alignment","","Possible alignments returned by <code>Formatter::align</code>",null,null],[13,"Left","","Indication that contents should be left-aligned.",25,null],[13,"Right","","Indication that contents should be right-aligned.",25,null],[13,"Center","","Indication that contents should be center-aligned.",25,null],[3,"Error","","The error type which is returned from formatting a …",null,null],[5,"write","","The <code>write</code> function takes an output stream, and an …",null,[[["arguments",3],["write",8]],[["error",3],["result",4]]]],[3,"Arguments","","This structure represents a safely precompiled version of …",null,null],[12,"pieces","","",26,null],[12,"fmt","","",26,null],[12,"args","","",26,null],[8,"Binary","","<code>b</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",27,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Octal","","<code>o</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",28,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Debug","","<code>?</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",29,[[["formatter",3]],[["error",3],["result",4]]]],[14,"Debug","","Derive macro generating an impl of the trait <code>Debug</code>.",null,null],[8,"Display","","Format trait for an empty format, <code>{}</code>.",null,null],[10,"fmt","","Formats the value using the given formatter.",30,[[["formatter",3]],[["error",3],["result",4]]]],[3,"DebugList","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"inner","","",31,null],[3,"DebugMap","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"fmt","","",32,null],[12,"result","","",32,null],[12,"has_fields","","",32,null],[12,"has_key","","",32,null],[12,"state","","",32,null],[3,"DebugSet","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"inner","","",33,null],[3,"DebugStruct","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"fmt","","",34,null],[12,"result","","",34,null],[12,"has_fields","","",34,null],[3,"DebugTuple","","A struct to help with <code>fmt::Debug</code> implementations.",null,null],[12,"fmt","","",35,null],[12,"result","","",35,null],[12,"fields","","",35,null],[12,"empty_name","","",35,null],[3,"Formatter","","Configuration for formatting.",null,null],[12,"flags","","",36,null],[12,"fill","","",36,null],[12,"align","","",36,null],[12,"width","","",36,null],[12,"precision","","",36,null],[12,"buf","","",36,null],[6,"Result","","The type returned by formatter methods.",null,null],[8,"Write","","A trait for writing or formatting into Unicode-accepting …",null,null],[10,"write_str","","Writes a string slice into this writer, returning whether …",37,[[["str",15]],[["error",3],["result",4]]]],[11,"write_char","","Writes a [<code>char</code>] into this writer, returning whether the …",37,[[["char",15]],[["error",3],["result",4]]]],[11,"write_fmt","","Glue for usage of the [<code>write!</code>] macro with implementors of …",37,[[["arguments",3]],[["error",3],["result",4]]]],[8,"LowerExp","","<code>e</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",38,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperExp","","<code>E</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",39,[[["formatter",3]],[["error",3],["result",4]]]],[8,"LowerHex","","<code>x</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",40,[[["formatter",3]],[["error",3],["result",4]]]],[8,"Pointer","","<code>p</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",41,[[["formatter",3]],[["error",3],["result",4]]]],[8,"UpperHex","","<code>X</code> formatting.",null,null],[10,"fmt","","Formats the value using the given formatter.",42,[[["formatter",3]],[["error",3],["result",4]]]],[14,"format","wasmer_types::lib::std","Creates a <code>String</code> using interpolation of runtime …",null,null],[0,"hash","","Generic hashing support.",null,null],[8,"Hash","wasmer_types::lib::std::hash","A hashable type.",null,null],[10,"hash","","Feeds this value into the given [<code>Hasher</code>].",43,[[]]],[11,"hash_slice","","Feeds a slice of this type into the given [<code>Hasher</code>].",43,[[]]],[8,"Hasher","","A trait for hashing an arbitrary stream of bytes.",null,null],[10,"finish","","Returns the hash value for the values written so far.",44,[[],["u64",15]]],[10,"write","","Writes some data into this <code>Hasher</code>.",44,[[]]],[11,"write_u8","","Writes a single <code>u8</code> into this hasher.",44,[[["u8",15]]]],[11,"write_u16","","Writes a single <code>u16</code> into this hasher.",44,[[["u16",15]]]],[11,"write_u32","","Writes a single <code>u32</code> into this hasher.",44,[[["u32",15]]]],[11,"write_u64","","Writes a single <code>u64</code> into this hasher.",44,[[["u64",15]]]],[11,"write_u128","","Writes a single <code>u128</code> into this hasher.",44,[[["u128",15]]]],[11,"write_usize","","Writes a single <code>usize</code> into this hasher.",44,[[["usize",15]]]],[11,"write_i8","","Writes a single <code>i8</code> into this hasher.",44,[[["i8",15]]]],[11,"write_i16","","Writes a single <code>i16</code> into this hasher.",44,[[["i16",15]]]],[11,"write_i32","","Writes a single <code>i32</code> into this hasher.",44,[[["i32",15]]]],[11,"write_i64","","Writes a single <code>i64</code> into this hasher.",44,[[["i64",15]]]],[11,"write_i128","","Writes a single <code>i128</code> into this hasher.",44,[[["i128",15]]]],[11,"write_isize","","Writes a single <code>isize</code> into this hasher.",44,[[["isize",15]]]],[8,"BuildHasher","","A trait for creating instances of [<code>Hasher</code>].",null,null],[16,"Hasher","","Type of the hasher that will be created.",45,null],[10,"build_hasher","","Creates a new hasher.",45,[[]]],[3,"BuildHasherDefault","","Used to create a default [<code>BuildHasher</code>] instance for types …",null,null],[12,"0","","",46,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[12,"0","","",47,null],[14,"Hash","","Derive macro generating an impl of the trait <code>Hash</code>.",null,null],[0,"iter","wasmer_types::lib::std","Composable external iteration.",null,null],[8,"Iterator","wasmer_types::lib::std::iter","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",48,null],[10,"next","","Advances the iterator and returns the next value.",48,[[],["option",4]]],[11,"size_hint","","Returns the bounds on the remaining length of the …",48,[[]]],[11,"count","","Consumes the iterator, counting the number of iterations …",48,[[],["usize",15]]],[11,"last","","Consumes the iterator, returning the last element.",48,[[],["option",4]]],[11,"advance_by","","Advances the iterator by <code>n</code> elements.",48,[[["usize",15]],[["usize",15],["result",4]]]],[11,"nth","","Returns the <code>n</code>th element of the iterator.",48,[[["usize",15]],["option",4]]],[11,"step_by","","Creates an iterator starting at the same point, but …",48,[[["usize",15]],["stepby",3]]],[11,"chain","","Takes two iterators and creates a new iterator over both …",48,[[],["chain",3]]],[11,"zip","","\'Zips up\' two iterators into a single iterator of pairs.",48,[[],["zip",3]]],[11,"intersperse","","Creates a new iterator which places a copy of <code>separator</code> …",48,[[],["intersperse",3]]],[11,"intersperse_with","","Creates a new iterator which places an item generated by …",48,[[],["interspersewith",3]]],[11,"map","","Takes a closure and creates an iterator which calls that …",48,[[],["map",3]]],[11,"for_each","","Calls a closure on each element of an iterator.",48,[[]]],[11,"filter","","Creates an iterator which uses a closure to determine if …",48,[[],["filter",3]]],[11,"filter_map","","Creates an iterator that both filters and maps.",48,[[],["filtermap",3]]],[11,"enumerate","","Creates an iterator which gives the current iteration …",48,[[],["enumerate",3]]],[11,"peekable","","Creates an iterator which can use <code>peek</code> to look at the …",48,[[],["peekable",3]]],[11,"skip_while","","Creates an iterator that <code>skip</code>s elements based on a …",48,[[],["skipwhile",3]]],[11,"take_while","","Creates an iterator that yields elements based on a …",48,[[],["takewhile",3]]],[11,"map_while","","Creates an iterator that both yields elements based on a …",48,[[],["mapwhile",3]]],[11,"skip","","Creates an iterator that skips the first <code>n</code> elements.",48,[[["usize",15]],["skip",3]]],[11,"take","","Creates an iterator that yields its first <code>n</code> elements.",48,[[["usize",15]],["take",3]]],[11,"scan","","An iterator adaptor similar to <code>fold</code> that holds internal …",48,[[],["scan",3]]],[11,"flat_map","","Creates an iterator that works like map, but flattens …",48,[[],["flatmap",3]]],[11,"flatten","","Creates an iterator that flattens nested structure.",48,[[],["flatten",3]]],[11,"fuse","","Creates an iterator which ends after the first [<code>None</code>].",48,[[],["fuse",3]]],[11,"inspect","","Does something with each element of an iterator, passing …",48,[[],["inspect",3]]],[11,"by_ref","","Borrows an iterator, rather than consuming it.",48,[[]]],[11,"collect","","Transforms an iterator into a collection.",48,[[]]],[11,"partition","","Consumes an iterator, creating two collections from it.",48,[[]]],[11,"partition_in_place","","Reorders the elements of this iterator <em>in-place</em> according …",48,[[],["usize",15]]],[11,"is_partitioned","","Checks if the elements of this iterator are partitioned …",48,[[],["bool",15]]],[11,"try_fold","","An iterator method that applies a function as long as it …",48,[[]]],[11,"try_for_each","","An iterator method that applies a fallible function to …",48,[[]]],[11,"fold","","Folds every element into an accumulator by applying an …",48,[[]]],[11,"reduce","","Reduces the elements to a single one, by repeatedly …",48,[[],["option",4]]],[11,"all","","Tests if every element of the iterator matches a …",48,[[],["bool",15]]],[11,"any","","Tests if any element of the iterator matches a predicate.",48,[[],["bool",15]]],[11,"find","","Searches for an element of an iterator that satisfies a …",48,[[],["option",4]]],[11,"find_map","","Applies function to the elements of iterator and returns …",48,[[],["option",4]]],[11,"try_find","","Applies function to the elements of iterator and returns …",48,[[],[["option",4],["result",4]]]],[11,"position","","Searches for an element in an iterator, returning its …",48,[[],[["usize",15],["option",4]]]],[11,"rposition","","Searches for an element in an iterator from the right, …",48,[[],[["usize",15],["option",4]]]],[11,"max","","Returns the maximum element of an iterator.",48,[[],["option",4]]],[11,"min","","Returns the minimum element of an iterator.",48,[[],["option",4]]],[11,"max_by_key","","Returns the element that gives the maximum value from the …",48,[[],["option",4]]],[11,"max_by","","Returns the element that gives the maximum value with …",48,[[],["option",4]]],[11,"min_by_key","","Returns the element that gives the minimum value from the …",48,[[],["option",4]]],[11,"min_by","","Returns the element that gives the minimum value with …",48,[[],["option",4]]],[11,"rev","","Reverses an iterator\'s direction.",48,[[],["rev",3]]],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",48,[[]]],[11,"copied","","Creates an iterator which copies all of its elements.",48,[[],["copied",3]]],[11,"cloned","","Creates an iterator which <code>clone</code>s all of its elements.",48,[[],["cloned",3]]],[11,"cycle","","Repeats an iterator endlessly.",48,[[],["cycle",3]]],[11,"sum","","Sums the elements of an iterator.",48,[[]]],[11,"product","","Iterates over the entire iterator, multiplying all the …",48,[[]]],[11,"cmp","","Lexicographically compares the elements of this [<code>Iterator</code>]…",48,[[],["ordering",4]]],[11,"cmp_by","","Lexicographically compares the elements of this [<code>Iterator</code>]…",48,[[],["ordering",4]]],[11,"partial_cmp","","Lexicographically compares the elements of this [<code>Iterator</code>]…",48,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp_by","","Lexicographically compares the elements of this [<code>Iterator</code>]…",48,[[],[["option",4],["ordering",4]]]],[11,"eq","","Determines if the elements of this [<code>Iterator</code>] are equal …",48,[[],["bool",15]]],[11,"eq_by","","Determines if the elements of this [<code>Iterator</code>] are equal …",48,[[],["bool",15]]],[11,"ne","","Determines if the elements of this [<code>Iterator</code>] are unequal …",48,[[],["bool",15]]],[11,"lt","","Determines if the elements of this [<code>Iterator</code>] are …",48,[[],["bool",15]]],[11,"le","","Determines if the elements of this [<code>Iterator</code>] are …",48,[[],["bool",15]]],[11,"gt","","Determines if the elements of this [<code>Iterator</code>] are …",48,[[],["bool",15]]],[11,"ge","","Determines if the elements of this [<code>Iterator</code>] are …",48,[[],["bool",15]]],[11,"is_sorted","","Checks if the elements of this iterator are sorted.",48,[[],["bool",15]]],[11,"is_sorted_by","","Checks if the elements of this iterator are sorted using …",48,[[],["bool",15]]],[11,"is_sorted_by_key","","Checks if the elements of this iterator are sorted using …",48,[[],["bool",15]]],[8,"Step","","Objects that have a notion of <em>successor</em> and <em>predecessor</em> …",null,null],[10,"steps_between","","Returns the number of <em>successor</em> steps required to get …",49,[[],[["usize",15],["option",4]]]],[10,"forward_checked","","Returns the value that would be obtained by taking the <em>…",49,[[["usize",15]],["option",4]]],[11,"forward","","Returns the value that would be obtained by taking the <em>…",49,[[["usize",15]]]],[11,"forward_unchecked","","Returns the value that would be obtained by taking the <em>…",49,[[["usize",15]]]],[10,"backward_checked","","Returns the value that would be obtained by taking the <em>…",49,[[["usize",15]],["option",4]]],[11,"backward","","Returns the value that would be obtained by taking the <em>…",49,[[["usize",15]]]],[11,"backward_unchecked","","Returns the value that would be obtained by taking the <em>…",49,[[["usize",15]]]],[5,"empty","","Creates an iterator that yields nothing.",null,[[],["empty",3]]],[3,"Empty","","An iterator that yields nothing.",null,null],[12,"0","","",50,null],[5,"from_fn","","Creates a new iterator where each iteration calls the …",null,[[],["fromfn",3]]],[3,"FromFn","","An iterator where each iteration calls the provided …",null,null],[12,"0","","",51,null],[5,"once","","Creates an iterator that yields an element exactly once.",null,[[],["once",3]]],[3,"Once","","An iterator that yields an element exactly once.",null,null],[12,"inner","","",52,null],[5,"once_with","","Creates an iterator that lazily generates a value exactly …",null,[[],["oncewith",3]]],[3,"OnceWith","","An iterator that yields a single element of type <code>A</code> by …",null,null],[12,"gen","","",53,null],[5,"repeat","","Creates a new iterator that endlessly repeats a single …",null,[[],["repeat",3]]],[3,"Repeat","","An iterator that repeats an element endlessly.",null,null],[12,"element","","",54,null],[5,"repeat_with","","Creates a new iterator that repeats elements of type <code>A</code> …",null,[[],["repeatwith",3]]],[3,"RepeatWith","","An iterator that repeats elements of type <code>A</code> endlessly by …",null,null],[12,"repeater","","",55,null],[5,"successors","","Creates a new iterator where each successive item is …",null,[[["option",4]],["successors",3]]],[3,"Successors","","An new iterator where each successive item is computed …",null,null],[12,"next","","",56,null],[12,"succ","","",56,null],[8,"FusedIterator","","An iterator that always continues to yield <code>None</code> when …",null,null],[8,"InPlaceIterable","","An iterator that when yielding an item will have taken at …",null,null],[8,"TrustedLen","","An iterator that reports an accurate length using …",null,null],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","Removes and returns an element from the end of the …",57,[[],["option",4]]],[11,"advance_back_by","","Advances the iterator from the back by <code>n</code> elements.",57,[[["usize",15]],[["usize",15],["result",4]]]],[11,"nth_back","","Returns the <code>n</code>th element from the end of the iterator.",57,[[["usize",15]],["option",4]]],[11,"try_rfold","","This is the reverse version of [<code>Iterator::try_fold()</code>]: it …",57,[[]]],[11,"rfold","","An iterator method that reduces the iterator\'s elements …",57,[[]]],[11,"rfind","","Searches for an element of an iterator from the back that …",57,[[],["option",4]]],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact length of the iterator.",58,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the iterator is empty.",58,[[],["bool",15]]],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",59,[[]]],[11,"extend_one","","Extends a collection with exactly one element.",59,[[]]],[11,"extend_reserve","","Reserves capacity in a collection for the given number of …",59,[[["usize",15]]]],[8,"FromIterator","","Conversion from an [<code>Iterator</code>].",null,null],[10,"from_iter","","Creates a value from an iterator.",60,[[]]],[8,"IntoIterator","","Conversion into an [<code>Iterator</code>].",null,null],[16,"Item","","The type of the elements being iterated over.",61,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",61,null],[10,"into_iter","","Creates an iterator from a value.",61,[[]]],[8,"Product","","Trait to represent types that can be created by …",null,null],[10,"product","","Method which takes an iterator and generates <code>Self</code> from …",62,[[]]],[8,"Sum","","Trait to represent types that can be created by summing …",null,null],[10,"sum","","Method which takes an iterator and generates <code>Self</code> from …",63,[[]]],[3,"Cloned","","An iterator that clones the elements of an underlying …",null,null],[12,"it","","",64,null],[3,"Copied","","An iterator that copies the elements of an underlying …",null,null],[12,"it","","",65,null],[3,"Flatten","","An iterator that flattens one level of nesting in an …",null,null],[12,"inner","","",66,null],[3,"MapWhile","","An iterator that only accepts elements while <code>predicate</code> …",null,null],[12,"iter","","",67,null],[12,"predicate","","",67,null],[8,"SourceIter","","This trait provides transitive access to source-stage in …",null,null],[16,"Source","","A source stage in an iterator pipeline.",68,null],[10,"as_inner","","Retrieve the source of an iterator pipeline.",68,[[]]],[3,"StepBy","","An iterator for stepping iterators by a custom amount.",null,null],[12,"iter","","",69,null],[12,"step","","",69,null],[12,"first_take","","",69,null],[3,"Chain","","An iterator that links two iterators together, in a chain.",null,null],[12,"a","","",70,null],[12,"b","","",70,null],[3,"Cycle","","An iterator that repeats endlessly.",null,null],[12,"orig","","",71,null],[12,"iter","","",71,null],[3,"Enumerate","","An iterator that yields the current count and the element …",null,null],[12,"iter","","",72,null],[12,"count","","",72,null],[3,"Filter","","An iterator that filters the elements of <code>iter</code> with …",null,null],[12,"iter","","",73,null],[12,"predicate","","",73,null],[3,"FilterMap","","An iterator that uses <code>f</code> to both filter and map elements …",null,null],[12,"iter","","",74,null],[12,"f","","",74,null],[3,"FlatMap","","An iterator that maps each element to an iterator, and …",null,null],[12,"inner","","",75,null],[3,"Fuse","","An iterator that yields <code>None</code> forever after the underlying …",null,null],[12,"iter","","",76,null],[3,"Inspect","","An iterator that calls a function with a reference to …",null,null],[12,"iter","","",77,null],[12,"f","","",77,null],[3,"Map","","An iterator that maps the values of <code>iter</code> with <code>f</code>.",null,null],[12,"iter","","",78,null],[12,"f","","",78,null],[3,"Peekable","","An iterator with a <code>peek()</code> that returns an optional …",null,null],[12,"iter","","",79,null],[12,"peeked","","Remember a peeked value, even if it was None.",79,null],[3,"Rev","","A double-ended iterator with the direction inverted.",null,null],[12,"iter","","",80,null],[3,"Scan","","An iterator to maintain state while iterating another …",null,null],[12,"iter","","",81,null],[12,"f","","",81,null],[12,"state","","",81,null],[3,"Skip","","An iterator that skips over <code>n</code> elements of <code>iter</code>.",null,null],[12,"iter","","",82,null],[12,"n","","",82,null],[3,"SkipWhile","","An iterator that rejects elements while <code>predicate</code> returns …",null,null],[12,"iter","","",83,null],[12,"flag","","",83,null],[12,"predicate","","",83,null],[3,"Take","","An iterator that only iterates over the first <code>n</code> …",null,null],[12,"iter","","",84,null],[12,"n","","",84,null],[3,"TakeWhile","","An iterator that only accepts elements while <code>predicate</code> …",null,null],[12,"iter","","",85,null],[12,"flag","","",85,null],[12,"predicate","","",85,null],[3,"Zip","","An iterator that iterates two other iterators …",null,null],[12,"a","","",86,null],[12,"b","","",86,null],[12,"index","","",86,null],[12,"len","","",86,null],[3,"Intersperse","","An iterator adapter that places a separator between all …",null,null],[12,"separator","","",87,null],[12,"iter","","",87,null],[12,"needs_sep","","",87,null],[3,"IntersperseWith","","An iterator adapter that places a separator between all …",null,null],[12,"separator","","",88,null],[12,"iter","","",88,null],[12,"needs_sep","","",88,null],[0,"marker","wasmer_types::lib::std","Primitive traits and types representing basic properties …",null,null],[8,"Send","wasmer_types::lib::std::marker","Types that can be transferred across thread boundaries.",null,null],[8,"Sized","","Types with a constant size known at compile time.",null,null],[8,"Unsize","","Types that can be \\\"unsized\\\" to a dynamically-sized type.",null,null],[8,"StructuralPartialEq","","Required trait for constants used in pattern matches.",null,null],[8,"StructuralEq","","Required trait for constants used in pattern matches.",null,null],[8,"Copy","","Types whose values can be duplicated simply by copying …",null,null],[8,"Sync","","Types for which it is safe to share references between …",null,null],[3,"PhantomData","","Zero-sized type used to mark things that \\\"act like\\\" they …",null,null],[8,"DiscriminantKind","","Compiler-internal trait used to indicate the type of enum …",null,null],[16,"Discriminant","","The type of the discriminant, which must satisfy the trait…",89,null],[8,"Unpin","","Types that can be safely moved after being pinned.",null,null],[3,"PhantomPinned","","A marker type which does not implement <code>Unpin</code>.",null,null],[14,"Copy","","Derive macro generating an impl of the trait <code>Copy</code>.",null,null],[0,"mem","wasmer_types::lib::std","Basic functions for dealing with memory.",null,null],[5,"forget","wasmer_types::lib::std::mem","Takes ownership and \\\"forgets\\\" about the value <strong>without …",null,[[]]],[5,"forget_unsized","","Like [<code>forget</code>], but also accepts unsized values.",null,[[]]],[5,"size_of","","Returns the size of a type in bytes.",null,[[],["usize",15]]],[5,"size_of_val","","Returns the size of the pointed-to value in bytes.",null,[[],["usize",15]]],[5,"size_of_val_raw","","Returns the size of the pointed-to value in bytes.",null,[[],["usize",15]]],[5,"min_align_of","","Returns the ABI-required minimum alignment of a type.",null,[[],["usize",15]]],[5,"min_align_of_val","","Returns the ABI-required minimum alignment of the type of …",null,[[],["usize",15]]],[5,"align_of","","Returns the ABI-required minimum alignment of a type.",null,[[],["usize",15]]],[5,"align_of_val","","Returns the ABI-required minimum alignment of the type of …",null,[[],["usize",15]]],[5,"align_of_val_raw","","Returns the ABI-required minimum alignment of the type of …",null,[[],["usize",15]]],[5,"needs_drop","","Returns <code>true</code> if dropping values of type <code>T</code> matters.",null,[[],["bool",15]]],[5,"zeroed","","Returns the value of type <code>T</code> represented by the all-zero …",null,[[]]],[5,"uninitialized","","Bypasses Rust\'s normal memory-initialization checks by …",null,[[]]],[5,"swap","","Swaps the values at two mutable locations, without …",null,[[]]],[5,"take","","Replaces <code>dest</code> with the default value of <code>T</code>, returning the …",null,[[]]],[5,"replace","","Moves <code>src</code> into the referenced <code>dest</code>, returning the …",null,[[]]],[5,"drop","","Disposes of a value.",null,[[]]],[5,"transmute_copy","","Interprets <code>src</code> as having type <code>&U</code>, and then reads <code>src</code> …",null,[[]]],[3,"Discriminant","","Opaque type representing the discriminant of an enum.",null,null],[12,"0","","",90,null],[5,"discriminant","","Returns a value uniquely identifying the enum variant in <code>v</code>…",null,[[],["discriminant",3]]],[5,"variant_count","","Returns the number of variants in the enum type <code>T</code>.",null,[[],["usize",15]]],[3,"ManuallyDrop","","A wrapper to inhibit compiler from automatically calling <code>T</code>…",null,null],[12,"value","","",91,null],[19,"MaybeUninit","","A wrapper type to construct uninitialized instances of <code>T</code>.",null,null],[12,"uninit","","",92,null],[12,"value","","",92,null],[5,"transmute","","Reinterprets the bits of a value of one type as another …",null,[[]]],[0,"ops","wasmer_types::lib::std","Overloadable operators.",null,null],[8,"Add","wasmer_types::lib::std::ops","The addition operator <code>+</code>.",null,null],[16,"Output","","The resulting type after applying the <code>+</code> operator.",93,null],[10,"add","","Performs the <code>+</code> operation.",93,[[]]],[8,"Div","","The division operator <code>/</code>.",null,null],[16,"Output","","The resulting type after applying the <code>/</code> operator.",94,null],[10,"div","","Performs the <code>/</code> operation.",94,[[]]],[8,"Mul","","The multiplication operator <code>*</code>.",null,null],[16,"Output","","The resulting type after applying the <code>*</code> operator.",95,null],[10,"mul","","Performs the <code>*</code> operation.",95,[[]]],[8,"Neg","","The unary negation operator <code>-</code>.",null,null],[16,"Output","","The resulting type after applying the <code>-</code> operator.",96,null],[10,"neg","","Performs the unary <code>-</code> operation.",96,[[]]],[8,"Rem","","The remainder operator <code>%</code>.",null,null],[16,"Output","","The resulting type after applying the <code>%</code> operator.",97,null],[10,"rem","","Performs the <code>%</code> operation.",97,[[]]],[8,"Sub","","The subtraction operator <code>-</code>.",null,null],[16,"Output","","The resulting type after applying the <code>-</code> operator.",98,null],[10,"sub","","Performs the <code>-</code> operation.",98,[[]]],[8,"AddAssign","","The addition assignment operator <code>+=</code>.",null,null],[10,"add_assign","","Performs the <code>+=</code> operation.",99,[[]]],[8,"DivAssign","","The division assignment operator <code>/=</code>.",null,null],[10,"div_assign","","Performs the <code>/=</code> operation.",100,[[]]],[8,"MulAssign","","The multiplication assignment operator <code>*=</code>.",null,null],[10,"mul_assign","","Performs the <code>*=</code> operation.",101,[[]]],[8,"RemAssign","","The remainder assignment operator <code>%=</code>.",null,null],[10,"rem_assign","","Performs the <code>%=</code> operation.",102,[[]]],[8,"SubAssign","","The subtraction assignment operator <code>-=</code>.",null,null],[10,"sub_assign","","Performs the <code>-=</code> operation.",103,[[]]],[8,"BitAnd","","The bitwise AND operator <code>&</code>.",null,null],[16,"Output","","The resulting type after applying the <code>&</code> operator.",104,null],[10,"bitand","","Performs the <code>&</code> operation.",104,[[]]],[8,"BitOr","","The bitwise OR operator <code>|</code>.",null,null],[16,"Output","","The resulting type after applying the <code>|</code> operator.",105,null],[10,"bitor","","Performs the <code>|</code> operation.",105,[[]]],[8,"BitXor","","The bitwise XOR operator <code>^</code>.",null,null],[16,"Output","","The resulting type after applying the <code>^</code> operator.",106,null],[10,"bitxor","","Performs the <code>^</code> operation.",106,[[]]],[8,"Not","","The unary logical negation operator <code>!</code>.",null,null],[16,"Output","","The resulting type after applying the <code>!</code> operator.",107,null],[10,"not","","Performs the unary <code>!</code> operation.",107,[[]]],[8,"Shl","","The left shift operator <code><<</code>. Note that because this trait …",null,null],[16,"Output","","The resulting type after applying the <code><<</code> operator.",108,null],[10,"shl","","Performs the <code><<</code> operation.",108,[[]]],[8,"Shr","","The right shift operator <code>>></code>. Note that because this trait …",null,null],[16,"Output","","The resulting type after applying the <code>>></code> operator.",109,null],[10,"shr","","Performs the <code>>></code> operation.",109,[[]]],[8,"BitAndAssign","","The bitwise AND assignment operator <code>&=</code>.",null,null],[10,"bitand_assign","","Performs the <code>&=</code> operation.",110,[[]]],[8,"BitOrAssign","","The bitwise OR assignment operator <code>|=</code>.",null,null],[10,"bitor_assign","","Performs the <code>|=</code> operation.",111,[[]]],[8,"BitXorAssign","","The bitwise XOR assignment operator <code>^=</code>.",null,null],[10,"bitxor_assign","","Performs the <code>^=</code> operation.",112,[[]]],[8,"ShlAssign","","The left shift assignment operator <code><<=</code>.",null,null],[10,"shl_assign","","Performs the <code><<=</code> operation.",113,[[]]],[8,"ShrAssign","","The right shift assignment operator <code>>>=</code>.",null,null],[10,"shr_assign","","Performs the <code>>>=</code> operation.",114,[[]]],[8,"Deref","","Used for immutable dereferencing operations, like <code>*v</code>.",null,null],[16,"Target","","The resulting type after dereferencing.",115,null],[10,"deref","","Dereferences the value.",115,[[]]],[8,"DerefMut","","Used for mutable dereferencing operations, like in <code>*v = 1;</code>…",null,null],[10,"deref_mut","","Mutably dereferences the value.",116,[[]]],[8,"Drop","","Custom code within the destructor.",null,null],[10,"drop","","Executes the destructor for this type.",117,[[]]],[8,"Fn","","The version of the call operator that takes an immutable …",null,null],[10,"call","","Performs the call operation.",118,[[]]],[8,"FnMut","","The version of the call operator that takes a mutable …",null,null],[10,"call_mut","","Performs the call operation.",119,[[]]],[8,"FnOnce","","The version of the call operator that takes a by-value …",null,null],[16,"Output","","The returned type after the call operator is used.",120,null],[10,"call_once","","Performs the call operation.",120,[[]]],[8,"Index","","Used for indexing operations (<code>container[index]</code>) in …",null,null],[16,"Output","","The returned type after indexing.",121,null],[10,"index","","Performs the indexing (<code>container[index]</code>) operation.",121,[[]]],[8,"IndexMut","","Used for indexing operations (<code>container[index]</code>) in …",null,null],[10,"index_mut","","Performs the mutable indexing (<code>container[index]</code>) …",122,[[]]],[3,"Range","","A (half-open) range bounded inclusively below and …",null,null],[12,"start","","The lower bound of the range (inclusive).",123,null],[12,"end","","The upper bound of the range (exclusive).",123,null],[3,"RangeFrom","","A range only bounded inclusively below (<code>start..</code>).",null,null],[12,"start","","The lower bound of the range (inclusive).",124,null],[3,"RangeFull","","An unbounded range (<code>..</code>).",null,null],[3,"RangeTo","","A range only bounded exclusively above (<code>..end</code>).",null,null],[12,"end","","The upper bound of the range (exclusive).",125,null],[4,"Bound","","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",126,null],[13,"Excluded","","An exclusive bound.",126,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in …",126,null],[8,"RangeBounds","","<code>RangeBounds</code> is implemented by Rust\'s built-in range …",null,null],[10,"start_bound","","Start index bound.",127,[[],["bound",4]]],[10,"end_bound","","End index bound.",127,[[],["bound",4]]],[11,"assert_len","","Performs bounds-checking of this range.",127,[[["usize",15]],[["usize",15],["range",3]]]],[11,"contains","","Returns <code>true</code> if <code>item</code> is contained in the range.",127,[[],["bool",15]]],[3,"RangeInclusive","","A range bounded inclusively below and above (<code>start..=end</code>).",null,null],[12,"start","","",128,null],[12,"end","","",128,null],[12,"exhausted","","",128,null],[3,"RangeToInclusive","","A range only bounded inclusively above (<code>..=end</code>).",null,null],[12,"end","","The upper bound of the range (inclusive)",129,null],[8,"Try","","A trait for customizing the behavior of the <code>?</code> operator.",null,null],[16,"Ok","","The type of this value when viewed as successful.",130,null],[16,"Error","","The type of this value when viewed as failed.",130,null],[10,"into_result","","Applies the \\\"?\\\" operator. A return of <code>Ok(t)</code> means that the…",130,[[],["result",4]]],[10,"from_error","","Wrap an error value to construct the composite result. …",130,[[]]],[10,"from_ok","","Wrap an OK value to construct the composite result. For …",130,[[]]],[8,"Generator","","The trait implemented by builtin generator types.",null,null],[16,"Yield","","The type of value this generator yields.",131,null],[16,"Return","","The type of value this generator returns.",131,null],[10,"resume","","Resumes the execution of this generator.",131,[[["pin",3]],["generatorstate",4]]],[4,"GeneratorState","","The result of a generator resumption.",null,null],[13,"Yielded","","The generator suspended with a value.",132,null],[13,"Complete","","The generator completed with a return value.",132,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper …",null,null],[8,"DispatchFromDyn","","This is used for object safety, to check that a method\'s …",null,null],[4,"ControlFlow","","Used to make try_fold closures more like normal loops",null,null],[13,"Continue","","Continue in the loop, using the given value for the next …",133,null],[13,"Break","","Exit the loop, yielding the given value",133,null],[0,"ptr","wasmer_types::lib::std","Manually manage memory through raw pointers.",null,null],[5,"drop_in_place","wasmer_types::lib::std::ptr","Executes the destructor (if any) of the pointed-to value.",null,[[]]],[5,"null","","Creates a null raw pointer.",null,[[]]],[5,"null_mut","","Creates a null mutable raw pointer.",null,[[]]],[5,"slice_from_raw_parts","","Forms a raw slice from a pointer and a length.",null,[[["usize",15]]]],[5,"slice_from_raw_parts_mut","","Performs the same functionality as [<code>slice_from_raw_parts</code>]…",null,[[["usize",15]]]],[5,"swap","","Swaps the values at two mutable locations of the same …",null,[[]]],[5,"swap_nonoverlapping","","Swaps <code>count * size_of::<T>()</code> bytes between the two …",null,[[["usize",15]]]],[5,"replace","","Moves <code>src</code> into the pointed <code>dst</code>, returning the previous <code>dst</code>…",null,[[]]],[5,"read","","Reads the value from <code>src</code> without moving it. This leaves …",null,[[]]],[5,"read_unaligned","","Reads the value from <code>src</code> without moving it. This leaves …",null,[[]]],[5,"write","","Overwrites a memory location with the given value without …",null,[[]]],[5,"write_unaligned","","Overwrites a memory location with the given value without …",null,[[]]],[5,"read_volatile","","Performs a volatile read of the value from <code>src</code> without …",null,[[]]],[5,"write_volatile","","Performs a volatile write of a memory location with the …",null,[[]]],[5,"eq","","Compares raw pointers for equality.",null,[[],["bool",15]]],[5,"hash","","Hash a raw pointer.",null,[[]]],[5,"copy_nonoverlapping","","Copies <code>count * size_of::<T>()</code> bytes from <code>src</code> to <code>dst</code>. The …",null,[[["usize",15]]]],[5,"copy","","Copies <code>count * size_of::<T>()</code> bytes from <code>src</code> to <code>dst</code>. The …",null,[[["usize",15]]]],[5,"write_bytes","","Sets <code>count * size_of::<T>()</code> bytes of memory starting at …",null,[[["usize",15],["u8",15]]]],[3,"NonNull","","<code>*mut T</code> but non-zero and covariant.",null,null],[12,"pointer","","",134,null],[14,"addr_of","","Create a <code>const</code> raw pointer to a place, without creating …",null,null],[14,"addr_of_mut","","Create a <code>mut</code> raw pointer to a place, without creating an …",null,null],[0,"rc","wasmer_types::lib::std","Single-threaded reference-counting pointers. \'Rc\' stands …",null,null],[3,"Rc","wasmer_types::lib::std::rc","A single-threaded reference-counting pointer. \'Rc\' stands …",null,null],[12,"ptr","","",135,null],[12,"phantom","","",135,null],[3,"Weak","","<code>Weak</code> is a version of [<code>Rc</code>] that holds a non-owning …",null,null],[12,"ptr","","",136,null],[0,"slice","wasmer_types::lib::std","A dynamically-sized view into a contiguous sequence, <code>[T]</code>.",null,null],[8,"Concat","wasmer_types::lib::std::slice","Helper trait for <code>[T]::concat</code>.",null,null],[16,"Output","","The resulting type after concatenation",137,null],[10,"concat","","Implementation of <code>[T]::concat</code>",137,[[]]],[8,"Join","","Helper trait for <code>[T]::join</code>",null,null],[16,"Output","","The resulting type after concatenation",138,null],[10,"join","","Implementation of <code>[T]::join</code>",138,[[]]],[3,"ArrayChunks","","An iterator over a slice in (non-overlapping) chunks (<code>N</code> …",null,null],[12,"iter","","",139,null],[12,"rem","","",139,null],[3,"ArrayChunksMut","","An iterator over a slice in (non-overlapping) mutable …",null,null],[12,"iter","","",140,null],[12,"rem","","",140,null],[3,"ArrayWindows","","A windowed iterator over a slice in overlapping chunks (<code>N</code> …",null,null],[12,"slice_head","","",141,null],[12,"num","","",141,null],[12,"marker","","",141,null],[8,"SliceIndex","","A helper trait used for indexing operations.",null,null],[16,"Output","","The output type returned by methods.",142,null],[10,"get","","Returns a shared reference to the output at this …",142,[[],["option",4]]],[10,"get_mut","","Returns a mutable reference to the output at this …",142,[[],["option",4]]],[10,"get_unchecked","","Returns a shared reference to the output at this …",142,[[]]],[10,"get_unchecked_mut","","Returns a mutable reference to the output at this …",142,[[]]],[10,"index","","Returns a shared reference to the output at this …",142,[[]]],[10,"index_mut","","Returns a mutable reference to the output at this …",142,[[]]],[5,"from_mut","","Converts a reference to T into a slice of length 1 …",null,[[]]],[5,"from_ref","","Converts a reference to T into a slice of length 1 …",null,[[]]],[5,"from_raw_parts","","Forms a slice from a pointer and a length.",null,[[["usize",15]]]],[5,"from_raw_parts_mut","","Performs the same functionality as [<code>from_raw_parts</code>], …",null,[[["usize",15]]]],[3,"Chunks","","An iterator over a slice in (non-overlapping) chunks (…",null,null],[12,"v","","",143,null],[12,"chunk_size","","",143,null],[3,"Windows","","An iterator over overlapping subslices of length <code>size</code>.",null,null],[12,"v","","",144,null],[12,"size","","",144,null],[3,"ChunksExact","","An iterator over a slice in (non-overlapping) chunks (…",null,null],[12,"v","","",145,null],[12,"rem","","",145,null],[12,"chunk_size","","",145,null],[3,"ChunksExactMut","","An iterator over a slice in (non-overlapping) mutable …",null,null],[12,"v","","",146,null],[12,"rem","","",146,null],[12,"chunk_size","","",146,null],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable …",null,null],[12,"v","","",147,null],[12,"chunk_size","","",147,null],[3,"Split","","An iterator over subslices separated by elements that …",null,null],[12,"v","","",148,null],[12,"pred","","",148,null],[12,"finished","","",148,null],[3,"SplitMut","","An iterator over the mutable subslices of the vector …",null,null],[12,"v","","",149,null],[12,"pred","","",149,null],[12,"finished","","",149,null],[3,"GroupBy","","An iterator over slice in (non-overlapping) chunks …",null,null],[12,"slice","","",150,null],[12,"predicate","","",150,null],[3,"GroupByMut","","An iterator over slice in (non-overlapping) mutable …",null,null],[12,"slice","","",151,null],[12,"predicate","","",151,null],[3,"Iter","","Immutable slice iterator",null,null],[12,"ptr","","",152,null],[12,"end","","",152,null],[12,"_marker","","",152,null],[3,"IterMut","","Mutable slice iterator.",null,null],[12,"ptr","","",153,null],[12,"end","","",153,null],[12,"_marker","","",153,null],[3,"RChunks","","An iterator over a slice in (non-overlapping) chunks (…",null,null],[12,"v","","",154,null],[12,"chunk_size","","",154,null],[3,"RChunksExact","","An iterator over a slice in (non-overlapping) chunks (…",null,null],[12,"v","","",155,null],[12,"rem","","",155,null],[12,"chunk_size","","",155,null],[3,"RChunksExactMut","","An iterator over a slice in (non-overlapping) mutable …",null,null],[12,"v","","",156,null],[12,"rem","","",156,null],[12,"chunk_size","","",156,null],[3,"RChunksMut","","An iterator over a slice in (non-overlapping) mutable …",null,null],[12,"v","","",157,null],[12,"chunk_size","","",157,null],[3,"RSplit","","An iterator over subslices separated by elements that …",null,null],[12,"inner","","",158,null],[3,"RSplitMut","","An iterator over the subslices of the vector which are …",null,null],[12,"inner","","",159,null],[3,"RSplitN","","An iterator over subslices separated by elements that …",null,null],[12,"inner","","",160,null],[3,"RSplitNMut","","An iterator over subslices separated by elements that …",null,null],[12,"inner","","",161,null],[3,"SplitN","","An iterator over subslices separated by elements that …",null,null],[12,"inner","","",162,null],[3,"SplitNMut","","An iterator over subslices separated by elements that …",null,null],[12,"inner","","",163,null],[0,"string","wasmer_types::lib::std","A UTF-8–encoded, growable string.",null,null],[3,"String","wasmer_types::lib::std::string","A UTF-8–encoded, growable string.",null,null],[12,"vec","","",164,null],[3,"FromUtf8Error","","A possible error value when converting a <code>String</code> from a …",null,null],[12,"bytes","","",165,null],[12,"error","","",165,null],[3,"FromUtf16Error","","A possible error value when converting a <code>String</code> from a …",null,null],[12,"0","","",166,null],[6,"ParseError","","A type alias for <code>Infallible</code>.",null,null],[8,"ToString","","A trait for converting a value to a <code>String</code>.",null,null],[10,"to_string","","Converts the given value to a <code>String</code>.",167,[[],["string",3]]],[3,"Drain","","A draining iterator for <code>String</code>.",null,null],[12,"string","","Will be used as &\'a mut String in the destructor",168,null],[12,"start","","Start of part to remove",168,null],[12,"end","","End of part to remove",168,null],[12,"iter","","Current remaining range to remove",168,null],[0,"sync","wasmer_types::lib::std","Useful synchronization primitives.",null,null],[0,"mpsc","wasmer_types::lib::std::sync","Multi-producer, single-consumer FIFO queue communication …",null,null],[3,"Receiver","wasmer_types::lib::std::sync::mpsc","The receiving half of Rust\'s [<code>channel</code>] (or [<code>sync_channel</code>]…",null,null],[12,"inner","","",169,null],[3,"Iter","","An iterator over messages on a [<code>Receiver</code>], created by <code>iter</code>…",null,null],[12,"rx","","",170,null],[3,"TryIter","","An iterator that attempts to yield all pending values for …",null,null],[12,"rx","","",171,null],[3,"IntoIter","","An owning iterator over messages on a [<code>Receiver</code>], created …",null,null],[12,"rx","","",172,null],[3,"Sender","","The sending-half of Rust\'s asynchronous [<code>channel</code>] type. …",null,null],[12,"inner","","",173,null],[3,"SyncSender","","The sending-half of Rust\'s synchronous [<code>sync_channel</code>] …",null,null],[12,"inner","","",174,null],[3,"SendError","","An error returned from the [<code>Sender::send</code>] or […",null,null],[12,"0","","",175,null],[3,"RecvError","","An error returned from the <code>recv</code> function on a [<code>Receiver</code>].",null,null],[4,"TryRecvError","","This enumeration is the list of the possible reasons that …",null,null],[13,"Empty","","This <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …",176,null],[13,"Disconnected","","The <strong>channel</strong>\'s sending half has become disconnected, and …",176,null],[4,"RecvTimeoutError","","This enumeration is the list of possible errors that made …",null,null],[13,"Timeout","","This <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …",177,null],[13,"Disconnected","","The <strong>channel</strong>\'s sending half has become disconnected, and …",177,null],[4,"TrySendError","","This enumeration is the list of the possible error …",null,null],[13,"Full","","The data could not be sent on the [<code>sync_channel</code>] because …",178,null],[13,"Disconnected","","This [<code>sync_channel</code>]\'s receiving half has disconnected, so …",178,null],[5,"channel","","Creates a new asynchronous channel, returning the …",null,[[]]],[5,"sync_channel","","Creates a new synchronous, bounded channel. All data sent …",null,[[["usize",15]]]],[3,"Arc","wasmer_types::lib::std::sync","A thread-safe reference-counting pointer. \'Arc\' stands …",null,null],[12,"ptr","","",179,null],[12,"phantom","","",179,null],[3,"Weak","","<code>Weak</code> is a version of [<code>Arc</code>] that holds a non-owning …",null,null],[12,"ptr","","",180,null],[0,"atomic","","Atomic types",null,null],[3,"AtomicBool","wasmer_types::lib::std::sync::atomic","A boolean type which can be safely shared between threads.",null,null],[12,"v","","",181,null],[3,"AtomicPtr","","A raw pointer type which can be safely shared between …",null,null],[12,"p","","",182,null],[4,"Ordering","","Atomic memory orderings",null,null],[13,"Relaxed","","No ordering constraints, only atomic operations.",183,null],[13,"Release","","When coupled with a store, all previous operations become …",183,null],[13,"Acquire","","When coupled with a load, if the loaded value was written …",183,null],[13,"AcqRel","","Has the effects of both [<code>Acquire</code>] and [<code>Release</code>] together: …",183,null],[13,"SeqCst","","Like [<code>Acquire</code>]/[<code>Release</code>]/[<code>AcqRel</code>] (for load, store, and …",183,null],[17,"ATOMIC_BOOL_INIT","","An [<code>AtomicBool</code>] initialized to <code>false</code>.",null,null],[3,"AtomicI8","","An integer type which can be safely shared between …",null,null],[12,"v","","",184,null],[17,"ATOMIC_I8_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicU8","","An integer type which can be safely shared between …",null,null],[12,"v","","",185,null],[17,"ATOMIC_U8_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicI16","","An integer type which can be safely shared between …",null,null],[12,"v","","",186,null],[17,"ATOMIC_I16_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicU16","","An integer type which can be safely shared between …",null,null],[12,"v","","",187,null],[17,"ATOMIC_U16_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicI32","","An integer type which can be safely shared between …",null,null],[12,"v","","",188,null],[17,"ATOMIC_I32_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicU32","","An integer type which can be safely shared between …",null,null],[12,"v","","",189,null],[17,"ATOMIC_U32_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicI64","","An integer type which can be safely shared between …",null,null],[12,"v","","",190,null],[17,"ATOMIC_I64_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicU64","","An integer type which can be safely shared between …",null,null],[12,"v","","",191,null],[17,"ATOMIC_U64_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicIsize","","An integer type which can be safely shared between …",null,null],[12,"v","","",192,null],[17,"ATOMIC_ISIZE_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[3,"AtomicUsize","","An integer type which can be safely shared between …",null,null],[12,"v","","",193,null],[17,"ATOMIC_USIZE_INIT","","An atomic integer initialized to <code>0</code>.",null,null],[5,"fence","","An atomic fence.",null,[[["ordering",4]]]],[5,"compiler_fence","","A compiler memory fence.",null,[[["ordering",4]]]],[5,"spin_loop_hint","","Signals the processor that it is inside a busy-wait …",null,[[]]],[3,"Barrier","wasmer_types::lib::std::sync","A barrier enables multiple threads to synchronize the …",null,null],[12,"lock","","",194,null],[12,"cvar","","",194,null],[12,"num_threads","","",194,null],[3,"BarrierWaitResult","","A <code>BarrierWaitResult</code> is returned by [<code>Barrier::wait()</code>] when …",null,null],[12,"0","","",195,null],[3,"Condvar","","A Condition Variable",null,null],[12,"inner","","",196,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition …",null,null],[12,"0","","",197,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared …",null,null],[12,"inner","","",198,null],[12,"poison","","",198,null],[12,"data","","",198,null],[3,"MutexGuard","","An RAII implementation of a \\\"scoped lock\\\" of a mutex. …",null,null],[12,"lock","","",199,null],[12,"poison","","",199,null],[3,"Once","","A synchronization primitive which can be used to run a …",null,null],[12,"state_and_queue","","",200,null],[12,"_marker","","",200,null],[3,"OnceState","","State yielded to [<code>Once::call_once_force()</code>]’s closure …",null,null],[12,"poisoned","","",201,null],[12,"set_state_on_drop_to","","",201,null],[17,"ONCE_INIT","","Initialization value for static [<code>Once</code>] values.",null,null],[3,"RwLock","","A reader-writer lock",null,null],[12,"inner","","",202,null],[12,"poison","","",202,null],[12,"data","","",202,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of …",null,null],[12,"lock","","",203,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access …",null,null],[12,"lock","","",204,null],[12,"poison","","",204,null],[6,"LockResult","","A type alias for the result of a lock method which can be …",null,null],[3,"PoisonError","","A type of error which can be returned whenever a lock is …",null,null],[12,"guard","","",205,null],[4,"TryLockError","","An enumeration of possible errors associated with a […",null,null],[13,"Poisoned","","The lock could not be acquired because another thread …",206,null],[13,"WouldBlock","","The lock could not be acquired at this time because the …",206,null],[6,"TryLockResult","","A type alias for the result of a nonblocking locking …",null,null],[0,"u32","wasmer_types::lib::std","Constants for the 32-bit unsigned integer type.",null,null],[17,"MIN","wasmer_types::lib::std::u32","The smallest value that can be represented by this …",null,null],[17,"MAX","","The largest value that can be represented by this integer …",null,null],[0,"vec","wasmer_types::lib::std","A contiguous growable array type with heap-allocated …",null,null],[3,"Vec","wasmer_types::lib::std::vec","A contiguous growable array type, written <code>Vec<T></code> but …",null,null],[12,"buf","","",207,null],[12,"len","","",207,null],[3,"DrainFilter","","An iterator which uses a closure to determine if an …",null,null],[12,"vec","","",208,null],[12,"idx","","The index of the item that will be inspected by the next …",208,null],[12,"del","","The number of items that have been drained (removed) thus …",208,null],[12,"old_len","","The original length of <code>vec</code> prior to draining.",208,null],[12,"pred","","The filter test predicate.",208,null],[12,"panic_flag","","A flag that indicates a panic has occurred in the filter …",208,null],[3,"Splice","","A splicing iterator for <code>Vec</code>.",null,null],[12,"drain","","",209,null],[12,"replace_with","","",209,null],[3,"Drain","","A draining iterator for <code>Vec<T></code>.",null,null],[12,"tail_start","","Index of tail to preserve",210,null],[12,"tail_len","","Length of tail",210,null],[12,"iter","","Current remaining range to remove",210,null],[12,"vec","","",210,null],[3,"IntoIter","","An iterator that moves out of a vector.",null,null],[12,"buf","","",211,null],[12,"phantom","","",211,null],[12,"cap","","",211,null],[12,"alloc","","",211,null],[12,"ptr","","",211,null],[12,"end","","",211,null],[14,"vec","wasmer_types::lib::std","Creates a <code>Vec</code> containing the arguments.",null,null],[0,"archives","wasmer_types","",null,null],[3,"ArchivableIndexMap","wasmer_types::archives","Rkyv Archivable IndexMap",null,null],[12,"indices","","",212,null],[12,"entries","","",212,null],[3,"ArchivedArchivableIndexMap","","",null,null],[12,"indices","","",213,null],[12,"entries","","",213,null],[3,"ArchivableIndexMapResolver","","",null,null],[12,"indices","","",214,null],[12,"entries","","",214,null],[0,"extern_ref","wasmer_types","",null,null],[3,"VMExternRef","wasmer_types::extern_ref","This type does not do reference counting automatically, …",null,null],[12,"0","","",215,null],[18,"MAX_REFCOUNT","","The maximum number of references allowed to this data.",215,null],[11,"is_null","","Checks if the given ExternRef is null.",215,[[],["bool",15]]],[11,"null","","New null extern ref",215,[[]]],[11,"to_binary","","Get a bit-level representation of an externref. For …",215,[[],["i128",15]]],[11,"from_binary","","Create an externref from bit-level representation. For …",215,[[["i128",15]]]],[11,"new","","Make a new extern reference",215,[[]]],[11,"downcast","","Try to downcast to the given value",215,[[],["option",4]]],[11,"sanity_check_ref_count","","Panic if the ref count gets too high.",215,[[["usize",15]]]],[11,"ref_inc_by","","A low-level function to increment the strong-count a …",215,[[["usize",15]]]],[11,"ref_clone","","A deep copy of the reference, increments the strong count.",215,[[]]],[11,"ref_drop","","Does an inner drop, decrementing the strong count",215,[[]]],[11,"strong_count","","Get the number of strong references to this data.",215,[[],["usize",15]]],[3,"VMExternRefInner","","",null,null],[12,"strong","","",216,null],[12,"data","","Do something obviously correct to get started. This can …",216,null],[11,"new","","",216,[[]]],[11,"increment_ref_count","","Increments the reference count. Returns the old value.",216,[[["usize",15]],["usize",15]]],[11,"decrement_and_drop","","Decrement the count and drop the data if the count hits 0 …",216,[[],["bool",15]]],[3,"ExternRef","","An opaque reference to some data. This reference can be …",null,null],[12,"inner","","",217,null],[11,"is_null","","Checks if the given ExternRef is null.",217,[[],["bool",15]]],[11,"null","","New null extern ref",217,[[]]],[11,"new","","Make a new extern reference",217,[[]]],[11,"downcast","","Try to downcast to the given value",217,[[],["option",4]]],[11,"strong_count","","Get the number of strong references to this data.",217,[[],["usize",15]]],[0,"features","wasmer_types","",null,null],[3,"Features","wasmer_types::features","Controls which experimental features will be enabled. …",null,null],[12,"threads","","Threads proposal should be enabled",218,null],[12,"reference_types","","Reference Types proposal should be enabled",218,null],[12,"simd","","SIMD proposal should be enabled",218,null],[12,"bulk_memory","","Bulk Memory proposal should be enabled",218,null],[12,"multi_value","","Multi Value proposal should be enabled",218,null],[12,"tail_call","","Tail call proposal should be enabled",218,null],[12,"module_linking","","Module Linking proposal should be enabled",218,null],[12,"multi_memory","","Multi Memory proposal should be enabled",218,null],[12,"memory64","","64-bit Memory proposal should be enabled",218,null],[12,"exceptions","","Wasm exceptions proposal should be enabled",218,null],[3,"ArchivedFeatures","","",null,null],[12,"threads","","",219,null],[12,"reference_types","","",219,null],[12,"simd","","",219,null],[12,"bulk_memory","","",219,null],[12,"multi_value","","",219,null],[12,"tail_call","","",219,null],[12,"module_linking","","",219,null],[12,"multi_memory","","",219,null],[12,"memory64","","",219,null],[12,"exceptions","","",219,null],[3,"FeaturesResolver","","",null,null],[12,"threads","","",220,null],[12,"reference_types","","",220,null],[12,"simd","","",220,null],[12,"bulk_memory","","",220,null],[12,"multi_value","","",220,null],[12,"tail_call","","",220,null],[12,"module_linking","","",220,null],[12,"multi_memory","","",220,null],[12,"memory64","","",220,null],[12,"exceptions","","",220,null],[11,"new","","Create a new feature",218,[[]]],[11,"threads","","Configures whether the WebAssembly threads proposal will …",218,[[["bool",15]]]],[11,"reference_types","","Configures whether the WebAssembly reference types …",218,[[["bool",15]]]],[11,"simd","","Configures whether the WebAssembly SIMD proposal will be …",218,[[["bool",15]]]],[11,"bulk_memory","","Configures whether the WebAssembly bulk memory operations …",218,[[["bool",15]]]],[11,"multi_value","","Configures whether the WebAssembly multi-value proposal …",218,[[["bool",15]]]],[11,"tail_call","","Configures whether the WebAssembly tail-call proposal will…",218,[[["bool",15]]]],[11,"module_linking","","Configures whether the WebAssembly module linking …",218,[[["bool",15]]]],[11,"multi_memory","","Configures whether the WebAssembly multi-memory proposal …",218,[[["bool",15]]]],[11,"memory64","","Configures whether the WebAssembly 64-bit memory proposal …",218,[[["bool",15]]]],[0,"indexes","wasmer_types","Helper functions and structures for the translation.",null,null],[3,"LocalFunctionIndex","wasmer_types::indexes","Index type of a function defined locally inside the …",null,null],[12,"0","","",221,null],[3,"ArchivedLocalFunctionIndex","","",null,null],[12,"0","","",222,null],[3,"LocalFunctionIndexResolver","","",null,null],[12,"0","","",223,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",221,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",221,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",222,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",222,[[],["u32",15]]],[3,"LocalTableIndex","","Index type of a table defined locally inside the …",null,null],[12,"0","","",224,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",224,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",224,[[],["u32",15]]],[3,"LocalMemoryIndex","","Index type of a memory defined locally inside the …",null,null],[12,"0","","",225,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",225,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",225,[[],["u32",15]]],[3,"LocalGlobalIndex","","Index type of a global defined locally inside the …",null,null],[12,"0","","",226,null],[3,"ArchivedLocalGlobalIndex","","",null,null],[12,"0","","",227,null],[3,"LocalGlobalIndexResolver","","",null,null],[12,"0","","",228,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",226,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",226,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",227,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",227,[[],["u32",15]]],[3,"FunctionIndex","","Index type of a function (imported or local) inside the …",null,null],[12,"0","","",229,null],[3,"ArchivedFunctionIndex","","",null,null],[12,"0","","",230,null],[3,"FunctionIndexResolver","","",null,null],[12,"0","","",231,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",229,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",229,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",230,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",230,[[],["u32",15]]],[3,"TableIndex","","Index type of a table (imported or local) inside the …",null,null],[12,"0","","",232,null],[3,"ArchivedTableIndex","","",null,null],[12,"0","","",233,null],[3,"TableIndexResolver","","",null,null],[12,"0","","",234,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",232,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",232,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",233,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",233,[[],["u32",15]]],[3,"GlobalIndex","","Index type of a global variable (imported or local) …",null,null],[12,"0","","",235,null],[3,"ArchivedGlobalIndex","","",null,null],[12,"0","","",236,null],[3,"GlobalIndexResolver","","",null,null],[12,"0","","",237,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",235,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",235,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",236,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",236,[[],["u32",15]]],[3,"MemoryIndex","","Index type of a linear memory (imported or local) inside …",null,null],[12,"0","","",238,null],[3,"ArchivedMemoryIndex","","",null,null],[12,"0","","",239,null],[3,"MemoryIndexResolver","","",null,null],[12,"0","","",240,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",238,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",238,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",239,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",239,[[],["u32",15]]],[3,"SignatureIndex","","Index type of a signature (imported or local) inside the …",null,null],[12,"0","","",241,null],[3,"ArchivedSignatureIndex","","",null,null],[12,"0","","",242,null],[3,"SignatureIndexResolver","","",null,null],[12,"0","","",243,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",241,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",241,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",242,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",242,[[],["u32",15]]],[3,"DataIndex","","Index type of a passive data segment inside the …",null,null],[12,"0","","",244,null],[3,"ArchivedDataIndex","","",null,null],[12,"0","","",245,null],[3,"DataIndexResolver","","",null,null],[12,"0","","",246,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",244,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",244,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",245,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",245,[[],["u32",15]]],[3,"ElemIndex","","Index type of a passive element segment inside the …",null,null],[12,"0","","",247,null],[3,"ArchivedElemIndex","","",null,null],[12,"0","","",248,null],[3,"ElemIndexResolver","","",null,null],[12,"0","","",249,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",247,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",247,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",248,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",248,[[],["u32",15]]],[3,"CustomSectionIndex","","Index type of a custom section inside a WebAssembly …",null,null],[12,"0","","",250,null],[3,"ArchivedCustomSectionIndex","","",null,null],[12,"0","","",251,null],[3,"CustomSectionIndexResolver","","",null,null],[12,"0","","",252,null],[11,"from_u32","","Create a new instance from a <code>u32</code>.",250,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",250,[[],["u32",15]]],[11,"from_u32","","Create a new instance from a <code>u32</code>.",251,[[["u32",15]]]],[11,"as_u32","","Return the underlying index value as a <code>u32</code>.",251,[[],["u32",15]]],[4,"ExportIndex","","An entity to export.",null,null],[13,"Function","","Function export.",253,null],[13,"Table","","Table export.",253,null],[13,"Memory","","Memory export.",253,null],[13,"Global","","Global export.",253,null],[4,"ArchivedExportIndex","","",null,null],[13,"Function","","",254,null],[13,"Table","","",254,null],[13,"Memory","","",254,null],[13,"Global","","",254,null],[4,"ExportIndexResolver","","",null,null],[13,"Function","","",255,null],[13,"Table","","",255,null],[13,"Memory","","",255,null],[13,"Global","","",255,null],[4,"ImportIndex","","An entity to import.",null,null],[13,"Function","","Function import.",256,null],[13,"Table","","Table import.",256,null],[13,"Memory","","Memory import.",256,null],[13,"Global","","Global import.",256,null],[4,"ArchivedImportIndex","","",null,null],[13,"Function","","",257,null],[13,"Table","","",257,null],[13,"Memory","","",257,null],[13,"Global","","",257,null],[4,"ImportIndexResolver","","",null,null],[13,"Function","","",258,null],[13,"Table","","",258,null],[13,"Memory","","",258,null],[13,"Global","","",258,null],[0,"initializers","wasmer_types","",null,null],[3,"TableInitializer","wasmer_types::initializers","A WebAssembly table initializer.",null,null],[12,"table_index","","The index of a table to initialize.",259,null],[12,"base","","Optionally, a global variable giving a base index.",259,null],[12,"offset","","The offset to add to the base.",259,null],[12,"elements","","The values to write into the table elements.",259,null],[3,"ArchivedTableInitializer","","",null,null],[12,"table_index","","",260,null],[12,"base","","",260,null],[12,"offset","","",260,null],[12,"elements","","",260,null],[3,"TableInitializerResolver","","",null,null],[12,"table_index","","",261,null],[12,"base","","",261,null],[12,"offset","","",261,null],[12,"elements","","",261,null],[3,"DataInitializerLocation","","A memory index and offset within that memory where a data …",null,null],[12,"memory_index","","The index of the memory to initialize.",262,null],[12,"base","","Optionally a Global variable base to initialize at.",262,null],[12,"offset","","A constant offset to initialize at.",262,null],[3,"ArchivedDataInitializerLocation","","",null,null],[12,"memory_index","","",263,null],[12,"base","","",263,null],[12,"offset","","",263,null],[3,"DataInitializerLocationResolver","","",null,null],[12,"memory_index","","",264,null],[12,"base","","",264,null],[12,"offset","","",264,null],[3,"DataInitializer","","A data initializer for linear memory.",null,null],[12,"location","","The location where the initialization is to be performed.",265,null],[12,"data","","The initialization data.",265,null],[3,"OwnedDataInitializer","","As <code>DataInitializer</code> but owning the data rather than …",null,null],[12,"location","","The location where the initialization is to be performed.",266,null],[12,"data","","The initialization owned data.",266,null],[3,"ArchivedOwnedDataInitializer","","",null,null],[12,"location","","",267,null],[12,"data","","",267,null],[3,"OwnedDataInitializerResolver","","",null,null],[12,"location","","",268,null],[12,"data","","",268,null],[11,"new","","Creates a new <code>OwnedDataInitializer</code> from a <code>DataInitializer</code>.",266,[[["datainitializer",3]]]],[0,"memory_view","wasmer_types","",null,null],[8,"Atomic","wasmer_types::memory_view","",null,null],[16,"Output","","",269,null],[8,"Atomicity","","A trait that represants an atomic type.",null,null],[3,"Atomically","","Atomically.",null,null],[3,"NonAtomically","","Non-atomically.",null,null],[3,"MemoryView","","A view into a memory.",null,null],[12,"ptr","","",270,null],[12,"length","","",270,null],[12,"_phantom","","",270,null],[11,"new","","Creates a new MemoryView given a <code>pointer</code> and <code>length</code>.",270,[[["u32",15]]]],[11,"atomically","","Get atomic access to a memory view.",270,[[],[["atomically",3],["memoryview",3]]]],[0,"native","wasmer_types","This module permits to create native functions easily in …",null,null],[8,"NativeWasmType","wasmer_types::native","<code>NativeWasmType</code> represents a Wasm type that has a direct …",null,null],[16,"Abi","","The ABI for this type (i32, i64, f32, f64)",271,null],[18,"WASM_TYPE","","Type for this <code>NativeWasmType</code>.",271,null],[10,"to_binary","","Convert self to i128 binary representation.",271,[[],["i128",15]]],[11,"to_value","","Convert self to a <code>Value</code>.",271,[[],[["wasmvaluetype",8],["value",4]]]],[10,"from_binary","","Convert to self from i128 binary representation.",271,[[["i128",15]]]],[8,"ValueType","","Trait for a Value type. A Value type is a type that is …",null,null],[0,"types","wasmer_types","",null,null],[4,"Type","wasmer_types::types","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",272,null],[13,"I64","","Signed 64 bit integer.",272,null],[13,"F32","","Floating point 32 bit integer.",272,null],[13,"F64","","Floating point 64 bit integer.",272,null],[13,"V128","","A 128 bit number.",272,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",272,null],[13,"FuncRef","","A reference to a Wasm function.",272,null],[4,"ArchivedType","","",null,null],[13,"I32","","",273,null],[13,"I64","","",273,null],[13,"F32","","",273,null],[13,"F64","","",273,null],[13,"V128","","",273,null],[13,"ExternRef","","",273,null],[13,"FuncRef","","",273,null],[4,"TypeResolver","","",null,null],[13,"I32","","",274,null],[13,"I64","","",274,null],[13,"F32","","",274,null],[13,"F64","","",274,null],[13,"V128","","",274,null],[13,"ExternRef","","",274,null],[13,"FuncRef","","",274,null],[11,"is_num","","Returns true if <code>Type</code> matches any of the numeric types. …",272,[[],["bool",15]]],[11,"is_ref","","Returns true if <code>Type</code> matches either of the reference …",272,[[],["bool",15]]],[3,"V128","","The WebAssembly V128 type",null,null],[12,"0","","",275,null],[3,"ArchivedV128","","",null,null],[12,"0","","",276,null],[3,"V128Resolver","","",null,null],[12,"0","","",277,null],[11,"bytes","","Get the bytes corresponding to the V128 value",275,[[]]],[11,"iter","","Iterate over the bytes in the constant.",275,[[]]],[11,"to_vec","","Convert the immediate into a vector.",275,[[],[["vec",3],["u8",15]]]],[11,"as_slice","","Convert the immediate into a slice.",275,[[]]],[4,"ExternType","","A list of all possible types which can be externally …",null,null],[13,"Function","","This external type is the type of a WebAssembly function.",278,null],[13,"Global","","This external type is the type of a WebAssembly global.",278,null],[13,"Table","","This external type is the type of a WebAssembly table.",278,null],[13,"Memory","","This external type is the type of a WebAssembly memory.",278,null],[5,"is_global_compatible","","",null,[[["globaltype",3]],["bool",15]]],[5,"is_table_element_type_compatible","","",null,[[["type",4]],["bool",15]]],[5,"is_table_compatible","","",null,[[["tabletype",3]],["bool",15]]],[5,"is_memory_compatible","","",null,[[["memorytype",3]],["bool",15]]],[11,"func","","Attempt to return the underlying type of this external …",278,[[],[["option",4],["functiontype",3]]]],[11,"unwrap_func","","Returns the underlying descriptor of this [<code>ExternType</code>], …",278,[[],["functiontype",3]]],[11,"global","","Attempt to return the underlying type of this external …",278,[[],[["globaltype",3],["option",4]]]],[11,"unwrap_global","","Returns the underlying descriptor of this [<code>ExternType</code>], …",278,[[],["globaltype",3]]],[11,"table","","Attempt to return the underlying type of this external …",278,[[],[["tabletype",3],["option",4]]]],[11,"unwrap_table","","Returns the underlying descriptor of this [<code>ExternType</code>], …",278,[[],["tabletype",3]]],[11,"memory","","Attempt to return the underlying type of this external …",278,[[],[["option",4],["memorytype",3]]]],[11,"unwrap_memory","","Returns the underlying descriptor of this [<code>ExternType</code>], …",278,[[],["memorytype",3]]],[11,"is_compatible_with","","Check if two externs are compatible",278,[[],["bool",15]]],[3,"FunctionType","","The signature of a function that is either implemented in …",null,null],[12,"params","","The parameters of the function",279,null],[12,"results","","The return values of the function",279,null],[3,"ArchivedFunctionType","","",null,null],[12,"params","","",280,null],[12,"results","","",280,null],[3,"FunctionTypeResolver","","",null,null],[12,"params","","",281,null],[12,"results","","",281,null],[11,"new","","Creates a new Function Type with the given parameter and …",279,[[]]],[11,"params","","Parameter types.",279,[[]]],[11,"results","","Return types.",279,[[]]],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",282,null],[13,"Var","","The value of the global can change over time",282,null],[4,"ArchivedMutability","","",null,null],[13,"Const","","",283,null],[13,"Var","","",283,null],[4,"MutabilityResolver","","",null,null],[13,"Const","","",284,null],[13,"Var","","",284,null],[11,"is_mutable","","Returns a boolean indicating if the enum is set to …",282,[[],["bool",15]]],[3,"GlobalType","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",285,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",285,null],[3,"ArchivedGlobalType","","",null,null],[12,"ty","","",286,null],[12,"mutability","","",286,null],[3,"GlobalTypeResolver","","",null,null],[12,"ty","","",287,null],[12,"mutability","","",287,null],[11,"new","","Create a new Global variable",285,[[["type",4],["mutability",4]]]],[4,"GlobalInit","","Globals are initialized via the <code>const</code> operators or by …",null,null],[13,"I32Const","","An <code>i32.const</code>.",288,null],[13,"I64Const","","An <code>i64.const</code>.",288,null],[13,"F32Const","","An <code>f32.const</code>.",288,null],[13,"F64Const","","An <code>f64.const</code>.",288,null],[13,"V128Const","","A <code>v128.const</code>.",288,null],[13,"GetGlobal","","A <code>global.get</code> of another global.",288,null],[13,"RefNullConst","","A <code>ref.null</code>.",288,null],[13,"RefFunc","","A <code>ref.func <index></code>.",288,null],[4,"ArchivedGlobalInit","","",null,null],[13,"I32Const","","",289,null],[13,"I64Const","","",289,null],[13,"F32Const","","",289,null],[13,"F64Const","","",289,null],[13,"V128Const","","",289,null],[13,"GetGlobal","","",289,null],[13,"RefNullConst","","",289,null],[13,"RefFunc","","",289,null],[4,"GlobalInitResolver","","",null,null],[13,"I32Const","","",290,null],[13,"I64Const","","",290,null],[13,"F32Const","","",290,null],[13,"F64Const","","",290,null],[13,"V128Const","","",290,null],[13,"GetGlobal","","",290,null],[13,"RefNullConst","","",290,null],[13,"RefFunc","","",290,null],[11,"from_value","","Get the <code>GlobalInit</code> from a given <code>Value</code>",288,[[["wasmvaluetype",8],["value",4]]]],[11,"to_value","","Get the <code>Value</code> from the Global init value",288,[[],[["wasmvaluetype",8],["value",4]]]],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[12,"ty","","The type of data stored in elements of the table.",291,null],[12,"minimum","","The minimum number of elements in the table.",291,null],[12,"maximum","","The maximum number of elements in the table.",291,null],[3,"ArchivedTableType","","",null,null],[12,"ty","","",292,null],[12,"minimum","","",292,null],[12,"maximum","","",292,null],[3,"TableTypeResolver","","",null,null],[12,"ty","","",293,null],[12,"minimum","","",293,null],[12,"maximum","","",293,null],[11,"new","","Creates a new table descriptor which will contain the …",291,[[["u32",15],["type",4],["option",4]]]],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[12,"minimum","","The minimum number of pages in the memory.",294,null],[12,"maximum","","The maximum number of pages in the memory.",294,null],[12,"shared","","Whether the memory may be shared between multiple threads.",294,null],[3,"ArchivedMemoryType","","",null,null],[12,"minimum","","",295,null],[12,"maximum","","",295,null],[12,"shared","","",295,null],[3,"MemoryTypeResolver","","",null,null],[12,"minimum","","",296,null],[12,"maximum","","",296,null],[12,"shared","","",296,null],[11,"new","","Creates a new descriptor for a WebAssembly memory given …",294,[[["bool",15],["option",4]]]],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[12,"module","","",297,null],[12,"name","","",297,null],[12,"ty","","",297,null],[11,"new","","Creates a new import descriptor which comes from <code>module</code> …",297,[[["str",15]]]],[11,"module","","Returns the module name that this import is expected to …",297,[[],["str",15]]],[11,"name","","Returns the field name of the module that this import is …",297,[[],["str",15]]],[11,"ty","","Returns the expected type of this import.",297,[[]]],[3,"ExportType","","A descriptor for an exported WebAssembly value.",null,null],[12,"name","","",298,null],[12,"ty","","",298,null],[11,"new","","Creates a new export which is exported with the given <code>name</code>…",298,[[["str",15]]]],[11,"name","","Returns the name by which this export is known by.",298,[[],["str",15]]],[11,"ty","","Returns the type of this export.",298,[[]]],[0,"units","wasmer_types","",null,null],[17,"WASM_PAGE_SIZE","wasmer_types::units","WebAssembly page sizes are fixed to be 64KiB. Note: large …",null,null],[17,"WASM_MAX_PAGES","","The number of pages we can have before we run out of byte …",null,null],[17,"WASM_MIN_PAGES","","The minimum number of pages allowed.",null,null],[3,"Pages","","Units of WebAssembly pages (as specified to be 65,536 …",null,null],[12,"0","","",299,null],[3,"ArchivedPages","","",null,null],[12,"0","","",300,null],[3,"PagesResolver","","",null,null],[12,"0","","",301,null],[11,"max_value","","Returns the largest value that can be represented by the …",299,[[]]],[11,"checked_add","","Checked addition. Computes <code>self + rhs</code>, returning <code>None</code> if …",299,[[],["option",4]]],[11,"bytes","","Calculate number of bytes from pages.",299,[[],["bytes",3]]],[3,"Bytes","","Units of WebAssembly memory in terms of 8-bit bytes.",null,null],[12,"0","","",302,null],[3,"PageCountOutOfRange","","The only error that can happen when converting <code>Bytes</code> to …",null,null],[0,"values","wasmer_types","",null,null],[4,"Value","wasmer_types::values","Possible runtime values that a WebAssembly module can …",null,null],[13,"I32","","A 32-bit integer.",303,null],[13,"I64","","A 64-bit integer.",303,null],[13,"F32","","A 32-bit float.",303,null],[13,"F64","","A 64-bit float.",303,null],[13,"ExternRef","","An <code>externref</code> value which can hold opaque data to the wasm …",303,null],[13,"FuncRef","","A first-class reference to a WebAssembly function.",303,null],[13,"V128","","A 128-bit number",303,null],[8,"WasmValueType","","Trait for reading and writing Wasm values into binary for …",null,null],[10,"write_value_to","","Write the value",304,[[]]],[10,"read_value_from","","read the value",304,[[["any",8]]]],[11,"null","","Returns a null <code>externref</code> value.",303,[[]]],[11,"ty","","Returns the corresponding [<code>Type</code>] for this <code>Value</code>.",303,[[],["type",4]]],[11,"write_value_to","","Writes it\'s value to a given pointer",303,[[]]],[11,"read_value_from","","Gets a <code>Value</code> given a pointer and a <code>Type</code>",303,[[["any",8],["type",4]]]],[11,"i32","","Attempt to access the underlying value of this <code>Value</code>, …",303,[[],[["option",4],["i32",15]]]],[11,"unwrap_i32","","Returns the underlying value of this <code>Value</code>, panicking if …",303,[[],["i32",15]]],[11,"i64","","Attempt to access the underlying value of this <code>Value</code>, …",303,[[],[["i64",15],["option",4]]]],[11,"unwrap_i64","","Returns the underlying value of this <code>Value</code>, panicking if …",303,[[],["i64",15]]],[11,"f32","","Attempt to access the underlying value of this <code>Value</code>, …",303,[[],[["option",4],["f32",15]]]],[11,"unwrap_f32","","Returns the underlying value of this <code>Value</code>, panicking if …",303,[[],["f32",15]]],[11,"f64","","Attempt to access the underlying value of this <code>Value</code>, …",303,[[],[["f64",15],["option",4]]]],[11,"unwrap_f64","","Returns the underlying value of this <code>Value</code>, panicking if …",303,[[],["f64",15]]],[11,"externref","","Attempt to access the underlying value of this <code>Value</code>, …",303,[[],[["externref",3],["option",4]]]],[11,"unwrap_externref","","Returns the underlying value of this <code>Value</code>, panicking if …",303,[[],["externref",3]]],[11,"funcref","","Attempt to access the underlying value of this <code>Value</code>, …",303,[[],[["option",4],["option",4]]]],[11,"unwrap_funcref","","Returns the underlying value of this <code>Value</code>, panicking if …",303,[[],["option",4]]],[11,"v128","","Attempt to access the underlying value of this <code>Value</code>, …",303,[[],[["u128",15],["option",4]]]],[11,"unwrap_v128","","Returns the underlying value of this <code>Value</code>, panicking if …",303,[[],["u128",15]]],[17,"NOT_I32","","",null,null],[17,"NOT_I64","","",null,null],[17,"NOT_F32","","",null,null],[17,"NOT_F64","","",null,null],[0,"entity","wasmer_types","The entity module, with common helpers for Rust structures",null,null],[0,"packed_option","wasmer_types::entity","Compact representation of <code>Option<T></code> for types with a …",null,null],[8,"ReservedValue","wasmer_types::entity::packed_option","Types that have a reserved value which can\'t be created …",null,null],[10,"reserved_value","","Create an instance of the reserved value.",305,[[]]],[10,"is_reserved_value","","Checks whether value is the reserved one.",305,[[],["bool",15]]],[3,"PackedOption","","Packed representation of <code>Option<T></code>.",null,null],[12,"0","","",306,null],[11,"is_none","","Returns <code>true</code> if the packed option is a <code>None</code> value.",306,[[],["bool",15]]],[11,"is_some","","Returns <code>true</code> if the packed option is a <code>Some</code> value.",306,[[],["bool",15]]],[11,"expand","","Expand the packed option into a normal <code>Option</code>.",306,[[],["option",4]]],[11,"map","","Maps a <code>PackedOption<T></code> to <code>Option<U></code> by applying a …",306,[[],["option",4]]],[11,"unwrap","","Unwrap a packed <code>Some</code> value or panic.",306,[[]]],[11,"expect","","Unwrap a packed <code>Some</code> value or panic.",306,[[["str",15]]]],[11,"take","","Takes the value out of the packed option, leaving a <code>None</code> …",306,[[],["option",4]]],[0,"boxed_slice","wasmer_types::entity","Boxed slices for <code>PrimaryMap</code>.",null,null],[3,"BoxedSlice","wasmer_types::entity::boxed_slice","A slice mapping <code>K -> V</code> allocating dense entity references.",null,null],[12,"elems","","",307,null],[12,"unused","","",307,null],[11,"from_raw","","Create a new slice from a raw pointer. A safer way to …",307,[[]]],[11,"is_valid","","Check if <code>k</code> is a valid key in the map.",307,[[],["bool",15]]],[11,"get","","Get the element at <code>k</code> if it exists.",307,[[],["option",4]]],[11,"get_mut","","Get the element at <code>k</code> if it exists, mutable version.",307,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",307,[[],["bool",15]]],[11,"len","","Get the total number of entity references created.",307,[[],["usize",15]]],[11,"keys","","Iterate over all the keys in this map.",307,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",307,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",307,[[],["itermut",3]]],[11,"iter","","Iterate over all the keys and values in this map.",307,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable …",307,[[],["itermut",3]]],[11,"last","","Returns the last element that was inserted in the map.",307,[[],["option",4]]],[0,"iter","wasmer_types::entity","A double-ended iterator over entity references and …",null,null],[3,"Iter","wasmer_types::entity::iter","Iterate over all keys in order.",null,null],[12,"enumerate","","",308,null],[12,"unused","","",308,null],[11,"new","","Create an <code>Iter</code> iterator that visits the <code>PrimaryMap</code> keys …",308,[[["iter",3]]]],[3,"IterMut","","Iterate over all keys in order.",null,null],[12,"enumerate","","",309,null],[12,"unused","","",309,null],[11,"new","","Create an <code>IterMut</code> iterator that visits the <code>PrimaryMap</code> …",309,[[["itermut",3]]]],[3,"IntoIter","","Iterate over all keys in order.",null,null],[12,"enumerate","","",310,null],[12,"unused","","",310,null],[11,"new","","Create an <code>IntoIter</code> iterator that visits the <code>PrimaryMap</code> …",310,[[["intoiter",3]]]],[0,"keys","wasmer_types::entity","A double-ended iterator over entity references.",null,null],[3,"Keys","wasmer_types::entity::keys","Iterate over all keys in order.",null,null],[12,"pos","","",311,null],[12,"rev_pos","","",311,null],[12,"unused","","",311,null],[11,"with_len","","Create a <code>Keys</code> iterator that visits <code>len</code> entities starting …",311,[[["usize",15]]]],[0,"primary_map","wasmer_types::entity","Densely numbered entity references as mapping keys.",null,null],[3,"PrimaryMap","wasmer_types::entity::primary_map","A primary mapping <code>K -> V</code> allocating dense entity …",null,null],[12,"elems","","",312,null],[12,"unused","","",312,null],[3,"ArchivedPrimaryMap","","",null,null],[12,"elems","","",313,null],[12,"unused","","",313,null],[3,"PrimaryMapResolver","","",null,null],[12,"elems","","",314,null],[12,"unused","","",314,null],[11,"new","","Create a new empty map.",312,[[]]],[11,"with_capacity","","Create a new empty map with the given capacity.",312,[[["usize",15]]]],[11,"is_valid","","Check if <code>k</code> is a valid key in the map.",312,[[],["bool",15]]],[11,"get","","Get the element at <code>k</code> if it exists.",312,[[],["option",4]]],[11,"get_mut","","Get the element at <code>k</code> if it exists, mutable version.",312,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",312,[[],["bool",15]]],[11,"len","","Get the total number of entity references created.",312,[[],["usize",15]]],[11,"keys","","Iterate over all the keys in this map.",312,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",312,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",312,[[],["itermut",3]]],[11,"iter","","Iterate over all the keys and values in this map.",312,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable …",312,[[],["itermut",3]]],[11,"clear","","Remove all entries from this map.",312,[[]]],[11,"next_key","","Get the key that will be assigned to the next pushed …",312,[[]]],[11,"push","","Append <code>v</code> to the mapping, assigning a new key which is …",312,[[]]],[11,"last","","Returns the last element that was inserted in the map.",312,[[],["option",4]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",312,[[["usize",15]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",312,[[["usize",15]]]],[11,"shrink_to_fit","","Shrinks the capacity of the <code>PrimaryMap</code> as much as …",312,[[]]],[11,"into_boxed_slice","","Consumes this <code>PrimaryMap</code> and produces a <code>BoxedSlice</code>.",312,[[],["boxedslice",3]]],[0,"secondary_map","wasmer_types::entity","Densely numbered entity references as mapping keys.",null,null],[3,"SecondaryMap","wasmer_types::entity::secondary_map","A mapping <code>K -> V</code> for densely indexed entity references.",null,null],[12,"elems","","",315,null],[12,"default","","",315,null],[12,"unused","","",315,null],[3,"ArchivedSecondaryMap","","",null,null],[12,"elems","","",316,null],[12,"default","","",316,null],[12,"unused","","",316,null],[3,"SecondaryMapResolver","","",null,null],[12,"elems","","",317,null],[12,"default","","",317,null],[12,"unused","","",317,null],[11,"new","","Create a new empty map.",315,[[]]],[11,"with_capacity","","Create a new, empty map with the specified capacity.",315,[[["usize",15]]]],[11,"with_default","","Create a new empty map with a specified default value.",315,[[]]],[11,"capacity","","Returns the number of elements the map can hold without …",315,[[],["usize",15]]],[11,"get","","Get the element at <code>k</code> if it exists.",315,[[],["option",4]]],[11,"is_empty","","Is this map completely empty?",315,[[],["bool",15]]],[11,"clear","","Remove all entries from this map.",315,[[]]],[11,"iter","","Iterate over all the keys and values in this map.",315,[[],["iter",3]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable …",315,[[],["itermut",3]]],[11,"keys","","Iterate over all the keys in this map.",315,[[],["keys",3]]],[11,"values","","Iterate over all the values in this map.",315,[[],["iter",3]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",315,[[],["itermut",3]]],[11,"resize","","Resize the map to have <code>n</code> entries by adding default …",315,[[["usize",15]]]],[8,"EntityRef","wasmer_types::entity","A type wrapping a small integer index should implement …",null,null],[10,"new","","Create a new entity reference from a small integer. This …",318,[[["usize",15]]]],[10,"index","","Get the index that was used to create this entity …",318,[[],["usize",15]]],[3,"BoxedSlice","","A slice mapping <code>K -> V</code> allocating dense entity references.",null,null],[12,"elems","","",307,null],[12,"unused","","",307,null],[3,"Iter","","Iterate over all keys in order.",null,null],[12,"enumerate","","",308,null],[12,"unused","","",308,null],[3,"IterMut","","Iterate over all keys in order.",null,null],[12,"enumerate","","",309,null],[12,"unused","","",309,null],[3,"Keys","","Iterate over all keys in order.",null,null],[12,"pos","","",311,null],[12,"rev_pos","","",311,null],[12,"unused","","",311,null],[3,"PrimaryMap","","A primary mapping <code>K -> V</code> allocating dense entity …",null,null],[12,"elems","","",312,null],[12,"unused","","",312,null],[3,"SecondaryMap","","A mapping <code>K -> V</code> for densely indexed entity references.",null,null],[12,"elems","","",315,null],[12,"default","","",315,null],[12,"unused","","",315,null],[3,"ExternRef","wasmer_types","An opaque reference to some data. This reference can be …",null,null],[12,"inner","","",217,null],[3,"VMExternRef","","This type does not do reference counting automatically, …",null,null],[12,"0","","",215,null],[3,"Features","","Controls which experimental features will be enabled. …",null,null],[12,"threads","","Threads proposal should be enabled",218,null],[12,"reference_types","","Reference Types proposal should be enabled",218,null],[12,"simd","","SIMD proposal should be enabled",218,null],[12,"bulk_memory","","Bulk Memory proposal should be enabled",218,null],[12,"multi_value","","Multi Value proposal should be enabled",218,null],[12,"tail_call","","Tail call proposal should be enabled",218,null],[12,"module_linking","","Module Linking proposal should be enabled",218,null],[12,"multi_memory","","Multi Memory proposal should be enabled",218,null],[12,"memory64","","64-bit Memory proposal should be enabled",218,null],[12,"exceptions","","Wasm exceptions proposal should be enabled",218,null],[3,"CustomSectionIndex","","Index type of a custom section inside a WebAssembly …",null,null],[12,"0","","",250,null],[3,"DataIndex","","Index type of a passive data segment inside the …",null,null],[12,"0","","",244,null],[3,"ElemIndex","","Index type of a passive element segment inside the …",null,null],[12,"0","","",247,null],[4,"ExportIndex","","An entity to export.",null,null],[13,"Function","","Function export.",253,null],[13,"Table","","Table export.",253,null],[13,"Memory","","Memory export.",253,null],[13,"Global","","Global export.",253,null],[3,"FunctionIndex","","Index type of a function (imported or local) inside the …",null,null],[12,"0","","",229,null],[3,"GlobalIndex","","Index type of a global variable (imported or local) …",null,null],[12,"0","","",235,null],[4,"ImportIndex","","An entity to import.",null,null],[13,"Function","","Function import.",256,null],[13,"Table","","Table import.",256,null],[13,"Memory","","Memory import.",256,null],[13,"Global","","Global import.",256,null],[3,"LocalFunctionIndex","","Index type of a function defined locally inside the …",null,null],[12,"0","","",221,null],[3,"LocalGlobalIndex","","Index type of a global defined locally inside the …",null,null],[12,"0","","",226,null],[3,"LocalMemoryIndex","","Index type of a memory defined locally inside the …",null,null],[12,"0","","",225,null],[3,"LocalTableIndex","","Index type of a table defined locally inside the …",null,null],[12,"0","","",224,null],[3,"MemoryIndex","","Index type of a linear memory (imported or local) inside …",null,null],[12,"0","","",238,null],[3,"SignatureIndex","","Index type of a signature (imported or local) inside the …",null,null],[12,"0","","",241,null],[3,"TableIndex","","Index type of a table (imported or local) inside the …",null,null],[12,"0","","",232,null],[3,"DataInitializer","","A data initializer for linear memory.",null,null],[12,"location","","The location where the initialization is to be performed.",265,null],[12,"data","","The initialization data.",265,null],[3,"DataInitializerLocation","","A memory index and offset within that memory where a data …",null,null],[12,"memory_index","","The index of the memory to initialize.",262,null],[12,"base","","Optionally a Global variable base to initialize at.",262,null],[12,"offset","","A constant offset to initialize at.",262,null],[3,"OwnedDataInitializer","","As <code>DataInitializer</code> but owning the data rather than …",null,null],[12,"location","","The location where the initialization is to be performed.",266,null],[12,"data","","The initialization owned data.",266,null],[3,"TableInitializer","","A WebAssembly table initializer.",null,null],[12,"table_index","","The index of a table to initialize.",259,null],[12,"base","","Optionally, a global variable giving a base index.",259,null],[12,"offset","","The offset to add to the base.",259,null],[12,"elements","","The values to write into the table elements.",259,null],[3,"Atomically","","Atomically.",null,null],[3,"MemoryView","","A view into a memory.",null,null],[12,"ptr","","",270,null],[12,"length","","",270,null],[12,"_phantom","","",270,null],[8,"NativeWasmType","","<code>NativeWasmType</code> represents a Wasm type that has a direct …",null,null],[16,"Abi","","The ABI for this type (i32, i64, f32, f64)",271,null],[18,"WASM_TYPE","wasmer_types::native","Type for this <code>NativeWasmType</code>.",271,null],[10,"to_binary","wasmer_types","Convert self to i128 binary representation.",271,[[],["i128",15]]],[11,"to_value","wasmer_types::native","Convert self to a <code>Value</code>.",271,[[],[["wasmvaluetype",8],["value",4]]]],[10,"from_binary","wasmer_types","Convert to self from i128 binary representation.",271,[[["i128",15]]]],[8,"ValueType","","Trait for a Value type. A Value type is a type that is …",null,null],[3,"Bytes","","Units of WebAssembly memory in terms of 8-bit bytes.",null,null],[12,"0","","",302,null],[3,"PageCountOutOfRange","","The only error that can happen when converting <code>Bytes</code> to …",null,null],[3,"Pages","","Units of WebAssembly pages (as specified to be 65,536 …",null,null],[12,"0","","",299,null],[17,"WASM_MAX_PAGES","","The number of pages we can have before we run out of byte …",null,null],[17,"WASM_MIN_PAGES","","The minimum number of pages allowed.",null,null],[17,"WASM_PAGE_SIZE","","WebAssembly page sizes are fixed to be 64KiB. Note: large …",null,null],[4,"Value","","Possible runtime values that a WebAssembly module can …",null,null],[13,"I32","","A 32-bit integer.",303,null],[13,"I64","","A 64-bit integer.",303,null],[13,"F32","","A 32-bit float.",303,null],[13,"F64","","A 64-bit float.",303,null],[13,"ExternRef","","An <code>externref</code> value which can hold opaque data to the wasm …",303,null],[13,"FuncRef","","A first-class reference to a WebAssembly function.",303,null],[13,"V128","","A 128-bit number",303,null],[8,"WasmValueType","","Trait for reading and writing Wasm values into binary for …",null,null],[10,"write_value_to","","Write the value",304,[[]]],[10,"read_value_from","","read the value",304,[[["any",8]]]],[3,"ExportType","","A descriptor for an exported WebAssembly value.",null,null],[12,"name","","",298,null],[12,"ty","","",298,null],[4,"ExternType","","A list of all possible types which can be externally …",null,null],[13,"Function","","This external type is the type of a WebAssembly function.",278,null],[13,"Global","","This external type is the type of a WebAssembly global.",278,null],[13,"Table","","This external type is the type of a WebAssembly table.",278,null],[13,"Memory","","This external type is the type of a WebAssembly memory.",278,null],[3,"FunctionType","","The signature of a function that is either implemented in …",null,null],[12,"params","","The parameters of the function",279,null],[12,"results","","The return values of the function",279,null],[4,"GlobalInit","","Globals are initialized via the <code>const</code> operators or by …",null,null],[13,"I32Const","","An <code>i32.const</code>.",288,null],[13,"I64Const","","An <code>i64.const</code>.",288,null],[13,"F32Const","","An <code>f32.const</code>.",288,null],[13,"F64Const","","An <code>f64.const</code>.",288,null],[13,"V128Const","","A <code>v128.const</code>.",288,null],[13,"GetGlobal","","A <code>global.get</code> of another global.",288,null],[13,"RefNullConst","","A <code>ref.null</code>.",288,null],[13,"RefFunc","","A <code>ref.func <index></code>.",288,null],[3,"GlobalType","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",285,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",285,null],[3,"ImportType","","A descriptor for an imported value into a wasm module.",null,null],[12,"module","","",297,null],[12,"name","","",297,null],[12,"ty","","",297,null],[3,"MemoryType","","A descriptor for a WebAssembly memory type.",null,null],[12,"minimum","","The minimum number of pages in the memory.",294,null],[12,"maximum","","The maximum number of pages in the memory.",294,null],[12,"shared","","Whether the memory may be shared between multiple threads.",294,null],[4,"Mutability","","Indicator of whether a global is mutable or not",null,null],[13,"Const","","The global is constant and its value does not change",282,null],[13,"Var","","The value of the global can change over time",282,null],[3,"TableType","","A descriptor for a table in a WebAssembly module.",null,null],[12,"ty","","The type of data stored in elements of the table.",291,null],[12,"minimum","","The minimum number of elements in the table.",291,null],[12,"maximum","","The maximum number of elements in the table.",291,null],[4,"Type","","A list of all possible value types in WebAssembly.",null,null],[13,"I32","","Signed 32 bit integer.",272,null],[13,"I64","","Signed 64 bit integer.",272,null],[13,"F32","","Floating point 32 bit integer.",272,null],[13,"F64","","Floating point 64 bit integer.",272,null],[13,"V128","","A 128 bit number.",272,null],[13,"ExternRef","","A reference to opaque data in the Wasm instance.",272,null],[13,"FuncRef","","A reference to a Wasm function.",272,null],[3,"V128","","The WebAssembly V128 type",null,null],[12,"0","","",275,null],[3,"ArchivableIndexMap","","Rkyv Archivable IndexMap",null,null],[12,"indices","","",212,null],[12,"entries","","",212,null],[17,"VERSION","","Version number of this crate.",null,null],[14,"entity_impl","","Macro which provides the common implementation of a …",null,null],[11,"from","wasmer_types::lib::std::any","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[],["bool",15]]],[11,"pointer_metadata","","",1,[[]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"pointer_metadata","","",3,[[]]],[11,"from","wasmer_types::lib::std::boxed","",6,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"into_searcher","","",6,[[["str",15]],["charpredicatesearcher",3]]],[11,"is_contained_in","","",6,[[["str",15]],["bool",15]]],[11,"is_prefix_of","","",6,[[["str",15]],["bool",15]]],[11,"strip_prefix_of","","",6,[[["str",15]],[["option",4],["str",15]]]],[11,"is_suffix_of","","",6,[[["str",15]],["bool",15]]],[11,"strip_suffix_of","","",6,[[["str",15]],[["option",4],["str",15]]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_future","","",6,[[]]],[11,"equivalent","","",6,[[],["bool",15]]],[11,"pointer_metadata","","",6,[[]]],[11,"resolve_metadata","","",6,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",6,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",6,[[],["result",4]]],[11,"from","wasmer_types::lib::std::cell","",7,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[],["bool",15]]],[11,"pointer_metadata","","",7,[[]]],[11,"from","","",8,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[],["bool",15]]],[11,"pointer_metadata","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"pointer_metadata","","",12,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"pointer_metadata","","",13,[[]]],[11,"from","wasmer_types::lib::std::cmp","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[],["bool",15]]],[11,"pointer_metadata","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"equivalent","","",16,[[],["bool",15]]],[11,"pointer_metadata","","",16,[[]]],[11,"from","wasmer_types::lib::std::convert","",319,[[]]],[11,"from","","",319,[[]]],[11,"into","","",319,[[]]],[11,"to_owned","","",319,[[]]],[11,"clone_into","","",319,[[]]],[11,"to_string","","",319,[[],["string",3]]],[11,"borrow","","",319,[[]]],[11,"borrow_mut","","",319,[[]]],[11,"try_from","","",319,[[],["result",4]]],[11,"try_into","","",319,[[],["result",4]]],[11,"type_id","","",319,[[],["typeid",3]]],[11,"equivalent","","",319,[[],["bool",15]]],[11,"pointer_metadata","","",319,[[]]],[11,"from","wasmer_types::lib::std::fmt","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"pointer_metadata","","",25,[[]]],[11,"from","","",320,[[]]],[11,"into","","",320,[[]]],[11,"to_owned","","",320,[[]]],[11,"clone_into","","",320,[[]]],[11,"to_string","","",320,[[],["string",3]]],[11,"borrow","","",320,[[]]],[11,"borrow_mut","","",320,[[]]],[11,"try_from","","",320,[[],["result",4]]],[11,"try_into","","",320,[[],["result",4]]],[11,"type_id","","",320,[[],["typeid",3]]],[11,"equivalent","","",320,[[],["bool",15]]],[11,"pointer_metadata","","",320,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"pointer_metadata","","",26,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"pointer_metadata","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"pointer_metadata","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"pointer_metadata","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"pointer_metadata","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"pointer_metadata","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"pointer_metadata","","",36,[[]]],[11,"from","wasmer_types::lib::std::hash","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"equivalent","","",46,[[],["bool",15]]],[11,"pointer_metadata","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"pointer_metadata","","",47,[[]]],[11,"from","wasmer_types::lib::std::iter","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"pointer_metadata","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"pointer_metadata","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"into_iter","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"pointer_metadata","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"pointer_metadata","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"pointer_metadata","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"pointer_metadata","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"into_iter","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"pointer_metadata","","",56,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"into_iter","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"pointer_metadata","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"into_iter","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"pointer_metadata","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"into_iter","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"pointer_metadata","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"into_iter","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"pointer_metadata","","",67,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"into_iter","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"pointer_metadata","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"into_iter","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"pointer_metadata","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"into_iter","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"pointer_metadata","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"into_iter","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"pointer_metadata","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"into_iter","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"pointer_metadata","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"into_iter","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"pointer_metadata","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"into_iter","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"pointer_metadata","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"into_iter","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"pointer_metadata","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"into_iter","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"pointer_metadata","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"into_iter","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"pointer_metadata","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"into_iter","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"pointer_metadata","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"into_iter","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"pointer_metadata","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"into_iter","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"pointer_metadata","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into_iter","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"pointer_metadata","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"pointer_metadata","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"into_iter","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"pointer_metadata","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"into_iter","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"pointer_metadata","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"into_iter","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"pointer_metadata","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"into_iter","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"pointer_metadata","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into_iter","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"pointer_metadata","","",88,[[]]],[11,"from","wasmer_types::lib::std::marker","",321,[[]]],[11,"into","","",321,[[]]],[11,"to_owned","","",321,[[]]],[11,"clone_into","","",321,[[]]],[11,"borrow","","",321,[[]]],[11,"borrow_mut","","",321,[[]]],[11,"try_from","","",321,[[],["result",4]]],[11,"try_into","","",321,[[],["result",4]]],[11,"type_id","","",321,[[],["typeid",3]]],[11,"equivalent","","",321,[[],["bool",15]]],[11,"pointer_metadata","","",321,[[]]],[11,"resolve_metadata","","",321,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",321,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",321,[[],["result",4]]],[11,"from","","",322,[[]]],[11,"into","","",322,[[]]],[11,"to_owned","","",322,[[]]],[11,"clone_into","","",322,[[]]],[11,"borrow","","",322,[[]]],[11,"borrow_mut","","",322,[[]]],[11,"try_from","","",322,[[],["result",4]]],[11,"try_into","","",322,[[],["result",4]]],[11,"type_id","","",322,[[],["typeid",3]]],[11,"equivalent","","",322,[[],["bool",15]]],[11,"pointer_metadata","","",322,[[]]],[11,"from","wasmer_types::lib::std::mem","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"equivalent","","",90,[[],["bool",15]]],[11,"pointer_metadata","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"equivalent","","",91,[[],["bool",15]]],[11,"pointer_metadata","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"pointer_metadata","","",92,[[]]],[11,"from","wasmer_types::lib::std::ops","",123,[[]]],[11,"into","","",123,[[]]],[11,"into_iter","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"equivalent","","",123,[[],["bool",15]]],[11,"pointer_metadata","","",123,[[]]],[11,"resolve_metadata","","",123,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",123,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",123,[[],["result",4]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"into_iter","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"equivalent","","",124,[[],["bool",15]]],[11,"pointer_metadata","","",124,[[]]],[11,"from","","",323,[[]]],[11,"into","","",323,[[]]],[11,"to_owned","","",323,[[]]],[11,"clone_into","","",323,[[]]],[11,"borrow","","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"try_into","","",323,[[],["result",4]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"equivalent","","",323,[[],["bool",15]]],[11,"pointer_metadata","","",323,[[]]],[11,"resolve_metadata","","",323,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",323,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",323,[[],["result",4]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"equivalent","","",125,[[],["bool",15]]],[11,"pointer_metadata","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"equivalent","","",126,[[],["bool",15]]],[11,"pointer_metadata","","",126,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"into_iter","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"equivalent","","",128,[[],["bool",15]]],[11,"pointer_metadata","","",128,[[]]],[11,"resolve_metadata","","",128,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",128,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",128,[[],["result",4]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"equivalent","","",129,[[],["bool",15]]],[11,"pointer_metadata","","",129,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"equivalent","","",132,[[],["bool",15]]],[11,"pointer_metadata","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"pointer_metadata","","",133,[[]]],[11,"from","wasmer_types::lib::std::ptr","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"equivalent","","",134,[[],["bool",15]]],[11,"pointer_metadata","","",134,[[]]],[11,"from","wasmer_types::lib::std::rc","",135,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"equivalent","","",135,[[],["bool",15]]],[11,"pointer_metadata","","",135,[[]]],[11,"resolve_metadata","","",135,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",135,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",135,[[],["result",4]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"pointer_metadata","","",136,[[]]],[11,"resolve_metadata","","",136,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",136,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",136,[[],["result",4]]],[11,"from","wasmer_types::lib::std::slice","",139,[[]]],[11,"into","","",139,[[]]],[11,"into_iter","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"pointer_metadata","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"into_iter","","",140,[[]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"pointer_metadata","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"into_iter","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"pointer_metadata","","",141,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"into_iter","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"pointer_metadata","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"into_iter","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"pointer_metadata","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"into_iter","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"pointer_metadata","","",145,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"into_iter","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"pointer_metadata","","",146,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"into_iter","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"pointer_metadata","","",147,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"into_iter","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"pointer_metadata","","",148,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"into_iter","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"pointer_metadata","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"into_iter","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"pointer_metadata","","",150,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"into_iter","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"pointer_metadata","","",151,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"into_iter","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"pointer_metadata","","",152,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"into_iter","","",153,[[]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"pointer_metadata","","",153,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"into_iter","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"pointer_metadata","","",154,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"into_iter","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"pointer_metadata","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"into_iter","","",156,[[]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"pointer_metadata","","",156,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"into_iter","","",157,[[]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"pointer_metadata","","",157,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"into_iter","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"pointer_metadata","","",158,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"into_iter","","",159,[[]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"pointer_metadata","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"into_iter","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"pointer_metadata","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"into_iter","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"pointer_metadata","","",161,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"into_iter","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"pointer_metadata","","",162,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"into_iter","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"pointer_metadata","","",163,[[]]],[11,"from","wasmer_types::lib::std::string","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"to_string","","",164,[[],["string",3]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"equivalent","","",164,[[],["bool",15]]],[11,"pointer_metadata","","",164,[[]]],[11,"resolve_metadata","","",164,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",164,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",164,[[],["result",4]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"to_string","","",165,[[],["string",3]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"equivalent","","",165,[[],["bool",15]]],[11,"pointer_metadata","","",165,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_string","","",166,[[],["string",3]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"pointer_metadata","","",166,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"into_iter","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"pointer_metadata","","",168,[[]]],[11,"from","wasmer_types::lib::std::sync::mpsc","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"pointer_metadata","","",169,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"into_iter","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"pointer_metadata","","",170,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"into_iter","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"pointer_metadata","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"into_iter","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"pointer_metadata","","",172,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"pointer_metadata","","",173,[[]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"pointer_metadata","","",174,[[]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"to_string","","",175,[[],["string",3]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"equivalent","","",175,[[],["bool",15]]],[11,"pointer_metadata","","",175,[[]]],[11,"from","","",324,[[]]],[11,"into","","",324,[[]]],[11,"to_owned","","",324,[[]]],[11,"clone_into","","",324,[[]]],[11,"to_string","","",324,[[],["string",3]]],[11,"borrow","","",324,[[]]],[11,"borrow_mut","","",324,[[]]],[11,"try_from","","",324,[[],["result",4]]],[11,"try_into","","",324,[[],["result",4]]],[11,"type_id","","",324,[[],["typeid",3]]],[11,"equivalent","","",324,[[],["bool",15]]],[11,"pointer_metadata","","",324,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"to_string","","",176,[[],["string",3]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"equivalent","","",176,[[],["bool",15]]],[11,"pointer_metadata","","",176,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"to_string","","",177,[[],["string",3]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"equivalent","","",177,[[],["bool",15]]],[11,"pointer_metadata","","",177,[[]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"to_string","","",178,[[],["string",3]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"equivalent","","",178,[[],["bool",15]]],[11,"pointer_metadata","","",178,[[]]],[11,"from","wasmer_types::lib::std::sync","",179,[[]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"to_string","","",179,[[],["string",3]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"equivalent","","",179,[[],["bool",15]]],[11,"pointer_metadata","","",179,[[]]],[11,"resolve_metadata","","",179,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",179,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",179,[[],["result",4]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"pointer_metadata","","",180,[[]]],[11,"resolve_metadata","","",180,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",180,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",180,[[],["result",4]]],[11,"from","wasmer_types::lib::std::sync::atomic","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"pointer_metadata","","",181,[[]]],[11,"resolve_metadata","","",181,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",181,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",181,[[],["result",4]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"pointer_metadata","","",182,[[]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"equivalent","","",183,[[],["bool",15]]],[11,"pointer_metadata","","",183,[[]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"pointer_metadata","","",184,[[]]],[11,"resolve_metadata","","",184,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",184,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",184,[[],["result",4]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"pointer_metadata","","",185,[[]]],[11,"resolve_metadata","","",185,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",185,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",185,[[],["result",4]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"pointer_metadata","","",186,[[]]],[11,"resolve_metadata","","",186,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",186,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",186,[[],["result",4]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"pointer_metadata","","",187,[[]]],[11,"resolve_metadata","","",187,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",187,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",187,[[],["result",4]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"pointer_metadata","","",188,[[]]],[11,"resolve_metadata","","",188,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",188,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",188,[[],["result",4]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"pointer_metadata","","",189,[[]]],[11,"resolve_metadata","","",189,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",189,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",189,[[],["result",4]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"pointer_metadata","","",190,[[]]],[11,"resolve_metadata","","",190,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",190,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",190,[[],["result",4]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"pointer_metadata","","",191,[[]]],[11,"resolve_metadata","","",191,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",191,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",191,[[],["result",4]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"pointer_metadata","","",192,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"pointer_metadata","","",193,[[]]],[11,"from","wasmer_types::lib::std::sync","",194,[[]]],[11,"into","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"pointer_metadata","","",194,[[]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"pointer_metadata","","",195,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"pointer_metadata","","",196,[[]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"to_owned","","",197,[[]]],[11,"clone_into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"equivalent","","",197,[[],["bool",15]]],[11,"pointer_metadata","","",197,[[]]],[11,"from","","",198,[[]]],[11,"from","","",198,[[]]],[11,"into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"pointer_metadata","","",198,[[]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_string","","",199,[[],["string",3]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"pointer_metadata","","",199,[[]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"pointer_metadata","","",200,[[]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"pointer_metadata","","",201,[[]]],[11,"from","","",202,[[]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"pointer_metadata","","",202,[[]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"to_string","","",203,[[],["string",3]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"pointer_metadata","","",203,[[]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"to_string","","",204,[[],["string",3]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"pointer_metadata","","",204,[[]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"to_string","","",205,[[],["string",3]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"pointer_metadata","","",205,[[]]],[11,"from","","",206,[[]]],[11,"into","","",206,[[]]],[11,"to_string","","",206,[[],["string",3]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"pointer_metadata","","",206,[[]]],[11,"from","wasmer_types::lib::std::vec","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"equivalent","","",207,[[],["bool",15]]],[11,"pointer_metadata","","",207,[[]]],[11,"resolve_metadata","","",207,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",207,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",207,[[],["result",4]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"into_iter","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"pointer_metadata","","",208,[[]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"into_iter","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"pointer_metadata","","",209,[[]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"into_iter","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"pointer_metadata","","",210,[[]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"into_iter","","",211,[[]]],[11,"to_owned","","",211,[[]]],[11,"clone_into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"pointer_metadata","","",211,[[]]],[11,"from","wasmer_types::archives","",212,[[]]],[11,"into","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"pointer_metadata","","",212,[[]]],[11,"resolve_metadata","","",212,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",212,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",212,[[],["result",4]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"pointer_metadata","","",213,[[]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"pointer_metadata","","",214,[[]]],[11,"from","wasmer_types::extern_ref","",215,[[]]],[11,"into","","",215,[[]]],[11,"to_owned","","",215,[[]]],[11,"clone_into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"equivalent","","",215,[[],["bool",15]]],[11,"pointer_metadata","","",215,[[]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"pointer_metadata","","",216,[[]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"to_owned","","",217,[[]]],[11,"clone_into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"equivalent","","",217,[[],["bool",15]]],[11,"pointer_metadata","","",217,[[]]],[11,"from","wasmer_types::features","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"equivalent","","",218,[[],["bool",15]]],[11,"pointer_metadata","","",218,[[]]],[11,"resolve_metadata","","",218,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",218,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",218,[[],["result",4]]],[11,"from","","",219,[[]]],[11,"into","","",219,[[]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"pointer_metadata","","",219,[[]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"pointer_metadata","","",220,[[]]],[11,"from","wasmer_types::indexes","",221,[[]]],[11,"into","","",221,[[]]],[11,"to_owned","","",221,[[]]],[11,"clone_into","","",221,[[]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"equivalent","","",221,[[],["bool",15]]],[11,"pointer_metadata","","",221,[[]]],[11,"resolve_metadata","","",221,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",221,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",221,[[],["result",4]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"equivalent","","",222,[[],["bool",15]]],[11,"pointer_metadata","","",222,[[]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"pointer_metadata","","",223,[[]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"equivalent","","",224,[[],["bool",15]]],[11,"pointer_metadata","","",224,[[]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"equivalent","","",225,[[],["bool",15]]],[11,"pointer_metadata","","",225,[[]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"equivalent","","",226,[[],["bool",15]]],[11,"pointer_metadata","","",226,[[]]],[11,"resolve_metadata","","",226,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",226,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",226,[[],["result",4]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"equivalent","","",227,[[],["bool",15]]],[11,"pointer_metadata","","",227,[[]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"pointer_metadata","","",228,[[]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"equivalent","","",229,[[],["bool",15]]],[11,"pointer_metadata","","",229,[[]]],[11,"resolve_metadata","","",229,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",229,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",229,[[],["result",4]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"to_owned","","",230,[[]]],[11,"clone_into","","",230,[[]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"equivalent","","",230,[[],["bool",15]]],[11,"pointer_metadata","","",230,[[]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"pointer_metadata","","",231,[[]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"to_owned","","",232,[[]]],[11,"clone_into","","",232,[[]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"equivalent","","",232,[[],["bool",15]]],[11,"pointer_metadata","","",232,[[]]],[11,"resolve_metadata","","",232,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",232,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",232,[[],["result",4]]],[11,"from","","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"equivalent","","",233,[[],["bool",15]]],[11,"pointer_metadata","","",233,[[]]],[11,"from","","",234,[[]]],[11,"into","","",234,[[]]],[11,"borrow","","",234,[[]]],[11,"borrow_mut","","",234,[[]]],[11,"try_from","","",234,[[],["result",4]]],[11,"try_into","","",234,[[],["result",4]]],[11,"type_id","","",234,[[],["typeid",3]]],[11,"pointer_metadata","","",234,[[]]],[11,"from","","",235,[[]]],[11,"into","","",235,[[]]],[11,"to_owned","","",235,[[]]],[11,"clone_into","","",235,[[]]],[11,"borrow","","",235,[[]]],[11,"borrow_mut","","",235,[[]]],[11,"try_from","","",235,[[],["result",4]]],[11,"try_into","","",235,[[],["result",4]]],[11,"type_id","","",235,[[],["typeid",3]]],[11,"equivalent","","",235,[[],["bool",15]]],[11,"pointer_metadata","","",235,[[]]],[11,"resolve_metadata","","",235,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",235,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",235,[[],["result",4]]],[11,"from","","",236,[[]]],[11,"into","","",236,[[]]],[11,"to_owned","","",236,[[]]],[11,"clone_into","","",236,[[]]],[11,"borrow","","",236,[[]]],[11,"borrow_mut","","",236,[[]]],[11,"try_from","","",236,[[],["result",4]]],[11,"try_into","","",236,[[],["result",4]]],[11,"type_id","","",236,[[],["typeid",3]]],[11,"equivalent","","",236,[[],["bool",15]]],[11,"pointer_metadata","","",236,[[]]],[11,"from","","",237,[[]]],[11,"into","","",237,[[]]],[11,"borrow","","",237,[[]]],[11,"borrow_mut","","",237,[[]]],[11,"try_from","","",237,[[],["result",4]]],[11,"try_into","","",237,[[],["result",4]]],[11,"type_id","","",237,[[],["typeid",3]]],[11,"pointer_metadata","","",237,[[]]],[11,"from","","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"equivalent","","",238,[[],["bool",15]]],[11,"pointer_metadata","","",238,[[]]],[11,"resolve_metadata","","",238,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",238,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",238,[[],["result",4]]],[11,"from","","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"equivalent","","",239,[[],["bool",15]]],[11,"pointer_metadata","","",239,[[]]],[11,"from","","",240,[[]]],[11,"into","","",240,[[]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"pointer_metadata","","",240,[[]]],[11,"from","","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"equivalent","","",241,[[],["bool",15]]],[11,"pointer_metadata","","",241,[[]]],[11,"resolve_metadata","","",241,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",241,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",241,[[],["result",4]]],[11,"from","","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"equivalent","","",242,[[],["bool",15]]],[11,"pointer_metadata","","",242,[[]]],[11,"from","","",243,[[]]],[11,"into","","",243,[[]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"pointer_metadata","","",243,[[]]],[11,"from","","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"equivalent","","",244,[[],["bool",15]]],[11,"pointer_metadata","","",244,[[]]],[11,"resolve_metadata","","",244,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",244,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",244,[[],["result",4]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"equivalent","","",245,[[],["bool",15]]],[11,"pointer_metadata","","",245,[[]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"pointer_metadata","","",246,[[]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"equivalent","","",247,[[],["bool",15]]],[11,"pointer_metadata","","",247,[[]]],[11,"resolve_metadata","","",247,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",247,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",247,[[],["result",4]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"equivalent","","",248,[[],["bool",15]]],[11,"pointer_metadata","","",248,[[]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"pointer_metadata","","",249,[[]]],[11,"from","","",250,[[]]],[11,"into","","",250,[[]]],[11,"to_owned","","",250,[[]]],[11,"clone_into","","",250,[[]]],[11,"borrow","","",250,[[]]],[11,"borrow_mut","","",250,[[]]],[11,"try_from","","",250,[[],["result",4]]],[11,"try_into","","",250,[[],["result",4]]],[11,"type_id","","",250,[[],["typeid",3]]],[11,"equivalent","","",250,[[],["bool",15]]],[11,"pointer_metadata","","",250,[[]]],[11,"resolve_metadata","","",250,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",250,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",250,[[],["result",4]]],[11,"from","","",251,[[]]],[11,"into","","",251,[[]]],[11,"to_owned","","",251,[[]]],[11,"clone_into","","",251,[[]]],[11,"borrow","","",251,[[]]],[11,"borrow_mut","","",251,[[]]],[11,"try_from","","",251,[[],["result",4]]],[11,"try_into","","",251,[[],["result",4]]],[11,"type_id","","",251,[[],["typeid",3]]],[11,"equivalent","","",251,[[],["bool",15]]],[11,"pointer_metadata","","",251,[[]]],[11,"from","","",252,[[]]],[11,"into","","",252,[[]]],[11,"borrow","","",252,[[]]],[11,"borrow_mut","","",252,[[]]],[11,"try_from","","",252,[[],["result",4]]],[11,"try_into","","",252,[[],["result",4]]],[11,"type_id","","",252,[[],["typeid",3]]],[11,"pointer_metadata","","",252,[[]]],[11,"from","","",253,[[]]],[11,"into","","",253,[[]]],[11,"to_owned","","",253,[[]]],[11,"clone_into","","",253,[[]]],[11,"borrow","","",253,[[]]],[11,"borrow_mut","","",253,[[]]],[11,"try_from","","",253,[[],["result",4]]],[11,"try_into","","",253,[[],["result",4]]],[11,"type_id","","",253,[[],["typeid",3]]],[11,"equivalent","","",253,[[],["bool",15]]],[11,"pointer_metadata","","",253,[[]]],[11,"resolve_metadata","","",253,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",253,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",253,[[],["result",4]]],[11,"from","","",254,[[]]],[11,"into","","",254,[[]]],[11,"to_owned","","",254,[[]]],[11,"clone_into","","",254,[[]]],[11,"borrow","","",254,[[]]],[11,"borrow_mut","","",254,[[]]],[11,"try_from","","",254,[[],["result",4]]],[11,"try_into","","",254,[[],["result",4]]],[11,"type_id","","",254,[[],["typeid",3]]],[11,"equivalent","","",254,[[],["bool",15]]],[11,"pointer_metadata","","",254,[[]]],[11,"from","","",255,[[]]],[11,"into","","",255,[[]]],[11,"borrow","","",255,[[]]],[11,"borrow_mut","","",255,[[]]],[11,"try_from","","",255,[[],["result",4]]],[11,"try_into","","",255,[[],["result",4]]],[11,"type_id","","",255,[[],["typeid",3]]],[11,"pointer_metadata","","",255,[[]]],[11,"from","","",256,[[]]],[11,"into","","",256,[[]]],[11,"to_owned","","",256,[[]]],[11,"clone_into","","",256,[[]]],[11,"borrow","","",256,[[]]],[11,"borrow_mut","","",256,[[]]],[11,"try_from","","",256,[[],["result",4]]],[11,"try_into","","",256,[[],["result",4]]],[11,"type_id","","",256,[[],["typeid",3]]],[11,"equivalent","","",256,[[],["bool",15]]],[11,"pointer_metadata","","",256,[[]]],[11,"resolve_metadata","","",256,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",256,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",256,[[],["result",4]]],[11,"from","","",257,[[]]],[11,"into","","",257,[[]]],[11,"to_owned","","",257,[[]]],[11,"clone_into","","",257,[[]]],[11,"borrow","","",257,[[]]],[11,"borrow_mut","","",257,[[]]],[11,"try_from","","",257,[[],["result",4]]],[11,"try_into","","",257,[[],["result",4]]],[11,"type_id","","",257,[[],["typeid",3]]],[11,"equivalent","","",257,[[],["bool",15]]],[11,"pointer_metadata","","",257,[[]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"pointer_metadata","","",258,[[]]],[11,"from","wasmer_types::initializers","",259,[[]]],[11,"into","","",259,[[]]],[11,"to_owned","","",259,[[]]],[11,"clone_into","","",259,[[]]],[11,"borrow","","",259,[[]]],[11,"borrow_mut","","",259,[[]]],[11,"try_from","","",259,[[],["result",4]]],[11,"try_into","","",259,[[],["result",4]]],[11,"type_id","","",259,[[],["typeid",3]]],[11,"equivalent","","",259,[[],["bool",15]]],[11,"pointer_metadata","","",259,[[]]],[11,"resolve_metadata","","",259,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",259,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",259,[[],["result",4]]],[11,"from","","",260,[[]]],[11,"into","","",260,[[]]],[11,"borrow","","",260,[[]]],[11,"borrow_mut","","",260,[[]]],[11,"try_from","","",260,[[],["result",4]]],[11,"try_into","","",260,[[],["result",4]]],[11,"type_id","","",260,[[],["typeid",3]]],[11,"pointer_metadata","","",260,[[]]],[11,"from","","",261,[[]]],[11,"into","","",261,[[]]],[11,"borrow","","",261,[[]]],[11,"borrow_mut","","",261,[[]]],[11,"try_from","","",261,[[],["result",4]]],[11,"try_into","","",261,[[],["result",4]]],[11,"type_id","","",261,[[],["typeid",3]]],[11,"pointer_metadata","","",261,[[]]],[11,"from","","",262,[[]]],[11,"into","","",262,[[]]],[11,"to_owned","","",262,[[]]],[11,"clone_into","","",262,[[]]],[11,"borrow","","",262,[[]]],[11,"borrow_mut","","",262,[[]]],[11,"try_from","","",262,[[],["result",4]]],[11,"try_into","","",262,[[],["result",4]]],[11,"type_id","","",262,[[],["typeid",3]]],[11,"equivalent","","",262,[[],["bool",15]]],[11,"pointer_metadata","","",262,[[]]],[11,"resolve_metadata","","",262,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",262,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",262,[[],["result",4]]],[11,"from","","",263,[[]]],[11,"into","","",263,[[]]],[11,"borrow","","",263,[[]]],[11,"borrow_mut","","",263,[[]]],[11,"try_from","","",263,[[],["result",4]]],[11,"try_into","","",263,[[],["result",4]]],[11,"type_id","","",263,[[],["typeid",3]]],[11,"pointer_metadata","","",263,[[]]],[11,"from","","",264,[[]]],[11,"into","","",264,[[]]],[11,"borrow","","",264,[[]]],[11,"borrow_mut","","",264,[[]]],[11,"try_from","","",264,[[],["result",4]]],[11,"try_into","","",264,[[],["result",4]]],[11,"type_id","","",264,[[],["typeid",3]]],[11,"pointer_metadata","","",264,[[]]],[11,"from","","",265,[[]]],[11,"into","","",265,[[]]],[11,"borrow","","",265,[[]]],[11,"borrow_mut","","",265,[[]]],[11,"try_from","","",265,[[],["result",4]]],[11,"try_into","","",265,[[],["result",4]]],[11,"type_id","","",265,[[],["typeid",3]]],[11,"pointer_metadata","","",265,[[]]],[11,"from","","",266,[[]]],[11,"into","","",266,[[]]],[11,"to_owned","","",266,[[]]],[11,"clone_into","","",266,[[]]],[11,"borrow","","",266,[[]]],[11,"borrow_mut","","",266,[[]]],[11,"try_from","","",266,[[],["result",4]]],[11,"try_into","","",266,[[],["result",4]]],[11,"type_id","","",266,[[],["typeid",3]]],[11,"equivalent","","",266,[[],["bool",15]]],[11,"pointer_metadata","","",266,[[]]],[11,"resolve_metadata","","",266,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",266,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",266,[[],["result",4]]],[11,"from","","",267,[[]]],[11,"into","","",267,[[]]],[11,"borrow","","",267,[[]]],[11,"borrow_mut","","",267,[[]]],[11,"try_from","","",267,[[],["result",4]]],[11,"try_into","","",267,[[],["result",4]]],[11,"type_id","","",267,[[],["typeid",3]]],[11,"pointer_metadata","","",267,[[]]],[11,"from","","",268,[[]]],[11,"into","","",268,[[]]],[11,"borrow","","",268,[[]]],[11,"borrow_mut","","",268,[[]]],[11,"try_from","","",268,[[],["result",4]]],[11,"try_into","","",268,[[],["result",4]]],[11,"type_id","","",268,[[],["typeid",3]]],[11,"pointer_metadata","","",268,[[]]],[11,"from","wasmer_types::memory_view","",325,[[]]],[11,"into","","",325,[[]]],[11,"borrow","","",325,[[]]],[11,"borrow_mut","","",325,[[]]],[11,"try_from","","",325,[[],["result",4]]],[11,"try_into","","",325,[[],["result",4]]],[11,"type_id","","",325,[[],["typeid",3]]],[11,"pointer_metadata","","",325,[[]]],[11,"from","","",326,[[]]],[11,"into","","",326,[[]]],[11,"borrow","","",326,[[]]],[11,"borrow_mut","","",326,[[]]],[11,"try_from","","",326,[[],["result",4]]],[11,"try_into","","",326,[[],["result",4]]],[11,"type_id","","",326,[[],["typeid",3]]],[11,"pointer_metadata","","",326,[[]]],[11,"from","","",270,[[]]],[11,"into","","",270,[[]]],[11,"borrow","","",270,[[]]],[11,"borrow_mut","","",270,[[]]],[11,"try_from","","",270,[[],["result",4]]],[11,"try_into","","",270,[[],["result",4]]],[11,"type_id","","",270,[[],["typeid",3]]],[11,"pointer_metadata","","",270,[[]]],[11,"from","wasmer_types::types","",272,[[]]],[11,"into","","",272,[[]]],[11,"to_owned","","",272,[[]]],[11,"clone_into","","",272,[[]]],[11,"to_string","","",272,[[],["string",3]]],[11,"borrow","","",272,[[]]],[11,"borrow_mut","","",272,[[]]],[11,"try_from","","",272,[[],["result",4]]],[11,"try_into","","",272,[[],["result",4]]],[11,"type_id","","",272,[[],["typeid",3]]],[11,"equivalent","","",272,[[],["bool",15]]],[11,"pointer_metadata","","",272,[[]]],[11,"resolve_metadata","","",272,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",272,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",272,[[],["result",4]]],[11,"from","","",273,[[]]],[11,"into","","",273,[[]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"pointer_metadata","","",273,[[]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"pointer_metadata","","",274,[[]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"equivalent","","",275,[[],["bool",15]]],[11,"pointer_metadata","","",275,[[]]],[11,"resolve_metadata","","",275,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",275,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",275,[[],["result",4]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"pointer_metadata","","",276,[[]]],[11,"from","","",277,[[]]],[11,"into","","",277,[[]]],[11,"borrow","","",277,[[]]],[11,"borrow_mut","","",277,[[]]],[11,"try_from","","",277,[[],["result",4]]],[11,"try_into","","",277,[[],["result",4]]],[11,"type_id","","",277,[[],["typeid",3]]],[11,"pointer_metadata","","",277,[[]]],[11,"from","","",278,[[]]],[11,"into","","",278,[[]]],[11,"to_owned","","",278,[[]]],[11,"clone_into","","",278,[[]]],[11,"borrow","","",278,[[]]],[11,"borrow_mut","","",278,[[]]],[11,"try_from","","",278,[[],["result",4]]],[11,"try_into","","",278,[[],["result",4]]],[11,"type_id","","",278,[[],["typeid",3]]],[11,"equivalent","","",278,[[],["bool",15]]],[11,"pointer_metadata","","",278,[[]]],[11,"from","","",279,[[]]],[11,"into","","",279,[[]]],[11,"to_owned","","",279,[[]]],[11,"clone_into","","",279,[[]]],[11,"to_string","","",279,[[],["string",3]]],[11,"borrow","","",279,[[]]],[11,"borrow_mut","","",279,[[]]],[11,"try_from","","",279,[[],["result",4]]],[11,"try_into","","",279,[[],["result",4]]],[11,"type_id","","",279,[[],["typeid",3]]],[11,"equivalent","","",279,[[],["bool",15]]],[11,"pointer_metadata","","",279,[[]]],[11,"resolve_metadata","","",279,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",279,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",279,[[],["result",4]]],[11,"from","","",280,[[]]],[11,"into","","",280,[[]]],[11,"borrow","","",280,[[]]],[11,"borrow_mut","","",280,[[]]],[11,"try_from","","",280,[[],["result",4]]],[11,"try_into","","",280,[[],["result",4]]],[11,"type_id","","",280,[[],["typeid",3]]],[11,"pointer_metadata","","",280,[[]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"pointer_metadata","","",281,[[]]],[11,"from","","",282,[[]]],[11,"into","","",282,[[]]],[11,"to_owned","","",282,[[]]],[11,"clone_into","","",282,[[]]],[11,"borrow","","",282,[[]]],[11,"borrow_mut","","",282,[[]]],[11,"try_from","","",282,[[],["result",4]]],[11,"try_into","","",282,[[],["result",4]]],[11,"type_id","","",282,[[],["typeid",3]]],[11,"equivalent","","",282,[[],["bool",15]]],[11,"pointer_metadata","","",282,[[]]],[11,"resolve_metadata","","",282,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",282,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",282,[[],["result",4]]],[11,"from","","",283,[[]]],[11,"into","","",283,[[]]],[11,"borrow","","",283,[[]]],[11,"borrow_mut","","",283,[[]]],[11,"try_from","","",283,[[],["result",4]]],[11,"try_into","","",283,[[],["result",4]]],[11,"type_id","","",283,[[],["typeid",3]]],[11,"pointer_metadata","","",283,[[]]],[11,"from","","",284,[[]]],[11,"into","","",284,[[]]],[11,"borrow","","",284,[[]]],[11,"borrow_mut","","",284,[[]]],[11,"try_from","","",284,[[],["result",4]]],[11,"try_into","","",284,[[],["result",4]]],[11,"type_id","","",284,[[],["typeid",3]]],[11,"pointer_metadata","","",284,[[]]],[11,"from","","",285,[[]]],[11,"into","","",285,[[]]],[11,"to_owned","","",285,[[]]],[11,"clone_into","","",285,[[]]],[11,"to_string","","",285,[[],["string",3]]],[11,"borrow","","",285,[[]]],[11,"borrow_mut","","",285,[[]]],[11,"try_from","","",285,[[],["result",4]]],[11,"try_into","","",285,[[],["result",4]]],[11,"type_id","","",285,[[],["typeid",3]]],[11,"equivalent","","",285,[[],["bool",15]]],[11,"pointer_metadata","","",285,[[]]],[11,"resolve_metadata","","",285,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",285,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",285,[[],["result",4]]],[11,"from","","",286,[[]]],[11,"into","","",286,[[]]],[11,"borrow","","",286,[[]]],[11,"borrow_mut","","",286,[[]]],[11,"try_from","","",286,[[],["result",4]]],[11,"try_into","","",286,[[],["result",4]]],[11,"type_id","","",286,[[],["typeid",3]]],[11,"pointer_metadata","","",286,[[]]],[11,"from","","",287,[[]]],[11,"into","","",287,[[]]],[11,"borrow","","",287,[[]]],[11,"borrow_mut","","",287,[[]]],[11,"try_from","","",287,[[],["result",4]]],[11,"try_into","","",287,[[],["result",4]]],[11,"type_id","","",287,[[],["typeid",3]]],[11,"pointer_metadata","","",287,[[]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"to_owned","","",288,[[]]],[11,"clone_into","","",288,[[]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"equivalent","","",288,[[],["bool",15]]],[11,"pointer_metadata","","",288,[[]]],[11,"resolve_metadata","","",288,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",288,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",288,[[],["result",4]]],[11,"from","","",289,[[]]],[11,"into","","",289,[[]]],[11,"borrow","","",289,[[]]],[11,"borrow_mut","","",289,[[]]],[11,"try_from","","",289,[[],["result",4]]],[11,"try_into","","",289,[[],["result",4]]],[11,"type_id","","",289,[[],["typeid",3]]],[11,"pointer_metadata","","",289,[[]]],[11,"from","","",290,[[]]],[11,"into","","",290,[[]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"pointer_metadata","","",290,[[]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"to_string","","",291,[[],["string",3]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"equivalent","","",291,[[],["bool",15]]],[11,"pointer_metadata","","",291,[[]]],[11,"resolve_metadata","","",291,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",291,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",291,[[],["result",4]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"pointer_metadata","","",292,[[]]],[11,"from","","",293,[[]]],[11,"into","","",293,[[]]],[11,"borrow","","",293,[[]]],[11,"borrow_mut","","",293,[[]]],[11,"try_from","","",293,[[],["result",4]]],[11,"try_into","","",293,[[],["result",4]]],[11,"type_id","","",293,[[],["typeid",3]]],[11,"pointer_metadata","","",293,[[]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"to_string","","",294,[[],["string",3]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"equivalent","","",294,[[],["bool",15]]],[11,"pointer_metadata","","",294,[[]]],[11,"resolve_metadata","","",294,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",294,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",294,[[],["result",4]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"pointer_metadata","","",295,[[]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"pointer_metadata","","",296,[[]]],[11,"from","","",297,[[]]],[11,"into","","",297,[[]]],[11,"to_owned","","",297,[[]]],[11,"clone_into","","",297,[[]]],[11,"borrow","","",297,[[]]],[11,"borrow_mut","","",297,[[]]],[11,"try_from","","",297,[[],["result",4]]],[11,"try_into","","",297,[[],["result",4]]],[11,"type_id","","",297,[[],["typeid",3]]],[11,"equivalent","","",297,[[],["bool",15]]],[11,"pointer_metadata","","",297,[[]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"to_owned","","",298,[[]]],[11,"clone_into","","",298,[[]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"equivalent","","",298,[[],["bool",15]]],[11,"pointer_metadata","","",298,[[]]],[11,"from","wasmer_types::units","",299,[[]]],[11,"into","","",299,[[]]],[11,"to_owned","","",299,[[]]],[11,"clone_into","","",299,[[]]],[11,"borrow","","",299,[[]]],[11,"borrow_mut","","",299,[[]]],[11,"try_from","","",299,[[],["result",4]]],[11,"try_into","","",299,[[],["result",4]]],[11,"type_id","","",299,[[],["typeid",3]]],[11,"equivalent","","",299,[[],["bool",15]]],[11,"pointer_metadata","","",299,[[]]],[11,"resolve_metadata","","",299,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",299,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",299,[[],["result",4]]],[11,"from","","",300,[[]]],[11,"into","","",300,[[]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"pointer_metadata","","",300,[[]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"pointer_metadata","","",301,[[]]],[11,"from","","",302,[[]]],[11,"into","","",302,[[]]],[11,"to_owned","","",302,[[]]],[11,"clone_into","","",302,[[]]],[11,"borrow","","",302,[[]]],[11,"borrow_mut","","",302,[[]]],[11,"try_from","","",302,[[],["result",4]]],[11,"try_into","","",302,[[],["result",4]]],[11,"type_id","","",302,[[],["typeid",3]]],[11,"equivalent","","",302,[[],["bool",15]]],[11,"pointer_metadata","","",302,[[]]],[11,"from","","",327,[[]]],[11,"into","","",327,[[]]],[11,"to_owned","","",327,[[]]],[11,"clone_into","","",327,[[]]],[11,"to_string","","",327,[[],["string",3]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"try_into","","",327,[[],["result",4]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"pointer_metadata","","",327,[[]]],[11,"from","wasmer_types::values","",303,[[]]],[11,"into","","",303,[[]]],[11,"to_owned","","",303,[[]]],[11,"clone_into","","",303,[[]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"pointer_metadata","","",303,[[]]],[11,"from","wasmer_types::entity::packed_option","",306,[[]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"to_owned","","",306,[[]]],[11,"clone_into","","",306,[[]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"equivalent","","",306,[[],["bool",15]]],[11,"pointer_metadata","","",306,[[]]],[11,"from","wasmer_types::entity::boxed_slice","",307,[[]]],[11,"into","","",307,[[]]],[11,"to_owned","","",307,[[]]],[11,"clone_into","","",307,[[]]],[11,"borrow","","",307,[[]]],[11,"borrow_mut","","",307,[[]]],[11,"try_from","","",307,[[],["result",4]]],[11,"try_into","","",307,[[],["result",4]]],[11,"type_id","","",307,[[],["typeid",3]]],[11,"pointer_metadata","","",307,[[]]],[11,"from","wasmer_types::entity::iter","",308,[[]]],[11,"into","","",308,[[]]],[11,"into_iter","","",308,[[]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"pointer_metadata","","",308,[[]]],[11,"from","","",309,[[]]],[11,"into","","",309,[[]]],[11,"into_iter","","",309,[[]]],[11,"borrow","","",309,[[]]],[11,"borrow_mut","","",309,[[]]],[11,"try_from","","",309,[[],["result",4]]],[11,"try_into","","",309,[[],["result",4]]],[11,"type_id","","",309,[[],["typeid",3]]],[11,"pointer_metadata","","",309,[[]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"into_iter","","",310,[[]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"pointer_metadata","","",310,[[]]],[11,"from","wasmer_types::entity::keys","",311,[[]]],[11,"into","","",311,[[]]],[11,"into_iter","","",311,[[]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"pointer_metadata","","",311,[[]]],[11,"from","wasmer_types::entity::primary_map","",312,[[]]],[11,"into","","",312,[[]]],[11,"to_owned","","",312,[[]]],[11,"clone_into","","",312,[[]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"equivalent","","",312,[[],["bool",15]]],[11,"pointer_metadata","","",312,[[]]],[11,"resolve_metadata","","",312,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",312,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",312,[[],["result",4]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"pointer_metadata","","",313,[[]]],[11,"from","","",314,[[]]],[11,"into","","",314,[[]]],[11,"borrow","","",314,[[]]],[11,"borrow_mut","","",314,[[]]],[11,"try_from","","",314,[[],["result",4]]],[11,"try_into","","",314,[[],["result",4]]],[11,"type_id","","",314,[[],["typeid",3]]],[11,"pointer_metadata","","",314,[[]]],[11,"from","wasmer_types::entity::secondary_map","",315,[[]]],[11,"into","","",315,[[]]],[11,"to_owned","","",315,[[]]],[11,"clone_into","","",315,[[]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"try_into","","",315,[[],["result",4]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"equivalent","","",315,[[],["bool",15]]],[11,"pointer_metadata","","",315,[[]]],[11,"resolve_metadata","","",315,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",315,[[],[["result",4],["usize",15]]]],[11,"serialize_metadata","","",315,[[],["result",4]]],[11,"from","","",316,[[]]],[11,"into","","",316,[[]]],[11,"borrow","","",316,[[]]],[11,"borrow_mut","","",316,[[]]],[11,"try_from","","",316,[[],["result",4]]],[11,"try_into","","",316,[[],["result",4]]],[11,"type_id","","",316,[[],["typeid",3]]],[11,"pointer_metadata","","",316,[[]]],[11,"from","","",317,[[]]],[11,"into","","",317,[[]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"try_into","","",317,[[],["result",4]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"pointer_metadata","","",317,[[]]],[11,"drop","wasmer_types::lib::std::sync","",204,[[]]],[11,"drop","","",202,[[]]],[11,"drop","","",203,[[]]],[11,"drop","wasmer_types::lib::std::sync::mpsc","",174,[[]]],[11,"drop","wasmer_types::lib::std::sync","",199,[[]]],[11,"drop","wasmer_types::lib::std::sync::mpsc","",173,[[]]],[11,"drop","","",169,[[]]],[11,"as_ref","wasmer_types::lib::std::borrow","",3,[[],["path",3]]],[11,"as_ref","wasmer_types::lib::std::string","",164,[[],["path",3]]],[11,"as_ref","","",164,[[],["osstr",3]]],[11,"deref_mut","wasmer_types::lib::std::sync","",199,[[]]],[11,"deref_mut","","",204,[[]]],[11,"description","wasmer_types::lib::std::sync::mpsc","",176,[[],["str",15]]],[11,"description","wasmer_types::lib::std::cell","",10,[[],["str",15]]],[11,"description","wasmer_types::lib::std::string","",165,[[],["str",15]]],[11,"description","wasmer_types::lib::std::convert","",319,[[],["str",15]]],[11,"description","wasmer_types::lib::std::sync::mpsc","",175,[[],["str",15]]],[11,"description","wasmer_types::lib::std::sync","",206,[[],["str",15]]],[11,"cause","","",206,[[],[["option",4],["error",8]]]],[11,"description","wasmer_types::lib::std::sync::mpsc","",177,[[],["str",15]]],[11,"description","wasmer_types::lib::std::boxed","",6,[[],["str",15]]],[11,"cause","","",6,[[],[["option",4],["error",8]]]],[11,"source","","",6,[[],[["option",4],["error",8]]]],[11,"description","wasmer_types::lib::std::cell","",9,[[],["str",15]]],[11,"description","wasmer_types::lib::std::sync","",205,[[],["str",15]]],[11,"description","wasmer_types::lib::std::sync::mpsc","",178,[[],["str",15]]],[11,"description","wasmer_types::lib::std::string","",166,[[],["str",15]]],[11,"description","wasmer_types::lib::std::sync::mpsc","",324,[[],["str",15]]],[11,"description","wasmer_types::lib::std::fmt","",320,[[],["str",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[["pathbuf",3]],["bool",15]]],[11,"eq","","",3,[[["pathbuf",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::sync::mpsc","",177,[[["recvtimeouterror",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[["osstring",3]],["bool",15]]],[11,"eq","","",3,[[["osstr",3]],["bool",15]]],[11,"eq","","",3,[[["osstr",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::sync::mpsc","",324,[[["recverror",3]],["bool",15]]],[11,"eq","","",175,[[["senderror",3]],["bool",15]]],[11,"ne","","",175,[[["senderror",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::sync","",197,[[["waittimeoutresult",3]],["bool",15]]],[11,"ne","","",197,[[["waittimeoutresult",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::sync::mpsc","",176,[[["tryrecverror",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[["osstr",3]],["bool",15]]],[11,"eq","","",3,[[["path",3]],["bool",15]]],[11,"eq","","",3,[[["path",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::sync::mpsc","",178,[[["trysenderror",4]],["bool",15]]],[11,"ne","","",178,[[["trysenderror",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[["path",3]],["bool",15]]],[11,"eq","","",3,[[["osstring",3]],["bool",15]]],[11,"eq","","",3,[[["path",3]],["bool",15]]],[11,"eq","","",3,[[["osstr",3]],["bool",15]]],[11,"default","wasmer_types::lib::std::sync","Creates a <code>Mutex<T></code>, with the <code>Default</code> value for T.",198,[[],["mutex",3]]],[11,"default","","Creates a <code>Condvar</code> which is ready to be waited on and …",196,[[],["condvar",3]]],[11,"default","wasmer_types::lib::std::boxed","",6,[[],[["box",3],["osstr",3],["global",3]]]],[11,"default","wasmer_types::lib::std::sync","Creates a new <code>RwLock<T></code>, with the <code>Default</code> value for T.",202,[[],["rwlock",3]]],[11,"default","wasmer_types::lib::std::boxed","",6,[[],[["global",3],["box",3],["cstr",3]]]],[11,"into_iter","wasmer_types::lib::std::sync::mpsc","",169,[[],["intoiter",3]]],[11,"partial_cmp","wasmer_types::lib::std::borrow","",3,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["pathbuf",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["osstr",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["osstring",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["osstring",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["path",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",3,[[["pathbuf",3]],[["option",4],["ordering",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",197,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",195,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",196,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",324,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",202,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",194,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",201,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",198,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",200,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","wasmer_types::lib::std::boxed","",6,[[],[["global",3],["box",3],["cstr",3]]]],[11,"clone","wasmer_types::lib::std::sync::mpsc","",173,[[],["sender",3]]],[11,"clone","","",175,[[],["senderror",3]]],[11,"clone","","",174,[[],["syncsender",3]]],[11,"clone","","",177,[[],["recvtimeouterror",4]]],[11,"clone","wasmer_types::lib::std::boxed","",6,[[],[["global",3],["path",3],["box",3]]]],[11,"clone","wasmer_types::lib::std::sync::mpsc","",324,[[],["recverror",3]]],[11,"clone","","",178,[[],["trysenderror",4]]],[11,"clone","wasmer_types::lib::std::sync","",197,[[],["waittimeoutresult",3]]],[11,"clone","wasmer_types::lib::std::sync::mpsc","",176,[[],["tryrecverror",4]]],[11,"clone","wasmer_types::lib::std::boxed","",6,[[],[["box",3],["osstr",3],["global",3]]]],[11,"next","wasmer_types::lib::std::sync::mpsc","",171,[[],["option",4]]],[11,"next","","",170,[[],["option",4]]],[11,"next","","",172,[[],["option",4]]],[11,"fmt","wasmer_types::lib::std::sync","",203,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",206,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",205,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",204,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",324,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",199,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::mpsc","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fill_buf","wasmer_types::lib::std::boxed","",6,[[],[["error",3],["result",4]]]],[11,"consume","","",6,[[["usize",15]]]],[11,"read_until","","",6,[[["vec",3],["u8",15]],[["usize",15],["result",4],["error",3]]]],[11,"read_line","","",6,[[["string",3]],[["usize",15],["result",4],["error",3]]]],[11,"to_socket_addrs","wasmer_types::lib::std::string","",164,[[],[["error",3],["intoiter",3],["result",4]]]],[11,"seek","wasmer_types::lib::std::boxed","",6,[[["seekfrom",4]],[["result",4],["error",3],["u64",15]]]],[11,"read","","",6,[[],[["usize",15],["result",4],["error",3]]]],[11,"read_vectored","","",6,[[],[["usize",15],["result",4],["error",3]]]],[11,"is_read_vectored","","",6,[[],["bool",15]]],[11,"initializer","","",6,[[],["initializer",3]]],[11,"read_to_end","","",6,[[["vec",3]],[["usize",15],["result",4],["error",3]]]],[11,"read_to_string","","",6,[[["string",3]],[["usize",15],["result",4],["error",3]]]],[11,"read_exact","","",6,[[],[["result",4],["error",3]]]],[11,"write","","",6,[[],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored","","",6,[[],[["usize",15],["result",4],["error",3]]]],[11,"is_write_vectored","","",6,[[],["bool",15]]],[11,"flush","","",6,[[],[["result",4],["error",3]]]],[11,"write_all","","",6,[[],[["result",4],["error",3]]]],[11,"write_fmt","","",6,[[["arguments",3]],[["result",4],["error",3]]]],[11,"write","wasmer_types::lib::std::vec","",207,[[],[["usize",15],["result",4],["error",3]]]],[11,"write_vectored","","",207,[[],[["usize",15],["result",4],["error",3]]]],[11,"is_write_vectored","","",207,[[],["bool",15]]],[11,"write_all","","",207,[[],[["result",4],["error",3]]]],[11,"flush","","",207,[[],[["result",4],["error",3]]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["cstr",3]],[["cow",4],["cstr",3]]]],[11,"from","wasmer_types::lib::std::rc","",135,[[["cstr",3]],[["rc",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [<code>String</code>] into a box of dyn [<code>Error</code>] + [<code>Send</code>] + […",6,[[["string",3]],[["global",3],["error",8],["box",3]]]],[11,"from","","Converts a <code>str</code> into a box of dyn [<code>Error</code>] + [<code>Send</code>] + [<code>Sync</code>]…",6,[[["str",15]],[["box",3],["error",8],["global",3]]]],[11,"from","","Converts a <code>PathBuf</code> into a <code>Box<Path></code>",6,[[["pathbuf",3]],[["global",3],["path",3],["box",3]]]],[11,"from","","",6,[[["cow",4],["cstr",3]],[["global",3],["box",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::sync","Converts a [<code>OsString</code>] into a [<code>Arc</code>]<code><OsStr></code> without copying …",179,[[["osstring",3]],[["arc",3],["osstr",3]]]],[11,"from","wasmer_types::lib::std::rc","Converts a <code>Path</code> into an <code>Rc</code> by copying the <code>Path</code> data into …",135,[[["path",3]],[["path",3],["rc",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [<code>String</code>] into a box of dyn [<code>Error</code>].",6,[[["string",3]],[["global",3],["error",8],["box",3]]]],[11,"from","wasmer_types::lib::std::sync","",179,[[["cstr",3]],[["arc",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::sync::mpsc","Converts a <code>SendError<T></code> into a <code>TrySendError<T></code>.",178,[[["senderror",3]],["trysenderror",4]]],[11,"from","wasmer_types::lib::std::boxed","",6,[[["path",3]],[["global",3],["path",3],["box",3]]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["path",3]],[["cow",4],["path",3]]]],[11,"from","wasmer_types::lib::std::boxed","",6,[[["cow",4],["osstr",3]],[["box",3],["osstr",3],["global",3]]]],[11,"from","","",6,[[["cstr",3]],[["global",3],["box",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::sync","Converts a <code>Path</code> into an <code>Arc</code> by copying the <code>Path</code> data into …",179,[[["path",3]],[["arc",3],["path",3]]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["osstr",3]],[["cow",4],["osstr",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a type of [<code>Error</code>] into a box of dyn [<code>Error</code>].",6,[[],[["global",3],["error",8],["box",3]]]],[11,"from","wasmer_types::lib::std::sync::mpsc","Converts a <code>RecvError</code> into a <code>RecvTimeoutError</code>.",177,[[["recverror",3]],["recvtimeouterror",4]]],[11,"from","wasmer_types::lib::std::sync","Converts a [<code>CString</code>] into a [<code>Arc</code>]<code><CStr></code> without copying …",179,[[["cstring",3]],[["arc",3],["cstr",3]]]],[11,"from","","Converts a <code>PathBuf</code> into an <code>Arc</code> by moving the <code>PathBuf</code> data …",179,[[["pathbuf",3]],[["arc",3],["path",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a type of [<code>Error</code>] + [<code>Send</code>] + [<code>Sync</code>] into a box of…",6,[[],[["box",3],["error",8],["global",3]]]],[11,"from","","Converts a [<code>Cow</code>] into a box of dyn [<code>Error</code>].",6,[[["cow",4],["str",15]],[["global",3],["error",8],["box",3]]]],[11,"from","wasmer_types::lib::std::sync","",179,[[["osstr",3]],[["arc",3],["osstr",3]]]],[11,"from","","",206,[[["poisonerror",3]],["trylockerror",4]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["pathbuf",3]],[["cow",4],["path",3]]]],[11,"from","wasmer_types::lib::std::rc","Converts a [<code>OsString</code>] into a [<code>Rc</code>]<code><OsStr></code> without copying …",135,[[["osstring",3]],[["osstr",3],["rc",3]]]],[11,"from","wasmer_types::lib::std::sync::mpsc","Converts a <code>RecvError</code> into a <code>TryRecvError</code>.",176,[[["recverror",3]],["tryrecverror",4]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [<code>OsString</code>] into a [<code>Box</code>]<code><OsStr></code> without copying …",6,[[["osstring",3]],[["box",3],["osstr",3],["global",3]]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["cstring",3]],[["cow",4],["cstr",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [<code>CString</code>] into a [<code>Box</code>]<code><CStr></code> without copying …",6,[[["cstring",3]],[["global",3],["box",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::sync","Creates a new mutex in an unlocked state ready for use. …",198,[[],["mutex",3]]],[11,"from","wasmer_types::lib::std::vec","Converts a [<code>CString</code>] into a [<code>Vec</code>]<code><u8></code>.",207,[[["cstring",3]],[["global",3],["vec",3],["u8",15]]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["cstring",3]],[["cow",4],["cstr",3]]]],[11,"from","wasmer_types::lib::std::sync","Creates a new instance of an <code>RwLock<T></code> which is unlocked. …",202,[[],["rwlock",3]]],[11,"from","wasmer_types::lib::std::rc","",135,[[["osstr",3]],[["osstr",3],["rc",3]]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["osstring",3]],[["cow",4],["osstr",3]]]],[11,"from","wasmer_types::lib::std::boxed","",6,[[["osstr",3]],[["box",3],["osstr",3],["global",3]]]],[11,"from","","",6,[[["path",3],["cow",4]],[["global",3],["path",3],["box",3]]]],[11,"from","wasmer_types::lib::std::rc","Converts a [<code>CString</code>] into a [<code>Rc</code>]<code><CStr></code> without copying or …",135,[[["cstring",3]],[["rc",3],["cstr",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a [<code>Cow</code>] into a box of dyn [<code>Error</code>] + [<code>Send</code>] + […",6,[[["cow",4],["str",15]],[["box",3],["error",8],["global",3]]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["osstring",3]],[["cow",4],["osstr",3]]]],[11,"from","","",3,[[["pathbuf",3]],[["cow",4],["path",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a <code>str</code> into a box of dyn [<code>Error</code>].",6,[[["str",15]],[["global",3],["error",8],["box",3]]]],[11,"from","wasmer_types::lib::std::rc","Converts a <code>PathBuf</code> into an <code>Rc</code> by moving the <code>PathBuf</code> data …",135,[[["pathbuf",3]],[["path",3],["rc",3]]]],[11,"deref","wasmer_types::lib::std::sync","",204,[[]]],[11,"deref","","",199,[[]]],[11,"deref","","",203,[[]]],[11,"as_ref","wasmer_types::lib::std::slice","",152,[[]]],[11,"cmp","wasmer_types::lib::std::marker","",321,[[["phantomdata",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::ops","",132,[[["generatorstate",4]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::convert","",319,[[["infallible",4]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::marker","",322,[[["phantompinned",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::cmp","",16,[[["reverse",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::cell","PanicsPanics if the value in either <code>RefCell</code> is currently …",8,[[["refcell",3]],["ordering",4]]],[11,"cmp","","",7,[[["cell",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::ptr","",134,[[["nonnull",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::cmp","",15,[[["ordering",4]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::any","",1,[[["typeid",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::mem","",91,[[["manuallydrop",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::fmt","",320,[[["error",3]],["ordering",4]]],[11,"deref_mut","wasmer_types::lib::std::mem","",91,[[]]],[11,"deref_mut","wasmer_types::lib::std::cell","",12,[[]]],[11,"clone","wasmer_types::lib::std::cmp","",16,[[],["reverse",3]]],[11,"clone","wasmer_types::lib::std::slice","",148,[[],["split",3]]],[11,"clone","wasmer_types::lib::std::ops","",123,[[],["range",3]]],[11,"clone","wasmer_types::lib::std::convert","",319,[[],["infallible",4]]],[11,"clone","wasmer_types::lib::std::iter","",77,[[],["inspect",3]]],[11,"clone","wasmer_types::lib::std::hash","",47,[[],["siphasher",3]]],[11,"clone","wasmer_types::lib::std::slice","",154,[[],["rchunks",3]]],[11,"clone","wasmer_types::lib::std::iter","",67,[[],["mapwhile",3]]],[11,"clone","wasmer_types::lib::std::ops","",128,[[],["rangeinclusive",3]]],[11,"clone","wasmer_types::lib::std::iter","",53,[[],["oncewith",3]]],[11,"clone","wasmer_types::lib::std::sync::atomic","",183,[[],["ordering",4]]],[11,"clone","wasmer_types::lib::std::slice","",158,[[],["rsplit",3]]],[11,"clone","wasmer_types::lib::std::fmt","",320,[[],["error",3]]],[11,"clone","wasmer_types::lib::std::any","",1,[[],["typeid",3]]],[11,"clone","wasmer_types::lib::std::iter","",56,[[],["successors",3]]],[11,"clone","wasmer_types::lib::std::ops","",133,[[],["controlflow",4]]],[11,"clone","wasmer_types::lib::std::cell","PanicsPanics if the value is currently mutably borrowed.",8,[[],["refcell",3]]],[11,"clone","wasmer_types::lib::std::iter","",52,[[],["once",3]]],[11,"clone","","",75,[[],["flatmap",3]]],[11,"clone","wasmer_types::lib::std::cell","",7,[[],["cell",3]]],[11,"clone","wasmer_types::lib::std::iter","",65,[[],["copied",3]]],[11,"clone","","",70,[[],["chain",3]]],[11,"clone","wasmer_types::lib::std::ops","",323,[[],["rangefull",3]]],[11,"clone","","",126,[[],["bound",4]]],[11,"clone","wasmer_types::lib::std::iter","",55,[[],["repeatwith",3]]],[11,"clone","","",71,[[],["cycle",3]]],[11,"clone","wasmer_types::lib::std::hash","",46,[[],["buildhasherdefault",3]]],[11,"clone","wasmer_types::lib::std::cmp","",15,[[],["ordering",4]]],[11,"clone","wasmer_types::lib::std::ops","",129,[[],["rangetoinclusive",3]]],[11,"clone","","",132,[[],["generatorstate",4]]],[11,"clone","wasmer_types::lib::std::iter","",86,[[],["zip",3]]],[11,"clone","wasmer_types::lib::std::slice","",152,[[],["iter",3]]],[11,"clone","","",155,[[],["rchunksexact",3]]],[11,"clone","wasmer_types::lib::std::iter","",78,[[],["map",3]]],[11,"clone","wasmer_types::lib::std::slice","",145,[[],["chunksexact",3]]],[11,"clone","wasmer_types::lib::std::iter","",76,[[],["fuse",3]]],[11,"clone","wasmer_types::lib::std::slice","",144,[[],["windows",3]]],[11,"clone","wasmer_types::lib::std::marker","",322,[[],["phantompinned",3]]],[11,"clone","wasmer_types::lib::std::iter","",73,[[],["filter",3]]],[11,"clone","wasmer_types::lib::std::mem","",91,[[],["manuallydrop",3]]],[11,"clone","wasmer_types::lib::std::iter","",74,[[],["filtermap",3]]],[11,"clone","","",79,[[],["peekable",3]]],[11,"clone","","",83,[[],["skipwhile",3]]],[11,"clone","","",51,[[],["fromfn",3]]],[11,"clone","","",66,[[],["flatten",3]]],[11,"clone","wasmer_types::lib::std::fmt","",26,[[],["arguments",3]]],[11,"clone","wasmer_types::lib::std::ptr","",134,[[],["nonnull",3]]],[11,"clone","wasmer_types::lib::std::mem","",92,[[],["maybeuninit",19]]],[11,"clone","wasmer_types::lib::std::iter","",80,[[],["rev",3]]],[11,"clone","","",88,[[],["interspersewith",3]]],[11,"clone","","",69,[[],["stepby",3]]],[11,"clone","wasmer_types::lib::std::slice","",139,[[],["arraychunks",3]]],[11,"clone","wasmer_types::lib::std::ops","",124,[[],["rangefrom",3]]],[11,"clone","wasmer_types::lib::std::iter","",81,[[],["scan",3]]],[11,"clone","","",50,[[],["empty",3]]],[11,"clone","","",85,[[],["takewhile",3]]],[11,"clone","","",64,[[],["cloned",3]]],[11,"clone","","",87,[[],["intersperse",3]]],[11,"clone","","",84,[[],["take",3]]],[11,"clone","","",82,[[],["skip",3]]],[11,"clone","","",72,[[],["enumerate",3]]],[11,"clone","wasmer_types::lib::std::slice","",143,[[],["chunks",3]]],[11,"clone","wasmer_types::lib::std::ops","",125,[[],["rangeto",3]]],[11,"clone","wasmer_types::lib::std::marker","",321,[[],["phantomdata",3]]],[11,"clone","wasmer_types::lib::std::slice","",141,[[],["arraywindows",3]]],[11,"clone","wasmer_types::lib::std::iter","",54,[[],["repeat",3]]],[11,"clone","wasmer_types::lib::std::mem","",90,[[],["discriminant",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",192,[[],["atomicisize",3]]],[11,"default","wasmer_types::lib::std::hash","",46,[[],["buildhasherdefault",3]]],[11,"default","wasmer_types::lib::std::cell","Creates a <code>Cell<T></code>, with the <code>Default</code> value for T.",7,[[],["cell",3]]],[11,"default","wasmer_types::lib::std::hash","",47,[[],["siphasher",3]]],[11,"default","wasmer_types::lib::std::mem","",91,[[],["manuallydrop",3]]],[11,"default","wasmer_types::lib::std::fmt","",320,[[],["error",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",190,[[],["atomici64",3]]],[11,"default","","",186,[[],["atomici16",3]]],[11,"default","wasmer_types::lib::std::marker","",321,[[],["phantomdata",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",184,[[],["atomici8",3]]],[11,"default","","",188,[[],["atomici32",3]]],[11,"default","","Creates an <code>AtomicBool</code> initialized to <code>false</code>.",181,[[],["atomicbool",3]]],[11,"default","","",189,[[],["atomicu32",3]]],[11,"default","","",193,[[],["atomicusize",3]]],[11,"default","wasmer_types::lib::std::iter","",50,[[],["empty",3]]],[11,"default","wasmer_types::lib::std::cell","Creates a <code>RefCell<T></code>, with the <code>Default</code> value for T.",8,[[],["refcell",3]]],[11,"default","","Creates an <code>UnsafeCell</code>, with the <code>Default</code> value for T.",13,[[],["unsafecell",3]]],[11,"default","wasmer_types::lib::std::sync::atomic","",187,[[],["atomicu16",3]]],[11,"default","","",191,[[],["atomicu64",3]]],[11,"default","","Creates a null <code>AtomicPtr<T></code>.",182,[[],["atomicptr",3]]],[11,"default","","",185,[[],["atomicu8",3]]],[11,"default","wasmer_types::lib::std::ops","",323,[[],["rangefull",3]]],[11,"default","wasmer_types::lib::std::marker","",322,[[],["phantompinned",3]]],[11,"default","wasmer_types::lib::std::ops","",123,[[],["range",3]]],[11,"default","wasmer_types::lib::std::cmp","",16,[[],["reverse",3]]],[11,"as_inner","wasmer_types::lib::std::iter","",86,[[]]],[11,"as_inner","","",76,[[]]],[11,"as_inner","","",67,[[]]],[11,"as_inner","","",77,[[]]],[11,"as_inner","","",73,[[]]],[11,"as_inner","","",85,[[]]],[11,"as_inner","","",83,[[]]],[11,"as_inner","","",84,[[]]],[11,"as_inner","","",81,[[]]],[11,"as_inner","","",72,[[]]],[11,"as_inner","","",82,[[]]],[11,"as_inner","","",79,[[]]],[11,"as_inner","","",74,[[]]],[11,"as_inner","","",78,[[]]],[11,"hash","wasmer_types::lib::std::ptr","",134,[[]]],[11,"hash","wasmer_types::lib::std::ops","",129,[[]]],[11,"hash","","",126,[[]]],[11,"hash","wasmer_types::lib::std::marker","",322,[[]]],[11,"hash","wasmer_types::lib::std::ops","",128,[[]]],[11,"hash","","",323,[[]]],[11,"hash","wasmer_types::lib::std::mem","",90,[[]]],[11,"hash","wasmer_types::lib::std::ops","",132,[[]]],[11,"hash","wasmer_types::lib::std::convert","",319,[[]]],[11,"hash","wasmer_types::lib::std::sync::atomic","",183,[[]]],[11,"hash","wasmer_types::lib::std::cmp","",16,[[]]],[11,"hash","wasmer_types::lib::std::any","",1,[[]]],[11,"hash","wasmer_types::lib::std::ops","",125,[[]]],[11,"hash","","",124,[[]]],[11,"hash","wasmer_types::lib::std::cmp","",15,[[]]],[11,"hash","wasmer_types::lib::std::marker","",321,[[]]],[11,"hash","wasmer_types::lib::std::fmt","",320,[[]]],[11,"hash","wasmer_types::lib::std::ops","",123,[[]]],[11,"hash","wasmer_types::lib::std::mem","",91,[[]]],[11,"get","wasmer_types::lib::std::ops","",125,[[["str",15]],["option",4]]],[11,"get_mut","","",125,[[["str",15]],["option",4]]],[11,"get_unchecked","","",125,[[]]],[11,"get_unchecked_mut","","",125,[[]]],[11,"index","","",125,[[["str",15]]]],[11,"index_mut","","",125,[[["str",15]]]],[11,"get","","",323,[[["str",15]],["option",4]]],[11,"get_mut","","",323,[[["str",15]],["option",4]]],[11,"get_unchecked","","",323,[[]]],[11,"get_unchecked_mut","","",323,[[]]],[11,"index","","",323,[[["str",15]]]],[11,"index_mut","","",323,[[["str",15]]]],[11,"get","","",128,[[["str",15]],["option",4]]],[11,"get_mut","","",128,[[["str",15]],["option",4]]],[11,"get_unchecked","","",128,[[]]],[11,"get_unchecked_mut","","",128,[[]]],[11,"index","","",128,[[["str",15]]]],[11,"index_mut","","",128,[[["str",15]]]],[11,"get","","",128,[[],["option",4]]],[11,"get_mut","","",128,[[],["option",4]]],[11,"get_unchecked","","",128,[[]]],[11,"get_unchecked_mut","","",128,[[]]],[11,"index","","",128,[[]]],[11,"index_mut","","",128,[[]]],[11,"get","","",123,[[],["option",4]]],[11,"get_mut","","",123,[[],["option",4]]],[11,"get_unchecked","","",123,[[]]],[11,"get_unchecked_mut","","",123,[[]]],[11,"index","","",123,[[]]],[11,"index_mut","","",123,[[]]],[11,"get","","",124,[[["str",15]],["option",4]]],[11,"get_mut","","",124,[[["str",15]],["option",4]]],[11,"get_unchecked","","",124,[[]]],[11,"get_unchecked_mut","","",124,[[]]],[11,"index","","",124,[[["str",15]]]],[11,"index_mut","","",124,[[["str",15]]]],[11,"get","","",129,[[],["option",4]]],[11,"get_mut","","",129,[[],["option",4]]],[11,"get_unchecked","","",129,[[]]],[11,"get_unchecked_mut","","",129,[[]]],[11,"index","","",129,[[]]],[11,"index_mut","","",129,[[]]],[11,"get","","",124,[[],["option",4]]],[11,"get_mut","","",124,[[],["option",4]]],[11,"get_unchecked","","",124,[[]]],[11,"get_unchecked_mut","","",124,[[]]],[11,"index","","",124,[[]]],[11,"index_mut","","",124,[[]]],[11,"get","","",129,[[["str",15]],["option",4]]],[11,"get_mut","","",129,[[["str",15]],["option",4]]],[11,"get_unchecked","","",129,[[]]],[11,"get_unchecked_mut","","",129,[[]]],[11,"index","","",129,[[["str",15]]]],[11,"index_mut","","",129,[[["str",15]]]],[11,"get","","",323,[[],["option",4]]],[11,"get_mut","","",323,[[],["option",4]]],[11,"get_unchecked","","",323,[[]]],[11,"get_unchecked_mut","","",323,[[]]],[11,"index","","",323,[[]]],[11,"index_mut","","",323,[[]]],[11,"get","","",125,[[],["option",4]]],[11,"get_mut","","",125,[[],["option",4]]],[11,"get_unchecked","","",125,[[]]],[11,"get_unchecked_mut","","",125,[[]]],[11,"index","","",125,[[]]],[11,"index_mut","","",125,[[]]],[11,"get","","",123,[[["str",15]],["option",4]]],[11,"get_mut","","",123,[[["str",15]],["option",4]]],[11,"get_unchecked","","",123,[[]]],[11,"get_unchecked_mut","","",123,[[]]],[11,"index","","",123,[[["str",15]]]],[11,"index_mut","","",123,[[["str",15]]]],[11,"from","wasmer_types::lib::std::ptr","",134,[[["unique",3]],["nonnull",3]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an <code>u8</code> into an <code>AtomicU8</code>.",185,[[["u8",15]],["atomicu8",3]]],[11,"from","wasmer_types::lib::std::cell","",8,[[],["refcell",3]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an <code>u32</code> into an <code>AtomicU32</code>.",189,[[["u32",15]],["atomicu32",3]]],[11,"from","","Converts an <code>u16</code> into an <code>AtomicU16</code>.",187,[[["u16",15]],["atomicu16",3]]],[11,"from","wasmer_types::lib::std::convert","",319,[[],["infallible",4]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an <code>i16</code> into an <code>AtomicI16</code>.",186,[[["i16",15]],["atomici16",3]]],[11,"from","","Converts an <code>u64</code> into an <code>AtomicU64</code>.",191,[[["u64",15]],["atomicu64",3]]],[11,"from","","Converts an <code>i32</code> into an <code>AtomicI32</code>.",188,[[["i32",15]],["atomici32",3]]],[11,"from","","Converts an <code>i8</code> into an <code>AtomicI8</code>.",184,[[["i8",15]],["atomici8",3]]],[11,"from","","Converts an <code>usize</code> into an <code>AtomicUsize</code>.",193,[[["usize",15]],["atomicusize",3]]],[11,"from","","Converts an <code>i64</code> into an <code>AtomicI64</code>.",190,[[["i64",15]],["atomici64",3]]],[11,"from","wasmer_types::lib::std::ptr","",134,[[],["nonnull",3]]],[11,"from","wasmer_types::lib::std::cell","",7,[[],["cell",3]]],[11,"from","wasmer_types::lib::std::ptr","",134,[[],["nonnull",3]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts a <code>bool</code> into an <code>AtomicBool</code>.",181,[[["bool",15]],["atomicbool",3]]],[11,"from","wasmer_types::lib::std::cell","",13,[[],["unsafecell",3]]],[11,"from","wasmer_types::lib::std::sync::atomic","Converts an <code>isize</code> into an <code>AtomicIsize</code>.",192,[[["isize",15]],["atomicisize",3]]],[11,"from","","",182,[[],["atomicptr",3]]],[11,"write_str","wasmer_types::lib::std::fmt","",36,[[["str",15]],[["error",3],["result",4]]]],[11,"write_char","","",36,[[["char",15]],[["error",3],["result",4]]]],[11,"write_fmt","","",36,[[["arguments",3]],[["error",3],["result",4]]]],[11,"next_back","wasmer_types::lib::std::slice","",141,[[],["option",4]]],[11,"nth_back","","",141,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",84,[[],["option",4]]],[11,"nth_back","","",84,[[["usize",15]],["option",4]]],[11,"try_rfold","","",84,[[]]],[11,"rfold","","",84,[[]]],[11,"next_back","wasmer_types::lib::std::ops","",128,[[],["option",4]]],[11,"nth_back","","",128,[[["usize",15]],["option",4]]],[11,"try_rfold","","",128,[[]]],[11,"rfold","","",128,[[]]],[11,"next_back","wasmer_types::lib::std::iter","",54,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::slice","",150,[[],["option",4]]],[11,"next_back","","",145,[[],["option",4]]],[11,"nth_back","","",145,[[["usize",15]],["option",4]]],[11,"next_back","","",159,[[],["option",4]]],[11,"next_back","","",151,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::ops","",123,[[],["option",4]]],[11,"nth_back","","",123,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",82,[[],["option",4]]],[11,"nth_back","","",82,[[["usize",15]],["option",4]]],[11,"try_rfold","","",82,[[]]],[11,"rfold","","",82,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",146,[[],["option",4]]],[11,"nth_back","","",146,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",69,[[],["option",4]]],[11,"nth_back","","",69,[[["usize",15]],["option",4]]],[11,"try_rfold","","",69,[[]]],[11,"rfold","","",69,[[]]],[11,"next_back","","",70,[[],["option",4]]],[11,"advance_back_by","","",70,[[["usize",15]],[["usize",15],["result",4]]]],[11,"nth_back","","",70,[[["usize",15]],["option",4]]],[11,"rfind","","",70,[[],["option",4]]],[11,"try_rfold","","",70,[[]]],[11,"rfold","","",70,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",149,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",64,[[],["option",4]]],[11,"try_rfold","","",64,[[]]],[11,"rfold","","",64,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",143,[[],["option",4]]],[11,"nth_back","","",143,[[["usize",15]],["option",4]]],[11,"next_back","","",140,[[],["option",4]]],[11,"nth_back","","",140,[[["usize",15]],["option",4]]],[11,"next_back","","",157,[[],["option",4]]],[11,"nth_back","","",157,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",78,[[],["option",4]]],[11,"try_rfold","","",78,[[]]],[11,"rfold","","",78,[[]]],[11,"next_back","","",86,[[],["option",4]]],[11,"next_back","","",65,[[],["option",4]]],[11,"try_rfold","","",65,[[]]],[11,"rfold","","",65,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",144,[[],["option",4]]],[11,"nth_back","","",144,[[["usize",15]],["option",4]]],[11,"next_back","","",156,[[],["option",4]]],[11,"nth_back","","",156,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",73,[[],["option",4]]],[11,"try_rfold","","",73,[[]]],[11,"rfold","","",73,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",152,[[],["option",4]]],[11,"nth_back","","",152,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",72,[[],["option",4]]],[11,"nth_back","","",72,[[["usize",15]],["option",4]]],[11,"try_rfold","","",72,[[]]],[11,"rfold","","",72,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",147,[[],["option",4]]],[11,"nth_back","","",147,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",77,[[],["option",4]]],[11,"try_rfold","","",77,[[]]],[11,"rfold","","",77,[[]]],[11,"next_back","","",53,[[],["option",4]]],[11,"next_back","","",80,[[],["option",4]]],[11,"advance_back_by","","",80,[[["usize",15]],[["usize",15],["result",4]]]],[11,"nth_back","","",80,[[["usize",15]],["option",4]]],[11,"try_rfold","","",80,[[]]],[11,"rfold","","",80,[[]]],[11,"rfind","","",80,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::slice","",154,[[],["option",4]]],[11,"nth_back","","",154,[[["usize",15]],["option",4]]],[11,"next_back","","",148,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",79,[[],["option",4]]],[11,"try_rfold","","",79,[[]]],[11,"rfold","","",79,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",158,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",52,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::slice","",155,[[],["option",4]]],[11,"nth_back","","",155,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_types::lib::std::iter","",74,[[],["option",4]]],[11,"try_rfold","","",74,[[]]],[11,"rfold","","",74,[[]]],[11,"next_back","","",75,[[],["option",4]]],[11,"try_rfold","","",75,[[]]],[11,"rfold","","",75,[[]]],[11,"next_back","","",50,[[],["option",4]]],[11,"next_back","","",76,[[],["option",4]]],[11,"nth_back","","",76,[[["usize",15]],["option",4]]],[11,"try_rfold","","",76,[[]]],[11,"rfold","","",76,[[]]],[11,"rfind","","",76,[[],["option",4]]],[11,"next_back","","",66,[[],["option",4]]],[11,"try_rfold","","",66,[[]]],[11,"rfold","","",66,[[]]],[11,"next_back","wasmer_types::lib::std::slice","",139,[[],["option",4]]],[11,"nth_back","","",139,[[["usize",15]],["option",4]]],[11,"next_back","","",153,[[],["option",4]]],[11,"nth_back","","",153,[[["usize",15]],["option",4]]],[11,"eq","wasmer_types::lib::std::ops","",128,[[["rangeinclusive",3]],["bool",15]]],[11,"ne","","",128,[[["rangeinclusive",3]],["bool",15]]],[11,"eq","","",323,[[["rangefull",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::cell","",7,[[["cell",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::ops","",125,[[["rangeto",3]],["bool",15]]],[11,"ne","","",125,[[["rangeto",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::any","",1,[[["typeid",3]],["bool",15]]],[11,"ne","","",1,[[["typeid",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::convert","",319,[[["infallible",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::ops","",124,[[["rangefrom",3]],["bool",15]]],[11,"ne","","",124,[[["rangefrom",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::cmp","",15,[[["ordering",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::hash","",46,[[["buildhasherdefault",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::mem","",90,[[["discriminant",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::ops","",133,[[["controlflow",4]],["bool",15]]],[11,"ne","","",133,[[["controlflow",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::sync::atomic","",183,[[["ordering",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::ops","",132,[[["generatorstate",4]],["bool",15]]],[11,"ne","","",132,[[["generatorstate",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::mem","",91,[[["manuallydrop",3]],["bool",15]]],[11,"ne","","",91,[[["manuallydrop",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::ptr","",134,[[["nonnull",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::marker","",322,[[["phantompinned",3]],["bool",15]]],[11,"eq","","",321,[[["phantomdata",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::cmp","",16,[[["reverse",3]],["bool",15]]],[11,"ne","","",16,[[["reverse",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::ops","",129,[[["rangetoinclusive",3]],["bool",15]]],[11,"ne","","",129,[[["rangetoinclusive",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::cell","PanicsPanics if the value in either <code>RefCell</code> is currently …",8,[[["refcell",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::ops","",126,[[["bound",4]],["bool",15]]],[11,"ne","","",126,[[["bound",4]],["bool",15]]],[11,"eq","","",123,[[["range",3]],["bool",15]]],[11,"ne","","",123,[[["range",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::fmt","",320,[[["error",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::cell","",7,[[["cell",3]],[["option",4],["ordering",4]]]],[11,"lt","","",7,[[["cell",3]],["bool",15]]],[11,"le","","",7,[[["cell",3]],["bool",15]]],[11,"gt","","",7,[[["cell",3]],["bool",15]]],[11,"ge","","",7,[[["cell",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::convert","",319,[[["infallible",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_types::lib::std::cmp","",15,[[["ordering",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_types::lib::std::marker","",322,[[["phantompinned",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_types::lib::std::ops","",132,[[["generatorstate",4]],[["option",4],["ordering",4]]]],[11,"lt","","",132,[[["generatorstate",4]],["bool",15]]],[11,"le","","",132,[[["generatorstate",4]],["bool",15]]],[11,"gt","","",132,[[["generatorstate",4]],["bool",15]]],[11,"ge","","",132,[[["generatorstate",4]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::any","",1,[[["typeid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["typeid",3]],["bool",15]]],[11,"le","","",1,[[["typeid",3]],["bool",15]]],[11,"gt","","",1,[[["typeid",3]],["bool",15]]],[11,"ge","","",1,[[["typeid",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::mem","",91,[[["manuallydrop",3]],[["option",4],["ordering",4]]]],[11,"lt","","",91,[[["manuallydrop",3]],["bool",15]]],[11,"le","","",91,[[["manuallydrop",3]],["bool",15]]],[11,"gt","","",91,[[["manuallydrop",3]],["bool",15]]],[11,"ge","","",91,[[["manuallydrop",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::marker","",321,[[["phantomdata",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_types::lib::std::cell","PanicsPanics if the value in either <code>RefCell</code> is currently …",8,[[["refcell",3]],[["option",4],["ordering",4]]]],[11,"lt","","PanicsPanics if the value in either <code>RefCell</code> is currently …",8,[[["refcell",3]],["bool",15]]],[11,"le","","PanicsPanics if the value in either <code>RefCell</code> is currently …",8,[[["refcell",3]],["bool",15]]],[11,"gt","","PanicsPanics if the value in either <code>RefCell</code> is currently …",8,[[["refcell",3]],["bool",15]]],[11,"ge","","PanicsPanics if the value in either <code>RefCell</code> is currently …",8,[[["refcell",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::ptr","",134,[[["nonnull",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_types::lib::std::cmp","",16,[[["reverse",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["reverse",3]],["bool",15]]],[11,"le","","",16,[[["reverse",3]],["bool",15]]],[11,"gt","","",16,[[["reverse",3]],["bool",15]]],[11,"ge","","",16,[[["reverse",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::fmt","",320,[[["error",3]],[["option",4],["ordering",4]]]],[11,"fmt","wasmer_types::lib::std::ptr","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref","wasmer_types::lib::std::cell","",11,[[]]],[11,"deref","wasmer_types::lib::std::mem","",91,[[]]],[11,"deref","wasmer_types::lib::std::cell","",12,[[]]],[11,"fmt","wasmer_types::lib::std::fmt","",320,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::convert","",319,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::fmt","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",193,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::mem","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::any","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",55,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",191,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",183,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::any","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::fmt","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",192,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ptr","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::mem","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::fmt","",320,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cmp","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::any","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::mem","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cmp","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",323,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::marker","",321,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::convert","",319,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::hash","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::hash","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",184,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::ops","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::cell","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::marker","",322,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::any","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::fmt","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync::atomic","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::slice","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::iter","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"into_result","wasmer_types::lib::std::ops","",133,[[],["result",4]]],[11,"from_error","","",133,[[],["controlflow",4]]],[11,"from_ok","","",133,[[],["controlflow",4]]],[11,"start_bound","","",129,[[],["bound",4]]],[11,"end_bound","","",129,[[],["bound",4]]],[11,"start_bound","","",123,[[],["bound",4]]],[11,"end_bound","","",123,[[],["bound",4]]],[11,"start_bound","","",128,[[],["bound",4]]],[11,"end_bound","","",128,[[],["bound",4]]],[11,"start_bound","","",124,[[],["bound",4]]],[11,"end_bound","","",124,[[],["bound",4]]],[11,"start_bound","","",125,[[],["bound",4]]],[11,"end_bound","","",125,[[],["bound",4]]],[11,"start_bound","","",123,[[],["bound",4]]],[11,"end_bound","","",123,[[],["bound",4]]],[11,"start_bound","","",129,[[],["bound",4]]],[11,"end_bound","","",129,[[],["bound",4]]],[11,"start_bound","","",128,[[],["bound",4]]],[11,"end_bound","","",128,[[],["bound",4]]],[11,"start_bound","","",323,[[],["bound",4]]],[11,"end_bound","","",323,[[],["bound",4]]],[11,"start_bound","","",125,[[],["bound",4]]],[11,"end_bound","","",125,[[],["bound",4]]],[11,"start_bound","","",124,[[],["bound",4]]],[11,"end_bound","","",124,[[],["bound",4]]],[11,"next","wasmer_types::lib::std::iter","",69,[[],["option",4]]],[11,"size_hint","","",69,[[]]],[11,"nth","","",69,[[["usize",15]],["option",4]]],[11,"try_fold","","",69,[[]]],[11,"fold","","",69,[[]]],[11,"next","","",87,[[],["option",4]]],[11,"fold","","",87,[[]]],[11,"size_hint","","",87,[[]]],[11,"next","wasmer_types::lib::std::slice","",162,[[],["option",4]]],[11,"size_hint","","",162,[[]]],[11,"next","wasmer_types::lib::std::ops","",123,[[],["option",4]]],[11,"size_hint","","",123,[[]]],[11,"nth","","",123,[[["usize",15]],["option",4]]],[11,"last","","",123,[[],["option",4]]],[11,"min","","",123,[[],["option",4]]],[11,"max","","",123,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",82,[[],["option",4]]],[11,"nth","","",82,[[["usize",15]],["option",4]]],[11,"count","","",82,[[],["usize",15]]],[11,"last","","",82,[[],["option",4]]],[11,"size_hint","","",82,[[]]],[11,"try_fold","","",82,[[]]],[11,"fold","","",82,[[]]],[11,"next","wasmer_types::lib::std::slice","",146,[[],["option",4]]],[11,"size_hint","","",146,[[]]],[11,"count","","",146,[[],["usize",15]]],[11,"nth","","",146,[[["usize",15]],["option",4]]],[11,"last","","",146,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",88,[[],["option",4]]],[11,"fold","","",88,[[]]],[11,"size_hint","","",88,[[]]],[11,"next","wasmer_types::lib::std::slice","",155,[[],["option",4]]],[11,"size_hint","","",155,[[]]],[11,"count","","",155,[[],["usize",15]]],[11,"nth","","",155,[[["usize",15]],["option",4]]],[11,"last","","",155,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",54,[[],["option",4]]],[11,"size_hint","","",54,[[]]],[11,"next","","",85,[[],["option",4]]],[11,"size_hint","","",85,[[]]],[11,"try_fold","","",85,[[]]],[11,"fold","","",85,[[]]],[11,"next","wasmer_types::lib::std::slice","",157,[[],["option",4]]],[11,"size_hint","","",157,[[]]],[11,"count","","",157,[[],["usize",15]]],[11,"nth","","",157,[[["usize",15]],["option",4]]],[11,"last","","",157,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",74,[[],["option",4]]],[11,"size_hint","","",74,[[]]],[11,"try_fold","","",74,[[]]],[11,"fold","","",74,[[]]],[11,"next","wasmer_types::lib::std::slice","",148,[[],["option",4]]],[11,"size_hint","","",148,[[]]],[11,"next","wasmer_types::lib::std::iter","",76,[[],["option",4]]],[11,"nth","","",76,[[["usize",15]],["option",4]]],[11,"last","","",76,[[],["option",4]]],[11,"count","","",76,[[],["usize",15]]],[11,"size_hint","","",76,[[]]],[11,"try_fold","","",76,[[]]],[11,"fold","","",76,[[]]],[11,"find","","",76,[[],["option",4]]],[11,"__iterator_get_unchecked","","",76,[[["usize",15]]]],[11,"next","wasmer_types::lib::std::slice","",140,[[],["option",4]]],[11,"size_hint","","",140,[[]]],[11,"count","","",140,[[],["usize",15]]],[11,"nth","","",140,[[["usize",15]],["option",4]]],[11,"last","","",140,[[],["option",4]]],[11,"__iterator_get_unchecked","","",140,[[["usize",15]]]],[11,"next","wasmer_types::lib::std::iter","",64,[[],["option",4]]],[11,"size_hint","","",64,[[]]],[11,"try_fold","","",64,[[]]],[11,"fold","","",64,[[]]],[11,"__iterator_get_unchecked","","",64,[[["usize",15]]]],[11,"next","","",78,[[],["option",4]]],[11,"size_hint","","",78,[[]]],[11,"try_fold","","",78,[[]]],[11,"fold","","",78,[[]]],[11,"__iterator_get_unchecked","","",78,[[["usize",15]]]],[11,"next","","",73,[[],["option",4]]],[11,"size_hint","","",73,[[]]],[11,"count","","",73,[[],["usize",15]]],[11,"try_fold","","",73,[[]]],[11,"fold","","",73,[[]]],[11,"next","wasmer_types::lib::std::slice","",144,[[],["option",4]]],[11,"size_hint","","",144,[[]]],[11,"count","","",144,[[],["usize",15]]],[11,"nth","","",144,[[["usize",15]],["option",4]]],[11,"last","","",144,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",80,[[],["option",4]]],[11,"size_hint","","",80,[[]]],[11,"advance_by","","",80,[[["usize",15]],[["usize",15],["result",4]]]],[11,"nth","","",80,[[["usize",15]],["option",4]]],[11,"try_fold","","",80,[[]]],[11,"fold","","",80,[[]]],[11,"find","","",80,[[],["option",4]]],[11,"next","wasmer_types::lib::std::slice","",149,[[],["option",4]]],[11,"size_hint","","",149,[[]]],[11,"next","wasmer_types::lib::std::ops","",124,[[],["option",4]]],[11,"size_hint","","",124,[[]]],[11,"nth","","",124,[[["usize",15]],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",50,[[],["option",4]]],[11,"size_hint","","",50,[[]]],[11,"next","wasmer_types::lib::std::slice","",151,[[],["option",4]]],[11,"size_hint","","",151,[[]]],[11,"last","","",151,[[],["option",4]]],[11,"next","","",158,[[],["option",4]]],[11,"size_hint","","",158,[[]]],[11,"next","wasmer_types::lib::std::iter","",86,[[],["option",4]]],[11,"size_hint","","",86,[[]]],[11,"nth","","",86,[[["usize",15]],["option",4]]],[11,"__iterator_get_unchecked","","",86,[[["usize",15]]]],[11,"next","","",56,[[],["option",4]]],[11,"size_hint","","",56,[[]]],[11,"next","wasmer_types::lib::std::slice","",145,[[],["option",4]]],[11,"size_hint","","",145,[[]]],[11,"count","","",145,[[],["usize",15]]],[11,"nth","","",145,[[["usize",15]],["option",4]]],[11,"last","","",145,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",70,[[],["option",4]]],[11,"count","","",70,[[],["usize",15]]],[11,"try_fold","","",70,[[]]],[11,"fold","","",70,[[]]],[11,"advance_by","","",70,[[["usize",15]],[["usize",15],["result",4]]]],[11,"nth","","",70,[[["usize",15]],["option",4]]],[11,"find","","",70,[[],["option",4]]],[11,"last","","",70,[[],["option",4]]],[11,"size_hint","","",70,[[]]],[11,"next","wasmer_types::lib::std::ops","",128,[[],["option",4]]],[11,"size_hint","","",128,[[]]],[11,"nth","","",128,[[["usize",15]],["option",4]]],[11,"try_fold","","",128,[[]]],[11,"fold","","",128,[[]]],[11,"last","","",128,[[],["option",4]]],[11,"min","","",128,[[],["option",4]]],[11,"max","","",128,[[],["option",4]]],[11,"next","wasmer_types::lib::std::slice","",139,[[],["option",4]]],[11,"size_hint","","",139,[[]]],[11,"count","","",139,[[],["usize",15]]],[11,"nth","","",139,[[["usize",15]],["option",4]]],[11,"last","","",139,[[],["option",4]]],[11,"__iterator_get_unchecked","","",139,[[["usize",15]]]],[11,"next","","",160,[[],["option",4]]],[11,"size_hint","","",160,[[]]],[11,"next","wasmer_types::lib::std::iter","",66,[[],["option",4]]],[11,"size_hint","","",66,[[]]],[11,"try_fold","","",66,[[]]],[11,"fold","","",66,[[]]],[11,"next","wasmer_types::lib::std::slice","",163,[[],["option",4]]],[11,"size_hint","","",163,[[]]],[11,"next","","",156,[[],["option",4]]],[11,"size_hint","","",156,[[]]],[11,"count","","",156,[[],["usize",15]]],[11,"nth","","",156,[[["usize",15]],["option",4]]],[11,"last","","",156,[[],["option",4]]],[11,"next","","",143,[[],["option",4]]],[11,"size_hint","","",143,[[]]],[11,"count","","",143,[[],["usize",15]]],[11,"nth","","",143,[[["usize",15]],["option",4]]],[11,"last","","",143,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",75,[[],["option",4]]],[11,"size_hint","","",75,[[]]],[11,"try_fold","","",75,[[]]],[11,"fold","","",75,[[]]],[11,"next","wasmer_types::lib::std::slice","",150,[[],["option",4]]],[11,"size_hint","","",150,[[]]],[11,"last","","",150,[[],["option",4]]],[11,"next","","",154,[[],["option",4]]],[11,"size_hint","","",154,[[]]],[11,"count","","",154,[[],["usize",15]]],[11,"nth","","",154,[[["usize",15]],["option",4]]],[11,"last","","",154,[[],["option",4]]],[11,"next","wasmer_types::lib::std::iter","",71,[[],["option",4]]],[11,"size_hint","","",71,[[]]],[11,"try_fold","","",71,[[]]],[11,"next","","",52,[[],["option",4]]],[11,"size_hint","","",52,[[]]],[11,"next","","Overflow BehaviorThe method does no guarding against …",72,[[],["option",4]]],[11,"size_hint","","",72,[[]]],[11,"nth","","",72,[[["usize",15]],["option",4]]],[11,"count","","",72,[[],["usize",15]]],[11,"try_fold","","",72,[[]]],[11,"fold","","",72,[[]]],[11,"__iterator_get_unchecked","","",72,[[["usize",15]]]],[11,"next","","",51,[[],["option",4]]],[11,"next","wasmer_types::lib::std::slice","",159,[[],["option",4]]],[11,"size_hint","","",159,[[]]],[11,"next","","",153,[[],["option",4]]],[11,"size_hint","","",153,[[]]],[11,"count","","",153,[[],["usize",15]]],[11,"nth","","",153,[[["usize",15]],["option",4]]],[11,"last","","",153,[[],["option",4]]],[11,"for_each","","",153,[[]]],[11,"all","","",153,[[],["bool",15]]],[11,"any","","",153,[[],["bool",15]]],[11,"find","","",153,[[],["option",4]]],[11,"find_map","","",153,[[],["option",4]]],[11,"position","","",153,[[],[["usize",15],["option",4]]]],[11,"rposition","","",153,[[],[["usize",15],["option",4]]]],[11,"next","wasmer_types::lib::std::iter","",65,[[],["option",4]]],[11,"size_hint","","",65,[[]]],[11,"try_fold","","",65,[[]]],[11,"fold","","",65,[[]]],[11,"nth","","",65,[[["usize",15]],["option",4]]],[11,"last","","",65,[[],["option",4]]],[11,"count","","",65,[[],["usize",15]]],[11,"__iterator_get_unchecked","","",65,[[["usize",15]]]],[11,"next","","",83,[[],["option",4]]],[11,"size_hint","","",83,[[]]],[11,"try_fold","","",83,[[]]],[11,"fold","","",83,[[]]],[11,"next","","",81,[[],["option",4]]],[11,"size_hint","","",81,[[]]],[11,"try_fold","","",81,[[]]],[11,"fold","","",81,[[]]],[11,"next","","",67,[[],["option",4]]],[11,"size_hint","","",67,[[]]],[11,"try_fold","","",67,[[]]],[11,"fold","","",67,[[]]],[11,"next","","",77,[[],["option",4]]],[11,"size_hint","","",77,[[]]],[11,"try_fold","","",77,[[]]],[11,"fold","","",77,[[]]],[11,"next","","",79,[[],["option",4]]],[11,"count","","",79,[[],["usize",15]]],[11,"nth","","",79,[[["usize",15]],["option",4]]],[11,"last","","",79,[[],["option",4]]],[11,"size_hint","","",79,[[]]],[11,"try_fold","","",79,[[]]],[11,"fold","","",79,[[]]],[11,"next","","",55,[[],["option",4]]],[11,"size_hint","","",55,[[]]],[11,"next","wasmer_types::lib::std::slice","",161,[[],["option",4]]],[11,"size_hint","","",161,[[]]],[11,"next","","",147,[[],["option",4]]],[11,"size_hint","","",147,[[]]],[11,"count","","",147,[[],["usize",15]]],[11,"nth","","",147,[[["usize",15]],["option",4]]],[11,"last","","",147,[[],["option",4]]],[11,"next","","",152,[[],["option",4]]],[11,"size_hint","","",152,[[]]],[11,"count","","",152,[[],["usize",15]]],[11,"nth","","",152,[[["usize",15]],["option",4]]],[11,"last","","",152,[[],["option",4]]],[11,"for_each","","",152,[[]]],[11,"all","","",152,[[],["bool",15]]],[11,"any","","",152,[[],["bool",15]]],[11,"find","","",152,[[],["option",4]]],[11,"find_map","","",152,[[],["option",4]]],[11,"position","","",152,[[],[["usize",15],["option",4]]]],[11,"rposition","","",152,[[],[["usize",15],["option",4]]]],[11,"is_sorted_by","","",152,[[],["bool",15]]],[11,"next","wasmer_types::lib::std::iter","",84,[[],["option",4]]],[11,"nth","","",84,[[["usize",15]],["option",4]]],[11,"size_hint","","",84,[[]]],[11,"try_fold","","",84,[[]]],[11,"fold","","",84,[[]]],[11,"next","","",53,[[],["option",4]]],[11,"size_hint","","",53,[[]]],[11,"next","wasmer_types::lib::std::slice","",141,[[],["option",4]]],[11,"size_hint","","",141,[[]]],[11,"count","","",141,[[],["usize",15]]],[11,"nth","","",141,[[["usize",15]],["option",4]]],[11,"last","","",141,[[],["option",4]]],[11,"write","wasmer_types::lib::std::hash","",47,[[]]],[11,"finish","","",47,[[],["u64",15]]],[11,"build_hasher","","",46,[[]]],[11,"len","wasmer_types::lib::std::iter","",77,[[],["usize",15]]],[11,"is_empty","","",77,[[],["bool",15]]],[11,"len","wasmer_types::lib::std::slice","",152,[[],["usize",15]]],[11,"is_empty","","",152,[[],["bool",15]]],[11,"len","wasmer_types::lib::std::iter","",65,[[],["usize",15]]],[11,"is_empty","","",65,[[],["bool",15]]],[11,"len","","",76,[[],["usize",15]]],[11,"is_empty","","",76,[[],["bool",15]]],[11,"is_empty","wasmer_types::lib::std::slice","",155,[[],["bool",15]]],[11,"is_empty","","",140,[[],["bool",15]]],[11,"len","wasmer_types::lib::std::iter","",80,[[],["usize",15]]],[11,"is_empty","","",80,[[],["bool",15]]],[11,"len","wasmer_types::lib::std::slice","",153,[[],["usize",15]]],[11,"is_empty","","",153,[[],["bool",15]]],[11,"len","wasmer_types::lib::std::iter","",52,[[],["usize",15]]],[11,"is_empty","wasmer_types::lib::std::slice","",141,[[],["bool",15]]],[11,"is_empty","","",146,[[],["bool",15]]],[11,"len","wasmer_types::lib::std::iter","",72,[[],["usize",15]]],[11,"is_empty","","",72,[[],["bool",15]]],[11,"is_empty","wasmer_types::lib::std::slice","",145,[[],["bool",15]]],[11,"is_empty","","",156,[[],["bool",15]]],[11,"len","wasmer_types::lib::std::iter","",64,[[],["usize",15]]],[11,"is_empty","","",64,[[],["bool",15]]],[11,"len","","",50,[[],["usize",15]]],[11,"is_empty","wasmer_types::lib::std::slice","",139,[[],["bool",15]]],[11,"len","wasmer_types::lib::std::iter","",53,[[],["usize",15]]],[11,"len","","",78,[[],["usize",15]]],[11,"is_empty","","",78,[[],["bool",15]]],[11,"deref","wasmer_types::lib::std::boxed","",6,[[]]],[11,"deref","wasmer_types::lib::std::sync","",179,[[]]],[11,"deref","wasmer_types::lib::std::string","",164,[[],["str",15]]],[11,"deref","wasmer_types::lib::std::vec","",207,[[]]],[11,"deref","wasmer_types::lib::std::borrow","",3,[[]]],[11,"deref","wasmer_types::lib::std::rc","",135,[[]]],[11,"poll_next","wasmer_types::lib::std::boxed","",6,[[["pin",3],["context",3],["box",3]],[["option",4],["poll",4]]]],[11,"size_hint","","",6,[[]]],[11,"as_ref","wasmer_types::lib::std::vec","",207,[[]]],[11,"as_ref","wasmer_types::lib::std::borrow","",3,[[]]],[11,"as_ref","wasmer_types::lib::std::string","",164,[[]]],[11,"as_ref","","",164,[[],["str",15]]],[11,"as_ref","wasmer_types::lib::std::boxed","",6,[[]]],[11,"as_ref","wasmer_types::lib::std::vec","",211,[[]]],[11,"as_ref","","",210,[[]]],[11,"as_ref","wasmer_types::lib::std::sync","",179,[[]]],[11,"as_ref","wasmer_types::lib::std::rc","",135,[[]]],[11,"as_ref","wasmer_types::lib::std::vec","",207,[[],["vec",3]]],[11,"drop","wasmer_types::lib::std::boxed","",6,[[]]],[11,"drop","wasmer_types::lib::std::rc","Drops the <code>Weak</code> pointer.",136,[[]]],[11,"drop","wasmer_types::lib::std::vec","",210,[[]]],[11,"drop","wasmer_types::lib::std::rc","Drops the <code>Rc</code>.",135,[[]]],[11,"drop","wasmer_types::lib::std::vec","",207,[[]]],[11,"drop","wasmer_types::lib::std::string","",168,[[]]],[11,"drop","wasmer_types::lib::std::sync","Drops the <code>Arc</code>.",179,[[]]],[11,"drop","","Drops the <code>Weak</code> pointer.",180,[[]]],[11,"drop","wasmer_types::lib::std::vec","",209,[[]]],[11,"drop","","",211,[[]]],[11,"drop","","",208,[[]]],[11,"add_assign","wasmer_types::lib::std::string","",164,[[["str",15]]]],[11,"add_assign","wasmer_types::lib::std::borrow","",3,[[["str",15]]]],[11,"add_assign","","",3,[[["cow",4],["str",15]]]],[11,"deref_mut","wasmer_types::lib::std::string","",164,[[],["str",15]]],[11,"deref_mut","wasmer_types::lib::std::boxed","",6,[[]]],[11,"deref_mut","wasmer_types::lib::std::vec","",207,[[]]],[11,"eq","wasmer_types::lib::std::sync","Equality for two <code>Arc</code>s.",179,[[["arc",3]],["bool",15]]],[11,"ne","","Inequality for two <code>Arc</code>s.",179,[[["arc",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[["str",15]],["bool",15]]],[11,"ne","","",3,[[["str",15]],["bool",15]]],[11,"eq","","",3,[[["cow",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::string","",165,[[["fromutf8error",3]],["bool",15]]],[11,"ne","","",165,[[["fromutf8error",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::boxed","",6,[[["box",3]],["bool",15]]],[11,"ne","","",6,[[["box",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[],["bool",15]]],[11,"ne","","",3,[[],["bool",15]]],[11,"eq","wasmer_types::lib::std::string","",164,[[["str",15]],["bool",15]]],[11,"ne","","",164,[[["str",15]],["bool",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[["vec",3]],["bool",15]]],[11,"ne","","",3,[[["vec",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::vec","",207,[[],["bool",15]]],[11,"ne","","",207,[[],["bool",15]]],[11,"eq","","",207,[[],["bool",15]]],[11,"ne","","",207,[[],["bool",15]]],[11,"eq","","",207,[[],["bool",15]]],[11,"ne","","",207,[[],["bool",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[["str",15]],["bool",15]]],[11,"ne","","",3,[[["str",15]],["bool",15]]],[11,"eq","wasmer_types::lib::std::string","",164,[[["str",15]],["bool",15]]],[11,"ne","","",164,[[["str",15]],["bool",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[],["bool",15]]],[11,"ne","","",3,[[],["bool",15]]],[11,"eq","wasmer_types::lib::std::string","",164,[[["cow",4]],["bool",15]]],[11,"ne","","",164,[[["cow",4]],["bool",15]]],[11,"eq","wasmer_types::lib::std::vec","",207,[[["vec",3]],["bool",15]]],[11,"ne","","",207,[[["vec",3]],["bool",15]]],[11,"eq","","",207,[[],["bool",15]]],[11,"ne","","",207,[[],["bool",15]]],[11,"eq","","",207,[[],["bool",15]]],[11,"ne","","",207,[[],["bool",15]]],[11,"eq","wasmer_types::lib::std::string","",164,[[["string",3]],["bool",15]]],[11,"ne","","",164,[[["string",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::rc","Equality for two <code>Rc</code>s.",135,[[["rc",3]],["bool",15]]],[11,"ne","","Inequality for two <code>Rc</code>s.",135,[[["rc",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::borrow","",3,[[["string",3]],["bool",15]]],[11,"ne","","",3,[[["string",3]],["bool",15]]],[11,"len","wasmer_types::lib::std::boxed","",6,[[],["usize",15]]],[11,"is_empty","","",6,[[],["bool",15]]],[11,"is_empty","wasmer_types::lib::std::vec","",211,[[],["bool",15]]],[11,"is_empty","","",210,[[],["bool",15]]],[11,"call_once","wasmer_types::lib::std::boxed","",6,[[]]],[11,"index_mut","wasmer_types::lib::std::string","",164,[[["usize",15],["range",3]],["str",15]]],[11,"index_mut","","",164,[[["usize",15],["rangeinclusive",3]],["str",15]]],[11,"index_mut","","",164,[[["usize",15],["rangefrom",3]],["str",15]]],[11,"index_mut","","",164,[[["usize",15],["rangeto",3]],["str",15]]],[11,"index_mut","","",164,[[["rangefull",3]],["str",15]]],[11,"index_mut","wasmer_types::lib::std::vec","",207,[[]]],[11,"index_mut","wasmer_types::lib::std::string","",164,[[["usize",15],["rangetoinclusive",3]],["str",15]]],[11,"next_back","","",168,[[],[["char",15],["option",4]]]],[11,"next_back","wasmer_types::lib::std::vec","",210,[[],["option",4]]],[11,"next_back","wasmer_types::lib::std::boxed","",6,[[],["option",4]]],[11,"nth_back","","",6,[[["usize",15]],["option",4]]],[11,"next_back","wasmer_types::lib::std::vec","",209,[[],["option",4]]],[11,"next_back","","",211,[[],["option",4]]],[11,"extend","wasmer_types::lib::std::string","",164,[[]]],[11,"extend_one","","",164,[[["char",15]]]],[11,"extend_reserve","","",164,[[["usize",15]]]],[11,"extend","wasmer_types::lib::std::vec","",207,[[]]],[11,"extend_one","","",207,[[]]],[11,"extend_reserve","","",207,[[["usize",15]]]],[11,"extend","wasmer_types::lib::std::string","",164,[[]]],[11,"extend_one","","",164,[[["cow",4],["str",15]]]],[11,"extend","","",164,[[]]],[11,"extend","","",164,[[]]],[11,"extend_one","","",164,[[["char",15]]]],[11,"extend_reserve","","",164,[[["usize",15]]]],[11,"extend","","",164,[[]]],[11,"extend_one","","",164,[[["str",15]]]],[11,"extend","wasmer_types::lib::std::vec","",207,[[]]],[11,"extend_one","","",207,[[]]],[11,"extend_reserve","","",207,[[["usize",15]]]],[11,"extend","wasmer_types::lib::std::string","",164,[[]]],[11,"extend_one","","",164,[[["string",3]]]],[11,"as_inner","wasmer_types::lib::std::vec","",211,[[]]],[11,"default","wasmer_types::lib::std::rc","Creates a new <code>Rc<T></code>, with the <code>Default</code> value for <code>T</code>.",135,[[],["rc",3]]],[11,"default","wasmer_types::lib::std::string","Creates an empty <code>String</code>.",164,[[],["string",3]]],[11,"default","wasmer_types::lib::std::sync","Creates a new <code>Arc<T></code>, with the <code>Default</code> value for <code>T</code>.",179,[[],["arc",3]]],[11,"default","wasmer_types::lib::std::borrow","Creates an owned Cow<\'a, B> with the default value for …",3,[[],["cow",4]]],[11,"default","wasmer_types::lib::std::boxed","",6,[[],[["global",3],["str",15],["box",3]]]],[11,"default","","",6,[[],[["box",3],["global",3]]]],[11,"default","wasmer_types::lib::std::vec","Creates an empty <code>Vec<T></code>.",207,[[],[["vec",3],["global",3]]]],[11,"default","wasmer_types::lib::std::sync","Constructs a new <code>Weak<T></code>, without allocating memory. …",180,[[],["weak",3]]],[11,"default","wasmer_types::lib::std::boxed","Creates a <code>Box<T></code>, with the <code>Default</code> value for T.",6,[[],[["box",3],["global",3]]]],[11,"default","wasmer_types::lib::std::rc","Constructs a new <code>Weak<T></code>, allocating memory for <code>T</code> without …",136,[[],["weak",3]]],[11,"from_iter","wasmer_types::lib::std::string","",164,[[],["string",3]]],[11,"from_iter","","",164,[[],["string",3]]],[11,"from_iter","","",164,[[],["string",3]]],[11,"from_iter","","",164,[[],["string",3]]],[11,"from_iter","wasmer_types::lib::std::vec","",207,[[],[["vec",3],["global",3]]]],[11,"from_iter","wasmer_types::lib::std::borrow","",3,[[],[["cow",4],["str",15]]]],[11,"from_iter","","",3,[[],[["cow",4],["str",15]]]],[11,"from_iter","wasmer_types::lib::std::sync","Takes each element in the <code>Iterator</code> and collects it into …",179,[[],["arc",3]]],[11,"from_iter","wasmer_types::lib::std::boxed","",6,[[],[["box",3],["global",3]]]],[11,"from_iter","wasmer_types::lib::std::borrow","",3,[[],["cow",4]]],[11,"from_iter","wasmer_types::lib::std::string","",164,[[],["string",3]]],[11,"from_iter","wasmer_types::lib::std::borrow","",3,[[],[["cow",4],["str",15]]]],[11,"from_iter","wasmer_types::lib::std::rc","Takes each element in the <code>Iterator</code> and collects it into …",135,[[],["rc",3]]],[11,"from_iter","wasmer_types::lib::std::string","",164,[[],["string",3]]],[11,"resume","wasmer_types::lib::std::boxed","",6,[[["box",3],["pin",3]],["generatorstate",4]]],[11,"into_iter","wasmer_types::lib::std::vec","Creates a consuming iterator, that is, one that moves …",207,[[],["intoiter",3]]],[11,"call_mut","wasmer_types::lib::std::boxed","",6,[[]]],[11,"partial_cmp","wasmer_types::lib::std::sync","Partial comparison for two <code>Arc</code>s.",179,[[["arc",3]],[["option",4],["ordering",4]]]],[11,"lt","","Less-than comparison for two <code>Arc</code>s.",179,[[["arc",3]],["bool",15]]],[11,"le","","\'Less than or equal to\' comparison for two <code>Arc</code>s.",179,[[["arc",3]],["bool",15]]],[11,"gt","","Greater-than comparison for two <code>Arc</code>s.",179,[[["arc",3]],["bool",15]]],[11,"ge","","\'Greater than or equal to\' comparison for two <code>Arc</code>s.",179,[[["arc",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::vec","",207,[[["vec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_types::lib::std::borrow","",3,[[["cow",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","wasmer_types::lib::std::boxed","",6,[[["box",3]],[["option",4],["ordering",4]]]],[11,"lt","","",6,[[["box",3]],["bool",15]]],[11,"le","","",6,[[["box",3]],["bool",15]]],[11,"ge","","",6,[[["box",3]],["bool",15]]],[11,"gt","","",6,[[["box",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::string","",164,[[["string",3]],[["option",4],["ordering",4]]]],[11,"lt","","",164,[[["string",3]],["bool",15]]],[11,"le","","",164,[[["string",3]],["bool",15]]],[11,"gt","","",164,[[["string",3]],["bool",15]]],[11,"ge","","",164,[[["string",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::lib::std::rc","Partial comparison for two <code>Rc</code>s.",135,[[["rc",3]],[["option",4],["ordering",4]]]],[11,"lt","","Less-than comparison for two <code>Rc</code>s.",135,[[["rc",3]],["bool",15]]],[11,"le","","\'Less than or equal to\' comparison for two <code>Rc</code>s.",135,[[["rc",3]],["bool",15]]],[11,"gt","","Greater-than comparison for two <code>Rc</code>s.",135,[[["rc",3]],["bool",15]]],[11,"ge","","\'Greater than or equal to\' comparison for two <code>Rc</code>s.",135,[[["rc",3]],["bool",15]]],[11,"poll","wasmer_types::lib::std::boxed","",6,[[["pin",3],["box",3],["context",3]],["poll",4]]],[11,"fmt","wasmer_types::lib::std::string","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::borrow","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::vec","",210,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::string","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::string","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::rc","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::string","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::vec","",211,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::rc","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::vec","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",207,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::boxed","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"borrow_mut","wasmer_types::lib::std::vec","",207,[[]]],[11,"borrow_mut","wasmer_types::lib::std::string","",164,[[],["str",15]]],[11,"borrow_mut","wasmer_types::lib::std::boxed","",6,[[]]],[11,"clone","wasmer_types::lib::std::sync","Makes a clone of the <code>Arc</code> pointer.",179,[[],["arc",3]]],[11,"clone","wasmer_types::lib::std::vec","",207,[[],["vec",3]]],[11,"clone_from","","",207,[[["vec",3]]]],[11,"clone","wasmer_types::lib::std::rc","Makes a clone of the <code>Weak</code> pointer that points to the same …",136,[[],["weak",3]]],[11,"clone","wasmer_types::lib::std::borrow","",3,[[],["cow",4]]],[11,"clone_from","","",3,[[["cow",4]]]],[11,"clone","wasmer_types::lib::std::string","",165,[[],["fromutf8error",3]]],[11,"clone","wasmer_types::lib::std::boxed","",6,[[],["box",3]]],[11,"clone_from","","",6,[[["box",3]]]],[11,"clone","wasmer_types::lib::std::sync","Makes a clone of the <code>Weak</code> pointer that points to the same …",180,[[],["weak",3]]],[11,"clone","wasmer_types::lib::std::vec","",211,[[],["intoiter",3]]],[11,"clone","wasmer_types::lib::std::boxed","Returns a new box with a <code>clone()</code> of this box\'s contents.",6,[[],["box",3]]],[11,"clone_from","","Copies <code>source</code>\'s contents into <code>self</code> without creating a new …",6,[[["box",3]]]],[11,"clone","wasmer_types::lib::std::string","",164,[[],["string",3]]],[11,"clone_from","","",164,[[["string",3]]]],[11,"clone","wasmer_types::lib::std::boxed","",6,[[],[["global",3],["str",15],["box",3]]]],[11,"clone","wasmer_types::lib::std::rc","Makes a clone of the <code>Rc</code> pointer.",135,[[],["rc",3]]],[11,"call","wasmer_types::lib::std::boxed","",6,[[]]],[11,"next","wasmer_types::lib::std::vec","",211,[[],["option",4]]],[11,"size_hint","","",211,[[]]],[11,"count","","",211,[[],["usize",15]]],[11,"__iterator_get_unchecked","","",211,[[["usize",15]]]],[11,"next","","",209,[[],["option",4]]],[11,"size_hint","","",209,[[]]],[11,"next","wasmer_types::lib::std::boxed","",6,[[],["option",4]]],[11,"size_hint","","",6,[[]]],[11,"nth","","",6,[[["usize",15]],["option",4]]],[11,"last","","",6,[[],["option",4]]],[11,"next","wasmer_types::lib::std::vec","",210,[[],["option",4]]],[11,"size_hint","","",210,[[]]],[11,"next","","",208,[[],["option",4]]],[11,"size_hint","","",208,[[]]],[11,"next","wasmer_types::lib::std::string","",168,[[],[["char",15],["option",4]]]],[11,"size_hint","","",168,[[]]],[11,"last","","",168,[[],[["char",15],["option",4]]]],[11,"index","","",164,[[["usize",15],["range",3]],["str",15]]],[11,"index","wasmer_types::lib::std::vec","",207,[[]]],[11,"index","wasmer_types::lib::std::string","",164,[[["usize",15],["rangeinclusive",3]],["str",15]]],[11,"index","","",164,[[["rangefull",3]],["str",15]]],[11,"index","","",164,[[["usize",15],["rangetoinclusive",3]],["str",15]]],[11,"index","","",164,[[["usize",15],["rangeto",3]],["str",15]]],[11,"index","","",164,[[["usize",15],["rangefrom",3]],["str",15]]],[11,"finish","wasmer_types::lib::std::boxed","",6,[[],["u64",15]]],[11,"write","","",6,[[]]],[11,"write_u8","","",6,[[["u8",15]]]],[11,"write_u16","","",6,[[["u16",15]]]],[11,"write_u32","","",6,[[["u32",15]]]],[11,"write_u64","","",6,[[["u64",15]]]],[11,"write_u128","","",6,[[["u128",15]]]],[11,"write_usize","","",6,[[["usize",15]]]],[11,"write_i8","","",6,[[["i8",15]]]],[11,"write_i16","","",6,[[["i16",15]]]],[11,"write_i32","","",6,[[["i32",15]]]],[11,"write_i64","","",6,[[["i64",15]]]],[11,"write_i128","","",6,[[["i128",15]]]],[11,"write_isize","","",6,[[["isize",15]]]],[11,"fmt","wasmer_types::lib::std::string","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::rc","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::string","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::borrow","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::boxed","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"borrow","wasmer_types::lib::std::rc","",135,[[]]],[11,"borrow","wasmer_types::lib::std::boxed","",6,[[]]],[11,"borrow","wasmer_types::lib::std::string","",164,[[],["str",15]]],[11,"borrow","wasmer_types::lib::std::sync","",179,[[]]],[11,"borrow","wasmer_types::lib::std::vec","",207,[[]]],[11,"borrow","wasmer_types::lib::std::borrow","",3,[[]]],[11,"try_from","wasmer_types::lib::std::boxed","",6,[[["box",3],["global",3]],[["box",3],["result",4]]]],[11,"try_from","wasmer_types::lib::std::sync","",179,[[["arc",3]],[["result",4],["arc",3]]]],[11,"try_from","wasmer_types::lib::std::rc","",135,[[["rc",3]],[["result",4],["rc",3]]]],[11,"from_str","wasmer_types::lib::std::string","",164,[[["str",15]],[["result",4],["string",3]]]],[11,"to_string","wasmer_types::lib::std::borrow","",3,[[],["string",3]]],[11,"to_string","wasmer_types::lib::std::string","",164,[[],["string",3]]],[11,"add","wasmer_types::lib::std::borrow","",3,[[["cow",4],["str",15]]]],[11,"add","wasmer_types::lib::std::string","",164,[[["str",15]],["string",3]]],[11,"add","wasmer_types::lib::std::borrow","",3,[[["str",15]]]],[11,"as_mut","wasmer_types::lib::std::string","",164,[[],["str",15]]],[11,"as_mut","wasmer_types::lib::std::vec","",207,[[],["vec",3]]],[11,"as_mut","wasmer_types::lib::std::boxed","",6,[[]]],[11,"as_mut","wasmer_types::lib::std::vec","",207,[[]]],[11,"from","wasmer_types::lib::std::sync","",179,[[["str",15]],[["str",15],["arc",3]]]],[11,"from","wasmer_types::lib::std::rc","",135,[[],["rc",3]]],[11,"from","","",135,[[],["rc",3]]],[11,"from","wasmer_types::lib::std::string","",164,[[["string",3]],["string",3]]],[11,"from","wasmer_types::lib::std::sync","",179,[[["cow",4]],["arc",3]]],[11,"from","wasmer_types::lib::std::boxed","Converts a <code>&str</code> into a <code>Box<str></code>",6,[[["str",15]],[["global",3],["str",15],["box",3]]]],[11,"from","wasmer_types::lib::std::rc","",135,[[["vec",3],["global",3]],["rc",3]]],[11,"from","wasmer_types::lib::std::boxed","Converts a generic type <code>T</code> into a <code>Box<T></code>",6,[[],[["box",3],["global",3]]]],[11,"from","wasmer_types::lib::std::string","",164,[[["char",15]],["string",3]]],[11,"from","wasmer_types::lib::std::boxed","Converts a <code>Box<str></code> into a <code>Box<[u8]></code>",6,[[["box",3],["str",15]],["box",3]]],[11,"from","","Converts a <code>[T; N]</code> into a <code>Box<[T]></code>",6,[[],[["box",3],["global",3]]]],[11,"from","wasmer_types::lib::std::vec","",207,[[],[["vec",3],["global",3]]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["vec",3]],["cow",4]]],[11,"from","","",3,[[["str",15]],[["cow",4],["str",15]]]],[11,"from","","",3,[[["string",3]],[["cow",4],["str",15]]]],[11,"from","wasmer_types::lib::std::vec","",207,[[["cow",4]],[["vec",3],["global",3]]]],[11,"from","wasmer_types::lib::std::string","",164,[[["cow",4],["str",15]],["string",3]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[],["cow",4]]],[11,"from","wasmer_types::lib::std::boxed","",6,[[["str",15],["cow",4]],[["global",3],["str",15],["box",3]]]],[11,"from","wasmer_types::lib::std::vec","Converts a <code>BinaryHeap<T></code> into a <code>Vec<T></code>.",207,[[["binaryheap",3]],[["vec",3],["global",3]]]],[11,"from","wasmer_types::lib::std::sync","",179,[[["box",3],["global",3]],["arc",3]]],[11,"from","wasmer_types::lib::std::boxed","",6,[[["vec",3]],["box",3]]],[11,"from","","Converts the given <code>String</code> to a boxed <code>str</code> slice that is …",6,[[["string",3]],[["global",3],["str",15],["box",3]]]],[11,"from","wasmer_types::lib::std::sync","",179,[[],["arc",3]]],[11,"from","wasmer_types::lib::std::string","Converts a <code>&mut str</code> into a <code>String</code>.",164,[[["str",15]],["string",3]]],[11,"from","wasmer_types::lib::std::vec","",207,[[["box",3]],["vec",3]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["vec",3],["global",3]],["cow",4]]],[11,"from","wasmer_types::lib::std::sync","",179,[[["string",3]],[["str",15],["arc",3]]]],[11,"from","wasmer_types::lib::std::boxed","",6,[[["cow",4]],[["box",3],["global",3]]]],[11,"from","wasmer_types::lib::std::sync","",179,[[],["arc",3]]],[11,"from","wasmer_types::lib::std::borrow","",3,[[["string",3]],[["cow",4],["str",15]]]],[11,"from","wasmer_types::lib::std::rc","",135,[[["cow",4]],["rc",3]]],[11,"from","wasmer_types::lib::std::string","Converts the given boxed <code>str</code> slice to a <code>String</code>. It is …",164,[[["box",3],["str",15],["global",3]],["string",3]]],[11,"from","wasmer_types::lib::std::vec","Turn a <code>VecDeque<T></code> into a <code>Vec<T></code>.",207,[[["vecdeque",3]],[["vec",3],["global",3]]]],[11,"from","wasmer_types::lib::std::sync","",179,[[["vec",3],["global",3]],["arc",3]]],[11,"from","wasmer_types::lib::std::vec","Converts the given <code>String</code> to a vector <code>Vec</code> that holds …",207,[[["string",3]],[["global",3],["vec",3],["u8",15]]]],[11,"from","wasmer_types::lib::std::rc","",135,[[["str",15]],[["rc",3],["str",15]]]],[11,"from","wasmer_types::lib::std::string","",164,[[["str",15]],["string",3]]],[11,"from","wasmer_types::lib::std::vec","",207,[[],[["vec",3],["global",3]]]],[11,"from","","",207,[[["str",15]],[["global",3],["vec",3],["u8",15]]]],[11,"from","","",207,[[],[["vec",3],["global",3]]]],[11,"from","wasmer_types::lib::std::boxed","Converts a <code>&[T]</code> into a <code>Box<[T]></code>",6,[[],[["box",3],["global",3]]]],[11,"from","wasmer_types::lib::std::rc","",135,[[["string",3]],[["rc",3],["str",15]]]],[11,"from","","",135,[[["box",3],["global",3]],["rc",3]]],[11,"write_str","wasmer_types::lib::std::string","",164,[[["str",15]],[["error",3],["result",4]]]],[11,"write_char","","",164,[[["char",15]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::boxed","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::sync","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","wasmer_types::lib::std::rc","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"cmp","wasmer_types::lib::std::borrow","",3,[[["cow",4]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::boxed","",6,[[["box",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::rc","Comparison for two <code>Rc</code>s.",135,[[["rc",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::sync","Comparison for two <code>Arc</code>s.",179,[[["arc",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::vec","",207,[[["vec",3]],["ordering",4]]],[11,"cmp","wasmer_types::lib::std::string","",164,[[["string",3]],["ordering",4]]],[11,"hash","","",164,[[]]],[11,"hash","wasmer_types::lib::std::borrow","",3,[[]]],[11,"hash","wasmer_types::lib::std::rc","",135,[[]]],[11,"hash","wasmer_types::lib::std::sync","",179,[[]]],[11,"hash","wasmer_types::lib::std::vec","",207,[[]]],[11,"hash","wasmer_types::lib::std::boxed","",6,[[]]],[11,"deserialize","wasmer_types::lib::std::marker","",321,[[],["result",4]]],[11,"serialize","","",321,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::ops","",128,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::cell","",8,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",184,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::ops","",123,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",181,[[],["result",4]]],[11,"serialize","","",186,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::string","",164,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::rc","",135,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync","",179,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",190,[[],["result",4]]],[11,"serialize","","",189,[[],["result",4]]],[11,"serialize","","",191,[[],["result",4]]],[11,"serialize","","",187,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::ops","",126,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",193,[[],["result",4]]],[11,"serialize","","",192,[[],["result",4]]],[11,"serialize","","",188,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync","",180,[[],["result",4]]],[11,"serialize","","",202,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",185,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::fmt","",26,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::cell","",7,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::boxed","",6,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::rc","",136,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::vec","",207,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::cmp","",16,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::borrow","",3,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync","",198,[[],["result",4]]],[11,"into_deserializer","wasmer_types::lib::std::borrow","",3,[[],["cowstrdeserializer",3]]],[11,"into_deserializer","wasmer_types::lib::std::vec","",207,[[]]],[11,"into_deserializer","wasmer_types::lib::std::string","",164,[[],["stringdeserializer",3]]],[11,"custom","wasmer_types::lib::std::fmt","",320,[[],["error",3]]],[11,"deserialize","wasmer_types::lib::std::marker","",321,[[],[["result",4],["phantomdata",3]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",186,[[],[["result",4],["atomici16",3]]]],[11,"deserialize","","",184,[[],[["atomici8",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::ops","",128,[[],[["rangeinclusive",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",191,[[],[["result",4],["atomicu64",3]]]],[11,"deserialize","wasmer_types::lib::std::sync","",202,[[],[["rwlock",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::ops","",123,[[],[["range",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",188,[[],[["result",4],["atomici32",3]]]],[11,"deserialize","wasmer_types::lib::std::rc","",135,[[],[["result",4],["rc",3]]]],[11,"deserialize","wasmer_types::lib::std::sync","",180,[[],[["result",4],["weak",3]]]],[11,"deserialize","wasmer_types::lib::std::ops","",126,[[],[["bound",4],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",193,[[],[["atomicusize",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::boxed","",6,[[],[["result",4],["box",3]]]],[11,"deserialize","","",6,[[],[["box",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync","",179,[[],[["result",4],["arc",3]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",181,[[],[["result",4],["atomicbool",3]]]],[11,"deserialize","wasmer_types::lib::std::boxed","",6,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_types::lib::std::cell","",8,[[],[["result",4],["refcell",3]]]],[11,"deserialize","","",7,[[],[["result",4],["cell",3]]]],[11,"deserialize","wasmer_types::lib::std::boxed","",6,[[],[["box",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",189,[[],[["result",4],["atomicu32",3]]]],[11,"deserialize","","",185,[[],[["result",4],["atomicu8",3]]]],[11,"deserialize","wasmer_types::lib::std::boxed","",6,[[],[["result",4],["box",3]]]],[11,"deserialize","wasmer_types::lib::std::borrow","",3,[[],[["cow",4],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::string","",164,[[],[["string",3],["result",4]]]],[11,"deserialize_in_place","","",164,[[["string",3]],["result",4]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",187,[[],[["atomicu16",3],["result",4]]]],[11,"deserialize","","",192,[[],[["atomicisize",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync","",198,[[],[["result",4],["mutex",3]]]],[11,"deserialize","wasmer_types::lib::std::rc","",136,[[],[["weak",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",190,[[],[["result",4],["atomici64",3]]]],[11,"deserialize","wasmer_types::lib::std::cmp","",16,[[],[["reverse",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::vec","",207,[[],[["result",4],["vec",3]]]],[11,"deserialize_in_place","","",207,[[["vec",3]],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync","",180,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::rc","",136,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",187,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync","",179,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",191,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::string","",164,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::vec","",207,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::boxed","",6,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::ops","",128,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",188,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::marker","",321,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::ops","",123,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",185,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::ops","",323,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",184,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::rc","",135,[[],["result",4]]],[11,"serialize","wasmer_types::lib::std::sync::atomic","",189,[[],["result",4]]],[11,"serialize","","",186,[[],["result",4]]],[11,"serialize","","",181,[[],["result",4]]],[11,"serialize","","",190,[[],["result",4]]],[11,"deserialize","","",186,[[],[["result",4],["atomici16",3]]]],[11,"deserialize","","",188,[[],[["atomici32",3],["result",4]]]],[11,"deserialize","","",190,[[],[["result",4],["atomici64",3]]]],[11,"deserialize","wasmer_types::lib::std::marker","",321,[[],[["result",4],["phantomdata",3]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",187,[[],[["atomicu16",3],["result",4]]]],[11,"deserialize","","",191,[[],[["result",4],["atomicu64",3]]]],[11,"deserialize","","",185,[[],[["atomicu8",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::ops","",323,[[],[["rangefull",3],["result",4]]]],[11,"deserialize","wasmer_types::lib::std::sync::atomic","",184,[[],[["atomici8",3],["result",4]]]],[11,"deserialize","","",189,[[],[["result",4],["atomicu32",3]]]],[11,"deserialize","","",181,[[],[["result",4],["atomicbool",3]]]],[11,"resolve","wasmer_types::lib::std::sync","",179,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::sync::atomic","",185,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","","",189,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::string","",164,[[["usize",15],["maybeuninit",19],["stringresolver",3]]]],[11,"resolve","wasmer_types::lib::std::vec","",207,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::ops","",323,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::sync::atomic","",187,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::marker","",321,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::boxed","",6,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::ops","",128,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::sync::atomic","",191,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","","",181,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","","",190,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::rc","",135,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::sync::atomic","",188,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::sync","",180,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::rc","",136,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::sync::atomic","",186,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::ops","",123,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::lib::std::sync::atomic","",184,[[["usize",15],["atomicresolver",3],["maybeuninit",19]]]],[11,"data_address","wasmer_types::lib::std::rc","",135,[[]]],[11,"data_address","wasmer_types::lib::std::sync","",179,[[]]],[11,"eq","wasmer_types::lib::std::vec","",207,[[["archivedvec",3]],["bool",15]]],[11,"eq","wasmer_types::lib::std::string","",164,[[["archivedstring",3]],["bool",15]]],[11,"from_raw_parts","wasmer_types::lib::std::ptr","",134,[[],["nonnull",3]]],[11,"to_raw_parts","","",134,[[]]],[11,"size_of_val","wasmer_types::lib::std::vec","",207,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",184,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",186,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::cell","",13,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",192,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::any","",0,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",190,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::marker","",321,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync","",202,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",185,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",188,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",193,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",189,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::ptr","",134,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::string","",164,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",191,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::boxed","",6,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::cell","",8,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync","",198,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",181,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync","",179,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::lib::std::sync::atomic","",187,[[["memoryusagetracker",8]],["usize",15]]],[11,"from_abi","wasmer_types::extern_ref","",215,[[]]],[11,"into_abi","","",215,[[]]],[11,"to_binary","","",215,[[],["i128",15]]],[11,"from_binary","","",215,[[["i128",15]]]],[11,"new","wasmer_types::indexes","",221,[[["usize",15]]]],[11,"index","","",221,[[],["usize",15]]],[11,"new","","",222,[[["usize",15]]]],[11,"index","","",222,[[],["usize",15]]],[11,"new","","",224,[[["usize",15]]]],[11,"index","","",224,[[],["usize",15]]],[11,"new","","",225,[[["usize",15]]]],[11,"index","","",225,[[],["usize",15]]],[11,"new","","",226,[[["usize",15]]]],[11,"index","","",226,[[],["usize",15]]],[11,"new","","",227,[[["usize",15]]]],[11,"index","","",227,[[],["usize",15]]],[11,"new","","",229,[[["usize",15]]]],[11,"index","","",229,[[],["usize",15]]],[11,"new","","",230,[[["usize",15]]]],[11,"index","","",230,[[],["usize",15]]],[11,"new","","",232,[[["usize",15]]]],[11,"index","","",232,[[],["usize",15]]],[11,"new","","",233,[[["usize",15]]]],[11,"index","","",233,[[],["usize",15]]],[11,"new","","",235,[[["usize",15]]]],[11,"index","","",235,[[],["usize",15]]],[11,"new","","",236,[[["usize",15]]]],[11,"index","","",236,[[],["usize",15]]],[11,"new","","",238,[[["usize",15]]]],[11,"index","","",238,[[],["usize",15]]],[11,"new","","",239,[[["usize",15]]]],[11,"index","","",239,[[],["usize",15]]],[11,"new","","",241,[[["usize",15]]]],[11,"index","","",241,[[],["usize",15]]],[11,"new","","",242,[[["usize",15]]]],[11,"index","","",242,[[],["usize",15]]],[11,"new","","",244,[[["usize",15]]]],[11,"index","","",244,[[],["usize",15]]],[11,"new","","",245,[[["usize",15]]]],[11,"index","","",245,[[],["usize",15]]],[11,"new","","",247,[[["usize",15]]]],[11,"index","","",247,[[],["usize",15]]],[11,"new","","",248,[[["usize",15]]]],[11,"index","","",248,[[],["usize",15]]],[11,"new","","",250,[[["usize",15]]]],[11,"index","","",250,[[],["usize",15]]],[11,"new","","",251,[[["usize",15]]]],[11,"index","","",251,[[],["usize",15]]],[11,"reserved_value","","",221,[[],["localfunctionindex",3]]],[11,"is_reserved_value","","",221,[[],["bool",15]]],[11,"reserved_value","","",222,[[],["archivedlocalfunctionindex",3]]],[11,"is_reserved_value","","",222,[[],["bool",15]]],[11,"reserved_value","","",224,[[],["localtableindex",3]]],[11,"is_reserved_value","","",224,[[],["bool",15]]],[11,"reserved_value","","",225,[[],["localmemoryindex",3]]],[11,"is_reserved_value","","",225,[[],["bool",15]]],[11,"reserved_value","","",226,[[],["localglobalindex",3]]],[11,"is_reserved_value","","",226,[[],["bool",15]]],[11,"reserved_value","","",227,[[],["archivedlocalglobalindex",3]]],[11,"is_reserved_value","","",227,[[],["bool",15]]],[11,"reserved_value","","",229,[[],["functionindex",3]]],[11,"is_reserved_value","","",229,[[],["bool",15]]],[11,"reserved_value","","",230,[[],["archivedfunctionindex",3]]],[11,"is_reserved_value","","",230,[[],["bool",15]]],[11,"reserved_value","","",232,[[],["tableindex",3]]],[11,"is_reserved_value","","",232,[[],["bool",15]]],[11,"reserved_value","","",233,[[],["archivedtableindex",3]]],[11,"is_reserved_value","","",233,[[],["bool",15]]],[11,"reserved_value","","",235,[[],["globalindex",3]]],[11,"is_reserved_value","","",235,[[],["bool",15]]],[11,"reserved_value","","",236,[[],["archivedglobalindex",3]]],[11,"is_reserved_value","","",236,[[],["bool",15]]],[11,"reserved_value","","",238,[[],["memoryindex",3]]],[11,"is_reserved_value","","",238,[[],["bool",15]]],[11,"reserved_value","","",239,[[],["archivedmemoryindex",3]]],[11,"is_reserved_value","","",239,[[],["bool",15]]],[11,"reserved_value","","",241,[[],["signatureindex",3]]],[11,"is_reserved_value","","",241,[[],["bool",15]]],[11,"reserved_value","","",242,[[],["archivedsignatureindex",3]]],[11,"is_reserved_value","","",242,[[],["bool",15]]],[11,"reserved_value","","",244,[[],["dataindex",3]]],[11,"is_reserved_value","","",244,[[],["bool",15]]],[11,"reserved_value","","",245,[[],["archiveddataindex",3]]],[11,"is_reserved_value","","",245,[[],["bool",15]]],[11,"reserved_value","","",247,[[],["elemindex",3]]],[11,"is_reserved_value","","",247,[[],["bool",15]]],[11,"reserved_value","","",248,[[],["archivedelemindex",3]]],[11,"is_reserved_value","","",248,[[],["bool",15]]],[11,"reserved_value","","",250,[[],["customsectionindex",3]]],[11,"is_reserved_value","","",250,[[],["bool",15]]],[11,"reserved_value","","",251,[[],["archivedcustomsectionindex",3]]],[11,"is_reserved_value","","",251,[[],["bool",15]]],[11,"drop","wasmer_types::extern_ref","",217,[[]]],[11,"from","wasmer_types::archives","",212,[[["indexmap",3]],["archivableindexmap",3]]],[11,"from","wasmer_types::extern_ref","",217,[[["vmexternref",3]]]],[11,"from","","",215,[[["externref",3]]]],[11,"from","wasmer_types::types","",275,[[]]],[11,"from","","",275,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[]]],[11,"from","","",279,[[["functiontype",3]]]],[11,"from","","",282,[[["bool",15]]]],[11,"from","wasmer_types::units","",299,[[["u32",15]]]],[11,"from","","",302,[[["pages",3]]]],[11,"from","","",302,[[["usize",15]]]],[11,"from","","",302,[[["u32",15]]]],[11,"from","wasmer_types::values","",303,[[["i32",15]]]],[11,"from","","",303,[[["u32",15]]]],[11,"from","","",303,[[["i64",15]]]],[11,"from","","",303,[[["u64",15]]]],[11,"from","","",303,[[["f32",15]]]],[11,"from","","",303,[[["f64",15]]]],[11,"from","","",303,[[["externref",3]]]],[11,"from","wasmer_types::entity::packed_option","Convert <code>t</code> into a packed <code>Some(x)</code>.",306,[[]]],[11,"from","","Convert an option into its packed equivalent.",306,[[["option",4]]]],[11,"into","wasmer_types::archives","",212,[[],["indexmap",3]]],[11,"into","wasmer_types::entity::packed_option","",306,[[],["option",4]]],[11,"next_back","wasmer_types::entity::iter","",308,[[],["option",4]]],[11,"next_back","","",309,[[],["option",4]]],[11,"next_back","","",310,[[],["option",4]]],[11,"next_back","wasmer_types::entity::keys","",311,[[],["option",4]]],[11,"into_iter","wasmer_types::entity::primary_map","",312,[[]]],[11,"next","wasmer_types::entity::iter","",308,[[],["option",4]]],[11,"size_hint","","",308,[[]]],[11,"next","","",309,[[],["option",4]]],[11,"size_hint","","",309,[[]]],[11,"next","","",310,[[],["option",4]]],[11,"size_hint","","",310,[[]]],[11,"next","wasmer_types::entity::keys","",311,[[],["option",4]]],[11,"size_hint","","",311,[[]]],[11,"clone","wasmer_types::extern_ref","",215,[[],["vmexternref",3]]],[11,"clone","","",217,[[]]],[11,"clone","wasmer_types::features","",218,[[],["features",3]]],[11,"clone","wasmer_types::indexes","",221,[[],["localfunctionindex",3]]],[11,"clone","","",222,[[],["archivedlocalfunctionindex",3]]],[11,"clone","","",224,[[],["localtableindex",3]]],[11,"clone","","",225,[[],["localmemoryindex",3]]],[11,"clone","","",226,[[],["localglobalindex",3]]],[11,"clone","","",227,[[],["archivedlocalglobalindex",3]]],[11,"clone","","",229,[[],["functionindex",3]]],[11,"clone","","",230,[[],["archivedfunctionindex",3]]],[11,"clone","","",232,[[],["tableindex",3]]],[11,"clone","","",233,[[],["archivedtableindex",3]]],[11,"clone","","",235,[[],["globalindex",3]]],[11,"clone","","",236,[[],["archivedglobalindex",3]]],[11,"clone","","",238,[[],["memoryindex",3]]],[11,"clone","","",239,[[],["archivedmemoryindex",3]]],[11,"clone","","",241,[[],["signatureindex",3]]],[11,"clone","","",242,[[],["archivedsignatureindex",3]]],[11,"clone","","",244,[[],["dataindex",3]]],[11,"clone","","",245,[[],["archiveddataindex",3]]],[11,"clone","","",247,[[],["elemindex",3]]],[11,"clone","","",248,[[],["archivedelemindex",3]]],[11,"clone","","",250,[[],["customsectionindex",3]]],[11,"clone","","",251,[[],["archivedcustomsectionindex",3]]],[11,"clone","","",253,[[],["exportindex",4]]],[11,"clone","","",254,[[],["archivedexportindex",4]]],[11,"clone","","",256,[[],["importindex",4]]],[11,"clone","","",257,[[],["archivedimportindex",4]]],[11,"clone","wasmer_types::initializers","",259,[[],["tableinitializer",3]]],[11,"clone","","",262,[[],["datainitializerlocation",3]]],[11,"clone","","",266,[[],["owneddatainitializer",3]]],[11,"clone","wasmer_types::types","",272,[[],["type",4]]],[11,"clone","","",275,[[],["v128",3]]],[11,"clone","","",278,[[],["externtype",4]]],[11,"clone","","",279,[[],["functiontype",3]]],[11,"clone","","",282,[[],["mutability",4]]],[11,"clone","","",285,[[],["globaltype",3]]],[11,"clone","","",288,[[],["globalinit",4]]],[11,"clone","","",291,[[],["tabletype",3]]],[11,"clone","","",294,[[],["memorytype",3]]],[11,"clone","","",297,[[],["importtype",3]]],[11,"clone","","",298,[[],["exporttype",3]]],[11,"clone","wasmer_types::units","",299,[[],["pages",3]]],[11,"clone","","",302,[[],["bytes",3]]],[11,"clone","","",327,[[],["pagecountoutofrange",3]]],[11,"clone","wasmer_types::values","",303,[[],["value",4]]],[11,"clone","wasmer_types::entity::packed_option","",306,[[],["packedoption",3]]],[11,"clone","wasmer_types::entity::boxed_slice","",307,[[],["boxedslice",3]]],[11,"clone","wasmer_types::entity::primary_map","",312,[[],["primarymap",3]]],[11,"clone","wasmer_types::entity::secondary_map","",315,[[],["secondarymap",3]]],[11,"default","wasmer_types::features","",218,[[]]],[11,"default","wasmer_types::entity::packed_option","Create a default packed option representing <code>None</code>.",306,[[]]],[11,"default","wasmer_types::entity::primary_map","",312,[[],["primarymap",3]]],[11,"default","wasmer_types::entity::secondary_map","",315,[[],["secondarymap",3]]],[11,"cmp","wasmer_types::indexes","",221,[[["localfunctionindex",3]],["ordering",4]]],[11,"cmp","","",222,[[["archivedlocalfunctionindex",3]],["ordering",4]]],[11,"cmp","","",224,[[["localtableindex",3]],["ordering",4]]],[11,"cmp","","",225,[[["localmemoryindex",3]],["ordering",4]]],[11,"cmp","","",226,[[["localglobalindex",3]],["ordering",4]]],[11,"cmp","","",227,[[["archivedlocalglobalindex",3]],["ordering",4]]],[11,"cmp","","",229,[[["functionindex",3]],["ordering",4]]],[11,"cmp","","",230,[[["archivedfunctionindex",3]],["ordering",4]]],[11,"cmp","","",232,[[["tableindex",3]],["ordering",4]]],[11,"cmp","","",233,[[["archivedtableindex",3]],["ordering",4]]],[11,"cmp","","",235,[[["globalindex",3]],["ordering",4]]],[11,"cmp","","",236,[[["archivedglobalindex",3]],["ordering",4]]],[11,"cmp","","",238,[[["memoryindex",3]],["ordering",4]]],[11,"cmp","","",239,[[["archivedmemoryindex",3]],["ordering",4]]],[11,"cmp","","",241,[[["signatureindex",3]],["ordering",4]]],[11,"cmp","","",242,[[["archivedsignatureindex",3]],["ordering",4]]],[11,"cmp","","",244,[[["dataindex",3]],["ordering",4]]],[11,"cmp","","",245,[[["archiveddataindex",3]],["ordering",4]]],[11,"cmp","","",247,[[["elemindex",3]],["ordering",4]]],[11,"cmp","","",248,[[["archivedelemindex",3]],["ordering",4]]],[11,"cmp","","",250,[[["customsectionindex",3]],["ordering",4]]],[11,"cmp","","",251,[[["archivedcustomsectionindex",3]],["ordering",4]]],[11,"cmp","","",253,[[["exportindex",4]],["ordering",4]]],[11,"cmp","","",254,[[["archivedexportindex",4]],["ordering",4]]],[11,"cmp","","",256,[[["importindex",4]],["ordering",4]]],[11,"cmp","","",257,[[["archivedimportindex",4]],["ordering",4]]],[11,"cmp","wasmer_types::units","",299,[[["pages",3]],["ordering",4]]],[11,"cmp","","",302,[[["bytes",3]],["ordering",4]]],[11,"cmp","wasmer_types::entity::packed_option","",306,[[["packedoption",3]],["ordering",4]]],[11,"eq","wasmer_types::extern_ref","",215,[[["vmexternref",3]],["bool",15]]],[11,"ne","","",215,[[["vmexternref",3]],["bool",15]]],[11,"eq","","",217,[[["externref",3]],["bool",15]]],[11,"ne","","",217,[[["externref",3]],["bool",15]]],[11,"eq","wasmer_types::features","",218,[[["features",3]],["bool",15]]],[11,"ne","","",218,[[["features",3]],["bool",15]]],[11,"eq","wasmer_types::indexes","",221,[[["localfunctionindex",3]],["bool",15]]],[11,"ne","","",221,[[["localfunctionindex",3]],["bool",15]]],[11,"eq","","",222,[[["archivedlocalfunctionindex",3]],["bool",15]]],[11,"ne","","",222,[[["archivedlocalfunctionindex",3]],["bool",15]]],[11,"eq","","",224,[[["localtableindex",3]],["bool",15]]],[11,"ne","","",224,[[["localtableindex",3]],["bool",15]]],[11,"eq","","",225,[[["localmemoryindex",3]],["bool",15]]],[11,"ne","","",225,[[["localmemoryindex",3]],["bool",15]]],[11,"eq","","",226,[[["localglobalindex",3]],["bool",15]]],[11,"ne","","",226,[[["localglobalindex",3]],["bool",15]]],[11,"eq","","",227,[[["archivedlocalglobalindex",3]],["bool",15]]],[11,"ne","","",227,[[["archivedlocalglobalindex",3]],["bool",15]]],[11,"eq","","",229,[[["functionindex",3]],["bool",15]]],[11,"ne","","",229,[[["functionindex",3]],["bool",15]]],[11,"eq","","",230,[[["archivedfunctionindex",3]],["bool",15]]],[11,"ne","","",230,[[["archivedfunctionindex",3]],["bool",15]]],[11,"eq","","",232,[[["tableindex",3]],["bool",15]]],[11,"ne","","",232,[[["tableindex",3]],["bool",15]]],[11,"eq","","",233,[[["archivedtableindex",3]],["bool",15]]],[11,"ne","","",233,[[["archivedtableindex",3]],["bool",15]]],[11,"eq","","",235,[[["globalindex",3]],["bool",15]]],[11,"ne","","",235,[[["globalindex",3]],["bool",15]]],[11,"eq","","",236,[[["archivedglobalindex",3]],["bool",15]]],[11,"ne","","",236,[[["archivedglobalindex",3]],["bool",15]]],[11,"eq","","",238,[[["memoryindex",3]],["bool",15]]],[11,"ne","","",238,[[["memoryindex",3]],["bool",15]]],[11,"eq","","",239,[[["archivedmemoryindex",3]],["bool",15]]],[11,"ne","","",239,[[["archivedmemoryindex",3]],["bool",15]]],[11,"eq","","",241,[[["signatureindex",3]],["bool",15]]],[11,"ne","","",241,[[["signatureindex",3]],["bool",15]]],[11,"eq","","",242,[[["archivedsignatureindex",3]],["bool",15]]],[11,"ne","","",242,[[["archivedsignatureindex",3]],["bool",15]]],[11,"eq","","",244,[[["dataindex",3]],["bool",15]]],[11,"ne","","",244,[[["dataindex",3]],["bool",15]]],[11,"eq","","",245,[[["archiveddataindex",3]],["bool",15]]],[11,"ne","","",245,[[["archiveddataindex",3]],["bool",15]]],[11,"eq","","",247,[[["elemindex",3]],["bool",15]]],[11,"ne","","",247,[[["elemindex",3]],["bool",15]]],[11,"eq","","",248,[[["archivedelemindex",3]],["bool",15]]],[11,"ne","","",248,[[["archivedelemindex",3]],["bool",15]]],[11,"eq","","",250,[[["customsectionindex",3]],["bool",15]]],[11,"ne","","",250,[[["customsectionindex",3]],["bool",15]]],[11,"eq","","",251,[[["archivedcustomsectionindex",3]],["bool",15]]],[11,"ne","","",251,[[["archivedcustomsectionindex",3]],["bool",15]]],[11,"eq","","",253,[[["exportindex",4]],["bool",15]]],[11,"ne","","",253,[[["exportindex",4]],["bool",15]]],[11,"eq","","",254,[[["archivedexportindex",4]],["bool",15]]],[11,"ne","","",254,[[["archivedexportindex",4]],["bool",15]]],[11,"eq","","",256,[[["importindex",4]],["bool",15]]],[11,"ne","","",256,[[["importindex",4]],["bool",15]]],[11,"eq","","",257,[[["archivedimportindex",4]],["bool",15]]],[11,"ne","","",257,[[["archivedimportindex",4]],["bool",15]]],[11,"eq","wasmer_types::initializers","",259,[[["tableinitializer",3]],["bool",15]]],[11,"ne","","",259,[[["tableinitializer",3]],["bool",15]]],[11,"eq","","",262,[[["datainitializerlocation",3]],["bool",15]]],[11,"ne","","",262,[[["datainitializerlocation",3]],["bool",15]]],[11,"eq","","",266,[[["owneddatainitializer",3]],["bool",15]]],[11,"ne","","",266,[[["owneddatainitializer",3]],["bool",15]]],[11,"eq","wasmer_types::types","",272,[[["type",4]],["bool",15]]],[11,"eq","","",275,[[["v128",3]],["bool",15]]],[11,"ne","","",275,[[["v128",3]],["bool",15]]],[11,"eq","","",278,[[["externtype",4]],["bool",15]]],[11,"ne","","",278,[[["externtype",4]],["bool",15]]],[11,"eq","","",279,[[["functiontype",3]],["bool",15]]],[11,"ne","","",279,[[["functiontype",3]],["bool",15]]],[11,"eq","","",282,[[["mutability",4]],["bool",15]]],[11,"eq","","",285,[[["globaltype",3]],["bool",15]]],[11,"ne","","",285,[[["globaltype",3]],["bool",15]]],[11,"eq","","",288,[[["globalinit",4]],["bool",15]]],[11,"ne","","",288,[[["globalinit",4]],["bool",15]]],[11,"eq","","",291,[[["tabletype",3]],["bool",15]]],[11,"ne","","",291,[[["tabletype",3]],["bool",15]]],[11,"eq","","",294,[[["memorytype",3]],["bool",15]]],[11,"ne","","",294,[[["memorytype",3]],["bool",15]]],[11,"eq","","",297,[[["importtype",3]],["bool",15]]],[11,"ne","","",297,[[["importtype",3]],["bool",15]]],[11,"eq","","",298,[[["exporttype",3]],["bool",15]]],[11,"ne","","",298,[[["exporttype",3]],["bool",15]]],[11,"eq","wasmer_types::units","",299,[[["pages",3]],["bool",15]]],[11,"ne","","",299,[[["pages",3]],["bool",15]]],[11,"eq","","",302,[[["bytes",3]],["bool",15]]],[11,"ne","","",302,[[["bytes",3]],["bool",15]]],[11,"eq","","",327,[[["pagecountoutofrange",3]],["bool",15]]],[11,"eq","wasmer_types::values","",303,[[["value",4]],["bool",15]]],[11,"ne","","",303,[[["value",4]],["bool",15]]],[11,"eq","wasmer_types::entity::packed_option","",306,[[["packedoption",3]],["bool",15]]],[11,"ne","","",306,[[["packedoption",3]],["bool",15]]],[11,"eq","wasmer_types::entity::primary_map","",312,[[["primarymap",3]],["bool",15]]],[11,"ne","","",312,[[["primarymap",3]],["bool",15]]],[11,"eq","wasmer_types::entity::secondary_map","",315,[[],["bool",15]]],[11,"partial_cmp","wasmer_types::indexes","",221,[[["localfunctionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",221,[[["localfunctionindex",3]],["bool",15]]],[11,"le","","",221,[[["localfunctionindex",3]],["bool",15]]],[11,"gt","","",221,[[["localfunctionindex",3]],["bool",15]]],[11,"ge","","",221,[[["localfunctionindex",3]],["bool",15]]],[11,"partial_cmp","","",222,[[["archivedlocalfunctionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",222,[[["archivedlocalfunctionindex",3]],["bool",15]]],[11,"le","","",222,[[["archivedlocalfunctionindex",3]],["bool",15]]],[11,"gt","","",222,[[["archivedlocalfunctionindex",3]],["bool",15]]],[11,"ge","","",222,[[["archivedlocalfunctionindex",3]],["bool",15]]],[11,"partial_cmp","","",224,[[["localtableindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",224,[[["localtableindex",3]],["bool",15]]],[11,"le","","",224,[[["localtableindex",3]],["bool",15]]],[11,"gt","","",224,[[["localtableindex",3]],["bool",15]]],[11,"ge","","",224,[[["localtableindex",3]],["bool",15]]],[11,"partial_cmp","","",225,[[["localmemoryindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",225,[[["localmemoryindex",3]],["bool",15]]],[11,"le","","",225,[[["localmemoryindex",3]],["bool",15]]],[11,"gt","","",225,[[["localmemoryindex",3]],["bool",15]]],[11,"ge","","",225,[[["localmemoryindex",3]],["bool",15]]],[11,"partial_cmp","","",226,[[["localglobalindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",226,[[["localglobalindex",3]],["bool",15]]],[11,"le","","",226,[[["localglobalindex",3]],["bool",15]]],[11,"gt","","",226,[[["localglobalindex",3]],["bool",15]]],[11,"ge","","",226,[[["localglobalindex",3]],["bool",15]]],[11,"partial_cmp","","",227,[[["archivedlocalglobalindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",227,[[["archivedlocalglobalindex",3]],["bool",15]]],[11,"le","","",227,[[["archivedlocalglobalindex",3]],["bool",15]]],[11,"gt","","",227,[[["archivedlocalglobalindex",3]],["bool",15]]],[11,"ge","","",227,[[["archivedlocalglobalindex",3]],["bool",15]]],[11,"partial_cmp","","",229,[[["functionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",229,[[["functionindex",3]],["bool",15]]],[11,"le","","",229,[[["functionindex",3]],["bool",15]]],[11,"gt","","",229,[[["functionindex",3]],["bool",15]]],[11,"ge","","",229,[[["functionindex",3]],["bool",15]]],[11,"partial_cmp","","",230,[[["archivedfunctionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",230,[[["archivedfunctionindex",3]],["bool",15]]],[11,"le","","",230,[[["archivedfunctionindex",3]],["bool",15]]],[11,"gt","","",230,[[["archivedfunctionindex",3]],["bool",15]]],[11,"ge","","",230,[[["archivedfunctionindex",3]],["bool",15]]],[11,"partial_cmp","","",232,[[["tableindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",232,[[["tableindex",3]],["bool",15]]],[11,"le","","",232,[[["tableindex",3]],["bool",15]]],[11,"gt","","",232,[[["tableindex",3]],["bool",15]]],[11,"ge","","",232,[[["tableindex",3]],["bool",15]]],[11,"partial_cmp","","",233,[[["archivedtableindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",233,[[["archivedtableindex",3]],["bool",15]]],[11,"le","","",233,[[["archivedtableindex",3]],["bool",15]]],[11,"gt","","",233,[[["archivedtableindex",3]],["bool",15]]],[11,"ge","","",233,[[["archivedtableindex",3]],["bool",15]]],[11,"partial_cmp","","",235,[[["globalindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",235,[[["globalindex",3]],["bool",15]]],[11,"le","","",235,[[["globalindex",3]],["bool",15]]],[11,"gt","","",235,[[["globalindex",3]],["bool",15]]],[11,"ge","","",235,[[["globalindex",3]],["bool",15]]],[11,"partial_cmp","","",236,[[["archivedglobalindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",236,[[["archivedglobalindex",3]],["bool",15]]],[11,"le","","",236,[[["archivedglobalindex",3]],["bool",15]]],[11,"gt","","",236,[[["archivedglobalindex",3]],["bool",15]]],[11,"ge","","",236,[[["archivedglobalindex",3]],["bool",15]]],[11,"partial_cmp","","",238,[[["memoryindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",238,[[["memoryindex",3]],["bool",15]]],[11,"le","","",238,[[["memoryindex",3]],["bool",15]]],[11,"gt","","",238,[[["memoryindex",3]],["bool",15]]],[11,"ge","","",238,[[["memoryindex",3]],["bool",15]]],[11,"partial_cmp","","",239,[[["archivedmemoryindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",239,[[["archivedmemoryindex",3]],["bool",15]]],[11,"le","","",239,[[["archivedmemoryindex",3]],["bool",15]]],[11,"gt","","",239,[[["archivedmemoryindex",3]],["bool",15]]],[11,"ge","","",239,[[["archivedmemoryindex",3]],["bool",15]]],[11,"partial_cmp","","",241,[[["signatureindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",241,[[["signatureindex",3]],["bool",15]]],[11,"le","","",241,[[["signatureindex",3]],["bool",15]]],[11,"gt","","",241,[[["signatureindex",3]],["bool",15]]],[11,"ge","","",241,[[["signatureindex",3]],["bool",15]]],[11,"partial_cmp","","",242,[[["archivedsignatureindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",242,[[["archivedsignatureindex",3]],["bool",15]]],[11,"le","","",242,[[["archivedsignatureindex",3]],["bool",15]]],[11,"gt","","",242,[[["archivedsignatureindex",3]],["bool",15]]],[11,"ge","","",242,[[["archivedsignatureindex",3]],["bool",15]]],[11,"partial_cmp","","",244,[[["dataindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",244,[[["dataindex",3]],["bool",15]]],[11,"le","","",244,[[["dataindex",3]],["bool",15]]],[11,"gt","","",244,[[["dataindex",3]],["bool",15]]],[11,"ge","","",244,[[["dataindex",3]],["bool",15]]],[11,"partial_cmp","","",245,[[["archiveddataindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",245,[[["archiveddataindex",3]],["bool",15]]],[11,"le","","",245,[[["archiveddataindex",3]],["bool",15]]],[11,"gt","","",245,[[["archiveddataindex",3]],["bool",15]]],[11,"ge","","",245,[[["archiveddataindex",3]],["bool",15]]],[11,"partial_cmp","","",247,[[["elemindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",247,[[["elemindex",3]],["bool",15]]],[11,"le","","",247,[[["elemindex",3]],["bool",15]]],[11,"gt","","",247,[[["elemindex",3]],["bool",15]]],[11,"ge","","",247,[[["elemindex",3]],["bool",15]]],[11,"partial_cmp","","",248,[[["archivedelemindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",248,[[["archivedelemindex",3]],["bool",15]]],[11,"le","","",248,[[["archivedelemindex",3]],["bool",15]]],[11,"gt","","",248,[[["archivedelemindex",3]],["bool",15]]],[11,"ge","","",248,[[["archivedelemindex",3]],["bool",15]]],[11,"partial_cmp","","",250,[[["customsectionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",250,[[["customsectionindex",3]],["bool",15]]],[11,"le","","",250,[[["customsectionindex",3]],["bool",15]]],[11,"gt","","",250,[[["customsectionindex",3]],["bool",15]]],[11,"ge","","",250,[[["customsectionindex",3]],["bool",15]]],[11,"partial_cmp","","",251,[[["archivedcustomsectionindex",3]],[["option",4],["ordering",4]]]],[11,"lt","","",251,[[["archivedcustomsectionindex",3]],["bool",15]]],[11,"le","","",251,[[["archivedcustomsectionindex",3]],["bool",15]]],[11,"gt","","",251,[[["archivedcustomsectionindex",3]],["bool",15]]],[11,"ge","","",251,[[["archivedcustomsectionindex",3]],["bool",15]]],[11,"partial_cmp","","",253,[[["exportindex",4]],[["option",4],["ordering",4]]]],[11,"lt","","",253,[[["exportindex",4]],["bool",15]]],[11,"le","","",253,[[["exportindex",4]],["bool",15]]],[11,"gt","","",253,[[["exportindex",4]],["bool",15]]],[11,"ge","","",253,[[["exportindex",4]],["bool",15]]],[11,"partial_cmp","","",254,[[["archivedexportindex",4]],[["option",4],["ordering",4]]]],[11,"lt","","",254,[[["archivedexportindex",4]],["bool",15]]],[11,"le","","",254,[[["archivedexportindex",4]],["bool",15]]],[11,"gt","","",254,[[["archivedexportindex",4]],["bool",15]]],[11,"ge","","",254,[[["archivedexportindex",4]],["bool",15]]],[11,"partial_cmp","","",256,[[["importindex",4]],[["option",4],["ordering",4]]]],[11,"lt","","",256,[[["importindex",4]],["bool",15]]],[11,"le","","",256,[[["importindex",4]],["bool",15]]],[11,"gt","","",256,[[["importindex",4]],["bool",15]]],[11,"ge","","",256,[[["importindex",4]],["bool",15]]],[11,"partial_cmp","","",257,[[["archivedimportindex",4]],[["option",4],["ordering",4]]]],[11,"lt","","",257,[[["archivedimportindex",4]],["bool",15]]],[11,"le","","",257,[[["archivedimportindex",4]],["bool",15]]],[11,"gt","","",257,[[["archivedimportindex",4]],["bool",15]]],[11,"ge","","",257,[[["archivedimportindex",4]],["bool",15]]],[11,"partial_cmp","wasmer_types::units","",299,[[["pages",3]],[["option",4],["ordering",4]]]],[11,"lt","","",299,[[["pages",3]],["bool",15]]],[11,"le","","",299,[[["pages",3]],["bool",15]]],[11,"gt","","",299,[[["pages",3]],["bool",15]]],[11,"ge","","",299,[[["pages",3]],["bool",15]]],[11,"partial_cmp","","",302,[[["bytes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",302,[[["bytes",3]],["bool",15]]],[11,"le","","",302,[[["bytes",3]],["bool",15]]],[11,"gt","","",302,[[["bytes",3]],["bool",15]]],[11,"ge","","",302,[[["bytes",3]],["bool",15]]],[11,"partial_cmp","wasmer_types::entity::packed_option","",306,[[["packedoption",3]],[["option",4],["ordering",4]]]],[11,"lt","","",306,[[["packedoption",3]],["bool",15]]],[11,"le","","",306,[[["packedoption",3]],["bool",15]]],[11,"gt","","",306,[[["packedoption",3]],["bool",15]]],[11,"ge","","",306,[[["packedoption",3]],["bool",15]]],[11,"to_string","wasmer_types::values","",303,[[],["string",3]]],[11,"deref","wasmer_types::memory_view","",270,[[]]],[11,"deref","","",270,[[]]],[11,"fmt","wasmer_types::extern_ref","",215,[[["formatter",3]],["result",6]]],[11,"fmt","","",216,[[["formatter",3]],["result",6]]],[11,"fmt","","",217,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::features","",218,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::indexes","",221,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",226,[[["formatter",3]],["result",6]]],[11,"fmt","","",227,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","","",230,[[["formatter",3]],["result",6]]],[11,"fmt","","",232,[[["formatter",3]],["result",6]]],[11,"fmt","","",233,[[["formatter",3]],["result",6]]],[11,"fmt","","",235,[[["formatter",3]],["result",6]]],[11,"fmt","","",236,[[["formatter",3]],["result",6]]],[11,"fmt","","",238,[[["formatter",3]],["result",6]]],[11,"fmt","","",239,[[["formatter",3]],["result",6]]],[11,"fmt","","",241,[[["formatter",3]],["result",6]]],[11,"fmt","","",242,[[["formatter",3]],["result",6]]],[11,"fmt","","",244,[[["formatter",3]],["result",6]]],[11,"fmt","","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","","",250,[[["formatter",3]],["result",6]]],[11,"fmt","","",251,[[["formatter",3]],["result",6]]],[11,"fmt","","",253,[[["formatter",3]],["result",6]]],[11,"fmt","","",254,[[["formatter",3]],["result",6]]],[11,"fmt","","",256,[[["formatter",3]],["result",6]]],[11,"fmt","","",257,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::initializers","",259,[[["formatter",3]],["result",6]]],[11,"fmt","","",262,[[["formatter",3]],["result",6]]],[11,"fmt","","",265,[[["formatter",3]],["result",6]]],[11,"fmt","","",266,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::types","",272,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","","",278,[[["formatter",3]],["result",6]]],[11,"fmt","","",279,[[["formatter",3]],["result",6]]],[11,"fmt","","",282,[[["formatter",3]],["result",6]]],[11,"fmt","","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",288,[[["formatter",3]],["result",6]]],[11,"fmt","","",291,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",297,[[["formatter",3]],["result",6]]],[11,"fmt","","",298,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::units","",299,[[["formatter",3]],["result",6]]],[11,"fmt","","",302,[[["formatter",3]],["result",6]]],[11,"fmt","","",327,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::values","",303,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::entity::packed_option","",306,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::entity::boxed_slice","",307,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::entity::primary_map","",312,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::entity::secondary_map","",315,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::types","",272,[[["formatter",3]],["result",6]]],[11,"fmt","","",279,[[["formatter",3]],["result",6]]],[11,"fmt","","",285,[[["formatter",3]],["result",6]]],[11,"fmt","","",291,[[["formatter",3]],["result",6]]],[11,"fmt","","",294,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_types::units","",327,[[["formatter",3]],["result",6]]],[11,"sub","","",299,[[]]],[11,"sub","","",302,[[]]],[11,"add","","",299,[[]]],[11,"add","","",302,[[]]],[11,"index","wasmer_types::entity::boxed_slice","",307,[[]]],[11,"index","wasmer_types::entity::primary_map","",312,[[]]],[11,"index","wasmer_types::entity::secondary_map","",315,[[]]],[11,"index_mut","wasmer_types::entity::boxed_slice","",307,[[]]],[11,"index_mut","wasmer_types::entity::primary_map","",312,[[]]],[11,"index_mut","wasmer_types::entity::secondary_map","",315,[[]]],[11,"hash","wasmer_types::indexes","",221,[[]]],[11,"hash","","",222,[[]]],[11,"hash","","",224,[[]]],[11,"hash","","",225,[[]]],[11,"hash","","",226,[[]]],[11,"hash","","",227,[[]]],[11,"hash","","",229,[[]]],[11,"hash","","",230,[[]]],[11,"hash","","",232,[[]]],[11,"hash","","",233,[[]]],[11,"hash","","",235,[[]]],[11,"hash","","",236,[[]]],[11,"hash","","",238,[[]]],[11,"hash","","",239,[[]]],[11,"hash","","",241,[[]]],[11,"hash","","",242,[[]]],[11,"hash","","",244,[[]]],[11,"hash","","",245,[[]]],[11,"hash","","",247,[[]]],[11,"hash","","",248,[[]]],[11,"hash","","",250,[[]]],[11,"hash","","",251,[[]]],[11,"hash","","",253,[[]]],[11,"hash","","",254,[[]]],[11,"hash","","",256,[[]]],[11,"hash","","",257,[[]]],[11,"hash","wasmer_types::initializers","",259,[[]]],[11,"hash","wasmer_types::types","",272,[[]]],[11,"hash","","",275,[[]]],[11,"hash","","",278,[[]]],[11,"hash","","",279,[[]]],[11,"hash","","",282,[[]]],[11,"hash","","",285,[[]]],[11,"hash","","",291,[[]]],[11,"hash","","",294,[[]]],[11,"hash","","",297,[[]]],[11,"hash","","",298,[[]]],[11,"hash","wasmer_types::units","",299,[[]]],[11,"hash","","",302,[[]]],[11,"hash","wasmer_types::entity::packed_option","",306,[[]]],[11,"hash","wasmer_types::entity::primary_map","",312,[[]]],[11,"try_from","wasmer_types::units","",299,[[["bytes",3]],["result",4]]],[11,"from_iter","wasmer_types::entity::primary_map","",312,[[]]],[11,"deserialize","wasmer_types::features","",218,[[],["result",4]]],[11,"deserialize","wasmer_types::indexes","",221,[[],["result",4]]],[11,"deserialize","","",224,[[],["result",4]]],[11,"deserialize","","",225,[[],["result",4]]],[11,"deserialize","","",226,[[],["result",4]]],[11,"deserialize","","",229,[[],["result",4]]],[11,"deserialize","","",232,[[],["result",4]]],[11,"deserialize","","",235,[[],["result",4]]],[11,"deserialize","","",238,[[],["result",4]]],[11,"deserialize","","",241,[[],["result",4]]],[11,"deserialize","","",244,[[],["result",4]]],[11,"deserialize","","",247,[[],["result",4]]],[11,"deserialize","","",250,[[],["result",4]]],[11,"deserialize","","",253,[[],["result",4]]],[11,"deserialize","","",256,[[],["result",4]]],[11,"deserialize","wasmer_types::initializers","",259,[[],["result",4]]],[11,"deserialize","","",262,[[],["result",4]]],[11,"deserialize","","",265,[[],["result",4]]],[11,"deserialize","","",266,[[],["result",4]]],[11,"deserialize","wasmer_types::types","",272,[[],["result",4]]],[11,"deserialize","","",275,[[],["result",4]]],[11,"deserialize","","",278,[[],["result",4]]],[11,"deserialize","","",279,[[],["result",4]]],[11,"deserialize","","",282,[[],["result",4]]],[11,"deserialize","","",285,[[],["result",4]]],[11,"deserialize","","",288,[[],["result",4]]],[11,"deserialize","","",291,[[],["result",4]]],[11,"deserialize","","",294,[[],["result",4]]],[11,"deserialize","","",297,[[],["result",4]]],[11,"deserialize","","",298,[[],["result",4]]],[11,"deserialize","wasmer_types::units","",299,[[],["result",4]]],[11,"deserialize","","",302,[[],["result",4]]],[11,"deserialize","wasmer_types::entity::packed_option","",306,[[],["result",4]]],[11,"deserialize","wasmer_types::entity::primary_map","",312,[[],["result",4]]],[11,"deserialize","wasmer_types::entity::secondary_map","",315,[[],["result",4]]],[11,"serialize","wasmer_types::features","",218,[[],["result",4]]],[11,"serialize","wasmer_types::indexes","",221,[[],["result",4]]],[11,"serialize","","",224,[[],["result",4]]],[11,"serialize","","",225,[[],["result",4]]],[11,"serialize","","",226,[[],["result",4]]],[11,"serialize","","",229,[[],["result",4]]],[11,"serialize","","",232,[[],["result",4]]],[11,"serialize","","",235,[[],["result",4]]],[11,"serialize","","",238,[[],["result",4]]],[11,"serialize","","",241,[[],["result",4]]],[11,"serialize","","",244,[[],["result",4]]],[11,"serialize","","",247,[[],["result",4]]],[11,"serialize","","",250,[[],["result",4]]],[11,"serialize","","",253,[[],["result",4]]],[11,"serialize","","",256,[[],["result",4]]],[11,"serialize","wasmer_types::initializers","",259,[[],["result",4]]],[11,"serialize","","",262,[[],["result",4]]],[11,"serialize","","",265,[[],["result",4]]],[11,"serialize","","",266,[[],["result",4]]],[11,"serialize","wasmer_types::types","",272,[[],["result",4]]],[11,"serialize","","",275,[[],["result",4]]],[11,"serialize","","",278,[[],["result",4]]],[11,"serialize","","",279,[[],["result",4]]],[11,"serialize","","",282,[[],["result",4]]],[11,"serialize","","",285,[[],["result",4]]],[11,"serialize","","",288,[[],["result",4]]],[11,"serialize","","",291,[[],["result",4]]],[11,"serialize","","",294,[[],["result",4]]],[11,"serialize","","",297,[[],["result",4]]],[11,"serialize","","",298,[[],["result",4]]],[11,"serialize","wasmer_types::units","",299,[[],["result",4]]],[11,"serialize","","",302,[[],["result",4]]],[11,"serialize","wasmer_types::entity::packed_option","",306,[[],["result",4]]],[11,"serialize","wasmer_types::entity::primary_map","",312,[[],["result",4]]],[11,"serialize","wasmer_types::entity::secondary_map","",315,[[],["result",4]]],[11,"resolve","wasmer_types::archives","",212,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::features","",218,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::indexes","",221,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",226,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",229,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",232,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",235,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",238,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",241,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",244,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",247,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",250,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",253,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",256,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::initializers","",259,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",262,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",266,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::types","",272,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",275,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",279,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",282,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",285,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",288,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",291,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",294,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::units","",299,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::entity::primary_map","",312,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_types::entity::secondary_map","",315,[[["usize",15],["maybeuninit",19]]]],[11,"serialize","wasmer_types::archives","",212,[[],["result",4]]],[11,"serialize","wasmer_types::features","",218,[[],["result",4]]],[11,"serialize","wasmer_types::indexes","",221,[[],["result",4]]],[11,"serialize","","",226,[[],["result",4]]],[11,"serialize","","",229,[[],["result",4]]],[11,"serialize","","",232,[[],["result",4]]],[11,"serialize","","",235,[[],["result",4]]],[11,"serialize","","",238,[[],["result",4]]],[11,"serialize","","",241,[[],["result",4]]],[11,"serialize","","",244,[[],["result",4]]],[11,"serialize","","",247,[[],["result",4]]],[11,"serialize","","",250,[[],["result",4]]],[11,"serialize","","",253,[[],["result",4]]],[11,"serialize","","",256,[[],["result",4]]],[11,"serialize","wasmer_types::initializers","",259,[[],["result",4]]],[11,"serialize","","",262,[[],["result",4]]],[11,"serialize","","",266,[[],["result",4]]],[11,"serialize","wasmer_types::types","",272,[[],["result",4]]],[11,"serialize","","",275,[[],["result",4]]],[11,"serialize","","",279,[[],["result",4]]],[11,"serialize","","",282,[[],["result",4]]],[11,"serialize","","",285,[[],["result",4]]],[11,"serialize","","",288,[[],["result",4]]],[11,"serialize","","",291,[[],["result",4]]],[11,"serialize","","",294,[[],["result",4]]],[11,"serialize","wasmer_types::units","",299,[[],["result",4]]],[11,"serialize","wasmer_types::entity::primary_map","",312,[[],["result",4]]],[11,"serialize","wasmer_types::entity::secondary_map","",315,[[],["result",4]]],[11,"size_of_val","wasmer_types::features","",218,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::indexes","",221,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",224,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",225,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",226,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",229,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",232,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",235,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",238,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",241,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",244,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",247,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",250,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",253,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",256,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::initializers","",259,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",262,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",266,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::types","",272,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",275,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",279,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",282,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",285,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",288,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",291,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",294,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::units","",299,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::entity::boxed_slice","",307,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::entity::primary_map","",312,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_types::entity::secondary_map","",315,[[["memoryusagetracker",8]],["usize",15]]],[11,"is","wasmer_types::lib::std::any","Returns <code>true</code> if the boxed type is the same as <code>T</code>.",0,[[],["bool",15]]],[11,"downcast_ref","","Returns some reference to the boxed value if it is of …",0,[[],["option",4]]],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it …",0,[[],["option",4]]],[11,"is","","Forwards to the method defined on the type <code>Any</code>.",0,[[],["bool",15]]],[11,"downcast_ref","","Forwards to the method defined on the type <code>Any</code>.",0,[[],["option",4]]],[11,"downcast_mut","","Forwards to the method defined on the type <code>Any</code>.",0,[[],["option",4]]],[11,"is","","Forwards to the method defined on the type <code>Any</code>.",0,[[],["bool",15]]],[11,"downcast_ref","","Forwards to the method defined on the type <code>Any</code>.",0,[[],["option",4]]],[11,"downcast_mut","","Forwards to the method defined on the type <code>Any</code>.",0,[[],["option",4]]],[11,"of","","Returns the <code>TypeId</code> of the type this generic function has …",1,[[],["typeid",3]]],[11,"is_borrowed","wasmer_types::lib::std::borrow","Returns true if the data is borrowed, i.e. if <code>to_mut</code> …",3,[[],["bool",15]]],[11,"is_owned","","Returns true if the data is owned, i.e. if <code>to_mut</code> would …",3,[[],["bool",15]]],[11,"to_mut","","Acquires a mutable reference to the owned form of the …",3,[[]]],[11,"into_owned","","Extracts the owned data.",3,[[]]],[11,"new","wasmer_types::lib::std::boxed","Allocates memory on the heap and then places <code>x</code> into it.",6,[[],[["box",3],["global",3]]]],[11,"new_uninit","","Constructs a new box with uninitialized contents.",6,[[],[["global",3],["box",3],["maybeuninit",19]]]],[11,"new_zeroed","","Constructs a new <code>Box</code> with uninitialized contents, with …",6,[[],[["global",3],["box",3],["maybeuninit",19]]]],[11,"pin","","Constructs a new <code>Pin<Box<T>></code>. If <code>T</code> does not implement …",6,[[],[["pin",3],["box",3]]]],[11,"try_new","","Allocates memory on the heap then places <code>x</code> into it, …",6,[[],[["result",4],["box",3],["allocerror",3]]]],[11,"try_new_uninit","","Constructs a new box with uninitialized contents on the …",6,[[],[["result",4],["box",3],["allocerror",3]]]],[11,"try_new_zeroed","","Constructs a new <code>Box</code> with uninitialized contents, with …",6,[[],[["result",4],["box",3],["allocerror",3]]]],[11,"new_in","","Allocates memory in the given allocator then places <code>x</code> …",6,[[],["box",3]]],[11,"try_new_in","","Allocates memory in the given allocator then places <code>x</code> …",6,[[],[["box",3],["allocerror",3],["result",4]]]],[11,"new_uninit_in","","Constructs a new box with uninitialized contents in the …",6,[[],[["box",3],["maybeuninit",19]]]],[11,"try_new_uninit_in","","Constructs a new box with uninitialized contents in the …",6,[[],[["box",3],["result",4],["allocerror",3]]]],[11,"new_zeroed_in","","Constructs a new <code>Box</code> with uninitialized contents, with …",6,[[],[["box",3],["maybeuninit",19]]]],[11,"try_new_zeroed_in","","Constructs a new <code>Box</code> with uninitialized contents, with …",6,[[],[["box",3],["result",4],["allocerror",3]]]],[11,"pin_in","","Constructs a new <code>Pin<Box<T, A>></code>. If <code>T</code> does not implement …",6,[[],[["pin",3],["box",3]]]],[11,"into_boxed_slice","","Converts a <code>Box<T></code> into a <code>Box<[T]></code>",6,[[["box",3]],["box",3]]],[11,"new_uninit_slice","","Constructs a new boxed slice with uninitialized contents.",6,[[["usize",15]],[["box",3],["global",3]]]],[11,"new_zeroed_slice","","Constructs a new boxed slice with uninitialized contents, …",6,[[["usize",15]],[["box",3],["global",3]]]],[11,"new_uninit_slice_in","","Constructs a new boxed slice with uninitialized contents …",6,[[["usize",15]],["box",3]]],[11,"new_zeroed_slice_in","","Constructs a new boxed slice with uninitialized contents …",6,[[["usize",15]],["box",3]]],[11,"assume_init","","Converts to <code>Box<T, A></code>.",6,[[],["box",3]]],[11,"assume_init","","Converts to <code>Box<[T], A></code>.",6,[[],["box",3]]],[11,"from_raw","","Constructs a box from a raw pointer.",6,[[],[["box",3],["global",3]]]],[11,"from_raw_in","","Constructs a box from a raw pointer in the given …",6,[[],["box",3]]],[11,"into_raw","","Consumes the <code>Box</code>, returning a wrapped raw pointer.",6,[[["box",3]]]],[11,"into_raw_with_allocator","","Consumes the <code>Box</code>, returning a wrapped raw pointer and the …",6,[[["box",3]]]],[11,"allocator","","Returns a reference to the underlying allocator.",6,[[["box",3]]]],[11,"leak","","Consumes and leaks the <code>Box</code>, returning a mutable reference,…",6,[[["box",3]]]],[11,"into_pin","","Converts a <code>Box<T></code> into a <code>Pin<Box<T>></code>",6,[[["box",3]],[["pin",3],["box",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",6,[[],[["box",3],["result",4],["box",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",6,[[],[["result",4],["box",3],["box",3]]]],[11,"downcast","","Attempt to downcast the box to a concrete type.",6,[[],[["box",3],["result",4],["box",3]]]],[11,"new","wasmer_types::lib::std::cell","Creates a new <code>Cell</code> containing the given value.",7,[[],["cell",3]]],[11,"set","","Sets the contained value.",7,[[]]],[11,"swap","","Swaps the values of two Cells. Difference with …",7,[[["cell",3]]]],[11,"replace","","Replaces the contained value, and returns it.",7,[[]]],[11,"into_inner","","Unwraps the value.",7,[[]]],[11,"get","","Returns a copy of the contained value.",7,[[]]],[11,"update","","Updates the contained value using a function and returns …",7,[[]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this cell.",7,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",7,[[]]],[11,"from_mut","","Returns a <code>&Cell<T></code> from a <code>&mut T</code>",7,[[],["cell",3]]],[11,"take","","Takes the value of the cell, leaving <code>Default::default()</code> …",7,[[]]],[11,"as_slice_of_cells","","Returns a <code>&[Cell<T>]</code> from a <code>&Cell<[T]></code>",7,[[]]],[11,"new","","Creates a new <code>RefCell</code> containing <code>value</code>.",8,[[],["refcell",3]]],[11,"into_inner","","Consumes the <code>RefCell</code>, returning the wrapped value.",8,[[]]],[11,"replace","","Replaces the wrapped value with a new one, returning the …",8,[[]]],[11,"replace_with","","Replaces the wrapped value with a new one computed from <code>f</code>…",8,[[]]],[11,"swap","","Swaps the wrapped value of <code>self</code> with the wrapped value of …",8,[[["refcell",3]]]],[11,"borrow","","Immutably borrows the wrapped value.",8,[[],["ref",3]]],[11,"try_borrow","","Immutably borrows the wrapped value, returning an error …",8,[[],[["ref",3],["result",4],["borrowerror",3]]]],[11,"borrow_mut","","Mutably borrows the wrapped value.",8,[[],["refmut",3]]],[11,"try_borrow_mut","","Mutably borrows the wrapped value, returning an error if …",8,[[],[["borrowmuterror",3],["result",4],["refmut",3]]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this cell.",8,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",8,[[]]],[11,"undo_leak","","Undo the effect of leaked guards on the borrow state of …",8,[[]]],[11,"try_borrow_unguarded","","Immutably borrows the wrapped value, returning an error …",8,[[],[["result",4],["borrowerror",3]]]],[11,"take","","Takes the wrapped value, leaving <code>Default::default()</code> in …",8,[[]]],[11,"clone","","Copies a <code>Ref</code>.",11,[[["ref",3]],["ref",3]]],[11,"map","","Makes a new <code>Ref</code> for a component of the borrowed data.",11,[[["ref",3]],["ref",3]]],[11,"filter_map","","Makes a new <code>Ref</code> for an optional component of the borrowed …",11,[[["ref",3]],[["result",4],["ref",3],["ref",3]]]],[11,"map_split","","Splits a <code>Ref</code> into multiple <code>Ref</code>s for different components …",11,[[["ref",3]]]],[11,"leak","","Convert into a reference to the underlying data.",11,[[["ref",3]]]],[11,"map","","Makes a new <code>RefMut</code> for a component of the borrowed data, …",12,[[["refmut",3]],["refmut",3]]],[11,"filter_map","","Makes a new <code>RefMut</code> for an optional component of the …",12,[[["refmut",3]],[["refmut",3],["refmut",3],["result",4]]]],[11,"map_split","","Splits a <code>RefMut</code> into multiple <code>RefMut</code>s for different …",12,[[["refmut",3]]]],[11,"leak","","Convert into a mutable reference to the underlying data.",12,[[["refmut",3]]]],[11,"new","","Constructs a new instance of <code>UnsafeCell</code> which will wrap …",13,[[],["unsafecell",3]]],[11,"into_inner","","Unwraps the value.",13,[[]]],[11,"get","","Gets a mutable pointer to the wrapped value.",13,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",13,[[]]],[11,"raw_get","","Gets a mutable pointer to the wrapped value. The …",13,[[]]],[11,"is_eq","wasmer_types::lib::std::cmp","Returns <code>true</code> if the ordering is the <code>Equal</code> variant.",15,[[],["bool",15]]],[11,"is_ne","","Returns <code>true</code> if the ordering is not the <code>Equal</code> variant.",15,[[],["bool",15]]],[11,"is_lt","","Returns <code>true</code> if the ordering is the <code>Less</code> variant.",15,[[],["bool",15]]],[11,"is_gt","","Returns <code>true</code> if the ordering is the <code>Greater</code> variant.",15,[[],["bool",15]]],[11,"is_le","","Returns <code>true</code> if the ordering is either the <code>Less</code> or <code>Equal</code> …",15,[[],["bool",15]]],[11,"is_ge","","Returns <code>true</code> if the ordering is either the <code>Greater</code> or …",15,[[],["bool",15]]],[11,"reverse","","Reverses the <code>Ordering</code>.",15,[[],["ordering",4]]],[11,"then","","Chains two orderings.",15,[[["ordering",4]],["ordering",4]]],[11,"then_with","","Chains the ordering with the given function.",15,[[],["ordering",4]]],[11,"as_str","wasmer_types::lib::std::fmt","Get the formatted string, if it has no arguments to be …",26,[[],[["option",4],["str",15]]]],[11,"entry","","Adds a new entry to the list output.",31,[[["debug",8]],["debuglist",3]]],[11,"entries","","Adds the contents of an iterator of entries to the list …",31,[[],["debuglist",3]]],[11,"finish","","Finishes output and returns any error encountered.",31,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the map output.",32,[[["debug",8]],["debugmap",3]]],[11,"key","","Adds the key part of a new entry to the map output.",32,[[["debug",8]],["debugmap",3]]],[11,"value","","Adds the value part of a new entry to the map output.",32,[[["debug",8]],["debugmap",3]]],[11,"entries","","Adds the contents of an iterator of entries to the map …",32,[[],["debugmap",3]]],[11,"finish","","Finishes output and returns any error encountered.",32,[[],[["error",3],["result",4]]]],[11,"entry","","Adds a new entry to the set output.",33,[[["debug",8]],["debugset",3]]],[11,"entries","","Adds the contents of an iterator of entries to the set …",33,[[],["debugset",3]]],[11,"finish","","Finishes output and returns any error encountered.",33,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated struct output.",34,[[["debug",8],["str",15]],["debugstruct",3]]],[11,"finish_non_exhaustive","","Marks the struct as non-exhaustive, indicating to the …",34,[[],[["error",3],["result",4]]]],[11,"finish","","Finishes output and returns any error encountered.",34,[[],[["error",3],["result",4]]]],[11,"field","","Adds a new field to the generated tuple struct output.",35,[[["debug",8]],["debugtuple",3]]],[11,"finish","","Finishes output and returns any error encountered.",35,[[],[["error",3],["result",4]]]],[11,"pad_integral","","Performs the correct padding for an integer which has …",36,[[["bool",15],["str",15]],[["error",3],["result",4]]]],[11,"pad","","This function takes a string slice and emits it to the …",36,[[["str",15]],[["error",3],["result",4]]]],[11,"write_str","","Writes some data to the underlying buffer contained …",36,[[["str",15]],[["error",3],["result",4]]]],[11,"write_fmt","","Writes some formatted information into this instance.",36,[[["arguments",3]],[["error",3],["result",4]]]],[11,"flags","","Flags for formatting",36,[[],["u32",15]]],[11,"fill","","Character used as \'fill\' whenever there is alignment.",36,[[],["char",15]]],[11,"align","","Flag indicating what form of alignment was requested.",36,[[],[["option",4],["alignment",4]]]],[11,"width","","Optionally specified integer width that the output should …",36,[[],[["usize",15],["option",4]]]],[11,"precision","","Optionally specified precision for numeric types. …",36,[[],[["usize",15],["option",4]]]],[11,"sign_plus","","Determines if the <code>+</code> flag was specified.",36,[[],["bool",15]]],[11,"sign_minus","","Determines if the <code>-</code> flag was specified.",36,[[],["bool",15]]],[11,"alternate","","Determines if the <code>#</code> flag was specified.",36,[[],["bool",15]]],[11,"sign_aware_zero_pad","","Determines if the <code>0</code> flag was specified.",36,[[],["bool",15]]],[11,"debug_struct","","Creates a [<code>DebugStruct</code>] builder designed to assist with …",36,[[["str",15]],["debugstruct",3]]],[11,"debug_tuple","","Creates a <code>DebugTuple</code> builder designed to assist with …",36,[[["str",15]],["debugtuple",3]]],[11,"debug_list","","Creates a <code>DebugList</code> builder designed to assist with …",36,[[],["debuglist",3]]],[11,"debug_set","","Creates a <code>DebugSet</code> builder designed to assist with …",36,[[],["debugset",3]]],[11,"debug_map","","Creates a <code>DebugMap</code> builder designed to assist with …",36,[[],["debugmap",3]]],[11,"new","wasmer_types::lib::std::hash","Creates a new <code>SipHasher</code> with the two initial keys set to …",47,[[],["siphasher",3]]],[11,"new_with_keys","","Creates a <code>SipHasher</code> that is keyed off the provided keys.",47,[[["u64",15]],["siphasher",3]]],[11,"peek","wasmer_types::lib::std::iter","Returns a reference to the next() value without advancing …",79,[[],["option",4]]],[11,"peek_mut","","Returns a mutable reference to the next() value without …",79,[[],["option",4]]],[11,"next_if","","Consume and return the next value of this iterator if a …",79,[[],["option",4]]],[11,"next_if_eq","","Consume and return the next item if it is equal to …",79,[[],["option",4]]],[11,"new","wasmer_types::lib::std::mem","Wrap a value to be manually dropped.",91,[[],["manuallydrop",3]]],[11,"into_inner","","Extracts the value from the <code>ManuallyDrop</code> container.",91,[[["manuallydrop",3]]]],[11,"take","","Takes the value from the <code>ManuallyDrop<T></code> container out.",91,[[["manuallydrop",3]]]],[11,"drop","","Manually drops the contained value. This is exactly …",91,[[["manuallydrop",3]]]],[11,"new","","Creates a new <code>MaybeUninit<T></code> initialized with the given …",92,[[],["maybeuninit",19]]],[11,"uninit","","Creates a new <code>MaybeUninit<T></code> in an uninitialized state.",92,[[],["maybeuninit",19]]],[11,"uninit_array","","Create a new array of <code>MaybeUninit<T></code> items, in an …",92,[[]]],[11,"zeroed","","Creates a new <code>MaybeUninit<T></code> in an uninitialized state, …",92,[[],["maybeuninit",19]]],[11,"write","","Sets the value of the <code>MaybeUninit<T></code>. This overwrites any …",92,[[]]],[11,"as_ptr","","Gets a pointer to the contained value. Reading from this …",92,[[]]],[11,"as_mut_ptr","","Gets a mutable pointer to the contained value. Reading …",92,[[]]],[11,"assume_init","","Extracts the value from the <code>MaybeUninit<T></code> container. …",92,[[]]],[11,"assume_init_read","","Reads the value from the <code>MaybeUninit<T></code> container. The …",92,[[]]],[11,"assume_init_drop","","Drops the contained value in place.",92,[[]]],[11,"assume_init_ref","","Gets a shared reference to the contained value.",92,[[]]],[11,"assume_init_mut","","Gets a mutable (unique) reference to the contained value.",92,[[]]],[11,"array_assume_init","","Extracts the values from an array of <code>MaybeUninit</code> …",92,[[]]],[11,"slice_assume_init_ref","","Assuming all the elements are initialized, get a slice to …",92,[[]]],[11,"slice_assume_init_mut","","Assuming all the elements are initialized, get a mutable …",92,[[]]],[11,"slice_as_ptr","","Gets a pointer to the first element of the array.",92,[[]]],[11,"slice_as_mut_ptr","","Gets a mutable pointer to the first element of the array.",92,[[]]],[11,"write_slice","","Copies the elements from <code>src</code> to <code>this</code>, returning a mutable …",92,[[]]],[11,"write_slice_cloned","","Clones the elements from <code>src</code> to <code>this</code>, returning a mutable …",92,[[]]],[11,"contains","wasmer_types::lib::std::ops","Returns <code>true</code> if <code>item</code> is contained in the range.",123,[[],["bool",15]]],[11,"is_empty","","Returns <code>true</code> if the range contains no items.",123,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if <code>item</code> is contained in the range.",124,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if <code>item</code> is contained in the range.",125,[[],["bool",15]]],[11,"as_ref","","Converts from <code>&Bound<T></code> to <code>Bound<&T></code>.",126,[[],["bound",4]]],[11,"as_mut","","Converts from <code>&mut Bound<T></code> to <code>Bound<&T></code>.",126,[[],["bound",4]]],[11,"cloned","","Map a <code>Bound<&T></code> to a <code>Bound<T></code> by cloning the contents of …",126,[[],["bound",4]]],[11,"new","","Creates a new inclusive range. Equivalent to writing …",128,[[],["rangeinclusive",3]]],[11,"start","","Returns the lower bound of the range (inclusive).",128,[[]]],[11,"end","","Returns the upper bound of the range (inclusive).",128,[[]]],[11,"into_inner","","Destructures the <code>RangeInclusive</code> into (lower bound, upper …",128,[[]]],[11,"contains","","Returns <code>true</code> if <code>item</code> is contained in the range.",128,[[],["bool",15]]],[11,"is_empty","","Returns <code>true</code> if the range contains no items.",128,[[],["bool",15]]],[11,"contains","","Returns <code>true</code> if <code>item</code> is contained in the range.",129,[[],["bool",15]]],[11,"is_break","","Returns <code>true</code> if this is a <code>Break</code> variant.",133,[[],["bool",15]]],[11,"is_continue","","Returns <code>true</code> if this is a <code>Continue</code> variant.",133,[[],["bool",15]]],[11,"break_value","","Converts the <code>ControlFlow</code> into an <code>Option</code> which is <code>Some</code> if …",133,[[],["option",4]]],[11,"map_break","","Maps <code>ControlFlow<B, C></code> to <code>ControlFlow<T, C></code> by applying a …",133,[[],["controlflow",4]]],[11,"from_try","","Create a <code>ControlFlow</code> from any type implementing <code>Try</code>.",133,[[],["controlflow",4]]],[11,"into_try","","Convert a <code>ControlFlow</code> into any type implementing <code>Try</code>;",133,[[]]],[18,"CONTINUE","","It\'s frequently the case that there\'s no value needed …",133,null],[18,"BREAK","","APIs like <code>try_for_each</code> don\'t need values with <code>Break</code>, so …",133,null],[11,"dangling","wasmer_types::lib::std::ptr","Creates a new <code>NonNull</code> that is dangling, but well-aligned.",134,[[],["nonnull",3]]],[11,"as_uninit_ref","","Returns a shared references to the value. In contrast to …",134,[[],["maybeuninit",19]]],[11,"as_uninit_mut","","Returns a unique references to the value. In contrast to …",134,[[],["maybeuninit",19]]],[11,"new_unchecked","","Creates a new <code>NonNull</code>.",134,[[],["nonnull",3]]],[11,"new","","Creates a new <code>NonNull</code> if <code>ptr</code> is non-null.",134,[[],[["nonnull",3],["option",4]]]],[11,"as_ptr","","Acquires the underlying <code>*mut</code> pointer.",134,[[]]],[11,"as_ref","","Returns a shared reference to the value. If the value may …",134,[[]]],[11,"as_mut","","Returns a unique reference to the value. If the value may …",134,[[]]],[11,"cast","","Casts to a pointer of another type.",134,[[],["nonnull",3]]],[11,"slice_from_raw_parts","","Creates a non-null raw slice from a thin pointer and a …",134,[[["usize",15],["nonnull",3]],["nonnull",3]]],[11,"len","","Returns the length of a non-null raw slice.",134,[[],["usize",15]]],[11,"as_non_null_ptr","","Returns a non-null pointer to the slice\'s buffer.",134,[[],["nonnull",3]]],[11,"as_mut_ptr","","Returns a raw pointer to the slice\'s buffer.",134,[[]]],[11,"as_uninit_slice","","Returns a shared reference to a slice of possibly …",134,[[]]],[11,"as_uninit_slice_mut","","Returns a unique reference to a slice of possibly …",134,[[]]],[11,"get_unchecked_mut","","Returns a raw pointer to an element or subslice, without …",134,[[],["nonnull",3]]],[11,"new","wasmer_types::lib::std::rc","Constructs a new <code>Rc<T></code>.",135,[[],["rc",3]]],[11,"new_cyclic","","Constructs a new <code>Rc<T></code> using a weak reference to itself. …",135,[[],["rc",3]]],[11,"new_uninit","","Constructs a new <code>Rc</code> with uninitialized contents.",135,[[],[["rc",3],["maybeuninit",19]]]],[11,"new_zeroed","","Constructs a new <code>Rc</code> with uninitialized contents, with the …",135,[[],[["rc",3],["maybeuninit",19]]]],[11,"try_new","","Constructs a new <code>Rc<T></code>, returning an error if the …",135,[[],[["allocerror",3],["rc",3],["result",4]]]],[11,"try_new_uninit","","Constructs a new <code>Rc</code> with uninitialized contents, …",135,[[],[["allocerror",3],["result",4],["rc",3]]]],[11,"try_new_zeroed","","Constructs a new <code>Rc</code> with uninitialized contents, with the …",135,[[],[["allocerror",3],["result",4],["rc",3]]]],[11,"pin","","Constructs a new <code>Pin<Rc<T>></code>. If <code>T</code> does not implement <code>Unpin</code>…",135,[[],[["pin",3],["rc",3]]]],[11,"try_unwrap","","Returns the inner value, if the <code>Rc</code> has exactly one strong …",135,[[["rc",3]],[["result",4],["rc",3]]]],[11,"new_uninit_slice","","Constructs a new reference-counted slice with …",135,[[["usize",15]],["rc",3]]],[11,"new_zeroed_slice","","Constructs a new reference-counted slice with …",135,[[["usize",15]],["rc",3]]],[11,"assume_init","","Converts to <code>Rc<T></code>.",135,[[],["rc",3]]],[11,"assume_init","","Converts to <code>Rc<[T]></code>.",135,[[],["rc",3]]],[11,"into_raw","","Consumes the <code>Rc</code>, returning the wrapped pointer.",135,[[["rc",3]]]],[11,"as_ptr","","Provides a raw pointer to the data.",135,[[["rc",3]]]],[11,"from_raw","","Constructs an <code>Rc<T></code> from a raw pointer.",135,[[],["rc",3]]],[11,"downgrade","","Creates a new [<code>Weak</code>] pointer to this allocation.",135,[[["rc",3]],["weak",3]]],[11,"weak_count","","Gets the number of [<code>Weak</code>] pointers to this allocation.",135,[[["rc",3]],["usize",15]]],[11,"strong_count","","Gets the number of strong (<code>Rc</code>) pointers to this …",135,[[["rc",3]],["usize",15]]],[11,"get_mut","","Returns a mutable reference into the given <code>Rc</code>, if there …",135,[[["rc",3]],["option",4]]],[11,"get_mut_unchecked","","Returns a mutable reference into the given <code>Rc</code>, without …",135,[[["rc",3]]]],[11,"ptr_eq","","Returns <code>true</code> if the two <code>Rc</code>s point to the same allocation …",135,[[["rc",3]],["bool",15]]],[11,"make_mut","","Makes a mutable reference into the given <code>Rc</code>.",135,[[["rc",3]]]],[11,"downcast","","Attempt to downcast the <code>Rc<dyn Any></code> to a concrete type.",135,[[],[["rc",3],["result",4],["rc",3]]]],[11,"new","","Constructs a new <code>Weak<T></code>, without allocating any memory. …",136,[[],["weak",3]]],[11,"as_ptr","","Returns a raw pointer to the object <code>T</code> pointed to by this …",136,[[]]],[11,"into_raw","","Consumes the <code>Weak<T></code> and turns it into a raw pointer.",136,[[]]],[11,"from_raw","","Converts a raw pointer previously created by <code>into_raw</code> …",136,[[],["weak",3]]],[11,"upgrade","","Attempts to upgrade the <code>Weak</code> pointer to an [<code>Rc</code>], delaying …",136,[[],[["option",4],["rc",3]]]],[11,"strong_count","","Gets the number of strong (<code>Rc</code>) pointers pointing to this …",136,[[],["usize",15]]],[11,"weak_count","","Gets the number of <code>Weak</code> pointers pointing to this …",136,[[],["usize",15]]],[11,"ptr_eq","","Returns <code>true</code> if the two <code>Weak</code>s point to the same …",136,[[["weak",3]],["bool",15]]],[11,"remainder","wasmer_types::lib::std::slice","Returns the remainder of the original slice that is not …",139,[[]]],[11,"into_remainder","","Returns the remainder of the original slice that is not …",140,[[]]],[11,"remainder","","Returns the remainder of the original slice that is not …",145,[[]]],[11,"into_remainder","","Returns the remainder of the original slice that is not …",146,[[]]],[11,"as_slice","","Views the underlying data as a subslice of the original …",152,[[]]],[11,"into_slice","","Views the underlying data as a subslice of the original …",153,[[]]],[11,"as_slice","","Views the underlying data as a subslice of the original …",153,[[]]],[11,"remainder","","Returns the remainder of the original slice that is not …",155,[[]]],[11,"into_remainder","","Returns the remainder of the original slice that is not …",156,[[]]],[11,"new","wasmer_types::lib::std::string","Creates a new empty <code>String</code>.",164,[[],["string",3]]],[11,"with_capacity","","Creates a new empty <code>String</code> with a particular capacity.",164,[[["usize",15]],["string",3]]],[11,"from_utf8","","Converts a vector of bytes to a <code>String</code>.",164,[[["u8",15],["vec",3],["global",3]],[["result",4],["string",3],["fromutf8error",3]]]],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid …",164,[[],[["str",15],["cow",4]]]],[11,"from_utf16","","Decode a UTF-16–encoded vector <code>v</code> into a <code>String</code>, …",164,[[],[["string",3],["result",4],["fromutf16error",3]]]],[11,"from_utf16_lossy","","Decode a UTF-16–encoded slice <code>v</code> into a <code>String</code>, replacing…",164,[[],["string",3]]],[11,"into_raw_parts","","Decomposes a <code>String</code> into its raw components.",164,[[]]],[11,"from_raw_parts","","Creates a new <code>String</code> from a length, capacity, and pointer.",164,[[["usize",15]],["string",3]]],[11,"from_utf8_unchecked","","Converts a vector of bytes to a <code>String</code> without checking …",164,[[["u8",15],["vec",3],["global",3]],["string",3]]],[11,"into_bytes","","Converts a <code>String</code> into a byte vector.",164,[[],[["global",3],["vec",3],["u8",15]]]],[11,"as_str","","Extracts a string slice containing the entire <code>String</code>.",164,[[],["str",15]]],[11,"as_mut_str","","Converts a <code>String</code> into a mutable string slice.",164,[[],["str",15]]],[11,"push_str","","Appends a given string slice onto the end of this <code>String</code>.",164,[[["str",15]]]],[11,"capacity","","Returns this <code>String</code>\'s capacity, in bytes.",164,[[],["usize",15]]],[11,"reserve","","Ensures that this <code>String</code>\'s capacity is at least <code>additional</code>…",164,[[["usize",15]]]],[11,"reserve_exact","","Ensures that this <code>String</code>\'s capacity is <code>additional</code> bytes …",164,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",164,[[["usize",15]],[["result",4],["tryreserveerror",4]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly …",164,[[["usize",15]],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of this <code>String</code> to match its length.",164,[[]]],[11,"shrink_to","","Shrinks the capacity of this <code>String</code> with a lower bound.",164,[[["usize",15]]]],[11,"push","","Appends the given [<code>char</code>] to the end of this <code>String</code>.",164,[[["char",15]]]],[11,"as_bytes","","Returns a byte slice of this <code>String</code>\'s contents.",164,[[]]],[11,"truncate","","Shortens this <code>String</code> to the specified length.",164,[[["usize",15]]]],[11,"pop","","Removes the last character from the string buffer and …",164,[[],[["char",15],["option",4]]]],[11,"remove","","Removes a [<code>char</code>] from this <code>String</code> at a byte position and …",164,[[["usize",15]],["char",15]]],[11,"retain","","Retains only the characters specified by the predicate.",164,[[]]],[11,"insert","","Inserts a character into this <code>String</code> at a byte position.",164,[[["usize",15],["char",15]]]],[11,"insert_str","","Inserts a string slice into this <code>String</code> at a byte …",164,[[["usize",15],["str",15]]]],[11,"as_mut_vec","","Returns a mutable reference to the contents of this <code>String</code>…",164,[[],["vec",3]]],[11,"len","","Returns the length of this <code>String</code>, in bytes, not [<code>char</code>]s …",164,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if this <code>String</code> has a length of zero, and …",164,[[],["bool",15]]],[11,"split_off","","Splits the string into two at the given byte index.",164,[[["usize",15]],["string",3]]],[11,"clear","","Truncates this <code>String</code>, removing all contents.",164,[[]]],[11,"drain","","Creates a draining iterator that removes the specified …",164,[[],["drain",3]]],[11,"replace_range","","Removes the specified range in the string, and replaces …",164,[[["str",15]]]],[11,"into_boxed_str","","Converts this <code>String</code> into a [<code>Box</code>]<code><</code><code>str</code><code>></code>.",164,[[],[["global",3],["str",15],["box",3]]]],[11,"as_bytes","","Returns a slice of [<code>u8</code>]s bytes that were attempted to …",165,[[]]],[11,"into_bytes","","Returns the bytes that were attempted to convert to a …",165,[[],[["global",3],["vec",3],["u8",15]]]],[11,"utf8_error","","Fetch a <code>Utf8Error</code> to get more details about the …",165,[[],["utf8error",3]]],[11,"as_str","","Returns the remaining (sub)string of this iterator as a …",168,[[],["str",15]]],[11,"try_recv","wasmer_types::lib::std::sync::mpsc","Attempts to return a pending value on this receiver …",169,[[],[["result",4],["tryrecverror",4]]]],[11,"recv","","Attempts to wait for a value on this receiver, returning …",169,[[],[["result",4],["recverror",3]]]],[11,"recv_timeout","","Attempts to wait for a value on this receiver, returning …",169,[[["duration",3]],[["result",4],["recvtimeouterror",4]]]],[11,"recv_deadline","","Attempts to wait for a value on this receiver, returning …",169,[[["instant",3]],[["result",4],["recvtimeouterror",4]]]],[11,"iter","","Returns an iterator that will block waiting for messages, …",169,[[],["iter",3]]],[11,"try_iter","","Returns an iterator that will attempt to yield all …",169,[[],["tryiter",3]]],[11,"send","","Attempts to send a value on this channel, returning it …",173,[[],[["senderror",3],["result",4]]]],[11,"send","","Sends a value on this synchronous channel.",174,[[],[["senderror",3],["result",4]]]],[11,"try_send","","Attempts to send a value on this channel without blocking.",174,[[],[["trysenderror",4],["result",4]]]],[11,"new","wasmer_types::lib::std::sync","Constructs a new <code>Arc<T></code>.",179,[[],["arc",3]]],[11,"new_cyclic","","Constructs a new <code>Arc<T></code> using a weak reference to itself. …",179,[[],["arc",3]]],[11,"new_uninit","","Constructs a new <code>Arc</code> with uninitialized contents.",179,[[],[["arc",3],["maybeuninit",19]]]],[11,"new_zeroed","","Constructs a new <code>Arc</code> with uninitialized contents, with …",179,[[],[["arc",3],["maybeuninit",19]]]],[11,"pin","","Constructs a new <code>Pin<Arc<T>></code>. If <code>T</code> does not implement …",179,[[],[["arc",3],["pin",3]]]],[11,"try_new","","Constructs a new <code>Arc<T></code>, returning an error if allocation …",179,[[],[["result",4],["allocerror",3],["arc",3]]]],[11,"try_new_uninit","","Constructs a new <code>Arc</code> with uninitialized contents, …",179,[[],[["result",4],["arc",3],["allocerror",3]]]],[11,"try_new_zeroed","","Constructs a new <code>Arc</code> with uninitialized contents, with …",179,[[],[["result",4],["arc",3],["allocerror",3]]]],[11,"try_unwrap","","Returns the inner value, if the <code>Arc</code> has exactly one …",179,[[["arc",3]],[["arc",3],["result",4]]]],[11,"new_uninit_slice","","Constructs a new atomically reference-counted slice with …",179,[[["usize",15]],["arc",3]]],[11,"new_zeroed_slice","","Constructs a new atomically reference-counted slice with …",179,[[["usize",15]],["arc",3]]],[11,"assume_init","","Converts to <code>Arc<T></code>.",179,[[],["arc",3]]],[11,"assume_init","","Converts to <code>Arc<[T]></code>.",179,[[],["arc",3]]],[11,"into_raw","","Consumes the <code>Arc</code>, returning the wrapped pointer.",179,[[["arc",3]]]],[11,"as_ptr","","Provides a raw pointer to the data.",179,[[["arc",3]]]],[11,"from_raw","","Constructs an <code>Arc<T></code> from a raw pointer.",179,[[],["arc",3]]],[11,"downgrade","","Creates a new [<code>Weak</code>] pointer to this allocation.",179,[[["arc",3]],["weak",3]]],[11,"weak_count","","Gets the number of [<code>Weak</code>] pointers to this allocation.",179,[[["arc",3]],["usize",15]]],[11,"strong_count","","Gets the number of strong (<code>Arc</code>) pointers to this …",179,[[["arc",3]],["usize",15]]],[11,"increment_strong_count","","Increments the strong reference count on the <code>Arc<T></code> …",179,[[]]],[11,"decrement_strong_count","","Decrements the strong reference count on the <code>Arc<T></code> …",179,[[]]],[11,"ptr_eq","","Returns <code>true</code> if the two <code>Arc</code>s point to the same allocation …",179,[[["arc",3]],["bool",15]]],[11,"make_mut","","Makes a mutable reference into the given <code>Arc</code>.",179,[[["arc",3]]]],[11,"get_mut","","Returns a mutable reference into the given <code>Arc</code>, if there …",179,[[["arc",3]],["option",4]]],[11,"get_mut_unchecked","","Returns a mutable reference into the given <code>Arc</code>, without …",179,[[["arc",3]]]],[11,"downcast","","Attempt to downcast the <code>Arc<dyn Any + Send + Sync></code> to a …",179,[[],[["arc",3],["result",4],["arc",3]]]],[11,"new","","Constructs a new <code>Weak<T></code>, without allocating any memory. …",180,[[],["weak",3]]],[11,"as_ptr","","Returns a raw pointer to the object <code>T</code> pointed to by this …",180,[[]]],[11,"into_raw","","Consumes the <code>Weak<T></code> and turns it into a raw pointer.",180,[[]]],[11,"from_raw","","Converts a raw pointer previously created by <code>into_raw</code> …",180,[[],["weak",3]]],[11,"upgrade","","Attempts to upgrade the <code>Weak</code> pointer to an [<code>Arc</code>], delaying…",180,[[],[["arc",3],["option",4]]]],[11,"strong_count","","Gets the number of strong (<code>Arc</code>) pointers pointing to this …",180,[[],["usize",15]]],[11,"weak_count","","Gets an approximation of the number of <code>Weak</code> pointers …",180,[[],["usize",15]]],[11,"ptr_eq","","Returns <code>true</code> if the two <code>Weak</code>s point to the same …",180,[[["weak",3]],["bool",15]]],[11,"new","wasmer_types::lib::std::sync::atomic","Creates a new <code>AtomicBool</code>.",181,[[["bool",15]],["atomicbool",3]]],[11,"get_mut","","Returns a mutable reference to the underlying [<code>bool</code>].",181,[[],["bool",15]]],[11,"from_mut","","Get atomic access to a <code>&mut bool</code>.",181,[[["bool",15]],["atomicbool",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",181,[[],["bool",15]]],[11,"load","","Loads a value from the bool.",181,[[["ordering",4]],["bool",15]]],[11,"store","","Stores a value into the bool.",181,[[["bool",15],["ordering",4]]]],[11,"swap","","Stores a value into the bool, returning the previous …",181,[[["bool",15],["ordering",4]],["bool",15]]],[11,"compare_and_swap","","Stores a value into the [<code>bool</code>] if the current value is …",181,[[["bool",15],["ordering",4]],["bool",15]]],[11,"compare_exchange","","Stores a value into the [<code>bool</code>] if the current value is …",181,[[["bool",15],["ordering",4]],[["bool",15],["result",4]]]],[11,"compare_exchange_weak","","Stores a value into the [<code>bool</code>] if the current value is …",181,[[["bool",15],["ordering",4]],[["bool",15],["result",4]]]],[11,"fetch_and","","Logical \\\"and\\\" with a boolean value.",181,[[["bool",15],["ordering",4]],["bool",15]]],[11,"fetch_nand","","Logical \\\"nand\\\" with a boolean value.",181,[[["bool",15],["ordering",4]],["bool",15]]],[11,"fetch_or","","Logical \\\"or\\\" with a boolean value.",181,[[["bool",15],["ordering",4]],["bool",15]]],[11,"fetch_xor","","Logical \\\"xor\\\" with a boolean value.",181,[[["bool",15],["ordering",4]],["bool",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying [<code>bool</code>].",181,[[]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",181,[[["ordering",4]],[["bool",15],["result",4]]]],[11,"new","","Creates a new <code>AtomicPtr</code>.",182,[[],["atomicptr",3]]],[11,"get_mut","","Returns a mutable reference to the underlying pointer.",182,[[]]],[11,"from_mut","","Get atomic access to a pointer.",182,[[],["atomicptr",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",182,[[]]],[11,"load","","Loads a value from the pointer.",182,[[["ordering",4]]]],[11,"store","","Stores a value into the pointer.",182,[[["ordering",4]]]],[11,"swap","","Stores a value into the pointer, returning the previous …",182,[[["ordering",4]]]],[11,"compare_and_swap","","Stores a value into the pointer if the current value is …",182,[[["ordering",4]]]],[11,"compare_exchange","","Stores a value into the pointer if the current value is …",182,[[["ordering",4]],["result",4]]],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is …",182,[[["ordering",4]],["result",4]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",182,[[["ordering",4]],["result",4]]],[11,"new","","Creates a new atomic integer.",184,[[["i8",15]],["atomici8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",184,[[],["i8",15]]],[11,"from_mut","","Get atomic access to a <code>&mut i8</code>.",184,[[["i8",15]],["atomici8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",184,[[],["i8",15]]],[11,"load","","Loads a value from the atomic integer.",184,[[["ordering",4]],["i8",15]]],[11,"store","","Stores a value into the atomic integer.",184,[[["ordering",4],["i8",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",184,[[["ordering",4],["i8",15]],[["result",4],["i8",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",184,[[["ordering",4],["i8",15]],[["result",4],["i8",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",184,[[["ordering",4]],[["result",4],["i8",15]]]],[11,"fetch_max","","Maximum with the current value.",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"fetch_min","","Minimum with the current value.",184,[[["ordering",4],["i8",15]],["i8",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",184,[[]]],[11,"new","","Creates a new atomic integer.",185,[[["u8",15]],["atomicu8",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",185,[[],["u8",15]]],[11,"from_mut","","Get atomic access to a <code>&mut u8</code>.",185,[[["u8",15]],["atomicu8",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",185,[[],["u8",15]]],[11,"load","","Loads a value from the atomic integer.",185,[[["ordering",4]],["u8",15]]],[11,"store","","Stores a value into the atomic integer.",185,[[["ordering",4],["u8",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",185,[[["ordering",4],["u8",15]],[["result",4],["u8",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",185,[[["ordering",4],["u8",15]],[["result",4],["u8",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",185,[[["ordering",4]],[["result",4],["u8",15]]]],[11,"fetch_max","","Maximum with the current value.",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"fetch_min","","Minimum with the current value.",185,[[["ordering",4],["u8",15]],["u8",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",185,[[]]],[11,"new","","Creates a new atomic integer.",186,[[["i16",15]],["atomici16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",186,[[],["i16",15]]],[11,"from_mut","","Get atomic access to a <code>&mut i16</code>.",186,[[["i16",15]],["atomici16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",186,[[],["i16",15]]],[11,"load","","Loads a value from the atomic integer.",186,[[["ordering",4]],["i16",15]]],[11,"store","","Stores a value into the atomic integer.",186,[[["i16",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",186,[[["i16",15],["ordering",4]],[["result",4],["i16",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",186,[[["i16",15],["ordering",4]],[["result",4],["i16",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",186,[[["ordering",4]],[["result",4],["i16",15]]]],[11,"fetch_max","","Maximum with the current value.",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"fetch_min","","Minimum with the current value.",186,[[["i16",15],["ordering",4]],["i16",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",186,[[]]],[11,"new","","Creates a new atomic integer.",187,[[["u16",15]],["atomicu16",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",187,[[],["u16",15]]],[11,"from_mut","","Get atomic access to a <code>&mut u16</code>.",187,[[["u16",15]],["atomicu16",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",187,[[],["u16",15]]],[11,"load","","Loads a value from the atomic integer.",187,[[["ordering",4]],["u16",15]]],[11,"store","","Stores a value into the atomic integer.",187,[[["ordering",4],["u16",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",187,[[["ordering",4],["u16",15]],[["result",4],["u16",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",187,[[["ordering",4],["u16",15]],[["result",4],["u16",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",187,[[["ordering",4]],[["result",4],["u16",15]]]],[11,"fetch_max","","Maximum with the current value.",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"fetch_min","","Minimum with the current value.",187,[[["ordering",4],["u16",15]],["u16",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",187,[[]]],[11,"new","","Creates a new atomic integer.",188,[[["i32",15]],["atomici32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",188,[[],["i32",15]]],[11,"from_mut","","Get atomic access to a <code>&mut i32</code>.",188,[[["i32",15]],["atomici32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",188,[[],["i32",15]]],[11,"load","","Loads a value from the atomic integer.",188,[[["ordering",4]],["i32",15]]],[11,"store","","Stores a value into the atomic integer.",188,[[["ordering",4],["i32",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",188,[[["ordering",4],["i32",15]],[["i32",15],["result",4]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",188,[[["ordering",4],["i32",15]],[["i32",15],["result",4]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",188,[[["ordering",4]],[["i32",15],["result",4]]]],[11,"fetch_max","","Maximum with the current value.",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"fetch_min","","Minimum with the current value.",188,[[["ordering",4],["i32",15]],["i32",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",188,[[]]],[11,"new","","Creates a new atomic integer.",189,[[["u32",15]],["atomicu32",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",189,[[],["u32",15]]],[11,"from_mut","","Get atomic access to a <code>&mut u32</code>.",189,[[["u32",15]],["atomicu32",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",189,[[],["u32",15]]],[11,"load","","Loads a value from the atomic integer.",189,[[["ordering",4]],["u32",15]]],[11,"store","","Stores a value into the atomic integer.",189,[[["u32",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",189,[[["u32",15],["ordering",4]],[["result",4],["u32",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",189,[[["u32",15],["ordering",4]],[["result",4],["u32",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",189,[[["ordering",4]],[["result",4],["u32",15]]]],[11,"fetch_max","","Maximum with the current value.",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"fetch_min","","Minimum with the current value.",189,[[["u32",15],["ordering",4]],["u32",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",189,[[]]],[11,"new","","Creates a new atomic integer.",190,[[["i64",15]],["atomici64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",190,[[],["i64",15]]],[11,"from_mut","","Get atomic access to a <code>&mut i64</code>.",190,[[["i64",15]],["atomici64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",190,[[],["i64",15]]],[11,"load","","Loads a value from the atomic integer.",190,[[["ordering",4]],["i64",15]]],[11,"store","","Stores a value into the atomic integer.",190,[[["i64",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",190,[[["i64",15],["ordering",4]],[["result",4],["i64",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",190,[[["i64",15],["ordering",4]],[["result",4],["i64",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",190,[[["ordering",4]],[["result",4],["i64",15]]]],[11,"fetch_max","","Maximum with the current value.",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"fetch_min","","Minimum with the current value.",190,[[["i64",15],["ordering",4]],["i64",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",190,[[]]],[11,"new","","Creates a new atomic integer.",191,[[["u64",15]],["atomicu64",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",191,[[],["u64",15]]],[11,"from_mut","","Get atomic access to a <code>&mut u64</code>.",191,[[["u64",15]],["atomicu64",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",191,[[],["u64",15]]],[11,"load","","Loads a value from the atomic integer.",191,[[["ordering",4]],["u64",15]]],[11,"store","","Stores a value into the atomic integer.",191,[[["ordering",4],["u64",15]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",191,[[["ordering",4],["u64",15]],[["result",4],["u64",15]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",191,[[["ordering",4],["u64",15]],[["result",4],["u64",15]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",191,[[["ordering",4]],[["result",4],["u64",15]]]],[11,"fetch_max","","Maximum with the current value.",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"fetch_min","","Minimum with the current value.",191,[[["ordering",4],["u64",15]],["u64",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",191,[[]]],[11,"new","","Creates a new atomic integer.",192,[[["isize",15]],["atomicisize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",192,[[],["isize",15]]],[11,"from_mut","","Get atomic access to a <code>&mut isize</code>.",192,[[["isize",15]],["atomicisize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",192,[[],["isize",15]]],[11,"load","","Loads a value from the atomic integer.",192,[[["ordering",4]],["isize",15]]],[11,"store","","Stores a value into the atomic integer.",192,[[["isize",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",192,[[["isize",15],["ordering",4]],[["isize",15],["result",4]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",192,[[["isize",15],["ordering",4]],[["isize",15],["result",4]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",192,[[["ordering",4]],[["isize",15],["result",4]]]],[11,"fetch_max","","Maximum with the current value.",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"fetch_min","","Minimum with the current value.",192,[[["isize",15],["ordering",4]],["isize",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",192,[[]]],[11,"new","","Creates a new atomic integer.",193,[[["usize",15]],["atomicusize",3]]],[11,"get_mut","","Returns a mutable reference to the underlying integer.",193,[[],["usize",15]]],[11,"from_mut","","Get atomic access to a <code>&mut usize</code>.",193,[[["usize",15]],["atomicusize",3]]],[11,"into_inner","","Consumes the atomic and returns the contained value.",193,[[],["usize",15]]],[11,"load","","Loads a value from the atomic integer.",193,[[["ordering",4]],["usize",15]]],[11,"store","","Stores a value into the atomic integer.",193,[[["usize",15],["ordering",4]]]],[11,"swap","","Stores a value into the atomic integer, returning the …",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"compare_and_swap","","Stores a value into the atomic integer if the current …",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"compare_exchange","","Stores a value into the atomic integer if the current …",193,[[["usize",15],["ordering",4]],[["usize",15],["result",4]]]],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current …",193,[[["usize",15],["ordering",4]],[["usize",15],["result",4]]]],[11,"fetch_add","","Adds to the current value, returning the previous value.",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_sub","","Subtracts from the current value, returning the previous …",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_and","","Bitwise \\\"and\\\" with the current value.",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_nand","","Bitwise \\\"nand\\\" with the current value.",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_or","","Bitwise \\\"or\\\" with the current value.",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_xor","","Bitwise \\\"xor\\\" with the current value.",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_update","","Fetches the value, and applies a function to it that …",193,[[["ordering",4]],[["usize",15],["result",4]]]],[11,"fetch_max","","Maximum with the current value.",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"fetch_min","","Minimum with the current value.",193,[[["usize",15],["ordering",4]],["usize",15]]],[11,"as_mut_ptr","","Returns a mutable pointer to the underlying integer.",193,[[]]],[11,"new","wasmer_types::lib::std::sync","Creates a new barrier that can block a given number of …",194,[[["usize",15]],["barrier",3]]],[11,"wait","","Blocks the current thread until all threads have …",194,[[],["barrierwaitresult",3]]],[11,"is_leader","","Returns <code>true</code> if this thread is the \\\"leader thread\\\" for …",195,[[],["bool",15]]],[11,"new","","Creates a new condition variable which is ready to be …",196,[[],["condvar",3]]],[11,"wait","","Blocks the current thread until this condition variable …",196,[[["mutexguard",3]],[["mutexguard",3],["poisonerror",3],["result",4]]]],[11,"wait_while","","Blocks the current thread until this condition variable …",196,[[["mutexguard",3]],[["mutexguard",3],["poisonerror",3],["result",4]]]],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, …",196,[[["mutexguard",3],["u32",15]],[["poisonerror",3],["result",4]]]],[11,"wait_timeout","","Waits on this condition variable for a notification, …",196,[[["mutexguard",3],["duration",3]],[["result",4],["poisonerror",3]]]],[11,"wait_timeout_while","","Waits on this condition variable for a notification, …",196,[[["mutexguard",3],["duration",3]],[["result",4],["poisonerror",3]]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",196,[[]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",196,[[]]],[11,"timed_out","","Returns <code>true</code> if the wait was known to have timed out.",197,[[],["bool",15]]],[11,"new","","Creates a new mutex in an unlocked state ready for use.",198,[[],["mutex",3]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is …",198,[[],[["mutexguard",3],["result",4],["poisonerror",3]]]],[11,"try_lock","","Attempts to acquire this lock.",198,[[],[["mutexguard",3],["result",4],["trylockerror",4]]]],[11,"is_poisoned","","Determines whether the mutex is poisoned.",198,[[],["bool",15]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",198,[[],[["result",4],["poisonerror",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",198,[[],[["result",4],["poisonerror",3]]]],[11,"new","","Creates a new <code>Once</code> value.",200,[[],["once",3]]],[11,"call_once","","Performs an initialization routine once and only once. …",200,[[]]],[11,"call_once_force","","Performs the same function as <code>call_once()</code> except ignores …",200,[[]]],[11,"is_completed","","Returns <code>true</code> if some <code>call_once()</code> call has completed …",200,[[],["bool",15]]],[11,"is_poisoned","","Returns <code>true</code> if the associated [<code>Once</code>] was poisoned prior …",201,[[],["bool",15]]],[11,"new","","Creates a new instance of an <code>RwLock<T></code> which is unlocked.",202,[[],["rwlock",3]]],[11,"read","","Locks this rwlock with shared read access, blocking the …",202,[[],[["poisonerror",3],["result",4],["rwlockreadguard",3]]]],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",202,[[],[["rwlockreadguard",3],["result",4],["trylockerror",4]]]],[11,"write","","Locks this rwlock with exclusive write access, blocking …",202,[[],[["poisonerror",3],["result",4],["rwlockwriteguard",3]]]],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",202,[[],[["trylockerror",4],["result",4],["rwlockwriteguard",3]]]],[11,"is_poisoned","","Determines whether the lock is poisoned.",202,[[],["bool",15]]],[11,"into_inner","","Consumes this <code>RwLock</code>, returning the underlying data.",202,[[],[["result",4],["poisonerror",3]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",202,[[],[["result",4],["poisonerror",3]]]],[11,"new","","Creates a <code>PoisonError</code>.",205,[[],["poisonerror",3]]],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, …",205,[[]]],[11,"get_ref","","Reaches into this error indicating that a lock is …",205,[[]]],[11,"get_mut","","Reaches into this error indicating that a lock is …",205,[[]]],[11,"new","wasmer_types::lib::std::vec","Constructs a new, empty <code>Vec<T></code>.",207,[[],[["vec",3],["global",3]]]],[11,"with_capacity","","Constructs a new, empty <code>Vec<T></code> with the specified …",207,[[["usize",15]],[["vec",3],["global",3]]]],[11,"from_raw_parts","","Creates a <code>Vec<T></code> directly from the raw components of …",207,[[["usize",15]],[["vec",3],["global",3]]]],[11,"new_in","","Constructs a new, empty <code>Vec<T, A></code>.",207,[[],["vec",3]]],[11,"with_capacity_in","","Constructs a new, empty <code>Vec<T, A></code> with the specified …",207,[[["usize",15]],["vec",3]]],[11,"from_raw_parts_in","","Creates a <code>Vec<T, A></code> directly from the raw components of …",207,[[["usize",15]],["vec",3]]],[11,"into_raw_parts","","Decomposes a <code>Vec<T></code> into its raw components.",207,[[]]],[11,"into_raw_parts_with_alloc","","Decomposes a <code>Vec<T></code> into its raw components.",207,[[]]],[11,"capacity","","Returns the number of elements the vector can hold without…",207,[[],["usize",15]]],[11,"reserve","","Reserves capacity for at least <code>additional</code> more elements …",207,[[["usize",15]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly <code>additional</code> more …",207,[[["usize",15]]]],[11,"try_reserve","","Tries to reserve capacity for at least <code>additional</code> more …",207,[[["usize",15]],[["result",4],["tryreserveerror",4]]]],[11,"try_reserve_exact","","Tries to reserve the minimum capacity for exactly …",207,[[["usize",15]],[["result",4],["tryreserveerror",4]]]],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",207,[[]]],[11,"shrink_to","","Shrinks the capacity of the vector with a lower bound.",207,[[["usize",15]]]],[11,"into_boxed_slice","","Converts the vector into <code>Box<[T]></code>.",207,[[],["box",3]]],[11,"truncate","","Shortens the vector, keeping the first <code>len</code> elements and …",207,[[["usize",15]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",207,[[]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",207,[[]]],[11,"as_ptr","","Returns a raw pointer to the vector\'s buffer.",207,[[]]],[11,"as_mut_ptr","","Returns an unsafe mutable pointer to the vector\'s buffer.",207,[[]]],[11,"allocator","","Returns a reference to the underlying allocator.",207,[[]]],[11,"set_len","","Forces the length of the vector to <code>new_len</code>.",207,[[["usize",15]]]],[11,"swap_remove","","Removes an element from the vector and returns it.",207,[[["usize",15]]]],[11,"insert","","Inserts an element at position <code>index</code> within the vector, …",207,[[["usize",15]]]],[11,"remove","","Removes and returns the element at position <code>index</code> within …",207,[[["usize",15]]]],[11,"retain","","Retains only the elements specified by the predicate.",207,[[]]],[11,"dedup_by_key","","Removes all but the first of consecutive elements in the …",207,[[]]],[11,"dedup_by","","Removes all but the first of consecutive elements in the …",207,[[]]],[11,"push","","Appends an element to the back of a collection.",207,[[]]],[11,"pop","","Removes the last element from a vector and returns it, or …",207,[[],["option",4]]],[11,"append","","Moves all the elements of <code>other</code> into <code>Self</code>, leaving <code>other</code> …",207,[[["vec",3]]]],[11,"drain","","Creates a draining iterator that removes the specified …",207,[[],["drain",3]]],[11,"clear","","Clears the vector, removing all values.",207,[[]]],[11,"len","","Returns the number of elements in the vector, also …",207,[[],["usize",15]]],[11,"is_empty","","Returns <code>true</code> if the vector contains no elements.",207,[[],["bool",15]]],[11,"split_off","","Splits the collection into two at the given index.",207,[[["usize",15]],["vec",3]]],[11,"resize_with","","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.",207,[[["usize",15]]]],[11,"leak","","Consumes and leaks the <code>Vec</code>, returning a mutable reference …",207,[[]]],[11,"spare_capacity_mut","","Returns the remaining spare capacity of the vector as a …",207,[[]]],[11,"resize","","Resizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.",207,[[["usize",15]]]],[11,"extend_from_slice","","Clones and appends all elements in a slice to the <code>Vec</code>.",207,[[]]],[11,"extend_from_within","","Copies elements from <code>src</code> range to the end of the vector.",207,[[]]],[11,"dedup","","Removes consecutive repeated elements in the vector …",207,[[]]],[11,"splice","","Creates a splicing iterator that replaces the specified …",207,[[],["splice",3]]],[11,"drain_filter","","Creates an iterator which uses a closure to determine if …",207,[[],["drainfilter",3]]],[11,"allocator","","Returns a reference to the underlying allocator.",208,[[]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",210,[[]]],[11,"allocator","","Returns a reference to the underlying allocator.",210,[[]]],[11,"as_slice","","Returns the remaining items of this iterator as a slice.",211,[[]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable …",211,[[]]],[11,"allocator","","Returns a reference to the underlying allocator.",211,[[]]]],"p":[[8,"Any"],[3,"TypeId"],[8,"ToOwned"],[4,"Cow"],[8,"Borrow"],[8,"BorrowMut"],[3,"Box"],[3,"Cell"],[3,"RefCell"],[3,"BorrowError"],[3,"BorrowMutError"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[8,"PartialEq"],[4,"Ordering"],[3,"Reverse"],[8,"Ord"],[8,"PartialOrd"],[8,"AsRef"],[8,"AsMut"],[8,"Into"],[8,"From"],[8,"TryInto"],[8,"TryFrom"],[4,"Alignment"],[3,"Arguments"],[8,"Binary"],[8,"Octal"],[8,"Debug"],[8,"Display"],[3,"DebugList"],[3,"DebugMap"],[3,"DebugSet"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"Formatter"],[8,"Write"],[8,"LowerExp"],[8,"UpperExp"],[8,"LowerHex"],[8,"Pointer"],[8,"UpperHex"],[8,"Hash"],[8,"Hasher"],[8,"BuildHasher"],[3,"BuildHasherDefault"],[3,"SipHasher"],[8,"Iterator"],[8,"Step"],[3,"Empty"],[3,"FromFn"],[3,"Once"],[3,"OnceWith"],[3,"Repeat"],[3,"RepeatWith"],[3,"Successors"],[8,"DoubleEndedIterator"],[8,"ExactSizeIterator"],[8,"Extend"],[8,"FromIterator"],[8,"IntoIterator"],[8,"Product"],[8,"Sum"],[3,"Cloned"],[3,"Copied"],[3,"Flatten"],[3,"MapWhile"],[8,"SourceIter"],[3,"StepBy"],[3,"Chain"],[3,"Cycle"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Map"],[3,"Peekable"],[3,"Rev"],[3,"Scan"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"Zip"],[3,"Intersperse"],[3,"IntersperseWith"],[8,"DiscriminantKind"],[3,"Discriminant"],[3,"ManuallyDrop"],[19,"MaybeUninit"],[8,"Add"],[8,"Div"],[8,"Mul"],[8,"Neg"],[8,"Rem"],[8,"Sub"],[8,"AddAssign"],[8,"DivAssign"],[8,"MulAssign"],[8,"RemAssign"],[8,"SubAssign"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Not"],[8,"Shl"],[8,"Shr"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Deref"],[8,"DerefMut"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Index"],[8,"IndexMut"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Bound"],[8,"RangeBounds"],[3,"RangeInclusive"],[3,"RangeToInclusive"],[8,"Try"],[8,"Generator"],[4,"GeneratorState"],[4,"ControlFlow"],[3,"NonNull"],[3,"Rc"],[3,"Weak"],[8,"Concat"],[8,"Join"],[3,"ArrayChunks"],[3,"ArrayChunksMut"],[3,"ArrayWindows"],[8,"SliceIndex"],[3,"Chunks"],[3,"Windows"],[3,"ChunksExact"],[3,"ChunksExactMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"GroupBy"],[3,"GroupByMut"],[3,"Iter"],[3,"IterMut"],[3,"RChunks"],[3,"RChunksExact"],[3,"RChunksExactMut"],[3,"RChunksMut"],[3,"RSplit"],[3,"RSplitMut"],[3,"RSplitN"],[3,"RSplitNMut"],[3,"SplitN"],[3,"SplitNMut"],[3,"String"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"ToString"],[3,"Drain"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"Sender"],[3,"SyncSender"],[3,"SendError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[4,"TrySendError"],[3,"Arc"],[3,"Weak"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Condvar"],[3,"WaitTimeoutResult"],[3,"Mutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"PoisonError"],[4,"TryLockError"],[3,"Vec"],[3,"DrainFilter"],[3,"Splice"],[3,"Drain"],[3,"IntoIter"],[3,"ArchivableIndexMap"],[3,"ArchivedArchivableIndexMap"],[3,"ArchivableIndexMapResolver"],[3,"VMExternRef"],[3,"VMExternRefInner"],[3,"ExternRef"],[3,"Features"],[3,"ArchivedFeatures"],[3,"FeaturesResolver"],[3,"LocalFunctionIndex"],[3,"ArchivedLocalFunctionIndex"],[3,"LocalFunctionIndexResolver"],[3,"LocalTableIndex"],[3,"LocalMemoryIndex"],[3,"LocalGlobalIndex"],[3,"ArchivedLocalGlobalIndex"],[3,"LocalGlobalIndexResolver"],[3,"FunctionIndex"],[3,"ArchivedFunctionIndex"],[3,"FunctionIndexResolver"],[3,"TableIndex"],[3,"ArchivedTableIndex"],[3,"TableIndexResolver"],[3,"GlobalIndex"],[3,"ArchivedGlobalIndex"],[3,"GlobalIndexResolver"],[3,"MemoryIndex"],[3,"ArchivedMemoryIndex"],[3,"MemoryIndexResolver"],[3,"SignatureIndex"],[3,"ArchivedSignatureIndex"],[3,"SignatureIndexResolver"],[3,"DataIndex"],[3,"ArchivedDataIndex"],[3,"DataIndexResolver"],[3,"ElemIndex"],[3,"ArchivedElemIndex"],[3,"ElemIndexResolver"],[3,"CustomSectionIndex"],[3,"ArchivedCustomSectionIndex"],[3,"CustomSectionIndexResolver"],[4,"ExportIndex"],[4,"ArchivedExportIndex"],[4,"ExportIndexResolver"],[4,"ImportIndex"],[4,"ArchivedImportIndex"],[4,"ImportIndexResolver"],[3,"TableInitializer"],[3,"ArchivedTableInitializer"],[3,"TableInitializerResolver"],[3,"DataInitializerLocation"],[3,"ArchivedDataInitializerLocation"],[3,"DataInitializerLocationResolver"],[3,"DataInitializer"],[3,"OwnedDataInitializer"],[3,"ArchivedOwnedDataInitializer"],[3,"OwnedDataInitializerResolver"],[8,"Atomic"],[3,"MemoryView"],[8,"NativeWasmType"],[4,"Type"],[4,"ArchivedType"],[4,"TypeResolver"],[3,"V128"],[3,"ArchivedV128"],[3,"V128Resolver"],[4,"ExternType"],[3,"FunctionType"],[3,"ArchivedFunctionType"],[3,"FunctionTypeResolver"],[4,"Mutability"],[4,"ArchivedMutability"],[4,"MutabilityResolver"],[3,"GlobalType"],[3,"ArchivedGlobalType"],[3,"GlobalTypeResolver"],[4,"GlobalInit"],[4,"ArchivedGlobalInit"],[4,"GlobalInitResolver"],[3,"TableType"],[3,"ArchivedTableType"],[3,"TableTypeResolver"],[3,"MemoryType"],[3,"ArchivedMemoryType"],[3,"MemoryTypeResolver"],[3,"ImportType"],[3,"ExportType"],[3,"Pages"],[3,"ArchivedPages"],[3,"PagesResolver"],[3,"Bytes"],[4,"Value"],[8,"WasmValueType"],[8,"ReservedValue"],[3,"PackedOption"],[3,"BoxedSlice"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"PrimaryMap"],[3,"ArchivedPrimaryMap"],[3,"PrimaryMapResolver"],[3,"SecondaryMap"],[3,"ArchivedSecondaryMap"],[3,"SecondaryMapResolver"],[8,"EntityRef"],[4,"Infallible"],[3,"Error"],[3,"PhantomData"],[3,"PhantomPinned"],[3,"RangeFull"],[3,"RecvError"],[3,"Atomically"],[3,"NonAtomically"],[3,"PageCountOutOfRange"]],"a":{"!=":[44,47],"%":[446,458],"%=":[458],"&":[462],"&*":[490],"&=":[480],"*":[440,456,490,493],"*=":[456],"+":[434,452],"+=":[452],"-":[443,449,460],"-=":[460],"..":[509,512,514,515],"..=":[526,530],"/":[437,454],"/=":[454],"<":[54,59],"<<":[474],"<<=":[486],"<=":[54,59],"==":[44,47],">":[54,59],">=":[54,59],">>":[477],">>=":[488],"?":[532],"[":[504,507],"[]":[504,507],"]":[504,507],"^":[468],"^=":[484],"alloc":[837,6551,6775],"calloc":[6553],"compare_and_swap":[6865,6866],"delete":[421],"inject":[220],"length":[297,6803,7153],"malloc":[837,6551,6775,7120],"memcpy":[567],"memmove":[568],"realloc":[7128,7129,7130,7131,7132,7133],"reduce":[220],"{:?}":[109],"{}":[112],"|":[465],"|=":[482]}},\
"wasmer_vm":{"doc":"Runtime library support for Wasmer.","i":[[0,"export","wasmer_vm","",null,null],[4,"VMExtern","wasmer_vm::export","The value of an export passed from one instance to …",null,null],[13,"Function","","A function export value.",0,null],[13,"Table","","A table export value.",0,null],[13,"Memory","","A memory export value.",0,null],[13,"Global","","A global export value.",0,null],[3,"VMFunction","","A function export value.",null,null],[12,"address","","The address of the native-code function.",1,null],[12,"vmctx","","Pointer to the containing <code>VMContext</code>.",1,null],[12,"signature","","The function type, used for compatibility checking.",1,null],[12,"kind","","The function kind (specifies the calling convention for …",1,null],[12,"call_trampoline","","Address of the function call trampoline owned by the same …",1,null],[12,"instance_ref","","A “reference” to the instance through the <code>InstanceRef</code>…",1,null],[3,"VMTable","","A table export value.",null,null],[12,"from","","Pointer to the containing <code>Table</code>.",2,null],[12,"instance_ref","","A “reference” to the instance through the <code>InstanceRef</code>…",2,null],[11,"ty","","Get the table type for this exported table",2,[[],["tabletype",3]]],[11,"style","","Get the style for this exported table",2,[[],["tablestyle",4]]],[11,"same","","Returns whether or not the two <code>VMTable</code>s refer to the same …",2,[[],["bool",15]]],[3,"VMMemory","","A memory export value.",null,null],[12,"from","","Pointer to the containing <code>Memory</code>.",3,null],[12,"instance_ref","","A “reference” to the instance through the <code>InstanceRef</code>…",3,null],[11,"ty","","Get the type for this exported memory",3,[[],["memorytype",3]]],[11,"style","","Get the style for this exported memory",3,[[],["memorystyle",4]]],[11,"same","","Returns whether or not the two <code>VMMemory</code>s refer to the …",3,[[],["bool",15]]],[3,"VMGlobal","","A global export value.",null,null],[12,"from","","The global declaration, used for compatibility checking.",4,null],[12,"instance_ref","","A “reference” to the instance through the <code>InstanceRef</code>…",4,null],[11,"same","","Returns whether or not the two <code>VMGlobal</code>s refer to the …",4,[[],["bool",15]]],[0,"func_data_registry","wasmer_vm","A registry for <code>VMFuncRef</code>s. This allows us to deduplicate …",null,null],[3,"FuncDataRegistry","wasmer_vm::func_data_registry","The registry that holds the values that <code>VMFuncRef</code>s point …",null,null],[12,"inner","","",5,null],[3,"VMFuncRef","","A function reference. A single word that points to …",null,null],[12,"0","","",6,null],[11,"is_null","","Check if the FuncRef is null",6,[[],["bool",15]]],[11,"null","","Create a new null FuncRef",6,[[]]],[3,"Inner","","",null,null],[12,"func_data","","",7,null],[12,"anyfunc_to_index","","",7,null],[11,"new","","Create a new <code>FuncDataRegistry</code>.",5,[[]]],[11,"register","","Register a signature and return its unique index.",5,[[["vmcallercheckedanyfunc",3]],["vmfuncref",3]]],[0,"global","wasmer_vm","",null,null],[3,"Global","wasmer_vm::global","A Global instance",null,null],[12,"ty","","",8,null],[12,"vm_global_definition","","",8,null],[12,"lock","","",8,null],[4,"GlobalError","","Error type describing things that can go wrong when …",null,null],[13,"ImmutableGlobalCannotBeSet","","The error returned when attempting to set an immutable …",9,null],[13,"IncorrectType","","The error returned when attempting to operate on a global …",9,null],[12,"expected","wasmer_vm::global::GlobalError","The type that the global is.",10,null],[12,"found","","The type that we were asked to use it as.",10,null],[11,"new","wasmer_vm::global","Create a new, zero bit-pattern initialized global from a […",8,[[["globaltype",3]]]],[11,"ty","","Get the type of the global.",8,[[],["globaltype",3]]],[11,"vmglobal","","Get a pointer to the underlying definition used by the …",8,[[],[["nonnull",3],["vmglobaldefinition",3]]]],[11,"get","","Get a value from the global.",8,[[["any",8]],[["value",4],["wasmvaluetype",8]]]],[11,"set","","Set a value for the global.",8,[[["value",4],["wasmvaluetype",8]],[["globalerror",4],["result",4]]]],[11,"set_unchecked","","Set a value from the global (unchecked)",8,[[["value",4],["wasmvaluetype",8]],[["globalerror",4],["result",4]]]],[0,"imports","wasmer_vm","",null,null],[3,"Imports","wasmer_vm::imports","Resolved import pointers.",null,null],[12,"functions","","Resolved addresses for imported functions.",11,null],[12,"host_function_env_initializers","","Initializers for host function environments. This is …",11,null],[12,"tables","","Resolved addresses for imported tables.",11,null],[12,"memories","","Resolved addresses for imported memories.",11,null],[12,"globals","","Resolved addresses for imported globals.",11,null],[11,"new","","Construct a new <code>Imports</code> instance.",11,[[["vmglobalimport",3],["tableindex",3],["functionindex",3],["importfunctionenv",4],["primarymap",3],["primarymap",3],["vmfunctionimport",3],["memoryindex",3],["vmtableimport",3],["globalindex",3],["primarymap",3],["primarymap",3],["vmmemoryimport",3],["primarymap",3]]]],[11,"none","","Construct a new <code>Imports</code> instance with no imports.",11,[[]]],[11,"get_imported_function_envs","","Get the <code>WasmerEnv::init_with_instance</code> function pointers …",11,[[],[["importfunctionenv",4],["boxedslice",3],["functionindex",3]]]],[0,"instance","wasmer_vm","An <code>Instance</code> contains all the runtime state used by …",null,null],[0,"allocator","wasmer_vm::instance","",null,null],[3,"InstanceAllocator","wasmer_vm::instance::allocator","This is an intermediate type that manages the raw …",null,null],[12,"instance_ptr","","The buffer that will contain the [<code>Instance</code>] and dynamic …",12,null],[12,"instance_layout","","The layout of the <code>instance_ptr</code> buffer.",12,null],[12,"offsets","","Information about the offsets into the <code>instance_ptr</code> …",12,null],[12,"consumed","","Whether or not this type has transferred ownership of the …",12,null],[11,"new","","Allocates instance data for use with <code>InstanceHandle::new</code>.",12,[[["moduleinfo",3]]]],[11,"instance_layout","","Calculate the appropriate layout for the [<code>Instance</code>].",12,[[["vmoffsets",3]],["layout",3]]],[11,"memory_definition_locations","","Get the locations of where the local [<code>VMMemoryDefinition</code>]…",12,[[],[["vec",3],["nonnull",3]]]],[11,"table_definition_locations","","Get the locations of where the [<code>VMTableDefinition</code>]s …",12,[[],[["nonnull",3],["vec",3]]]],[11,"write_instance","","Finish preparing by writing the [<code>Instance</code>] into memory, …",12,[[["instance",3]],["instanceref",3]]],[11,"offsets","","Get the [<code>VMOffsets</code>] for the allocated buffer.",12,[[],["vmoffsets",3]]],[0,"ref","wasmer_vm::instance","",null,null],[3,"InstanceRef","wasmer_vm::instance::ref","An <code>InstanceRef</code> is responsible to properly deallocate, and …",null,null],[12,"strong","","Number of <code>Self</code> in the nature. It increases when <code>Self</code> is …",13,null],[12,"instance_layout","","The layout of <code>Instance</code> (which can vary).",13,null],[12,"instance","","The <code>Instance</code> itself. It must be the last field of …",13,null],[11,"new","","Create a new <code>InstanceRef</code>. It allocates nothing. It fills …",13,[[["instance",3],["nonnull",3],["layout",3]]]],[18,"MAX_REFCOUNT","","A soft limit on the amount of references that may be made …",13,null],[11,"deallocate_instance","","Deallocate <code>Instance</code>.",13,[[]]],[11,"strong_count","","Get the number of strong references pointing to this …",13,[[],["usize",15]]],[11,"as_ref","","Get a reference to the <code>Instance</code>.",13,[[],["instance",3]]],[11,"as_mut","","",13,[[],["instance",3]]],[6,"ImportInitializerFuncPtr","wasmer_vm::instance","The function pointer to call with data and an [<code>Instance</code>] …",null,null],[3,"Instance","","A WebAssembly instance.",null,null],[12,"module","","The <code>ModuleInfo</code> this <code>Instance</code> was instantiated from.",14,null],[12,"offsets","","Offsets in the <code>vmctx</code> region.",14,null],[12,"memories","","WebAssembly linear memory data.",14,null],[12,"tables","","WebAssembly table data.",14,null],[12,"globals","","WebAssembly global data.",14,null],[12,"functions","","Pointers to functions in executable memory.",14,null],[12,"function_call_trampolines","","Pointers to function call trampolines in executable …",14,null],[12,"passive_elements","","Passive elements in this instantiation. As <code>elem.drop</code>s …",14,null],[12,"passive_data","","Passive data segments from our module. As <code>data.drop</code>s …",14,null],[12,"funcrefs","","mapping of function indices to their func ref backing …",14,null],[12,"host_state","","Hosts can store arbitrary per-instance information here.",14,null],[12,"signal_handler","","Handler run when <code>SIGBUS</code>, <code>SIGFPE</code>, <code>SIGILL</code>, or <code>SIGSEGV</code> are …",14,null],[12,"imported_function_envs","","Functions to operate on host environments in the imports …",14,null],[12,"vmctx","","Additional context used by compiled WebAssembly code. This…",14,null],[4,"ImportFunctionEnv","","A collection of data about host envs used by imported …",null,null],[13,"NoEnv","","The <code>vmctx</code> pointer does not refer to a host env, there is …",15,null],[13,"Env","","We\'re dealing with a user-defined host env.",15,null],[12,"env","wasmer_vm::instance::ImportFunctionEnv","The function environment. This is not always the …",16,null],[12,"clone","","A clone function for duplicating the env.",16,null],[12,"initializer","","This field is not always present. When it is present, it …",16,null],[12,"destructor","","The destructor to clean up the type in <code>env</code>.",16,null],[11,"initializer","wasmer_vm::instance","Get the <code>initializer</code> function pointer if it exists.",15,[[],[["option",4],["importinitializerfuncptr",6]]]],[11,"vmctx_plus_offset","","Helper function to access various locations offset from …",14,[[["u32",15]]]],[11,"module","","",14,[[],["arc",3]]],[11,"module_ref","","",14,[[],["moduleinfo",3]]],[11,"offsets","","Offsets in the <code>vmctx</code> region.",14,[[],["vmoffsets",3]]],[11,"signature_ids_ptr","","Return a pointer to the <code>VMSharedSignatureIndex</code>s.",14,[[]]],[11,"imported_function","","Return the indexed <code>VMFunctionImport</code>.",14,[[["functionindex",3]],["vmfunctionimport",3]]],[11,"imported_function_env_initializer","","Get the import initializer func at the given index if it …",14,[[["functionindex",3]],[["option",4],["importinitializerfuncptr",6]]]],[11,"imported_functions_ptr","","Return a pointer to the <code>VMFunctionImport</code>s.",14,[[]]],[11,"imported_table","","Return the index <code>VMTableImport</code>.",14,[[["tableindex",3]],["vmtableimport",3]]],[11,"imported_tables_ptr","","Return a pointer to the <code>VMTableImports</code>s.",14,[[]]],[11,"imported_memory","","Return the indexed <code>VMMemoryImport</code>.",14,[[["memoryindex",3]],["vmmemoryimport",3]]],[11,"imported_memories_ptr","","Return a pointer to the <code>VMMemoryImport</code>s.",14,[[]]],[11,"imported_global","","Return the indexed <code>VMGlobalImport</code>.",14,[[["globalindex",3]],["vmglobalimport",3]]],[11,"imported_globals_ptr","","Return a pointer to the <code>VMGlobalImport</code>s.",14,[[]]],[11,"table","","Return the indexed <code>VMTableDefinition</code>.",14,[[["localtableindex",3]],["vmtabledefinition",3]]],[11,"set_table","","Updates the value for a defined table to <code>VMTableDefinition</code>…",14,[[["localtableindex",3],["vmtabledefinition",3]]]],[11,"table_ptr","","Return the indexed <code>VMTableDefinition</code>.",14,[[["localtableindex",3]],[["vmtabledefinition",3],["nonnull",3]]]],[11,"tables_ptr","","Return a pointer to the <code>VMTableDefinition</code>s.",14,[[]]],[11,"get_memory","","Get a locally defined or imported memory.",14,[[["memoryindex",3]],["vmmemorydefinition",3]]],[11,"memory","","Return the indexed <code>VMMemoryDefinition</code>.",14,[[["localmemoryindex",3]],["vmmemorydefinition",3]]],[11,"set_memory","","Set the indexed memory to <code>VMMemoryDefinition</code>.",14,[[["vmmemorydefinition",3],["localmemoryindex",3]]]],[11,"memory_ptr","","Return the indexed <code>VMMemoryDefinition</code>.",14,[[["localmemoryindex",3]],[["vmmemorydefinition",3],["nonnull",3]]]],[11,"memories_ptr","","Return a pointer to the <code>VMMemoryDefinition</code>s.",14,[[]]],[11,"global","","Return the indexed <code>VMGlobalDefinition</code>.",14,[[["localglobalindex",3]],["vmglobaldefinition",3]]],[11,"set_global","","Set the indexed global to <code>VMGlobalDefinition</code>.",14,[[["localglobalindex",3],["vmglobaldefinition",3]]]],[11,"global_ptr","","Return the indexed <code>VMGlobalDefinition</code>.",14,[[["localglobalindex",3]],[["nonnull",3],["vmglobaldefinition",3]]]],[11,"globals_ptr","","Return a pointer to the <code>VMGlobalDefinition</code>s.",14,[[]]],[11,"builtin_functions_ptr","","Return a pointer to the <code>VMBuiltinFunctionsArray</code>.",14,[[]]],[11,"vmctx","","Return a reference to the vmctx used by compiled wasm …",14,[[],["vmcontext",3]]],[11,"vmctx_ptr","","Return a raw pointer to the vmctx used by compiled wasm …",14,[[]]],[11,"host_state","","Return a reference to the custom state attached to this …",14,[[],["any",8]]],[11,"invoke_start_function","","Invoke the WebAssembly start function of the instance, if …",14,[[],[["result",4],["trap",4]]]],[11,"vmctx_offset","","Return the offset from the vmctx pointer to its …",14,[[],["isize",15]]],[11,"table_index","","Return the table index for the given <code>VMTableDefinition</code>.",14,[[["vmtabledefinition",3]],["localtableindex",3]]],[11,"memory_index","","Return the memory index for the given <code>VMMemoryDefinition</code>.",14,[[["vmmemorydefinition",3]],["localmemoryindex",3]]],[11,"memory_grow","","Grow memory by the specified amount of pages.",14,[[["localmemoryindex",3]],[["result",4],["pages",3],["memoryerror",4]]]],[11,"imported_memory_grow","","Grow imported memory by the specified amount of pages.",14,[[["memoryindex",3]],[["result",4],["pages",3],["memoryerror",4]]]],[11,"memory_size","","Returns the number of allocated wasm pages.",14,[[["localmemoryindex",3]],["pages",3]]],[11,"imported_memory_size","","Returns the number of allocated wasm pages in an imported …",14,[[["memoryindex",3]],["pages",3]]],[11,"table_size","","Returns the number of elements in a given table.",14,[[["localtableindex",3]],["u32",15]]],[11,"imported_table_size","","Returns the number of elements in a given imported table.",14,[[["tableindex",3]],["u32",15]]],[11,"table_grow","","Grow table by the specified amount of elements.",14,[[["localtableindex",3],["u32",15],["tableelement",4]],[["u32",15],["option",4]]]],[11,"imported_table_grow","","Grow table by the specified amount of elements.",14,[[["u32",15],["tableindex",3],["tableelement",4]],[["u32",15],["option",4]]]],[11,"table_get","","Get table element by index.",14,[[["localtableindex",3],["u32",15]],[["tableelement",4],["option",4]]]],[11,"imported_table_get","","Returns the element at the given index.",14,[[["u32",15],["tableindex",3]],[["tableelement",4],["option",4]]]],[11,"table_set","","Set table element by index.",14,[[["localtableindex",3],["u32",15],["tableelement",4]],[["result",4],["trap",4]]]],[11,"imported_table_set","","Set table element by index for an imported table.",14,[[["u32",15],["tableindex",3],["tableelement",4]],[["result",4],["trap",4]]]],[11,"func_ref","","",14,[[["functionindex",3]],[["vmfuncref",3],["option",4]]]],[11,"get_vm_funcref","","Get a <code>VMFuncRef</code> for the given <code>FunctionIndex</code>.",14,[[["functionindex",3]],["vmfuncref",3]]],[11,"table_init","","The <code>table.init</code> operation: initializes a portion of a …",14,[[["u32",15],["tableindex",3],["elemindex",3]],[["result",4],["trap",4]]]],[11,"table_fill","","The <code>table.fill</code> operation: fills a portion of a table with …",14,[[["u32",15],["tableindex",3],["tableelement",4]],[["result",4],["trap",4]]]],[11,"elem_drop","","Drop an element.",14,[[["elemindex",3]]]],[11,"local_memory_copy","","Do a <code>memory.copy</code> for a locally defined memory.",14,[[["u32",15],["localmemoryindex",3]],[["result",4],["trap",4]]]],[11,"imported_memory_copy","","Perform a <code>memory.copy</code> on an imported memory.",14,[[["u32",15],["memoryindex",3]],[["result",4],["trap",4]]]],[11,"local_memory_fill","","Perform the <code>memory.fill</code> operation on a locally defined …",14,[[["u32",15],["localmemoryindex",3]],[["result",4],["trap",4]]]],[11,"imported_memory_fill","","Perform the <code>memory.fill</code> operation on an imported memory.",14,[[["u32",15],["memoryindex",3]],[["result",4],["trap",4]]]],[11,"memory_init","","Performs the <code>memory.init</code> operation.",14,[[["u32",15],["memoryindex",3],["dataindex",3]],[["result",4],["trap",4]]]],[11,"data_drop","","Drop the given data segment, truncating its length to …",14,[[["dataindex",3]]]],[11,"get_table","","Get a table by index regardless of whether it is …",14,[[["tableindex",3]],["table",8]]],[11,"get_local_table","","Get a locally-defined table.",14,[[["localtableindex",3]],["table",8]]],[11,"get_foreign_table","","Get an imported, foreign table.",14,[[["tableindex",3]],["table",8]]],[3,"InstanceHandle","","A handle holding an <code>InstanceRef</code>, which holds an <code>Instance</code> …",null,null],[12,"instance","","The [<code>InstanceRef</code>]. See its documentation to learn more.",17,null],[11,"new","","Create a new <code>InstanceHandle</code> pointing at a new [<code>InstanceRef</code>…",17,[[["arc",3],["any",8],["box",3],["functionbodyptr",3],["boxedslice",3],["funcdataregistry",3],["boxedslice",3],["functionindex",3],["arc",3],["arc",3],["boxedslice",3],["signatureindex",3],["localglobalindex",3],["instanceallocator",3],["vmtrampoline",6],["boxedslice",3],["imports",3],["importfunctionenv",4],["moduleinfo",3],["boxedslice",3],["localtableindex",3],["vmsharedsignatureindex",3],["arc",3],["boxedslice",3],["localfunctionindex",3],["boxedslice",3],["localmemoryindex",3]],[["result",4],["trap",4]]]],[11,"instance","","Return a reference to the contained <code>Instance</code>.",17,[[],["instanceref",3]]],[11,"finish_instantiation","","Finishes the instantiation process started by …",17,[[],[["result",4],["trap",4]]]],[11,"vmctx","","Return a reference to the vmctx used by compiled wasm …",17,[[],["vmcontext",3]]],[11,"vmctx_ptr","","Return a raw pointer to the vmctx used by compiled wasm …",17,[[]]],[11,"vmoffsets","","Return a reference to the <code>VMOffsets</code> to get offsets in the …",17,[[],["vmoffsets",3]]],[11,"module","","Return a reference-counting pointer to a module.",17,[[],["arc",3]]],[11,"module_ref","","Return a reference to a module.",17,[[],["moduleinfo",3]]],[11,"lookup","","Lookup an export with the given name.",17,[[["str",15]],[["option",4],["vmextern",4]]]],[11,"lookup_by_declaration","","Lookup an export with the given export declaration.",17,[[["exportindex",4]],["vmextern",4]]],[11,"exports","","Return an iterator over the exports of this instance.",17,[[],[["string",3],["exportindex",4],["iter",3]]]],[11,"host_state","","Return a reference to the custom state attached to this …",17,[[],["any",8]]],[11,"memory_index","","Return the memory index for the given <code>VMMemoryDefinition</code> …",17,[[["vmmemorydefinition",3]],["localmemoryindex",3]]],[11,"memory_grow","","Grow memory in this instance by the specified amount of …",17,[[["localmemoryindex",3]],[["result",4],["pages",3],["memoryerror",4]]]],[11,"table_index","","Return the table index for the given <code>VMTableDefinition</code> in …",17,[[["vmtabledefinition",3]],["localtableindex",3]]],[11,"table_grow","","Grow table in this instance by the specified amount of …",17,[[["localtableindex",3],["u32",15],["tableelement",4]],[["u32",15],["option",4]]]],[11,"table_get","","Get table element reference.",17,[[["localtableindex",3],["u32",15]],[["tableelement",4],["option",4]]]],[11,"table_set","","Set table element reference.",17,[[["localtableindex",3],["u32",15],["tableelement",4]],[["result",4],["trap",4]]]],[11,"get_local_table","","Get a table defined locally within this module.",17,[[["localtableindex",3]],["table",8]]],[11,"initialize_host_envs","","Initializes the host environments.",17,[[],[["result",4],["sized",8]]]],[6,"SignalHandler","","",null,null],[11,"set_signal_handler","","Set a custom signal handler",17,[[]]],[5,"check_table_init_bounds","","",null,[[["instance",3]],[["result",4],["trap",4]]]],[5,"get_memory_init_start","","Compute the offset for a memory data initializer.",null,[[["instance",3],["datainitializer",3]],["usize",15]]],[5,"get_memory_slice","","Return a byte-slice view of a memory\'s data.",null,[[["instance",3],["datainitializer",3]]]],[5,"check_memory_init_bounds","","",null,[[["instance",3]],[["result",4],["trap",4]]]],[5,"get_table_init_start","","Compute the offset for a table element initializer.",null,[[["tableinitializer",3],["instance",3]],["usize",15]]],[5,"initialize_tables","","Initialize the table memory from the provided …",null,[[["instance",3]],[["result",4],["trap",4]]]],[5,"initialize_passive_elements","","Initialize the <code>Instance::passive_elements</code> map by …",null,[[["instance",3]]]],[5,"initialize_memories","","Initialize the table memory from the provided …",null,[[["instance",3]],[["result",4],["trap",4]]]],[5,"initialize_globals","","",null,[[["instance",3]]]],[5,"build_funcrefs","","Eagerly builds all the <code>VMFuncRef</code>s for imported and local …",null,[[["moduleinfo",3],["imports",3],["boxedslice",3],["funcdataregistry",3],["boxedslice",3]],[["functionindex",3],["vmfuncref",3],["boxedslice",3]]]],[0,"memory","wasmer_vm","Memory management for linear memories.",null,null],[4,"MemoryError","wasmer_vm::memory","Error type describing things that can go wrong when …",null,null],[13,"Region","","Low level error with mmap.",18,null],[13,"CouldNotGrow","","The operation would cause the size of the memory to …",18,null],[12,"current","wasmer_vm::memory::MemoryError","The current size in pages.",19,null],[12,"attempted_delta","","The attempted amount to grow by in pages.",19,null],[13,"InvalidMemory","wasmer_vm::memory","The operation would cause the size of the memory size …",18,null],[12,"reason","wasmer_vm::memory::MemoryError","The reason why the provided memory is invalid.",20,null],[13,"MinimumMemoryTooLarge","wasmer_vm::memory","Caller asked for more minimum memory than we can give …",18,null],[12,"min_requested","wasmer_vm::memory::MemoryError","The number of pages requested as the minimum amount of …",21,null],[12,"max_allowed","","The maximum amount of memory we can allocate.",21,null],[13,"MaximumMemoryTooLarge","wasmer_vm::memory","Caller asked for a maximum memory greater than we can …",18,null],[12,"max_requested","wasmer_vm::memory::MemoryError","The number of pages requested as the maximum amount of …",22,null],[12,"max_allowed","","The number of pages requested as the maximum amount of …",22,null],[13,"Generic","wasmer_vm::memory","A user defined error value, used for error cases not …",18,null],[4,"MemoryStyle","","Implementation styles for WebAssembly linear memory.",null,null],[13,"Dynamic","","The actual memory can be resized and moved.",23,null],[12,"offset_guard_size","wasmer_vm::memory::MemoryStyle","Our chosen offset-guard size.",24,null],[13,"Static","wasmer_vm::memory","Address space is allocated up front.",23,null],[12,"bound","wasmer_vm::memory::MemoryStyle","The number of mapped and unmapped pages.",25,null],[12,"offset_guard_size","","Our chosen offset-guard size.",25,null],[4,"ArchivedMemoryStyle","wasmer_vm::memory","",null,null],[13,"Dynamic","","",26,null],[12,"offset_guard_size","wasmer_vm::memory::ArchivedMemoryStyle","",27,null],[13,"Static","wasmer_vm::memory","",26,null],[12,"bound","wasmer_vm::memory::ArchivedMemoryStyle","",28,null],[12,"offset_guard_size","","",28,null],[4,"MemoryStyleResolver","wasmer_vm::memory","",null,null],[13,"Dynamic","","",29,null],[12,"offset_guard_size","wasmer_vm::memory::MemoryStyleResolver","",30,null],[13,"Static","wasmer_vm::memory","",29,null],[12,"bound","wasmer_vm::memory::MemoryStyleResolver","",31,null],[12,"offset_guard_size","","",31,null],[11,"offset_guard_size","wasmer_vm::memory","Returns the offset-guard size",23,[[],["u64",15]]],[8,"Memory","","Trait for implementing Wasm Memory used by Wasmer.",null,null],[10,"ty","","Returns the memory type for this memory.",32,[[],["memorytype",3]]],[10,"style","","Returns the memory style for this memory.",32,[[],["memorystyle",4]]],[10,"size","","Returns the number of allocated wasm pages.",32,[[],["pages",3]]],[10,"grow","","Grow memory by the specified amount of wasm pages.",32,[[["pages",3]],[["result",4],["pages",3],["memoryerror",4]]]],[10,"vmmemory","","Return a [<code>VMMemoryDefinition</code>] for exposing the memory to …",32,[[],[["vmmemorydefinition",3],["nonnull",3]]]],[3,"LinearMemory","","A linear memory instance.",null,null],[12,"mmap","","",33,null],[12,"maximum","","",33,null],[12,"memory","","The WebAssembly linear memory description.",33,null],[12,"style","","Our chosen implementation style.",33,null],[12,"offset_guard_size","","",33,null],[12,"vm_memory_definition","","The owned memory definition used by the generated code",33,null],[12,"needs_signal_handlers","","",33,null],[4,"VMMemoryDefinitionOwnership","","A type to help manage who is responsible for the backing …",null,null],[13,"VMOwned","","The <code>VMMemoryDefinition</code> is owned by the <code>Instance</code> and we …",34,null],[13,"HostOwned","","The <code>VMMemoryDefinition</code> is owned by the host and we should …",34,null],[3,"WasmMmap","","",null,null],[12,"alloc","","",35,null],[12,"size","","",35,null],[11,"new","","Create a new linear memory instance with specified …",33,[[["memorytype",3],["memorystyle",4]],[["result",4],["memoryerror",4]]]],[11,"from_definition","","Create a new linear memory instance with specified …",33,[[["nonnull",3],["vmmemorydefinition",3],["memorytype",3],["memorystyle",4]],[["result",4],["memoryerror",4]]]],[11,"new_internal","","Build a <code>LinearMemory</code> with either self-owned or VM owned …",33,[[["option",4],["nonnull",3],["memorytype",3],["memorystyle",4]],[["result",4],["memoryerror",4]]]],[11,"get_vm_memory_definition","","Get the <code>VMMemoryDefinition</code>.",33,[[],[["vmmemorydefinition",3],["nonnull",3]]]],[0,"mmap","wasmer_vm","Low-level abstraction for allocating and managing …",null,null],[5,"round_up_to_page_size","wasmer_vm::mmap","Round <code>size</code> up to the nearest multiple of <code>page_size</code>.",null,[[["usize",15]],["usize",15]]],[3,"Mmap","","A simple struct consisting of a page-aligned pointer to …",null,null],[12,"ptr","","",36,null],[12,"len","","",36,null],[11,"new","","Construct a new empty instance of <code>Mmap</code>.",36,[[]]],[11,"with_at_least","","Create a new <code>Mmap</code> pointing to at least <code>size</code> bytes of …",36,[[["usize",15]],[["string",3],["result",4]]]],[11,"accessible_reserved","","Create a new <code>Mmap</code> pointing to <code>accessible_size</code> bytes of …",36,[[["usize",15]],[["string",3],["result",4]]]],[11,"make_accessible","","Make the memory starting at <code>start</code> and extending for <code>len</code> …",36,[[["usize",15]],[["result",4],["string",3]]]],[11,"as_slice","","Return the allocated memory as a slice of u8.",36,[[]]],[11,"as_mut_slice","","Return the allocated memory as a mutable slice of u8.",36,[[]]],[11,"as_ptr","","Return the allocated memory as a pointer to u8.",36,[[]]],[11,"as_mut_ptr","","Return the allocated memory as a mutable pointer to u8.",36,[[]]],[11,"len","","Return the length of the allocated memory.",36,[[],["usize",15]]],[11,"is_empty","","Return whether any memory has been allocated.",36,[[],["bool",15]]],[5,"_assert","","",null,[[]]],[0,"module","wasmer_vm","Data structure for representing WebAssembly modules in a …",null,null],[3,"ModuleId","wasmer_vm::module","",null,null],[12,"id","","",37,null],[3,"ArchivedModuleId","","",null,null],[12,"id","","",38,null],[3,"ModuleIdResolver","","",null,null],[12,"id","","",39,null],[11,"id","","",37,[[],["string",3]]],[3,"ModuleInfo","","A translated WebAssembly module, excluding the function …",null,null],[12,"id","","A unique identifier (within this process) for this module.",40,null],[12,"name","","The name of this wasm module, often found in the wasm …",40,null],[12,"imports","","Imported entities with the (module, field, …",40,null],[12,"exports","","Exported entities.",40,null],[12,"start_function","","The module \\\"start\\\" function, if present.",40,null],[12,"table_initializers","","WebAssembly table initializers.",40,null],[12,"passive_elements","","WebAssembly passive elements.",40,null],[12,"passive_data","","WebAssembly passive data segments.",40,null],[12,"global_initializers","","WebAssembly global initializers.",40,null],[12,"function_names","","WebAssembly function names.",40,null],[12,"signatures","","WebAssembly function signatures.",40,null],[12,"functions","","WebAssembly functions (imported and local).",40,null],[12,"tables","","WebAssembly tables (imported and local).",40,null],[12,"memories","","WebAssembly linear memories (imported and local).",40,null],[12,"globals","","WebAssembly global variables (imported and local).",40,null],[12,"custom_sections","","Custom sections in the module.",40,null],[12,"custom_sections_data","","The data for each CustomSection in the module.",40,null],[12,"num_imported_functions","","Number of imported functions in the module.",40,null],[12,"num_imported_tables","","Number of imported tables in the module.",40,null],[12,"num_imported_memories","","Number of imported memories in the module.",40,null],[12,"num_imported_globals","","Number of imported globals in the module.",40,null],[3,"ArchivableModuleInfo","","Mirror version of ModuleInfo that can derive rkyv traits",null,null],[12,"name","","",41,null],[12,"imports","","",41,null],[12,"exports","","",41,null],[12,"start_function","","",41,null],[12,"table_initializers","","",41,null],[12,"passive_elements","","",41,null],[12,"passive_data","","",41,null],[12,"global_initializers","","",41,null],[12,"function_names","","",41,null],[12,"signatures","","",41,null],[12,"functions","","",41,null],[12,"tables","","",41,null],[12,"memories","","",41,null],[12,"globals","","",41,null],[12,"custom_sections","","",41,null],[12,"custom_sections_data","","",41,null],[12,"num_imported_functions","","",41,null],[12,"num_imported_tables","","",41,null],[12,"num_imported_memories","","",41,null],[12,"num_imported_globals","","",41,null],[3,"ArchivedArchivableModuleInfo","","",null,null],[12,"name","","",42,null],[12,"imports","","",42,null],[12,"exports","","",42,null],[12,"start_function","","",42,null],[12,"table_initializers","","",42,null],[12,"passive_elements","","",42,null],[12,"passive_data","","",42,null],[12,"global_initializers","","",42,null],[12,"function_names","","",42,null],[12,"signatures","","",42,null],[12,"functions","","",42,null],[12,"tables","","",42,null],[12,"memories","","",42,null],[12,"globals","","",42,null],[12,"custom_sections","","",42,null],[12,"custom_sections_data","","",42,null],[12,"num_imported_functions","","",42,null],[12,"num_imported_tables","","",42,null],[12,"num_imported_memories","","",42,null],[12,"num_imported_globals","","",42,null],[3,"ArchivableModuleInfoResolver","","",null,null],[12,"name","","",43,null],[12,"imports","","",43,null],[12,"exports","","",43,null],[12,"start_function","","",43,null],[12,"table_initializers","","",43,null],[12,"passive_elements","","",43,null],[12,"passive_data","","",43,null],[12,"global_initializers","","",43,null],[12,"function_names","","",43,null],[12,"signatures","","",43,null],[12,"functions","","",43,null],[12,"tables","","",43,null],[12,"memories","","",43,null],[12,"globals","","",43,null],[12,"custom_sections","","",43,null],[12,"custom_sections_data","","",43,null],[12,"num_imported_functions","","",43,null],[12,"num_imported_tables","","",43,null],[12,"num_imported_memories","","",43,null],[12,"num_imported_globals","","",43,null],[11,"new","","Allocates the module data structures.",40,[[]]],[11,"get_passive_element","","Get the given passive element, if it exists.",40,[[["elemindex",3]],["option",4]]],[11,"exported_signatures","","Get the exported signatures of the module",40,[[],[["vec",3],["functiontype",3]]]],[11,"exports","","Get the export types of the module",40,[[],["exportsiterator",3]]],[11,"imports","","Get the export types of the module",40,[[],["importsiterator",3]]],[11,"custom_sections","","Get the custom sections of the module given a <code>name</code>.",40,[[["str",15]]]],[11,"func_index","","Convert a <code>LocalFunctionIndex</code> into a <code>FunctionIndex</code>.",40,[[["localfunctionindex",3]],["functionindex",3]]],[11,"local_func_index","","Convert a <code>FunctionIndex</code> into a <code>LocalFunctionIndex</code>. …",40,[[["functionindex",3]],[["localfunctionindex",3],["option",4]]]],[11,"is_imported_function","","Test whether the given function index is for an imported …",40,[[["functionindex",3]],["bool",15]]],[11,"table_index","","Convert a <code>LocalTableIndex</code> into a <code>TableIndex</code>.",40,[[["localtableindex",3]],["tableindex",3]]],[11,"local_table_index","","Convert a <code>TableIndex</code> into a <code>LocalTableIndex</code>. Returns None …",40,[[["tableindex",3]],[["localtableindex",3],["option",4]]]],[11,"is_imported_table","","Test whether the given table index is for an imported …",40,[[["tableindex",3]],["bool",15]]],[11,"memory_index","","Convert a <code>LocalMemoryIndex</code> into a <code>MemoryIndex</code>.",40,[[["localmemoryindex",3]],["memoryindex",3]]],[11,"local_memory_index","","Convert a <code>MemoryIndex</code> into a <code>LocalMemoryIndex</code>. Returns …",40,[[["memoryindex",3]],[["option",4],["localmemoryindex",3]]]],[11,"is_imported_memory","","Test whether the given memory index is for an imported …",40,[[["memoryindex",3]],["bool",15]]],[11,"global_index","","Convert a <code>LocalGlobalIndex</code> into a <code>GlobalIndex</code>.",40,[[["localglobalindex",3]],["globalindex",3]]],[11,"local_global_index","","Convert a <code>GlobalIndex</code> into a <code>LocalGlobalIndex</code>. Returns …",40,[[["globalindex",3]],[["localglobalindex",3],["option",4]]]],[11,"is_imported_global","","Test whether the given global index is for an imported …",40,[[["globalindex",3]],["bool",15]]],[11,"name","","Get the Module name",40,[[],["string",3]]],[11,"imported_function_types","","Get the imported function types of the module.",40,[[]]],[3,"ExportsIterator","","This iterator allows us to iterate over the exports and …",null,null],[12,"iter","","",44,null],[12,"size","","",44,null],[11,"functions","","Get only the functions",44,[[]]],[11,"memories","","Get only the memories",44,[[]]],[11,"tables","","Get only the tables",44,[[]]],[11,"globals","","Get only the globals",44,[[]]],[3,"ImportsIterator","","This iterator allows us to iterate over the imports and …",null,null],[12,"iter","","",45,null],[12,"size","","",45,null],[11,"functions","","Get only the functions",45,[[]]],[11,"memories","","Get only the memories",45,[[]]],[11,"tables","","Get only the tables",45,[[]]],[11,"globals","","Get only the globals",45,[[]]],[0,"probestack","wasmer_vm","This section defines the <code>PROBESTACK</code> intrinsic which is …",null,null],[5,"__rust_probestack","wasmer_vm::probestack","",null,null],[7,"PROBESTACK","","The probestack based on the Rust probestack",null,null],[0,"sig_registry","wasmer_vm","Implement a registry of function signatures, for fast …",null,null],[3,"SignatureRegistry","wasmer_vm::sig_registry","WebAssembly requires that the caller and callee …",null,null],[12,"inner","","",46,null],[3,"Inner","","",null,null],[12,"signature2index","","",47,null],[12,"index2signature","","",47,null],[11,"new","","Create a new <code>SignatureRegistry</code>.",46,[[]]],[11,"register","","Register a signature and return its unique index.",46,[[["functiontype",3]],["vmsharedsignatureindex",3]]],[11,"lookup","","Looks up a shared signature index within this registry.",46,[[["vmsharedsignatureindex",3]],[["functiontype",3],["option",4]]]],[0,"table","wasmer_vm","Memory management for tables.",null,null],[4,"TableStyle","wasmer_vm::table","Implementation styles for WebAssembly tables.",null,null],[13,"CallerChecksSignature","","Signatures are stored in the table and checked in the …",48,null],[4,"ArchivedTableStyle","","",null,null],[13,"CallerChecksSignature","","",49,null],[4,"TableStyleResolver","","",null,null],[13,"CallerChecksSignature","","",50,null],[8,"Table","","Trait for implementing the interface of a Wasm table.",null,null],[10,"style","","Returns the style for this Table.",51,[[],["tablestyle",4]]],[10,"ty","","Returns the type for this Table.",51,[[],["tabletype",3]]],[10,"size","","Returns the number of allocated elements.",51,[[],["u32",15]]],[10,"grow","","Grow table by the specified amount of elements.",51,[[["u32",15],["tableelement",4]],[["u32",15],["option",4]]]],[10,"get","","Get reference to the specified element.",51,[[["u32",15]],[["tableelement",4],["option",4]]]],[10,"set","","Set reference to the specified element.",51,[[["u32",15],["tableelement",4]],[["result",4],["trap",4]]]],[10,"vmtable","","Return a <code>VMTableDefinition</code> for exposing the table to …",51,[[],[["vmtabledefinition",3],["nonnull",3]]]],[11,"copy","","Copy <code>len</code> elements from <code>src_table[src_index..]</code> into …",51,[[["u32",15],["table",8]],[["result",4],["trap",4]]]],[4,"TableElement","","A reference stored in a table. Can be either an externref …",null,null],[13,"ExternRef","","Opaque pointer to arbitrary host data.",52,null],[13,"FuncRef","","Pointer to function: contains enough information to call …",52,null],[19,"RawTableElement","","",null,null],[12,"extern_ref","","",53,null],[12,"func_ref","","",53,null],[3,"LinearTable","","A table instance.",null,null],[12,"vec","","",54,null],[12,"maximum","","",54,null],[12,"table","","The WebAssembly table description.",54,null],[12,"style","","Our chosen implementation style.",54,null],[12,"vm_table_definition","","",54,null],[4,"VMTableDefinitionOwnership","","A type to help manage who is responsible for the backing …",null,null],[13,"VMOwned","","The <code>VMTableDefinition</code> is owned by the <code>Instance</code> and we …",55,null],[13,"HostOwned","","The <code>VMTableDefinition</code> is owned by the host and we should …",55,null],[11,"new","","Create a new linear table instance with specified minimum …",54,[[["tabletype",3],["tablestyle",4]],[["string",3],["result",4]]]],[11,"from_definition","","Create a new linear table instance with specified minimum …",54,[[["tabletype",3],["tablestyle",4],["vmtabledefinition",3],["nonnull",3]],[["string",3],["result",4]]]],[11,"new_inner","","Create a new <code>LinearTable</code> with either self-owned or VM …",54,[[["tabletype",3],["tablestyle",4],["option",4],["nonnull",3]],[["string",3],["result",4]]]],[11,"get_vm_table_definition","","Get the <code>VMTableDefinition</code>.",54,[[],[["vmtabledefinition",3],["nonnull",3]]]],[0,"trap","wasmer_vm","This is the module that facilitates the usage of Traps in …",null,null],[0,"trapcode","wasmer_vm::trap","Trap codes describing the reason for a trap.",null,null],[4,"TrapCode","wasmer_vm::trap::trapcode","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",56,null],[13,"HeapSetterOutOfBounds","","Memory data doesn\'t fit the memory size.",56,null],[13,"HeapAccessOutOfBounds","","A <code>heap_addr</code> instruction detected an out-of-bounds error.",56,null],[13,"HeapMisaligned","","A <code>heap_addr</code> instruction was misaligned.",56,null],[13,"TableSetterOutOfBounds","","Table Elements doesn\'t fit the table size.",56,null],[13,"TableAccessOutOfBounds","","A <code>table_addr</code> instruction detected an out-of-bounds error.",56,null],[13,"OutOfBounds","","Other bounds checking error.",56,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",56,null],[13,"BadSignature","","Signature mismatch on indirect call.",56,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",56,null],[13,"IntegerDivisionByZero","","An integer division by zero.",56,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",56,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was …",56,null],[13,"Interrupt","","Execution has potentially run too long and may be …",56,null],[13,"UnalignedAtomic","","An atomic memory access was attempted with an unaligned …",56,null],[13,"VMOutOfMemory","","A trap indicating that the runtime was unable to allocate …",56,null],[4,"ArchivedTrapCode","","",null,null],[13,"StackOverflow","","",57,null],[13,"HeapSetterOutOfBounds","","",57,null],[13,"HeapAccessOutOfBounds","","",57,null],[13,"HeapMisaligned","","",57,null],[13,"TableSetterOutOfBounds","","",57,null],[13,"TableAccessOutOfBounds","","",57,null],[13,"OutOfBounds","","",57,null],[13,"IndirectCallToNull","","",57,null],[13,"BadSignature","","",57,null],[13,"IntegerOverflow","","",57,null],[13,"IntegerDivisionByZero","","",57,null],[13,"BadConversionToInteger","","",57,null],[13,"UnreachableCodeReached","","",57,null],[13,"Interrupt","","",57,null],[13,"UnalignedAtomic","","",57,null],[13,"VMOutOfMemory","","",57,null],[4,"TrapCodeResolver","","",null,null],[13,"StackOverflow","","",58,null],[13,"HeapSetterOutOfBounds","","",58,null],[13,"HeapAccessOutOfBounds","","",58,null],[13,"HeapMisaligned","","",58,null],[13,"TableSetterOutOfBounds","","",58,null],[13,"TableAccessOutOfBounds","","",58,null],[13,"OutOfBounds","","",58,null],[13,"IndirectCallToNull","","",58,null],[13,"BadSignature","","",58,null],[13,"IntegerOverflow","","",58,null],[13,"IntegerDivisionByZero","","",58,null],[13,"BadConversionToInteger","","",58,null],[13,"UnreachableCodeReached","","",58,null],[13,"Interrupt","","",58,null],[13,"UnalignedAtomic","","",58,null],[13,"VMOutOfMemory","","",58,null],[11,"message","","Gets the message for this trap code",56,[[],["str",15]]],[0,"traphandlers","wasmer_vm::trap","WebAssembly trap handling, which is built on top of the …",null,null],[5,"RegisterSetjmp","wasmer_vm::trap::traphandlers","",null,null],[5,"Unwind","","",null,null],[0,"tls","","",null,null],[17,"PTR","wasmer_vm::trap::traphandlers::tls","",null,null],[5,"set","","Configures thread local state such that for the duration …",null,[[["callthreadstate",3]]]],[5,"with","","Returns the last pointer configured with <code>set</code> above. …",null,[[]]],[7,"PREV_SIGSEGV","wasmer_vm::trap::traphandlers","",null,null],[7,"PREV_SIGBUS","","",null,null],[7,"PREV_SIGILL","","",null,null],[7,"PREV_SIGFPE","","",null,null],[5,"platform_init","","",null,[[]]],[5,"thread_stack","","",null,[[]]],[5,"trap_handler","","",null,[[["c_int",6]]]],[5,"get_pc","","",null,[[]]],[5,"init_traps","","This function performs the low-overhead signal handler …",null,[[]]],[5,"real_init","","",null,[[]]],[5,"raise_user_trap","","Raises a user-defined trap immediately.",null,[[["error",8],["box",3]]]],[5,"raise_lib_trap","","Raises a trap from inside library code immediately.",null,[[["trap",4]]]],[5,"resume_panic","","Carries a Rust panic across wasm code and resumes the …",null,[[["box",3],["any",8]]]],[5,"reset_guard_page","","",null,[[]]],[4,"Trap","","Stores trace message with backtrace.",null,null],[13,"User","","A user-raised trap through <code>raise_user_trap</code>.",59,null],[13,"Wasm","","A trap raised from machine code generated from Wasm",59,null],[12,"pc","wasmer_vm::trap::traphandlers::Trap","The program counter in generated code where this trap …",60,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",60,null],[12,"signal_trap","","Optional trapcode associated to the signal that caused …",60,null],[13,"Runtime","wasmer_vm::trap::traphandlers","A trap raised manually from the Wasmer VM",59,null],[12,"trap_code","wasmer_vm::trap::traphandlers::Trap","Code of the trap.",61,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",61,null],[11,"new_from_wasm","wasmer_vm::trap::traphandlers","Construct a new VM <code>Trap</code> with the given the program …",59,[[["usize",15],["backtrace",3],["trapcode",4],["option",4]]]],[11,"new_from_runtime","","Construct a new runtime <code>Trap</code> with the given trap code. …",59,[[["trapcode",4]]]],[11,"new_from_user","","Construct a new Out of Memory (OOM) <code>Trap</code>.",59,[[["error",8],["box",3]]]],[5,"wasmer_call_trampoline","","Call the wasm function pointed to by <code>callee</code>.",null,[[["vmfunctionenvironment",19],["vmtrampoline",6]],[["result",4],["trap",4]]]],[5,"catch_traps","","Catches any wasm traps that happen within the execution …",null,[[["vmfunctionenvironment",19]],[["result",4],["trap",4]]]],[5,"catch_traps_with_result","","Catches any wasm traps that happen within the execution …",null,[[["vmfunctionenvironment",19]],[["result",4],["trap",4]]]],[3,"CallThreadState","","Temporary state stored on the stack which is registered …",null,null],[12,"unwind","","",62,null],[12,"jmp_buf","","",62,null],[12,"reset_guard_page","","",62,null],[12,"prev","","",62,null],[12,"vmctx","","",62,null],[12,"handling_trap","","",62,null],[4,"UnwindReason","","",null,null],[13,"None","","",63,null],[13,"Panic","","",63,null],[13,"UserTrap","","",63,null],[13,"LibTrap","","",63,null],[13,"RuntimeTrap","","",63,null],[12,"backtrace","wasmer_vm::trap::traphandlers::UnwindReason","",64,null],[12,"pc","","",64,null],[12,"signal_trap","","",64,null],[11,"new","wasmer_vm::trap::traphandlers","",62,[[["vmfunctionenvironment",19]]]],[11,"with","","",62,[[],[["result",4],["trap",4]]]],[11,"any_instance","","",62,[[],["bool",15]]],[11,"unwind_with","","",62,[[["unwindreason",4]]]],[11,"handle_trap","","Trap handler using our thread-local state.",62,[[["bool",15],["trapcode",4],["option",4]]]],[5,"setup_unix_sigaltstack","","A module for registering a custom alternate signal stack …",null,[[],[["result",4],["trap",4]]]],[0,"vmcontext","wasmer_vm","This file declares <code>VMContext</code> and several related structs …",null,null],[19,"VMFunctionEnvironment","wasmer_vm::vmcontext","Union representing the first parameter passed when …",null,null],[12,"vmctx","","Wasm functions take a pointer to [<code>VMContext</code>].",65,null],[12,"host_env","","Host functions can have custom environments.",65,null],[11,"is_null","","Check whether the pointer stored is null or not.",65,[[],["bool",15]]],[3,"VMFunctionImport","","An imported function.",null,null],[12,"body","","A pointer to the imported function body.",66,null],[12,"environment","","A pointer to the <code>VMContext</code> that owns the function or host …",66,null],[3,"VMDynamicFunctionContext","","The <code>VMDynamicFunctionContext</code> is the context that dynamic …",null,null],[12,"address","","The address of the inner dynamic function.",67,null],[12,"ctx","","The context that the inner dynamic function will receive.",67,null],[3,"VMFunctionBody","","A placeholder byte-sized type which is just used to …",null,null],[12,"0","","",68,null],[4,"VMFunctionKind","","A function kind is a calling convention into and out of …",null,null],[13,"Static","","A static function has the native signature: …",69,null],[13,"Dynamic","","A dynamic function has the native signature: …",69,null],[3,"VMTableImport","","The fields compiled code needs to access to utilize a …",null,null],[12,"definition","","A pointer to the imported table description.",70,null],[12,"from","","A pointer to the <code>Table</code> that owns the table description.",70,null],[3,"VMMemoryImport","","The fields compiled code needs to access to utilize a …",null,null],[12,"definition","","A pointer to the imported memory description.",71,null],[12,"from","","A pointer to the <code>Memory</code> that owns the memory description.",71,null],[3,"VMGlobalImport","","The fields compiled code needs to access to utilize a …",null,null],[12,"definition","","A pointer to the imported global variable description.",72,null],[12,"from","","A pointer to the <code>Global</code> that owns the global description.",72,null],[3,"VMMemoryDefinition","","The fields compiled code needs to access to utilize a …",null,null],[12,"base","","The start address which is always valid, even if the …",73,null],[12,"current_length","","The current logical size of this linear memory in bytes.",73,null],[11,"memory_copy","","Do an unsynchronized, non-atomic <code>memory.copy</code> for the …",73,[[["u32",15]],[["result",4],["trap",4]]]],[11,"memory_fill","","Perform the <code>memory.fill</code> operation for the memory in an …",73,[[["u32",15]],[["result",4],["trap",4]]]],[3,"VMTableDefinition","","The fields compiled code needs to access to utilize a …",null,null],[12,"base","","Pointer to the table data.",74,null],[12,"current_elements","","The current number of elements in the table.",74,null],[19,"VMGlobalDefinitionStorage","","A typesafe wrapper around the storage for a global …",null,null],[12,"as_i32","","",75,null],[12,"as_u32","","",75,null],[12,"as_f32","","",75,null],[12,"as_i64","","",75,null],[12,"as_u64","","",75,null],[12,"as_f64","","",75,null],[12,"as_u128","","",75,null],[12,"as_funcref","","",75,null],[12,"as_externref","","",75,null],[12,"bytes","","",75,null],[3,"VMGlobalDefinition","","The storage for a WebAssembly global defined within the …",null,null],[12,"storage","","",76,null],[11,"new","","Construct a <code>VMGlobalDefinition</code>.",76,[[]]],[11,"to_i32","","Return the value as an i32.",76,[[],["i32",15]]],[11,"as_i32_mut","","Return a mutable reference to the value as an i32.",76,[[],["i32",15]]],[11,"to_u32","","Return a reference to the value as an u32.",76,[[],["u32",15]]],[11,"as_u32_mut","","Return a mutable reference to the value as an u32.",76,[[],["u32",15]]],[11,"to_i64","","Return a reference to the value as an i64.",76,[[],["i64",15]]],[11,"as_i64_mut","","Return a mutable reference to the value as an i64.",76,[[],["i64",15]]],[11,"to_u64","","Return a reference to the value as an u64.",76,[[],["u64",15]]],[11,"as_u64_mut","","Return a mutable reference to the value as an u64.",76,[[],["u64",15]]],[11,"to_f32","","Return a reference to the value as an f32.",76,[[],["f32",15]]],[11,"as_f32_mut","","Return a mutable reference to the value as an f32.",76,[[],["f32",15]]],[11,"to_f64","","Return a reference to the value as an f64.",76,[[],["f64",15]]],[11,"as_f64_mut","","Return a mutable reference to the value as an f64.",76,[[],["f64",15]]],[11,"to_funcref","","Return a reference to the value as a <code>VMFuncRef</code>.",76,[[],["vmfuncref",3]]],[11,"as_funcref_mut","","Return a mutable reference to the value as a <code>VMFuncRef</code>.",76,[[],["vmfuncref",3]]],[11,"as_externref_mut","","Return a mutable reference to the value as an <code>VMExternRef</code>.",76,[[],["vmexternref",3]]],[11,"to_externref","","Return a reference to the value as an <code>VMExternRef</code>.",76,[[],["vmexternref",3]]],[11,"to_u128","","Return a reference to the value as an u128.",76,[[],["u128",15]]],[11,"as_u128_mut","","Return a mutable reference to the value as an u128.",76,[[],["u128",15]]],[11,"to_bytes","","Return a reference to the value as bytes.",76,[[]]],[11,"as_bytes_mut","","Return a mutable reference to the value as bytes.",76,[[]]],[3,"VMSharedSignatureIndex","","An index into the shared signature registry, usable for …",null,null],[12,"0","","",77,null],[11,"new","","Create a new <code>VMSharedSignatureIndex</code>.",77,[[["u32",15]]]],[3,"VMCallerCheckedAnyfunc","","The VM caller-checked \\\"anyfunc\\\" record, for caller-side …",null,null],[12,"func_ptr","","Function body.",78,null],[12,"type_index","","Function signature id.",78,null],[12,"vmctx","","Function <code>VMContext</code> or host env.",78,null],[3,"VMBuiltinFunctionIndex","","An index type for builtin functions.",null,null],[12,"0","","",79,null],[11,"get_memory32_grow_index","","Returns an index for wasm\'s <code>memory.grow</code> builtin function.",79,[[]]],[11,"get_imported_memory32_grow_index","","Returns an index for wasm\'s imported <code>memory.grow</code> builtin …",79,[[]]],[11,"get_memory32_size_index","","Returns an index for wasm\'s <code>memory.size</code> builtin function.",79,[[]]],[11,"get_imported_memory32_size_index","","Returns an index for wasm\'s imported <code>memory.size</code> builtin …",79,[[]]],[11,"get_table_copy_index","","Returns an index for wasm\'s <code>table.copy</code> when both tables …",79,[[]]],[11,"get_table_init_index","","Returns an index for wasm\'s <code>table.init</code>.",79,[[]]],[11,"get_elem_drop_index","","Returns an index for wasm\'s <code>elem.drop</code>.",79,[[]]],[11,"get_memory_copy_index","","Returns an index for wasm\'s <code>memory.copy</code> for locally …",79,[[]]],[11,"get_imported_memory_copy_index","","Returns an index for wasm\'s <code>memory.copy</code> for imported …",79,[[]]],[11,"get_memory_fill_index","","Returns an index for wasm\'s <code>memory.fill</code> for locally …",79,[[]]],[11,"get_imported_memory_fill_index","","Returns an index for wasm\'s <code>memory.fill</code> for imported …",79,[[]]],[11,"get_memory_init_index","","Returns an index for wasm\'s <code>memory.init</code> instruction.",79,[[]]],[11,"get_data_drop_index","","Returns an index for wasm\'s <code>data.drop</code> instruction.",79,[[]]],[11,"get_raise_trap_index","","Returns an index for wasm\'s <code>raise_trap</code> instruction.",79,[[]]],[11,"get_table_size_index","","Returns an index for wasm\'s <code>table.size</code> instruction for …",79,[[]]],[11,"get_imported_table_size_index","","Returns an index for wasm\'s <code>table.size</code> instruction for …",79,[[]]],[11,"get_table_grow_index","","Returns an index for wasm\'s <code>table.grow</code> instruction for …",79,[[]]],[11,"get_imported_table_grow_index","","Returns an index for wasm\'s <code>table.grow</code> instruction for …",79,[[]]],[11,"get_table_get_index","","Returns an index for wasm\'s <code>table.get</code> instruction for …",79,[[]]],[11,"get_imported_table_get_index","","Returns an index for wasm\'s <code>table.get</code> instruction for …",79,[[]]],[11,"get_table_set_index","","Returns an index for wasm\'s <code>table.set</code> instruction for …",79,[[]]],[11,"get_imported_table_set_index","","Returns an index for wasm\'s <code>table.set</code> instruction for …",79,[[]]],[11,"get_func_ref_index","","Returns an index for wasm\'s <code>func.ref</code> instruction.",79,[[]]],[11,"get_table_fill_index","","Returns an index for wasm\'s <code>table.fill</code> instruction for …",79,[[]]],[11,"get_externref_inc_index","","Returns an index for a function to increment the …",79,[[]]],[11,"get_externref_dec_index","","Returns an index for a function to decrement the …",79,[[]]],[11,"builtin_functions_total_number","","Returns the total number of builtin functions.",79,[[],["u32",15]]],[11,"index","","Return the index as an u32 number.",79,[[],["u32",15]]],[3,"VMBuiltinFunctionsArray","","An array that stores addresses of builtin functions. We …",null,null],[12,"ptrs","","",80,null],[11,"len","","",80,[[],["usize",15]]],[11,"initialized","","",80,[[]]],[3,"VMContext","","The VM \\\"context\\\", which is pointed to by the <code>vmctx</code> arg in …",null,null],[11,"instance","","Return a mutable reference to the associated <code>Instance</code>.",81,[[],["instance",3]]],[11,"host_state","","Return a reference to the host state associated with this …",81,[[],["any",8]]],[6,"VMTrampoline","","",null,null],[0,"vmoffsets","wasmer_vm","Offsets and sizes of various structs in wasmer-vm\'s …",null,null],[5,"cast_to_u32","wasmer_vm::vmoffsets","",null,[[["usize",15]],["u32",15]]],[5,"align","","Align an offset used in this module to a specific …",null,[[["u32",15]],["u32",15]]],[3,"VMOffsets","","This class computes offsets to fields within <code>VMContext</code> …",null,null],[12,"pointer_size","","The size in bytes of a pointer on the target.",82,null],[12,"num_signature_ids","","The number of signature declarations in the module.",82,null],[12,"num_imported_functions","","The number of imported functions in the module.",82,null],[12,"num_imported_tables","","The number of imported tables in the module.",82,null],[12,"num_imported_memories","","The number of imported memories in the module.",82,null],[12,"num_imported_globals","","The number of imported globals in the module.",82,null],[12,"num_local_tables","","The number of defined tables in the module.",82,null],[12,"num_local_memories","","The number of defined memories in the module.",82,null],[12,"num_local_globals","","The number of defined globals in the module.",82,null],[11,"new","","Return a new <code>VMOffsets</code> instance, for a given pointer size.",82,[[["moduleinfo",3],["u8",15]]]],[11,"new_for_trampolines","","Return a new <code>VMOffsets</code> instance, for a given pointer size …",82,[[["u8",15]]]],[11,"vmfunction_import_body","","The offset of the <code>body</code> field.",82,[[],["u8",15]]],[11,"vmfunction_import_vmctx","","The offset of the <code>vmctx</code> field.",82,[[],["u8",15]]],[11,"size_of_vmfunction_import","","Return the size of <code>VMFunctionImport</code>.",82,[[],["u8",15]]],[11,"vmdynamicfunction_import_context_address","","The offset of the <code>address</code> field.",82,[[],["u8",15]]],[11,"vmdynamicfunction_import_context_ctx","","The offset of the <code>ctx</code> field.",82,[[],["u8",15]]],[11,"size_of_vmdynamicfunction_import_context","","Return the size of <code>VMDynamicFunctionContext</code>.",82,[[],["u8",15]]],[11,"size_of_vmfunction_body_ptr","","The size of the <code>current_elements</code> field.",82,[[],["u8",15]]],[11,"vmtable_import_definition","","The offset of the <code>definition</code> field.",82,[[],["u8",15]]],[11,"vmtable_import_from","","The offset of the <code>from</code> field.",82,[[],["u8",15]]],[11,"size_of_vmtable_import","","Return the size of <code>VMTableImport</code>.",82,[[],["u8",15]]],[11,"vmtable_definition_base","","The offset of the <code>base</code> field.",82,[[],["u8",15]]],[11,"vmtable_definition_current_elements","","The offset of the <code>current_elements</code> field.",82,[[],["u8",15]]],[11,"size_of_vmtable_definition_current_elements","","The size of the <code>current_elements</code> field.",82,[[],["u8",15]]],[11,"size_of_vmtable_definition","","Return the size of <code>VMTableDefinition</code>.",82,[[],["u8",15]]],[11,"vmmemory_import_definition","","The offset of the <code>from</code> field.",82,[[],["u8",15]]],[11,"vmmemory_import_from","","The offset of the <code>from</code> field.",82,[[],["u8",15]]],[11,"size_of_vmmemory_import","","Return the size of <code>VMMemoryImport</code>.",82,[[],["u8",15]]],[11,"vmmemory_definition_base","","The offset of the <code>base</code> field.",82,[[],["u8",15]]],[11,"vmmemory_definition_current_length","","The offset of the <code>current_length</code> field.",82,[[],["u8",15]]],[11,"size_of_vmmemory_definition_current_length","","The size of the <code>current_length</code> field.",82,[[],["u8",15]]],[11,"size_of_vmmemory_definition","","Return the size of <code>VMMemoryDefinition</code>.",82,[[],["u8",15]]],[11,"vmglobal_import_definition","","The offset of the <code>definition</code> field.",82,[[],["u8",15]]],[11,"vmglobal_import_from","","The offset of the <code>from</code> field.",82,[[],["u8",15]]],[11,"size_of_vmglobal_import","","Return the size of <code>VMGlobalImport</code>.",82,[[],["u8",15]]],[11,"size_of_vmglobal_local","","Return the size of a pointer to a <code>VMGlobalDefinition</code>;",82,[[],["u8",15]]],[11,"size_of_vmshared_signature_index","","Return the size of <code>VMSharedSignatureIndex</code>.",82,[[],["u8",15]]],[11,"vmcaller_checked_anyfunc_func_ptr","","The offset of the <code>func_ptr</code> field.",82,[[],["u8",15]]],[11,"vmcaller_checked_anyfunc_type_index","","The offset of the <code>type_index</code> field.",82,[[],["u8",15]]],[11,"vmcaller_checked_anyfunc_vmctx","","The offset of the <code>vmctx</code> field.",82,[[],["u8",15]]],[11,"size_of_vmcaller_checked_anyfunc","","Return the size of <code>VMCallerCheckedAnyfunc</code>.",82,[[],["u8",15]]],[11,"vm_funcref_anyfunc_ptr","","The offset to the pointer to the anyfunc inside the ref.",82,[[],["u8",15]]],[11,"size_of_vm_funcref","","Return the size of <code>VMFuncRef</code>.",82,[[],["u8",15]]],[11,"vmctx_signature_ids_begin","","The offset of the <code>signature_ids</code> array.",82,[[],["u32",15]]],[11,"vmctx_imported_functions_begin","","The offset of the <code>tables</code> array.",82,[[],["u32",15]]],[11,"vmctx_imported_tables_begin","","The offset of the <code>tables</code> array.",82,[[],["u32",15]]],[11,"vmctx_imported_memories_begin","","The offset of the <code>memories</code> array.",82,[[],["u32",15]]],[11,"vmctx_imported_globals_begin","","The offset of the <code>globals</code> array.",82,[[],["u32",15]]],[11,"vmctx_tables_begin","","The offset of the <code>tables</code> array.",82,[[],["u32",15]]],[11,"vmctx_memories_begin","","The offset of the <code>memories</code> array.",82,[[],["u32",15]]],[11,"vmctx_globals_begin","","The offset of the <code>globals</code> array.",82,[[],["u32",15]]],[11,"vmctx_builtin_functions_begin","","The offset of the builtin functions array.",82,[[],["u32",15]]],[11,"size_of_vmctx","","Return the size of the <code>VMContext</code> allocation.",82,[[],["u32",15]]],[11,"vmctx_vmshared_signature_id","","Return the offset to <code>VMSharedSignatureIndex</code> index <code>index</code>.",82,[[["signatureindex",3]],["u32",15]]],[11,"vmctx_vmfunction_import","","Return the offset to <code>VMFunctionImport</code> index <code>index</code>.",82,[[["functionindex",3]],["u32",15]]],[11,"vmctx_vmtable_import","","Return the offset to <code>VMTableImport</code> index <code>index</code>.",82,[[["tableindex",3]],["u32",15]]],[11,"vmctx_vmmemory_import","","Return the offset to <code>VMMemoryImport</code> index <code>index</code>.",82,[[["memoryindex",3]],["u32",15]]],[11,"vmctx_vmglobal_import","","Return the offset to <code>VMGlobalImport</code> index <code>index</code>.",82,[[["globalindex",3]],["u32",15]]],[11,"vmctx_vmtable_definition","","Return the offset to <code>VMTableDefinition</code> index <code>index</code>.",82,[[["localtableindex",3]],["u32",15]]],[11,"vmctx_vmmemory_definition","","Return the offset to <code>VMMemoryDefinition</code> index <code>index</code>.",82,[[["localmemoryindex",3]],["u32",15]]],[11,"vmctx_vmglobal_definition","","Return the offset to the <code>VMGlobalDefinition</code> index <code>index</code>.",82,[[["localglobalindex",3]],["u32",15]]],[11,"vmctx_vmfunction_import_body","","Return the offset to the <code>body</code> field in …",82,[[["functionindex",3]],["u32",15]]],[11,"vmctx_vmfunction_import_vmctx","","Return the offset to the <code>vmctx</code> field in …",82,[[["functionindex",3]],["u32",15]]],[11,"vmctx_vmtable_import_definition","","Return the offset to the <code>definition</code> field in <code>VMTableImport</code>…",82,[[["tableindex",3]],["u32",15]]],[11,"vmctx_vmtable_definition_base","","Return the offset to the <code>base</code> field in <code>VMTableDefinition</code> …",82,[[["localtableindex",3]],["u32",15]]],[11,"vmctx_vmtable_definition_current_elements","","Return the offset to the <code>current_elements</code> field in …",82,[[["localtableindex",3]],["u32",15]]],[11,"vmctx_vmmemory_import_definition","","Return the offset to the <code>from</code> field in <code>VMMemoryImport</code> …",82,[[["memoryindex",3]],["u32",15]]],[11,"vmctx_vmmemory_import_from","","Return the offset to the <code>vmctx</code> field in <code>VMMemoryImport</code> …",82,[[["memoryindex",3]],["u32",15]]],[11,"vmctx_vmmemory_definition_base","","Return the offset to the <code>base</code> field in <code>VMMemoryDefinition</code> …",82,[[["localmemoryindex",3]],["u32",15]]],[11,"vmctx_vmmemory_definition_current_length","","Return the offset to the <code>current_length</code> field in …",82,[[["localmemoryindex",3]],["u32",15]]],[11,"vmctx_vmglobal_import_definition","","Return the offset to the <code>from</code> field in <code>VMGlobalImport</code> …",82,[[["globalindex",3]],["u32",15]]],[11,"vmctx_builtin_function","","Return the offset to builtin function in …",82,[[["vmbuiltinfunctionindex",3]],["u32",15]]],[3,"TargetSharedSignatureIndex","","Target specific type for shared signature index.",null,null],[12,"0","","",83,null],[11,"new","","Constructs <code>TargetSharedSignatureIndex</code>.",83,[[["u32",15]]]],[11,"index","","Returns index value.",83,[[],["u32",15]]],[0,"libcalls","wasmer_vm","Runtime library calls.",null,null],[5,"wasmer_vm_f32_ceil","wasmer_vm::libcalls","Implementation of f32.ceil",null,[[["f32",15]],["f32",15]]],[5,"wasmer_vm_f32_floor","","Implementation of f32.floor",null,[[["f32",15]],["f32",15]]],[5,"wasmer_vm_f32_trunc","","Implementation of f32.trunc",null,[[["f32",15]],["f32",15]]],[5,"wasmer_vm_f32_nearest","","Implementation of f32.nearest",null,[[["f32",15]],["f32",15]]],[5,"wasmer_vm_f64_ceil","","Implementation of f64.ceil",null,[[["f64",15]],["f64",15]]],[5,"wasmer_vm_f64_floor","","Implementation of f64.floor",null,[[["f64",15]],["f64",15]]],[5,"wasmer_vm_f64_trunc","","Implementation of f64.trunc",null,[[["f64",15]],["f64",15]]],[5,"wasmer_vm_f64_nearest","","Implementation of f64.nearest",null,[[["f64",15]],["f64",15]]],[5,"wasmer_vm_memory32_grow","","Implementation of memory.grow for locally-defined 32-bit …",null,[[["u32",15]],["u32",15]]],[5,"wasmer_vm_imported_memory32_grow","","Implementation of memory.grow for imported 32-bit …",null,[[["u32",15]],["u32",15]]],[5,"wasmer_vm_memory32_size","","Implementation of memory.size for locally-defined 32-bit …",null,[[["u32",15]],["u32",15]]],[5,"wasmer_vm_imported_memory32_size","","Implementation of memory.size for imported 32-bit …",null,[[["u32",15]],["u32",15]]],[5,"wasmer_vm_table_copy","","Implementation of <code>table.copy</code>.",null,[[["u32",15]]]],[5,"wasmer_vm_table_init","","Implementation of <code>table.init</code>.",null,[[["u32",15]]]],[5,"wasmer_vm_table_fill","","Implementation of <code>table.fill</code>.",null,[[["u32",15],["rawtableelement",19]]]],[5,"wasmer_vm_table_size","","Implementation of <code>table.size</code>.",null,[[["u32",15]],["u32",15]]],[5,"wasmer_vm_imported_table_size","","Implementation of <code>table.size</code> for imported tables.",null,[[["u32",15]],["u32",15]]],[5,"wasmer_vm_table_get","","Implementation of <code>table.get</code>.",null,[[["u32",15]],["rawtableelement",19]]],[5,"wasmer_vm_imported_table_get","","Implementation of <code>table.get</code> for imported tables.",null,[[["u32",15]],["rawtableelement",19]]],[5,"wasmer_vm_table_set","","Implementation of <code>table.set</code>.",null,[[["u32",15],["rawtableelement",19]]]],[5,"wasmer_vm_imported_table_set","","Implementation of <code>table.set</code> for imported tables.",null,[[["u32",15],["rawtableelement",19]]]],[5,"wasmer_vm_table_grow","","Implementation of <code>table.grow</code> for locally-defined tables.",null,[[["rawtableelement",19],["u32",15]],["u32",15]]],[5,"wasmer_vm_imported_table_grow","","Implementation of <code>table.grow</code> for imported tables.",null,[[["rawtableelement",19],["u32",15]],["u32",15]]],[5,"wasmer_vm_func_ref","","Implementation of <code>func.ref</code>.",null,[[["u32",15]],["vmfuncref",3]]],[5,"wasmer_vm_externref_inc","","Implementation of externref increment",null,[[["vmexternref",3]]]],[5,"wasmer_vm_externref_dec","","Implementation of externref decrement",null,[[["vmexternref",3]]]],[5,"wasmer_vm_elem_drop","","Implementation of <code>elem.drop</code>.",null,[[["u32",15]]]],[5,"wasmer_vm_memory32_copy","","Implementation of <code>memory.copy</code> for locally defined …",null,[[["u32",15]]]],[5,"wasmer_vm_imported_memory32_copy","","Implementation of <code>memory.copy</code> for imported memories.",null,[[["u32",15]]]],[5,"wasmer_vm_memory32_fill","","Implementation of <code>memory.fill</code> for locally defined …",null,[[["u32",15]]]],[5,"wasmer_vm_imported_memory32_fill","","Implementation of <code>memory.fill</code> for imported memories.",null,[[["u32",15]]]],[5,"wasmer_vm_memory32_init","","Implementation of <code>memory.init</code>.",null,[[["u32",15]]]],[5,"wasmer_vm_data_drop","","Implementation of <code>data.drop</code>.",null,[[["u32",15]]]],[5,"wasmer_vm_raise_trap","","Implementation for raising a trap",null,[[["trapcode",4]]]],[7,"wasmer_vm_probestack","","Probestack check",null,null],[4,"LibCall","","The name of a runtime library routine.",null,null],[13,"CeilF32","","ceil.f32",84,null],[13,"CeilF64","","ceil.f64",84,null],[13,"FloorF32","","floor.f32",84,null],[13,"FloorF64","","floor.f64",84,null],[13,"NearestF32","","nearest.f32",84,null],[13,"NearestF64","","nearest.f64",84,null],[13,"TruncF32","","trunc.f32",84,null],[13,"TruncF64","","trunc.f64",84,null],[13,"Memory32Size","","memory.size for local functions",84,null],[13,"ImportedMemory32Size","","memory.size for imported functions",84,null],[13,"TableCopy","","table.copy",84,null],[13,"TableInit","","table.init",84,null],[13,"TableFill","","table.fill",84,null],[13,"TableSize","","table.size for local tables",84,null],[13,"ImportedTableSize","","table.size for imported tables",84,null],[13,"TableGet","","table.get for local tables",84,null],[13,"ImportedTableGet","","table.get for imported tables",84,null],[13,"TableSet","","table.set for local tables",84,null],[13,"ImportedTableSet","","table.set for imported tables",84,null],[13,"TableGrow","","table.grow for local tables",84,null],[13,"ImportedTableGrow","","table.grow for imported tables",84,null],[13,"FuncRef","","ref.func",84,null],[13,"ElemDrop","","elem.drop",84,null],[13,"Memory32Copy","","memory.copy for local memories",84,null],[13,"ImportedMemory32Copy","","memory.copy for imported memories",84,null],[13,"Memory32Fill","","memory.fill for local memories",84,null],[13,"ImportedMemory32Fill","","memory.fill for imported memories",84,null],[13,"Memory32Init","","memory.init",84,null],[13,"DataDrop","","data.drop",84,null],[13,"RaiseTrap","","A custom trap",84,null],[13,"Probestack","","probe for stack overflow. These are emitted for functions …",84,null],[4,"ArchivedLibCall","","",null,null],[13,"CeilF32","","",85,null],[13,"CeilF64","","",85,null],[13,"FloorF32","","",85,null],[13,"FloorF64","","",85,null],[13,"NearestF32","","",85,null],[13,"NearestF64","","",85,null],[13,"TruncF32","","",85,null],[13,"TruncF64","","",85,null],[13,"Memory32Size","","",85,null],[13,"ImportedMemory32Size","","",85,null],[13,"TableCopy","","",85,null],[13,"TableInit","","",85,null],[13,"TableFill","","",85,null],[13,"TableSize","","",85,null],[13,"ImportedTableSize","","",85,null],[13,"TableGet","","",85,null],[13,"ImportedTableGet","","",85,null],[13,"TableSet","","",85,null],[13,"ImportedTableSet","","",85,null],[13,"TableGrow","","",85,null],[13,"ImportedTableGrow","","",85,null],[13,"FuncRef","","",85,null],[13,"ElemDrop","","",85,null],[13,"Memory32Copy","","",85,null],[13,"ImportedMemory32Copy","","",85,null],[13,"Memory32Fill","","",85,null],[13,"ImportedMemory32Fill","","",85,null],[13,"Memory32Init","","",85,null],[13,"DataDrop","","",85,null],[13,"RaiseTrap","","",85,null],[13,"Probestack","","",85,null],[4,"LibCallResolver","","",null,null],[13,"CeilF32","","",86,null],[13,"CeilF64","","",86,null],[13,"FloorF32","","",86,null],[13,"FloorF64","","",86,null],[13,"NearestF32","","",86,null],[13,"NearestF64","","",86,null],[13,"TruncF32","","",86,null],[13,"TruncF64","","",86,null],[13,"Memory32Size","","",86,null],[13,"ImportedMemory32Size","","",86,null],[13,"TableCopy","","",86,null],[13,"TableInit","","",86,null],[13,"TableFill","","",86,null],[13,"TableSize","","",86,null],[13,"ImportedTableSize","","",86,null],[13,"TableGet","","",86,null],[13,"ImportedTableGet","","",86,null],[13,"TableSet","","",86,null],[13,"ImportedTableSet","","",86,null],[13,"TableGrow","","",86,null],[13,"ImportedTableGrow","","",86,null],[13,"FuncRef","","",86,null],[13,"ElemDrop","","",86,null],[13,"Memory32Copy","","",86,null],[13,"ImportedMemory32Copy","","",86,null],[13,"Memory32Fill","","",86,null],[13,"ImportedMemory32Fill","","",86,null],[13,"Memory32Init","","",86,null],[13,"DataDrop","","",86,null],[13,"RaiseTrap","","",86,null],[13,"Probestack","","",86,null],[11,"function_pointer","","The function pointer to a libcall",84,[[],["usize",15]]],[11,"to_function_name","","Return the function name associated to the libcall.",84,[[],["str",15]]],[4,"VMExtern","wasmer_vm","The value of an export passed from one instance to …",null,null],[13,"Function","","A function export value.",0,null],[13,"Table","","A table export value.",0,null],[13,"Memory","","A memory export value.",0,null],[13,"Global","","A global export value.",0,null],[3,"VMFunction","","A function export value.",null,null],[12,"address","","The address of the native-code function.",1,null],[12,"vmctx","","Pointer to the containing <code>VMContext</code>.",1,null],[12,"signature","","The function type, used for compatibility checking.",1,null],[12,"kind","","The function kind (specifies the calling convention for …",1,null],[12,"call_trampoline","","Address of the function call trampoline owned by the same …",1,null],[12,"instance_ref","","A “reference” to the instance through the <code>InstanceRef</code>…",1,null],[3,"VMTable","","A table export value.",null,null],[12,"from","","Pointer to the containing <code>Table</code>.",2,null],[12,"instance_ref","","A “reference” to the instance through the <code>InstanceRef</code>…",2,null],[3,"VMMemory","","A memory export value.",null,null],[12,"from","","Pointer to the containing <code>Memory</code>.",3,null],[12,"instance_ref","","A “reference” to the instance through the <code>InstanceRef</code>…",3,null],[3,"VMGlobal","","A global export value.",null,null],[12,"from","","The global declaration, used for compatibility checking.",4,null],[12,"instance_ref","","A “reference” to the instance through the <code>InstanceRef</code>…",4,null],[3,"FuncDataRegistry","","The registry that holds the values that <code>VMFuncRef</code>s point …",null,null],[12,"inner","","",5,null],[3,"VMFuncRef","","A function reference. A single word that points to …",null,null],[12,"0","","",6,null],[3,"Global","","A Global instance",null,null],[12,"ty","","",8,null],[12,"vm_global_definition","","",8,null],[12,"lock","","",8,null],[4,"GlobalError","","Error type describing things that can go wrong when …",null,null],[13,"ImmutableGlobalCannotBeSet","","The error returned when attempting to set an immutable …",9,null],[13,"IncorrectType","","The error returned when attempting to operate on a global …",9,null],[12,"expected","wasmer_vm::GlobalError","The type that the global is.",10,null],[12,"found","","The type that we were asked to use it as.",10,null],[3,"Imports","wasmer_vm","Resolved import pointers.",null,null],[12,"functions","","Resolved addresses for imported functions.",11,null],[12,"host_function_env_initializers","","Initializers for host function environments. This is …",11,null],[12,"tables","","Resolved addresses for imported tables.",11,null],[12,"memories","","Resolved addresses for imported memories.",11,null],[12,"globals","","Resolved addresses for imported globals.",11,null],[4,"ImportFunctionEnv","","A collection of data about host envs used by imported …",null,null],[13,"NoEnv","","The <code>vmctx</code> pointer does not refer to a host env, there is …",15,null],[13,"Env","","We\'re dealing with a user-defined host env.",15,null],[12,"env","wasmer_vm::ImportFunctionEnv","The function environment. This is not always the …",16,null],[12,"clone","","A clone function for duplicating the env.",16,null],[12,"initializer","","This field is not always present. When it is present, it …",16,null],[12,"destructor","","The destructor to clean up the type in <code>env</code>.",16,null],[6,"ImportInitializerFuncPtr","wasmer_vm","The function pointer to call with data and an [<code>Instance</code>] …",null,null],[3,"InstanceAllocator","","This is an intermediate type that manages the raw …",null,null],[12,"instance_ptr","","The buffer that will contain the [<code>Instance</code>] and dynamic …",12,null],[12,"instance_layout","","The layout of the <code>instance_ptr</code> buffer.",12,null],[12,"offsets","","Information about the offsets into the <code>instance_ptr</code> …",12,null],[12,"consumed","","Whether or not this type has transferred ownership of the …",12,null],[3,"InstanceHandle","","A handle holding an <code>InstanceRef</code>, which holds an <code>Instance</code> …",null,null],[12,"instance","","The [<code>InstanceRef</code>]. See its documentation to learn more.",17,null],[3,"LinearMemory","","A linear memory instance.",null,null],[12,"mmap","","",33,null],[12,"maximum","","",33,null],[12,"memory","","The WebAssembly linear memory description.",33,null],[12,"style","","Our chosen implementation style.",33,null],[12,"offset_guard_size","","",33,null],[12,"vm_memory_definition","","The owned memory definition used by the generated code",33,null],[12,"needs_signal_handlers","","",33,null],[8,"Memory","","Trait for implementing Wasm Memory used by Wasmer.",null,null],[10,"ty","","Returns the memory type for this memory.",32,[[],["memorytype",3]]],[10,"style","","Returns the memory style for this memory.",32,[[],["memorystyle",4]]],[10,"size","","Returns the number of allocated wasm pages.",32,[[],["pages",3]]],[10,"grow","","Grow memory by the specified amount of wasm pages.",32,[[["pages",3]],[["result",4],["pages",3],["memoryerror",4]]]],[10,"vmmemory","","Return a [<code>VMMemoryDefinition</code>] for exposing the memory to …",32,[[],[["vmmemorydefinition",3],["nonnull",3]]]],[4,"MemoryError","","Error type describing things that can go wrong when …",null,null],[13,"Region","","Low level error with mmap.",18,null],[13,"CouldNotGrow","","The operation would cause the size of the memory to …",18,null],[12,"current","wasmer_vm::MemoryError","The current size in pages.",19,null],[12,"attempted_delta","","The attempted amount to grow by in pages.",19,null],[13,"InvalidMemory","wasmer_vm","The operation would cause the size of the memory size …",18,null],[12,"reason","wasmer_vm::MemoryError","The reason why the provided memory is invalid.",20,null],[13,"MinimumMemoryTooLarge","wasmer_vm","Caller asked for more minimum memory than we can give …",18,null],[12,"min_requested","wasmer_vm::MemoryError","The number of pages requested as the minimum amount of …",21,null],[12,"max_allowed","","The maximum amount of memory we can allocate.",21,null],[13,"MaximumMemoryTooLarge","wasmer_vm","Caller asked for a maximum memory greater than we can …",18,null],[12,"max_requested","wasmer_vm::MemoryError","The number of pages requested as the maximum amount of …",22,null],[12,"max_allowed","","The number of pages requested as the maximum amount of …",22,null],[13,"Generic","wasmer_vm","A user defined error value, used for error cases not …",18,null],[4,"MemoryStyle","","Implementation styles for WebAssembly linear memory.",null,null],[13,"Dynamic","","The actual memory can be resized and moved.",23,null],[12,"offset_guard_size","wasmer_vm::MemoryStyle","Our chosen offset-guard size.",24,null],[13,"Static","wasmer_vm","Address space is allocated up front.",23,null],[12,"bound","wasmer_vm::MemoryStyle","The number of mapped and unmapped pages.",25,null],[12,"offset_guard_size","","Our chosen offset-guard size.",25,null],[3,"Mmap","wasmer_vm","A simple struct consisting of a page-aligned pointer to …",null,null],[12,"ptr","","",36,null],[12,"len","","",36,null],[3,"ExportsIterator","","This iterator allows us to iterate over the exports and …",null,null],[12,"iter","","",44,null],[12,"size","","",44,null],[3,"ImportsIterator","","This iterator allows us to iterate over the imports and …",null,null],[12,"iter","","",45,null],[12,"size","","",45,null],[3,"ModuleInfo","","A translated WebAssembly module, excluding the function …",null,null],[12,"id","","A unique identifier (within this process) for this module.",40,null],[12,"name","","The name of this wasm module, often found in the wasm …",40,null],[12,"imports","","Imported entities with the (module, field, …",40,null],[12,"exports","","Exported entities.",40,null],[12,"start_function","","The module \\\"start\\\" function, if present.",40,null],[12,"table_initializers","","WebAssembly table initializers.",40,null],[12,"passive_elements","","WebAssembly passive elements.",40,null],[12,"passive_data","","WebAssembly passive data segments.",40,null],[12,"global_initializers","","WebAssembly global initializers.",40,null],[12,"function_names","","WebAssembly function names.",40,null],[12,"signatures","","WebAssembly function signatures.",40,null],[12,"functions","","WebAssembly functions (imported and local).",40,null],[12,"tables","","WebAssembly tables (imported and local).",40,null],[12,"memories","","WebAssembly linear memories (imported and local).",40,null],[12,"globals","","WebAssembly global variables (imported and local).",40,null],[12,"custom_sections","","Custom sections in the module.",40,null],[12,"custom_sections_data","","The data for each CustomSection in the module.",40,null],[12,"num_imported_functions","","Number of imported functions in the module.",40,null],[12,"num_imported_tables","","Number of imported tables in the module.",40,null],[12,"num_imported_memories","","Number of imported memories in the module.",40,null],[12,"num_imported_globals","","Number of imported globals in the module.",40,null],[7,"PROBESTACK","","The probestack based on the Rust probestack",null,null],[3,"SignatureRegistry","","WebAssembly requires that the caller and callee …",null,null],[12,"inner","","",46,null],[3,"LinearTable","","A table instance.",null,null],[12,"vec","","",54,null],[12,"maximum","","",54,null],[12,"table","","The WebAssembly table description.",54,null],[12,"style","","Our chosen implementation style.",54,null],[12,"vm_table_definition","","",54,null],[8,"Table","","Trait for implementing the interface of a Wasm table.",null,null],[10,"style","","Returns the style for this Table.",51,[[],["tablestyle",4]]],[10,"ty","","Returns the type for this Table.",51,[[],["tabletype",3]]],[10,"size","","Returns the number of allocated elements.",51,[[],["u32",15]]],[10,"grow","","Grow table by the specified amount of elements.",51,[[["u32",15],["tableelement",4]],[["u32",15],["option",4]]]],[10,"get","","Get reference to the specified element.",51,[[["u32",15]],[["tableelement",4],["option",4]]]],[10,"set","","Set reference to the specified element.",51,[[["u32",15],["tableelement",4]],[["result",4],["trap",4]]]],[10,"vmtable","","Return a <code>VMTableDefinition</code> for exposing the table to …",51,[[],[["vmtabledefinition",3],["nonnull",3]]]],[11,"copy","wasmer_vm::table","Copy <code>len</code> elements from <code>src_table[src_index..]</code> into …",51,[[["u32",15],["table",8]],[["result",4],["trap",4]]]],[4,"TableElement","wasmer_vm","A reference stored in a table. Can be either an externref …",null,null],[13,"ExternRef","","Opaque pointer to arbitrary host data.",52,null],[13,"FuncRef","","Pointer to function: contains enough information to call …",52,null],[4,"TableStyle","","Implementation styles for WebAssembly tables.",null,null],[13,"CallerChecksSignature","","Signatures are stored in the table and checked in the …",48,null],[4,"TrapCode","","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",56,null],[13,"HeapSetterOutOfBounds","","Memory data doesn\'t fit the memory size.",56,null],[13,"HeapAccessOutOfBounds","","A <code>heap_addr</code> instruction detected an out-of-bounds error.",56,null],[13,"HeapMisaligned","","A <code>heap_addr</code> instruction was misaligned.",56,null],[13,"TableSetterOutOfBounds","","Table Elements doesn\'t fit the table size.",56,null],[13,"TableAccessOutOfBounds","","A <code>table_addr</code> instruction detected an out-of-bounds error.",56,null],[13,"OutOfBounds","","Other bounds checking error.",56,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",56,null],[13,"BadSignature","","Signature mismatch on indirect call.",56,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",56,null],[13,"IntegerDivisionByZero","","An integer division by zero.",56,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",56,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was …",56,null],[13,"Interrupt","","Execution has potentially run too long and may be …",56,null],[13,"UnalignedAtomic","","An atomic memory access was attempted with an unaligned …",56,null],[13,"VMOutOfMemory","","A trap indicating that the runtime was unable to allocate …",56,null],[5,"catch_traps","","Catches any wasm traps that happen within the execution …",null,[[["vmfunctionenvironment",19]],[["result",4],["trap",4]]]],[5,"catch_traps_with_result","","Catches any wasm traps that happen within the execution …",null,[[["vmfunctionenvironment",19]],[["result",4],["trap",4]]]],[5,"raise_lib_trap","","Raises a trap from inside library code immediately.",null,[[["trap",4]]]],[5,"raise_user_trap","","Raises a user-defined trap immediately.",null,[[["error",8],["box",3]]]],[5,"wasmer_call_trampoline","","Call the wasm function pointed to by <code>callee</code>.",null,[[["vmfunctionenvironment",19],["vmtrampoline",6]],[["result",4],["trap",4]]]],[4,"Trap","","Stores trace message with backtrace.",null,null],[13,"User","","A user-raised trap through <code>raise_user_trap</code>.",59,null],[13,"Wasm","","A trap raised from machine code generated from Wasm",59,null],[12,"pc","wasmer_vm::Trap","The program counter in generated code where this trap …",60,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",60,null],[12,"signal_trap","","Optional trapcode associated to the signal that caused …",60,null],[13,"Runtime","wasmer_vm","A trap raised manually from the Wasmer VM",59,null],[12,"trap_code","wasmer_vm::Trap","Code of the trap.",61,null],[12,"backtrace","","Native stack backtrace at the time the trap occurred",61,null],[5,"init_traps","wasmer_vm","This function performs the low-overhead signal handler …",null,[[]]],[5,"resume_panic","","Carries a Rust panic across wasm code and resumes the …",null,[[["box",3],["any",8]]]],[3,"VMBuiltinFunctionIndex","","An index type for builtin functions.",null,null],[12,"0","","",79,null],[3,"VMCallerCheckedAnyfunc","","The VM caller-checked \\\"anyfunc\\\" record, for caller-side …",null,null],[12,"func_ptr","","Function body.",78,null],[12,"type_index","","Function signature id.",78,null],[12,"vmctx","","Function <code>VMContext</code> or host env.",78,null],[3,"VMContext","","The VM \\\"context\\\", which is pointed to by the <code>vmctx</code> arg in …",null,null],[3,"VMDynamicFunctionContext","","The <code>VMDynamicFunctionContext</code> is the context that dynamic …",null,null],[12,"address","","The address of the inner dynamic function.",67,null],[12,"ctx","","The context that the inner dynamic function will receive.",67,null],[3,"VMFunctionBody","","A placeholder byte-sized type which is just used to …",null,null],[12,"0","","",68,null],[19,"VMFunctionEnvironment","","Union representing the first parameter passed when …",null,null],[12,"vmctx","","Wasm functions take a pointer to [<code>VMContext</code>].",65,null],[12,"host_env","","Host functions can have custom environments.",65,null],[3,"VMFunctionImport","","An imported function.",null,null],[12,"body","","A pointer to the imported function body.",66,null],[12,"environment","","A pointer to the <code>VMContext</code> that owns the function or host …",66,null],[4,"VMFunctionKind","","A function kind is a calling convention into and out of …",null,null],[13,"Static","","A static function has the native signature: …",69,null],[13,"Dynamic","","A dynamic function has the native signature: …",69,null],[3,"VMGlobalDefinition","","The storage for a WebAssembly global defined within the …",null,null],[12,"storage","","",76,null],[3,"VMGlobalImport","","The fields compiled code needs to access to utilize a …",null,null],[12,"definition","","A pointer to the imported global variable description.",72,null],[12,"from","","A pointer to the <code>Global</code> that owns the global description.",72,null],[3,"VMMemoryDefinition","","The fields compiled code needs to access to utilize a …",null,null],[12,"base","","The start address which is always valid, even if the …",73,null],[12,"current_length","","The current logical size of this linear memory in bytes.",73,null],[3,"VMMemoryImport","","The fields compiled code needs to access to utilize a …",null,null],[12,"definition","","A pointer to the imported memory description.",71,null],[12,"from","","A pointer to the <code>Memory</code> that owns the memory description.",71,null],[3,"VMSharedSignatureIndex","","An index into the shared signature registry, usable for …",null,null],[12,"0","","",77,null],[3,"VMTableDefinition","","The fields compiled code needs to access to utilize a …",null,null],[12,"base","","Pointer to the table data.",74,null],[12,"current_elements","","The current number of elements in the table.",74,null],[3,"VMTableImport","","The fields compiled code needs to access to utilize a …",null,null],[12,"definition","","A pointer to the imported table description.",70,null],[12,"from","","A pointer to the <code>Table</code> that owns the table description.",70,null],[6,"VMTrampoline","","",null,null],[3,"TargetSharedSignatureIndex","","Target specific type for shared signature index.",null,null],[12,"0","","",83,null],[3,"VMOffsets","","This class computes offsets to fields within <code>VMContext</code> …",null,null],[12,"pointer_size","","The size in bytes of a pointer on the target.",82,null],[12,"num_signature_ids","","The number of signature declarations in the module.",82,null],[12,"num_imported_functions","","The number of imported functions in the module.",82,null],[12,"num_imported_tables","","The number of imported tables in the module.",82,null],[12,"num_imported_memories","","The number of imported memories in the module.",82,null],[12,"num_imported_globals","","The number of imported globals in the module.",82,null],[12,"num_local_tables","","The number of defined tables in the module.",82,null],[12,"num_local_memories","","The number of defined memories in the module.",82,null],[12,"num_local_globals","","The number of defined globals in the module.",82,null],[3,"VMExternRef","","This type does not do reference counting automatically, …",null,null],[12,"0","","",87,null],[17,"VERSION","","Version number of this crate.",null,null],[3,"FunctionBodyPtr","","A safe wrapper around <code>VMFunctionBody</code>.",null,null],[12,"0","","",88,null],[3,"SectionBodyPtr","","Pointers to section data.",null,null],[12,"0","","",89,null],[11,"from","wasmer_vm::export","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"from","wasmer_vm::func_data_registry","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[],["bool",15]]],[11,"pointer_metadata","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"from","wasmer_vm::global","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"from","wasmer_vm::imports","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"from","wasmer_vm::instance::allocator","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"pointer_metadata","","",12,[[]]],[11,"from","wasmer_vm::instance::ref","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"pointer_metadata","","",13,[[]]],[11,"from","wasmer_vm::instance","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"pointer_metadata","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"pointer_metadata","","",15,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"pointer_metadata","","",17,[[]]],[11,"from","wasmer_vm::memory","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[],["bool",15]]],[11,"pointer_metadata","","",23,[[]]],[11,"resolve_metadata","","",23,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",23,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",23,[[],["result",4]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"pointer_metadata","","",26,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"pointer_metadata","","",29,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"pointer_metadata","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"pointer_metadata","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"pointer_metadata","","",35,[[]]],[11,"from","wasmer_vm::mmap","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"pointer_metadata","","",36,[[]]],[11,"from","wasmer_vm::module","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"pointer_metadata","","",37,[[]]],[11,"resolve_metadata","","",37,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",37,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",37,[[],["result",4]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"pointer_metadata","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"pointer_metadata","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"equivalent","","",40,[[],["bool",15]]],[11,"pointer_metadata","","",40,[[]]],[11,"resolve_metadata","","",40,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",40,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",40,[[],["result",4]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"pointer_metadata","","",41,[[]]],[11,"resolve_metadata","","",41,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",41,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",41,[[],["result",4]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"pointer_metadata","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"pointer_metadata","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"into_iter","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"pointer_metadata","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"into_iter","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"pointer_metadata","","",45,[[]]],[11,"from","wasmer_vm::sig_registry","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"pointer_metadata","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"pointer_metadata","","",47,[[]]],[11,"from","wasmer_vm::table","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"equivalent","","",48,[[],["bool",15]]],[11,"pointer_metadata","","",48,[[]]],[11,"resolve_metadata","","",48,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",48,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",48,[[],["result",4]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"pointer_metadata","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"pointer_metadata","","",50,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"pointer_metadata","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"pointer_metadata","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"pointer_metadata","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"pointer_metadata","","",55,[[]]],[11,"from","wasmer_vm::trap::trapcode","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"to_string","","",56,[[],["string",3]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"equivalent","","",56,[[],["bool",15]]],[11,"pointer_metadata","","",56,[[]]],[11,"resolve_metadata","","",56,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",56,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",56,[[],["result",4]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"pointer_metadata","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"pointer_metadata","","",58,[[]]],[11,"from","wasmer_vm::trap::traphandlers","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"pointer_metadata","","",59,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"pointer_metadata","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"pointer_metadata","","",63,[[]]],[11,"from","wasmer_vm::vmcontext","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"equivalent","","",65,[[],["bool",15]]],[11,"pointer_metadata","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"pointer_metadata","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"pointer_metadata","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"pointer_metadata","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"pointer_metadata","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"pointer_metadata","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"pointer_metadata","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"pointer_metadata","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"pointer_metadata","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"pointer_metadata","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"pointer_metadata","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"pointer_metadata","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"equivalent","","",77,[[],["bool",15]]],[11,"pointer_metadata","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"equivalent","","",78,[[],["bool",15]]],[11,"pointer_metadata","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"pointer_metadata","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"pointer_metadata","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"pointer_metadata","","",81,[[]]],[11,"from","wasmer_vm::vmoffsets","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"pointer_metadata","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"pointer_metadata","","",83,[[]]],[11,"from","wasmer_vm::libcalls","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"equivalent","","",84,[[],["bool",15]]],[11,"pointer_metadata","","",84,[[]]],[11,"resolve_metadata","","",84,[[["usize",15],["maybeuninit",19]]]],[11,"serialize_unsized","","",84,[[],[["usize",15],["result",4]]]],[11,"serialize_metadata","","",84,[[],["result",4]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"pointer_metadata","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"pointer_metadata","","",86,[[]]],[11,"from","wasmer_vm","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"equivalent","","",87,[[],["bool",15]]],[11,"pointer_metadata","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"pointer_metadata","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"pointer_metadata","","",89,[[]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",87,[[["externref",3]],["vmexternref",3]]],[11,"clone","","",87,[[],["vmexternref",3]]],[11,"from_abi","","",87,[[],["vmexternref",3]]],[11,"into_abi","","",87,[[]]],[11,"to_binary","","",87,[[],["i128",15]]],[11,"from_binary","","",87,[[["i128",15]],["vmexternref",3]]],[11,"eq","","",87,[[["vmexternref",3]],["bool",15]]],[11,"ne","","",87,[[["vmexternref",3]],["bool",15]]],[11,"ty","wasmer_vm::memory","Returns the type for this memory.",33,[[],["memorytype",3]]],[11,"style","","Returns the memory style for this memory.",33,[[],["memorystyle",4]]],[11,"size","","Returns the number of allocated wasm pages.",33,[[],["pages",3]]],[11,"grow","","Grow memory by the specified amount of wasm pages.",33,[[["pages",3]],[["result",4],["pages",3],["memoryerror",4]]]],[11,"vmmemory","","Return a <code>VMMemoryDefinition</code> for exposing the memory to …",33,[[],[["vmmemorydefinition",3],["nonnull",3]]]],[11,"ty","wasmer_vm::table","Returns the type for this Table.",54,[[],["tabletype",3]]],[11,"style","","Returns the style for this Table.",54,[[],["tablestyle",4]]],[11,"size","","Returns the number of allocated elements.",54,[[],["u32",15]]],[11,"grow","","Grow table by the specified amount of elements.",54,[[["u32",15],["tableelement",4]],[["u32",15],["option",4]]]],[11,"get","","Get reference to the specified element.",54,[[["u32",15]],[["tableelement",4],["option",4]]]],[11,"set","","Set reference to the specified element.",54,[[["u32",15],["tableelement",4]],[["result",4],["trap",4]]]],[11,"vmtable","","Return a <code>VMTableDefinition</code> for exposing the table to …",54,[[],[["vmtabledefinition",3],["nonnull",3]]]],[11,"drop","wasmer_vm::instance::allocator","",12,[[]]],[11,"drop","wasmer_vm::instance::ref","Drop the <code>InstanceRef</code>.",13,[[]]],[11,"drop","wasmer_vm::instance","",15,[[]]],[11,"drop","wasmer_vm::mmap","",36,[[]]],[11,"drop","wasmer_vm::trap::traphandlers","",62,[[]]],[11,"from","wasmer_vm::export","",0,[[["vmfunction",3]]]],[11,"from","","",0,[[["vmtable",3]]]],[11,"from","","",0,[[["vmmemory",3]]]],[11,"from","","",0,[[["vmglobal",3]]]],[11,"from","wasmer_vm::module","",41,[[["moduleinfo",3]],["archivablemoduleinfo",3]]],[11,"from","","",40,[[["archivablemoduleinfo",3]],["moduleinfo",3]]],[11,"from","","",41,[[["moduleinfo",3]],["archivablemoduleinfo",3]]],[11,"from","wasmer_vm::table","",53,[[["tableelement",4]]]],[11,"len","wasmer_vm::module","",44,[[],["usize",15]]],[11,"len","","",45,[[],["usize",15]]],[11,"next","","",44,[[],["option",4]]],[11,"next","","",45,[[],["option",4]]],[11,"clone","wasmer_vm::export","",1,[[],["vmfunction",3]]],[11,"clone","","",2,[[],["vmtable",3]]],[11,"clone","","",3,[[],["vmmemory",3]]],[11,"clone","","",4,[[],["vmglobal",3]]],[11,"clone","wasmer_vm::func_data_registry","",6,[[],["vmfuncref",3]]],[11,"clone","wasmer_vm::global","",9,[[],["globalerror",4]]],[11,"clone","wasmer_vm::imports","",11,[[],["imports",3]]],[11,"clone","wasmer_vm::instance::ref","Makes a clone of <code>InstanceRef</code>.",13,[[]]],[11,"clone","wasmer_vm::instance","",15,[[]]],[11,"clone","wasmer_vm::memory","",18,[[],["memoryerror",4]]],[11,"clone","","",23,[[],["memorystyle",4]]],[11,"clone","wasmer_vm::module","",37,[[],["moduleid",3]]],[11,"clone","","",40,[[],["moduleinfo",3]]],[11,"clone","wasmer_vm::table","",48,[[],["tablestyle",4]]],[11,"clone","","",52,[[],["tableelement",4]]],[11,"clone","","",53,[[],["rawtableelement",19]]],[11,"clone","wasmer_vm::trap::trapcode","",56,[[],["trapcode",4]]],[11,"clone","wasmer_vm::vmcontext","",65,[[],["vmfunctionenvironment",19]]],[11,"clone","","",66,[[],["vmfunctionimport",3]]],[11,"clone","","",67,[[]]],[11,"clone","","",69,[[],["vmfunctionkind",4]]],[11,"clone","","",70,[[],["vmtableimport",3]]],[11,"clone","","",71,[[],["vmmemoryimport",3]]],[11,"clone","","",72,[[],["vmglobalimport",3]]],[11,"clone","","",73,[[],["vmmemorydefinition",3]]],[11,"clone","","",74,[[],["vmtabledefinition",3]]],[11,"clone","","",75,[[],["vmglobaldefinitionstorage",19]]],[11,"clone","","",76,[[],["vmglobaldefinition",3]]],[11,"clone","","",77,[[],["vmsharedsignatureindex",3]]],[11,"clone","","",78,[[],["vmcallercheckedanyfunc",3]]],[11,"clone","","",79,[[],["vmbuiltinfunctionindex",3]]],[11,"clone","wasmer_vm::vmoffsets","",82,[[],["vmoffsets",3]]],[11,"clone","","",83,[[],["targetsharedsignatureindex",3]]],[11,"clone","wasmer_vm::libcalls","",84,[[],["libcall",4]]],[11,"clone","wasmer_vm","",88,[[],["functionbodyptr",3]]],[11,"clone","","",89,[[],["sectionbodyptr",3]]],[11,"default","wasmer_vm::func_data_registry","",7,[[],["inner",3]]],[11,"default","wasmer_vm::module","",37,[[]]],[11,"default","wasmer_vm::sig_registry","",47,[[],["inner",3]]],[11,"default","wasmer_vm::table","",53,[[]]],[11,"default","","",52,[[]]],[11,"default","wasmer_vm::vmcontext","",77,[[]]],[11,"default","","",78,[[]]],[11,"eq","wasmer_vm::export","",1,[[["vmfunction",3]],["bool",15]]],[11,"ne","","",1,[[["vmfunction",3]],["bool",15]]],[11,"eq","wasmer_vm::func_data_registry","",6,[[["vmfuncref",3]],["bool",15]]],[11,"ne","","",6,[[["vmfuncref",3]],["bool",15]]],[11,"eq","wasmer_vm::global","",9,[[["globalerror",4]],["bool",15]]],[11,"ne","","",9,[[["globalerror",4]],["bool",15]]],[11,"eq","wasmer_vm::instance::ref","Two <code>InstanceRef</code> are equal if and only if <code>Self.instance</code> …",13,[[],["bool",15]]],[11,"eq","wasmer_vm::instance","",17,[[["instancehandle",3]],["bool",15]]],[11,"ne","","",17,[[["instancehandle",3]],["bool",15]]],[11,"eq","wasmer_vm::memory","",18,[[["memoryerror",4]],["bool",15]]],[11,"ne","","",18,[[["memoryerror",4]],["bool",15]]],[11,"eq","","",23,[[["memorystyle",4]],["bool",15]]],[11,"ne","","",23,[[["memorystyle",4]],["bool",15]]],[11,"eq","wasmer_vm::module","",40,[[["moduleinfo",3]],["bool",15]]],[11,"eq","wasmer_vm::table","",48,[[["tablestyle",4]],["bool",15]]],[11,"eq","wasmer_vm::trap::trapcode","",56,[[["trapcode",4]],["bool",15]]],[11,"eq","wasmer_vm::vmcontext","",65,[[],["bool",15]]],[11,"eq","","",69,[[["vmfunctionkind",4]],["bool",15]]],[11,"eq","","",77,[[["vmsharedsignatureindex",3]],["bool",15]]],[11,"ne","","",77,[[["vmsharedsignatureindex",3]],["bool",15]]],[11,"eq","","",78,[[["vmcallercheckedanyfunc",3]],["bool",15]]],[11,"ne","","",78,[[["vmcallercheckedanyfunc",3]],["bool",15]]],[11,"eq","wasmer_vm::libcalls","",84,[[["libcall",4]],["bool",15]]],[11,"deref","wasmer_vm::func_data_registry","",6,[[]]],[11,"deref","wasmer_vm","",88,[[]]],[11,"deref","","",89,[[]]],[11,"deref_mut","wasmer_vm::func_data_registry","",6,[[]]],[11,"fmt","wasmer_vm::export","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::func_data_registry","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::global","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::instance::ref","",13,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::instance","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::memory","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::mmap","",36,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::module","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::sig_registry","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::table","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::trap::trapcode","",56,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::trap::traphandlers","",59,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::vmcontext","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::vmoffsets","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::libcalls","",84,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::global","",9,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::memory","",18,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::module","",40,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::trap::trapcode","",56,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_vm::libcalls","",84,[[["formatter",3]],["result",6]]],[11,"hash","wasmer_vm::func_data_registry","",6,[[]]],[11,"hash","wasmer_vm::global","",9,[[]]],[11,"hash","wasmer_vm::memory","",18,[[]]],[11,"hash","","",23,[[]]],[11,"hash","wasmer_vm::table","",48,[[]]],[11,"hash","wasmer_vm::trap::trapcode","",56,[[]]],[11,"hash","wasmer_vm::vmcontext","",65,[[]]],[11,"hash","","",77,[[]]],[11,"hash","","",78,[[]]],[11,"hash","wasmer_vm::libcalls","",84,[[]]],[11,"from_str","wasmer_vm::trap::trapcode","",56,[[["str",15]],["result",4]]],[11,"size_of_val","wasmer_vm::export","",1,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",2,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",3,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",4,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::func_data_registry","",5,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",6,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",7,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::global","",8,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::instance::ref","",13,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::instance","",14,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",15,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",17,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::memory","",23,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",33,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",34,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",35,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::mmap","",36,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::module","",37,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",40,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::sig_registry","",46,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",47,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::table","",48,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",53,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",54,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",55,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::trap::trapcode","",56,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::vmcontext","",65,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",66,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",69,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",70,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",71,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",72,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",73,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",74,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",75,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",76,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",77,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","","",78,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::vmoffsets","",82,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm::libcalls","",84,[[["memoryusagetracker",8]],["usize",15]]],[11,"size_of_val","wasmer_vm","",88,[[["memoryusagetracker",8]],["usize",15]]],[11,"deserialize","wasmer_vm::memory","",23,[[],["result",4]]],[11,"deserialize","wasmer_vm::module","",40,[[],["result",4]]],[11,"deserialize","wasmer_vm::table","",48,[[],["result",4]]],[11,"deserialize","wasmer_vm::trap::trapcode","",56,[[],["result",4]]],[11,"deserialize","wasmer_vm::libcalls","",84,[[],["result",4]]],[11,"serialize","wasmer_vm::memory","",23,[[],["result",4]]],[11,"serialize","wasmer_vm::module","",40,[[],["result",4]]],[11,"serialize","wasmer_vm::table","",48,[[],["result",4]]],[11,"serialize","wasmer_vm::trap::trapcode","",56,[[],["result",4]]],[11,"serialize","wasmer_vm::libcalls","",84,[[],["result",4]]],[11,"resolve","wasmer_vm::memory","",23,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_vm::module","",37,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",41,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","","",40,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_vm::table","",48,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_vm::trap::trapcode","",56,[[["usize",15],["maybeuninit",19]]]],[11,"resolve","wasmer_vm::libcalls","",84,[[["usize",15],["maybeuninit",19]]]],[11,"serialize","wasmer_vm::memory","",23,[[],["result",4]]],[11,"serialize","wasmer_vm::module","",37,[[],["result",4]]],[11,"serialize","","",41,[[],["result",4]]],[11,"serialize","","",40,[[],["result",4]]],[11,"serialize","wasmer_vm::table","",48,[[],["result",4]]],[11,"serialize","wasmer_vm::trap::trapcode","",56,[[],["result",4]]],[11,"serialize","wasmer_vm::libcalls","",84,[[],["result",4]]],[11,"from_abi","wasmer_vm::func_data_registry","",6,[[]]],[11,"into_abi","","",6,[[]]],[11,"to_binary","","",6,[[],["i128",15]]],[11,"from_binary","","",6,[[["i128",15]]]],[11,"is_null","wasmer_vm","Checks if the given ExternRef is null.",87,[[],["bool",15]]],[11,"null","","New null extern ref",87,[[],["vmexternref",3]]],[11,"new","","Make a new extern reference",87,[[],["vmexternref",3]]],[11,"downcast","","Try to downcast to the given value",87,[[],["option",4]]],[11,"ref_inc_by","","A low-level function to increment the strong-count a …",87,[[["usize",15]]]],[11,"ref_clone","","A deep copy of the reference, increments the strong count.",87,[[],["vmexternref",3]]],[11,"ref_drop","","Does an inner drop, decrementing the strong count",87,[[]]]],"p":[[4,"VMExtern"],[3,"VMFunction"],[3,"VMTable"],[3,"VMMemory"],[3,"VMGlobal"],[3,"FuncDataRegistry"],[3,"VMFuncRef"],[3,"Inner"],[3,"Global"],[4,"GlobalError"],[13,"IncorrectType"],[3,"Imports"],[3,"InstanceAllocator"],[3,"InstanceRef"],[3,"Instance"],[4,"ImportFunctionEnv"],[13,"Env"],[3,"InstanceHandle"],[4,"MemoryError"],[13,"CouldNotGrow"],[13,"InvalidMemory"],[13,"MinimumMemoryTooLarge"],[13,"MaximumMemoryTooLarge"],[4,"MemoryStyle"],[13,"Dynamic"],[13,"Static"],[4,"ArchivedMemoryStyle"],[13,"Dynamic"],[13,"Static"],[4,"MemoryStyleResolver"],[13,"Dynamic"],[13,"Static"],[8,"Memory"],[3,"LinearMemory"],[4,"VMMemoryDefinitionOwnership"],[3,"WasmMmap"],[3,"Mmap"],[3,"ModuleId"],[3,"ArchivedModuleId"],[3,"ModuleIdResolver"],[3,"ModuleInfo"],[3,"ArchivableModuleInfo"],[3,"ArchivedArchivableModuleInfo"],[3,"ArchivableModuleInfoResolver"],[3,"ExportsIterator"],[3,"ImportsIterator"],[3,"SignatureRegistry"],[3,"Inner"],[4,"TableStyle"],[4,"ArchivedTableStyle"],[4,"TableStyleResolver"],[8,"Table"],[4,"TableElement"],[19,"RawTableElement"],[3,"LinearTable"],[4,"VMTableDefinitionOwnership"],[4,"TrapCode"],[4,"ArchivedTrapCode"],[4,"TrapCodeResolver"],[4,"Trap"],[13,"Wasm"],[13,"Runtime"],[3,"CallThreadState"],[4,"UnwindReason"],[13,"RuntimeTrap"],[19,"VMFunctionEnvironment"],[3,"VMFunctionImport"],[3,"VMDynamicFunctionContext"],[3,"VMFunctionBody"],[4,"VMFunctionKind"],[3,"VMTableImport"],[3,"VMMemoryImport"],[3,"VMGlobalImport"],[3,"VMMemoryDefinition"],[3,"VMTableDefinition"],[19,"VMGlobalDefinitionStorage"],[3,"VMGlobalDefinition"],[3,"VMSharedSignatureIndex"],[3,"VMCallerCheckedAnyfunc"],[3,"VMBuiltinFunctionIndex"],[3,"VMBuiltinFunctionsArray"],[3,"VMContext"],[3,"VMOffsets"],[3,"TargetSharedSignatureIndex"],[4,"LibCall"],[4,"ArchivedLibCall"],[4,"LibCallResolver"],[3,"VMExternRef"],[3,"FunctionBodyPtr"],[3,"SectionBodyPtr"]]},\
"wasmer_wasi":{"doc":"Wasmer\'s WASI implementation","i":[[0,"macros","wasmer_wasi","Macros to simplify some common WASI-specific tasks.",null,null],[0,"ptr","","This is a wrapper around the <code>WasmPtr</code> abstraction that …",null,null],[3,"Array","wasmer_wasi::ptr","The <code>Array</code> marker type. This type can be used like …",null,null],[8,"FromToNativeWasmType","","A trait to convert a Rust value to a <code>WasmNativeType</code> value,…",null,null],[16,"Native","","Native Wasm type.",0,null],[10,"from_native","","Convert a value of kind <code>Self::Native</code> to <code>Self</code>.",0,[[]]],[10,"to_native","","Convert self to <code>Self::Native</code>.",0,[[]]],[3,"Item","","The <code>Item</code> marker type. This is the default and does not …",null,null],[3,"Memory","","A WebAssembly <code>memory</code> instance.",null,null],[12,"store","","",1,null],[12,"vm_memory","","",1,null],[8,"ValueType","","Trait for a Value type. A Value type is a type that is …",null,null],[3,"BaseWasmPtr","","A zero-cost type that represents a pointer to something …",null,null],[12,"offset","","",2,null],[12,"_phantom","","",2,null],[3,"WasmPtr","","",null,null],[12,"0","","",3,null],[11,"new","","",3,[[["u32",15]]]],[11,"offset","","",3,[[],["u32",15]]],[11,"deref","","",3,[[["memory",3]],[["cell",3],["__wasi_errno_t",6],["result",4]]]],[11,"deref","","",3,[[["u32",15],["memory",3]],[["result",4],["__wasi_errno_t",6]]]],[11,"get_utf8_str","","",3,[[["u32",15],["memory",3]],[["option",4],["str",15]]]],[11,"get_utf8_string","","",3,[[["u32",15],["memory",3]],[["string",3],["option",4]]]],[0,"state","wasmer_wasi","WARNING: the API exposed here is unstable and very …",null,null],[0,"builder","wasmer_wasi::state","Builder system for configuring a [<code>WasiState</code>] and creating …",null,null],[5,"create_wasi_state","wasmer_wasi::state::builder","Creates an empty [<code>WasiStateBuilder</code>].",null,[[["str",15]],["wasistatebuilder",3]]],[3,"WasiStateBuilder","","Convenient builder API for configuring WASI via [<code>WasiState</code>…",null,null],[12,"args","","",4,null],[12,"envs","","",4,null],[12,"preopens","","",4,null],[12,"setup_fs_fn","","",4,null],[12,"stdout_override","","",4,null],[12,"stderr_override","","",4,null],[12,"stdin_override","","",4,null],[4,"WasiStateCreationError","","Error type returned when bad data is given to […",null,null],[13,"EnvironmentVariableFormatError","","",5,null],[13,"ArgumentContainsNulByte","","",5,null],[13,"PreopenedDirectoryNotFound","","",5,null],[13,"PreopenedDirectoryError","","",5,null],[13,"MappedDirAliasFormattingError","","",5,null],[13,"WasiFsCreationError","","",5,null],[13,"WasiFsSetupError","","",5,null],[13,"WasiFsError","","",5,null],[5,"validate_mapped_dir_alias","","",null,[[["str",15]],[["wasistatecreationerror",4],["result",4]]]],[11,"env","","Add an environment variable pair.",4,[[]]],[11,"arg","","Add an argument.",4,[[]]],[11,"envs","","Add multiple environment variable pairs.",4,[[]]],[11,"args","","Add multiple arguments.",4,[[]]],[11,"preopen_dir","","Preopen a directory",4,[[],[["result",4],["wasistatecreationerror",4]]]],[11,"preopen","","Preopen a directory and configure it.",4,[[],[["result",4],["wasistatecreationerror",4]]]],[11,"preopen_dirs","","Preopen a directory.",4,[[],[["result",4],["wasistatecreationerror",4]]]],[11,"map_dir","","Preopen a directory with a different name exposed to the …",4,[[["str",15]],[["result",4],["wasistatecreationerror",4]]]],[11,"map_dirs","","Preopen directorys with a different names exposed to the …",4,[[],[["result",4],["wasistatecreationerror",4]]]],[11,"stdout","","Overwrite the default WASI <code>stdout</code>, if you want to hold on …",4,[[["box",3],["wasifile",8]]]],[11,"stderr","","Overwrite the default WASI <code>stderr</code>, if you want to hold on …",4,[[["box",3],["wasifile",8]]]],[11,"stdin","","Overwrite the default WASI <code>stdin</code>, if you want to hold on …",4,[[["box",3],["wasifile",8]]]],[11,"setup_fs","","Setup the WASI filesystem before running",4,[[["fn",8],["box",3]]]],[11,"build","","Consumes the [<code>WasiStateBuilder</code>] and produces a [<code>WasiState</code>]",4,[[],[["result",4],["wasistate",3],["wasistatecreationerror",4]]]],[11,"finalize","","Consumes the [<code>WasiStateBuilder</code>] and produces a [<code>WasiEnv</code>]",4,[[],[["wasienv",3],["wasistatecreationerror",4],["result",4]]]],[3,"PreopenDirBuilder","","Builder for preopened directories.",null,null],[12,"path","","",6,null],[12,"alias","","",6,null],[12,"read","","",6,null],[12,"write","","",6,null],[12,"create","","",6,null],[3,"PreopenedDir","","The built version of <code>PreopenDirBuilder</code>",null,null],[12,"path","","",7,null],[12,"alias","","",7,null],[12,"read","","",7,null],[12,"write","","",7,null],[12,"create","","",7,null],[11,"new","","Create an empty builder",6,[[]]],[11,"directory","","Point the preopened directory to the path given by <code>po_dir</code>",6,[[]]],[11,"alias","","Make this preopened directory appear to the WASI program …",6,[[["str",15]]]],[11,"read","","Set read permissions affecting files in the directory",6,[[["bool",15]]]],[11,"write","","Set write permissions affecting files in the directory",6,[[["bool",15]]]],[11,"create","","Set create permissions affecting files in the directory",6,[[["bool",15]]]],[11,"build","","",6,[[],[["preopeneddir",3],["result",4],["wasistatecreationerror",4]]]],[0,"types","wasmer_wasi::state","",null,null],[4,"WasiFsError","wasmer_wasi::state::types","Error type for external users",null,null],[13,"BaseNotDirectory","","The fd given as a base was not a directory so the …",8,null],[13,"NotAFile","","Expected a file but found not a file",8,null],[13,"InvalidFd","","The fd given was not usable",8,null],[13,"AlreadyExists","","File exists",8,null],[13,"IOError","","Something failed when doing IO. These errors can …",8,null],[13,"AddressInUse","","The address was in use",8,null],[13,"AddressNotAvailable","","The address could not be found",8,null],[13,"BrokenPipe","","A pipe was closed",8,null],[13,"ConnectionAborted","","The connection was aborted",8,null],[13,"ConnectionRefused","","The connection request was refused",8,null],[13,"ConnectionReset","","The connection was reset",8,null],[13,"Interrupted","","The operation was interrupted before it could finish",8,null],[13,"InvalidData","","Invalid internal data, if the argument data is invalid, …",8,null],[13,"InvalidInput","","The provided data is invalid",8,null],[13,"NotConnected","","Could not perform the operation because there was not an …",8,null],[13,"EntityNotFound","","The requested file or directory could not be found",8,null],[13,"NoDevice","","The requested device couldn\'t be accessed",8,null],[13,"PermissionDenied","","Caller was not allowed to perform this operation",8,null],[13,"TimedOut","","The operation did not complete within the given amount of …",8,null],[13,"UnexpectedEof","","Found EOF when EOF was not expected",8,null],[13,"WouldBlock","","Operation would block, this error lets the caller know …",8,null],[13,"WriteZero","","A call to write returned 0",8,null],[13,"UnknownError","","A WASI error without an external name.  If you encounter …",8,null],[11,"from_wasi_err","","",8,[[["__wasi_errno_t",6]],["wasifserror",4]]],[11,"into_wasi_err","","",8,[[],["__wasi_errno_t",6]]],[8,"WasiFile","","This trait relies on your file closing when it goes out …",null,null],[10,"last_accessed","","the last time the file was accessed in nanoseconds as a …",9,[[],["__wasi_timestamp_t",6]]],[10,"last_modified","","the last time the file was modified in nanoseconds as a …",9,[[],["__wasi_timestamp_t",6]]],[10,"created_time","","the time at which the file was created in nanoseconds as …",9,[[],["__wasi_timestamp_t",6]]],[11,"set_last_accessed","","set the last time the file was accessed in nanoseconds as …",9,[[["__wasi_timestamp_t",6]]]],[11,"set_last_modified","","set the last time the file was modified in nanoseconds as …",9,[[["__wasi_timestamp_t",6]]]],[11,"set_created_time","","set the time at which the file was created in nanoseconds …",9,[[["__wasi_timestamp_t",6]]]],[10,"size","","the size of the file in bytes",9,[[],["u64",15]]],[10,"set_len","","Change the size of the file, if the <code>new_size</code> is greater …",9,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[10,"unlink","","Request deletion of the file",9,[[],[["result",4],["wasifserror",4]]]],[11,"sync_to_disk","","Store file contents and metadata to disk Default …",9,[[],[["result",4],["wasifserror",4]]]],[11,"rename_file","","Moves the file to a new location NOTE: the signature of …",9,[[["path",3]],[["result",4],["wasifserror",4]]]],[10,"bytes_available","","Returns the number of bytes available.  This function …",9,[[],[["result",4],["usize",15],["wasifserror",4]]]],[11,"get_raw_fd","","Used for polling.  Default returns <code>None</code> because this …",9,[[],[["option",4],["i32",15]]]],[17,"_WasiFile_registry","","",null,null],[8,"Upcastable","","Trait needed to get downcasting from <code>WasiFile</code> to work.",null,null],[10,"upcast_any_ref","","",10,[[],["any",8]]],[10,"upcast_any_mut","","",10,[[],["any",8]]],[10,"upcast_any_box","","",10,[[["box",3]],[["any",8],["box",3]]]],[11,"downcast_ref","","",9,[[],["option",4]]],[11,"downcast_mut","","",9,[[],["option",4]]],[4,"PollEvent","","",null,null],[13,"PollIn","","Data available to read",11,null],[13,"PollOut","","Data available to write (will still block if data is …",11,null],[13,"PollError","","Something didn\'t work. ignored as input",11,null],[13,"PollHangUp","","Connection closed. ignored as input",11,null],[13,"PollInvalid","","Invalid request. ignored as input",11,null],[11,"from_i16","","",11,[[["i16",15]],[["option",4],["pollevent",4]]]],[3,"PollEventBuilder","","",null,null],[12,"inner","","",12,null],[6,"PollEventSet","","",null,null],[3,"PollEventIter","","",null,null],[12,"pes","","",13,null],[12,"i","","",13,null],[5,"iterate_poll_events","","",null,[[["i16",15]],["polleventiter",3]]],[5,"poll_event_set_to_platform_poll_events","","",null,[[["i16",15]],["i16",15]]],[5,"platform_poll_events_to_pollevent_set","","",null,[[["i16",15]],["i16",15]]],[11,"new","","",12,[[],["polleventbuilder",3]]],[11,"add","","",12,[[["pollevent",4]],["polleventbuilder",3]]],[11,"build","","",12,[[],["i16",15]]],[5,"poll","","",null,[[],[["u32",15],["result",4],["wasifserror",4]]]],[8,"WasiPath","","",null,null],[3,"HostFile","","A thin wrapper around <code>std::fs::File</code>",null,null],[12,"inner","","",14,null],[12,"host_path","","",14,null],[12,"flags","","",14,null],[18,"READ","","",14,null],[18,"WRITE","","",14,null],[18,"APPEND","","",14,null],[11,"new","","creates a new host file from a <code>std::fs::File</code> and a path",14,[[["file",3],["pathbuf",3],["bool",15]]]],[11,"metadata","","",14,[[],["metadata",3]]],[5,"__init10095839713170728602","","",null,[[]]],[7,"__init10095839713170728602___rust_ctor___ctor","","",null,null],[5,"host_file_bytes_available","","",null,[[["i32",15]],[["result",4],["usize",15],["wasifserror",4]]]],[3,"Stdout","","A wrapper type around Stdout that implements <code>WasiFile</code> and …",null,null],[5,"__init17928626087104593939","","",null,[[]]],[7,"__init17928626087104593939___rust_ctor___ctor","","",null,null],[3,"Stderr","","A wrapper type around Stderr that implements <code>WasiFile</code> and …",null,null],[5,"__init18259907151022521602","","",null,[[]]],[7,"__init18259907151022521602___rust_ctor___ctor","","",null,null],[3,"Stdin","","A wrapper type around Stdin that implements <code>WasiFile</code> and …",null,null],[5,"__init13015983451510593879","","",null,[[]]],[7,"__init13015983451510593879___rust_ctor___ctor","","",null,null],[3,"Pipe","","For piping stdio. Stores all output / input in a …",null,null],[12,"buffer","","",15,null],[11,"new","","",15,[[]]],[5,"__init6402086000070743308","","",null,[[]]],[7,"__init6402086000070743308___rust_ctor___ctor","","",null,null],[3,"Inode","wasmer_wasi::state","An index (and generation) into an <code>Arena</code>.",null,null],[12,"index","","",16,null],[12,"generation","","",16,null],[17,"VIRTUAL_ROOT_FD","","the fd value of the virtual root",null,null],[17,"ALL_RIGHTS","","all the rights enabled",null,null],[17,"STDIN_DEFAULT_RIGHTS","","",null,null],[17,"STDOUT_DEFAULT_RIGHTS","","",null,null],[17,"STDERR_DEFAULT_RIGHTS","","",null,null],[17,"MAX_SYMLINKS","","A completely aribtrary \\\"big enough\\\" number used as the …",null,null],[3,"InodeVal","","A file that Wasi knows about that may or may not be open",null,null],[12,"stat","","",17,null],[12,"is_preopened","","",17,null],[12,"name","","",17,null],[12,"kind","","",17,null],[4,"Kind","","The core of the filesystem abstraction.  Includes …",null,null],[13,"File","","",18,null],[12,"handle","wasmer_wasi::state::Kind","the open file, if it\'s open",19,null],[12,"path","","The path on the host system where the file is located …",19,null],[12,"fd","","Marks the file as a special file that only one <code>fd</code> can …",19,null],[13,"Dir","wasmer_wasi::state","",18,null],[12,"parent","wasmer_wasi::state::Kind","Parent directory",20,null],[12,"path","","The path on the host system where the directory is located",20,null],[12,"entries","","The entries of a directory are lazily filled.",20,null],[13,"Root","wasmer_wasi::state","The same as Dir but without the irrelevant bits The root …",18,null],[12,"entries","wasmer_wasi::state::Kind","",21,null],[13,"Symlink","wasmer_wasi::state","The first two fields are data <em>about</em> the symlink the last …",18,null],[12,"base_po_dir","wasmer_wasi::state::Kind","The preopened dir that this symlink file is relative to …",22,null],[12,"path_to_symlink","","The path to the symlink from the <code>base_po_dir</code>",22,null],[12,"relative_path","","the value of the symlink as a relative path",22,null],[13,"Buffer","wasmer_wasi::state","",18,null],[12,"buffer","wasmer_wasi::state::Kind","",23,null],[3,"Fd","wasmer_wasi::state","",null,null],[12,"rights","","",24,null],[12,"rights_inheriting","","",24,null],[12,"flags","","",24,null],[12,"offset","","",24,null],[12,"open_flags","","Flags that determine how the [<code>Fd</code>] can be used.",24,null],[12,"inode","","",24,null],[18,"READ","","This [<code>Fd</code>] can be used with read system calls.",24,null],[18,"WRITE","","This [<code>Fd</code>] can be used with write system calls.",24,null],[18,"APPEND","","This [<code>Fd</code>] can append in write system calls. Note that the …",24,null],[18,"TRUNCATE","","This [<code>Fd</code>] will delete everything before writing. Note …",24,null],[18,"CREATE","","This [<code>Fd</code>] may create a file before writing to it. Note …",24,null],[3,"WasiFs","","Warning, modifying these fields directly may cause …",null,null],[12,"preopen_fds","","",25,null],[12,"name_map","","",25,null],[12,"inodes","","",25,null],[12,"fd_map","","",25,null],[12,"next_fd","","",25,null],[12,"inode_counter","","",25,null],[12,"orphan_fds","","for fds still open after the file has been deleted",25,null],[11,"new","","Internal function for constructing a [<code>WasiFs</code>].  Please use…",25,[[],[["string",3],["result",4]]]],[11,"new_with_preopen","","Created for the builder API. like <code>new</code> but with more …",25,[[],[["string",3],["result",4]]]],[11,"new_init","","Private helper function to init the filesystem, called in …",25,[[],[["string",3],["result",4]]]],[11,"stdout","","Get the <code>WasiFile</code> object at stdout",25,[[],[["option",4],["result",4],["wasifserror",4]]]],[11,"stdout_mut","","Get the <code>WasiFile</code> object at stdout mutably",25,[[],[["wasifserror",4],["result",4],["option",4]]]],[11,"stderr","","Get the <code>WasiFile</code> object at stderr",25,[[],[["option",4],["result",4],["wasifserror",4]]]],[11,"stderr_mut","","Get the <code>WasiFile</code> object at stderr mutably",25,[[],[["wasifserror",4],["result",4],["option",4]]]],[11,"stdin","","Get the <code>WasiFile</code> object at stdin",25,[[],[["option",4],["result",4],["wasifserror",4]]]],[11,"stdin_mut","","Get the <code>WasiFile</code> object at stdin mutably",25,[[],[["wasifserror",4],["result",4],["option",4]]]],[11,"std_dev_get","","Internal helper function to get a standard device handle. …",25,[[["__wasi_fd_t",6]],[["option",4],["result",4],["wasifserror",4]]]],[11,"std_dev_get_mut","","Internal helper function to mutably get a standard device …",25,[[["__wasi_fd_t",6]],[["wasifserror",4],["result",4],["option",4]]]],[11,"get_next_inode_index","","Returns the next available inode index for creating a new …",25,[[],["u64",15]]],[11,"open_dir_all","","This function is like create dir all, but it also opens …",25,[[["string",3],["__wasi_fd_t",6],["__wasi_fdflags_t",6],["__wasi_rights_t",6]],[["result",4],["__wasi_fd_t",6],["wasifserror",4]]]],[11,"open_file_at","","Opens a user-supplied file in the directory specified …",25,[[["string",3],["__wasi_fd_t",6],["u16",15],["__wasi_fdflags_t",6],["box",3],["__wasi_rights_t",6],["wasifile",8]],[["result",4],["__wasi_fd_t",6],["wasifserror",4]]]],[11,"swap_file","","Change the backing of a given file descriptor Returns the …",25,[[["__wasi_fd_t",6],["box",3],["wasifile",8]],[["wasifserror",4],["result",4],["option",4]]]],[11,"filestat_resync_size","","refresh size from filesystem",25,[[["__wasi_fd_t",6]],[["__wasi_errno_t",6],["__wasi_filesize_t",6],["result",4]]]],[11,"get_inode_at_path_inner","","Internal part of the core path resolution function which …",25,[[["u32",15],["__wasi_fd_t",6],["bool",15],["str",15]],[["__wasi_errno_t",6],["inode",3],["result",4]]]],[11,"path_into_pre_open_and_relative_path","","Splits a path into the first preopened directory that is …",25,[[["path",3]],[["result",4],["__wasi_errno_t",6]]]],[11,"path_relative_to_fd","","",25,[[["__wasi_fd_t",6],["inode",3]],[["__wasi_errno_t",6],["result",4],["pathbuf",3]]]],[11,"path_depth_from_fd","","finds the number of directories between the fd and the …",25,[[["__wasi_fd_t",6],["inode",3]],[["usize",15],["__wasi_errno_t",6],["result",4]]]],[11,"get_inode_at_path","","gets a host file from a base directory and a path this …",25,[[["bool",15],["__wasi_fd_t",6],["str",15]],[["__wasi_errno_t",6],["inode",3],["result",4]]]],[11,"get_parent_inode_at_path","","Returns the parent Dir or Root that the file at a given …",25,[[["bool",15],["__wasi_fd_t",6],["path",3]],[["__wasi_errno_t",6],["result",4]]]],[11,"get_fd","","",25,[[["__wasi_fd_t",6]],[["result",4],["__wasi_errno_t",6],["fd",3]]]],[11,"get_inodeval_mut","","gets either a normal inode or an orphaned inode",25,[[["__wasi_fd_t",6]],[["inodeval",3],["__wasi_errno_t",6],["result",4]]]],[11,"filestat_fd","","",25,[[["__wasi_fd_t",6]],[["result",4],["__wasi_filestat_t",3],["__wasi_errno_t",6]]]],[11,"fdstat","","",25,[[["__wasi_fd_t",6]],[["__wasi_fdstat_t",3],["result",4],["__wasi_errno_t",6]]]],[11,"prestat_fd","","",25,[[["__wasi_fd_t",6]],[["__wasi_errno_t",6],["__wasi_prestat_t",3],["result",4]]]],[11,"flush","","",25,[[["__wasi_fd_t",6]],[["__wasi_errno_t",6],["result",4]]]],[11,"create_inode","","Creates an inode and inserts it given a Kind and some …",25,[[["bool",15],["kind",4],["string",3]],[["__wasi_errno_t",6],["inode",3],["result",4]]]],[11,"create_inode_with_default_stat","","Creates an inode and inserts it given a Kind, does not …",25,[[["bool",15],["kind",4],["string",3]],["inode",3]]],[11,"create_inode_with_stat","","Creates an inode with the given filestat and inserts it.",25,[[["string",3],["kind",4],["__wasi_filestat_t",3],["bool",15]],["inode",3]]],[11,"create_fd","","",25,[[["inode",3],["u16",15],["__wasi_fdflags_t",6],["__wasi_rights_t",6]],[["__wasi_errno_t",6],["__wasi_fd_t",6],["result",4]]]],[11,"remove_inode","","Low level function to remove an inode, that is it deletes …",25,[[["inode",3]],[["option",4],["inodeval",3]]]],[11,"create_virtual_root","","",25,[[],["inode",3]]],[11,"create_stdout","","",25,[[]]],[11,"create_stdin","","",25,[[]]],[11,"create_stderr","","",25,[[]]],[11,"create_std_dev_inner","","",25,[[["__wasi_rights_t",6],["__wasi_fd_t",6],["__wasi_fdflags_t",6],["box",3],["str",15],["wasifile",8]]]],[11,"get_stat_for_kind","","",25,[[["kind",4]],[["option",4],["__wasi_filestat_t",3]]]],[11,"close_fd","","Closes an open FD, handling all details such as FD being …",25,[[["__wasi_fd_t",6]],[["__wasi_errno_t",6],["result",4]]]],[3,"WasiState","","Top level data type containing all* the state with which …",null,null],[12,"fs","","",26,null],[12,"args","","",26,null],[12,"envs","","",26,null],[11,"new","","Create a [<code>WasiStateBuilder</code>] to construct a validated …",26,[[],["wasistatebuilder",3]]],[11,"freeze","","Turn the WasiState into bytes",26,[[],[["option",4],["vec",3]]]],[11,"unfreeze","","Get a WasiState from bytes",26,[[],["option",4]]],[5,"host_file_type_to_wasi_file_type","","",null,[[["filetype",3]],["__wasi_filetype_t",6]]],[0,"syscalls","wasmer_wasi","",null,null],[0,"types","wasmer_wasi::syscalls","",null,null],[0,"snapshot0","wasmer_wasi::syscalls::types","",null,null],[6,"__wasi_linkcount_t","wasmer_wasi::syscalls::types::snapshot0","",null,null],[3,"__wasi_subscription_clock_t","","",null,null],[12,"userdata","","",27,null],[12,"clock_id","","",27,null],[12,"timeout","","",27,null],[12,"precision","","",27,null],[12,"flags","","",27,null],[19,"__wasi_subscription_u","","",null,null],[12,"clock","","",28,null],[12,"fd_readwrite","","",28,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",29,null],[12,"type_","","",29,null],[12,"u","","",29,null],[6,"__wasi_whence_t","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[3,"__wasi_filestat_t","","",null,null],[12,"st_dev","","",30,null],[12,"st_ino","","",30,null],[12,"st_filetype","","",30,null],[12,"st_nlink","","",30,null],[12,"st_size","","",30,null],[12,"st_atim","","",30,null],[12,"st_mtim","","",30,null],[12,"st_ctim","","",30,null],[6,"__wasi_advice_t","wasmer_wasi::syscalls::types","",null,null],[17,"__WASI_ADVICE_NORMAL","","",null,null],[17,"__WASI_ADVICE_SEQUENTIAL","","",null,null],[17,"__WASI_ADVICE_RANDOM","","",null,null],[17,"__WASI_ADVICE_WILLNEED","","",null,null],[17,"__WASI_ADVICE_DONTNEED","","",null,null],[17,"__WASI_ADVICE_NOREUSE","","",null,null],[3,"__wasi_ciovec_t","","",null,null],[12,"buf","","",31,null],[12,"buf_len","","",31,null],[6,"__wasi_clockid_t","","",null,null],[17,"__WASI_CLOCK_REALTIME","","",null,null],[17,"__WASI_CLOCK_MONOTONIC","","",null,null],[17,"__WASI_CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"__WASI_CLOCK_THREAD_CPUTIME_ID","","",null,null],[6,"__wasi_device_t","","",null,null],[6,"__wasi_dircookie_t","","",null,null],[17,"__WASI_DIRCOOKIE_START","","",null,null],[3,"__wasi_dirent_t","","",null,null],[12,"d_next","","",32,null],[12,"d_ino","","",32,null],[12,"d_namlen","","",32,null],[12,"d_type","","",32,null],[5,"dirent_to_le_bytes","","",null,[[["__wasi_dirent_t",3]],[["vec",3],["u8",15]]]],[6,"__wasi_errno_t","","",null,null],[17,"__WASI_ESUCCESS","","",null,null],[17,"__WASI_E2BIG","","",null,null],[17,"__WASI_EACCES","","",null,null],[17,"__WASI_EADDRINUSE","","",null,null],[17,"__WASI_EADDRNOTAVAIL","","",null,null],[17,"__WASI_EAFNOSUPPORT","","",null,null],[17,"__WASI_EAGAIN","","",null,null],[17,"__WASI_EALREADY","","",null,null],[17,"__WASI_EBADF","","",null,null],[17,"__WASI_EBADMSG","","",null,null],[17,"__WASI_EBUSY","","",null,null],[17,"__WASI_ECANCELED","","",null,null],[17,"__WASI_ECHILD","","",null,null],[17,"__WASI_ECONNABORTED","","",null,null],[17,"__WASI_ECONNREFUSED","","",null,null],[17,"__WASI_ECONNRESET","","",null,null],[17,"__WASI_EDEADLK","","",null,null],[17,"__WASI_EDESTADDRREQ","","",null,null],[17,"__WASI_EDOM","","",null,null],[17,"__WASI_EDQUOT","","",null,null],[17,"__WASI_EEXIST","","",null,null],[17,"__WASI_EFAULT","","",null,null],[17,"__WASI_EFBIG","","",null,null],[17,"__WASI_EHOSTUNREACH","","",null,null],[17,"__WASI_EIDRM","","",null,null],[17,"__WASI_EILSEQ","","",null,null],[17,"__WASI_EINPROGRESS","","",null,null],[17,"__WASI_EINTR","","",null,null],[17,"__WASI_EINVAL","","",null,null],[17,"__WASI_EIO","","",null,null],[17,"__WASI_EISCONN","","",null,null],[17,"__WASI_EISDIR","","",null,null],[17,"__WASI_ELOOP","","",null,null],[17,"__WASI_EMFILE","","",null,null],[17,"__WASI_EMLINK","","",null,null],[17,"__WASI_EMSGSIZE","","",null,null],[17,"__WASI_EMULTIHOP","","",null,null],[17,"__WASI_ENAMETOOLONG","","",null,null],[17,"__WASI_ENETDOWN","","",null,null],[17,"__WASI_ENETRESET","","",null,null],[17,"__WASI_ENETUNREACH","","",null,null],[17,"__WASI_ENFILE","","",null,null],[17,"__WASI_ENOBUFS","","",null,null],[17,"__WASI_ENODEV","","",null,null],[17,"__WASI_ENOENT","","",null,null],[17,"__WASI_ENOEXEC","","",null,null],[17,"__WASI_ENOLCK","","",null,null],[17,"__WASI_ENOLINK","","",null,null],[17,"__WASI_ENOMEM","","",null,null],[17,"__WASI_ENOMSG","","",null,null],[17,"__WASI_ENOPROTOOPT","","",null,null],[17,"__WASI_ENOSPC","","",null,null],[17,"__WASI_ENOSYS","","",null,null],[17,"__WASI_ENOTCONN","","",null,null],[17,"__WASI_ENOTDIR","","",null,null],[17,"__WASI_ENOTEMPTY","","",null,null],[17,"__WASI_ENOTRECOVERABLE","","",null,null],[17,"__WASI_ENOTSOCK","","",null,null],[17,"__WASI_ENOTSUP","","",null,null],[17,"__WASI_ENOTTY","","",null,null],[17,"__WASI_ENXIO","","",null,null],[17,"__WASI_EOVERFLOW","","",null,null],[17,"__WASI_EOWNERDEAD","","",null,null],[17,"__WASI_EPERM","","",null,null],[17,"__WASI_EPIPE","","",null,null],[17,"__WASI_EPROTO","","",null,null],[17,"__WASI_EPROTONOSUPPORT","","",null,null],[17,"__WASI_EPROTOTYPE","","",null,null],[17,"__WASI_ERANGE","","",null,null],[17,"__WASI_EROFS","","",null,null],[17,"__WASI_ESPIPE","","",null,null],[17,"__WASI_ESRCH","","",null,null],[17,"__WASI_ESTALE","","",null,null],[17,"__WASI_ETIMEDOUT","","",null,null],[17,"__WASI_ETXTBSY","","",null,null],[17,"__WASI_EXDEV","","",null,null],[17,"__WASI_ENOTCAPABLE","","",null,null],[3,"__wasi_event_fd_readwrite_t","","",null,null],[12,"nbytes","","",33,null],[12,"flags","","",33,null],[19,"__wasi_event_u","","",null,null],[12,"fd_readwrite","","",34,null],[4,"EventEnum","","",null,null],[13,"FdReadWrite","","",35,null],[12,"nbytes","wasmer_wasi::syscalls::types::EventEnum","",36,null],[12,"flags","","",36,null],[11,"untagged","wasmer_wasi::syscalls::types","",35,[[],["__wasi_event_u",19]]],[3,"__wasi_event_t","","",null,null],[12,"userdata","","",37,null],[12,"error","","",37,null],[12,"type_","","",37,null],[12,"u","","",37,null],[11,"tagged","","",37,[[],[["option",4],["eventenum",4]]]],[6,"__wasi_eventrwflags_t","","",null,null],[17,"__WASI_EVENT_FD_READWRITE_HANGUP","","",null,null],[6,"__wasi_eventtype_t","","",null,null],[17,"__WASI_EVENTTYPE_CLOCK","","",null,null],[17,"__WASI_EVENTTYPE_FD_READ","","",null,null],[17,"__WASI_EVENTTYPE_FD_WRITE","","",null,null],[5,"eventtype_to_str","","",null,[[["__wasi_eventtype_t",6]],["str",15]]],[6,"__wasi_exitcode_t","","",null,null],[6,"__wasi_fd_t","","",null,null],[17,"__WASI_STDIN_FILENO","","",null,null],[17,"__WASI_STDOUT_FILENO","","",null,null],[17,"__WASI_STDERR_FILENO","","",null,null],[6,"__wasi_fdflags_t","","",null,null],[17,"__WASI_FDFLAG_APPEND","","",null,null],[17,"__WASI_FDFLAG_DSYNC","","",null,null],[17,"__WASI_FDFLAG_NONBLOCK","","",null,null],[17,"__WASI_FDFLAG_RSYNC","","",null,null],[17,"__WASI_FDFLAG_SYNC","","",null,null],[6,"__wasi_preopentype_t","","",null,null],[17,"__WASI_PREOPENTYPE_DIR","","",null,null],[3,"__wasi_prestat_u_dir_t","","",null,null],[12,"pr_name_len","","",38,null],[19,"__wasi_prestat_u","","",null,null],[12,"dir","","",39,null],[3,"__wasi_prestat_t","","",null,null],[12,"pr_type","","",40,null],[12,"u","","",40,null],[4,"PrestatEnum","","",null,null],[13,"Dir","","",41,null],[12,"pr_name_len","wasmer_wasi::syscalls::types::PrestatEnum","",42,null],[11,"untagged","wasmer_wasi::syscalls::types","",41,[[],["__wasi_prestat_u",19]]],[11,"tagged","","",40,[[],[["option",4],["prestatenum",4]]]],[3,"__wasi_fdstat_t","","",null,null],[12,"fs_filetype","","",43,null],[12,"fs_flags","","",43,null],[12,"fs_rights_base","","",43,null],[12,"fs_rights_inheriting","","",43,null],[6,"__wasi_filedelta_t","","",null,null],[6,"__wasi_filesize_t","","",null,null],[3,"__wasi_filestat_t","","",null,null],[12,"st_dev","","",44,null],[12,"st_ino","","",44,null],[12,"st_filetype","","",44,null],[12,"st_nlink","","",44,null],[12,"st_size","","",44,null],[12,"st_atim","","",44,null],[12,"st_mtim","","",44,null],[12,"st_ctim","","",44,null],[5,"wasi_filetype_to_name","","",null,[[["__wasi_filetype_t",6]],["str",15]]],[6,"__wasi_filetype_t","","",null,null],[17,"__WASI_FILETYPE_UNKNOWN","","",null,null],[17,"__WASI_FILETYPE_BLOCK_DEVICE","","",null,null],[17,"__WASI_FILETYPE_CHARACTER_DEVICE","","",null,null],[17,"__WASI_FILETYPE_DIRECTORY","","",null,null],[17,"__WASI_FILETYPE_REGULAR_FILE","","",null,null],[17,"__WASI_FILETYPE_SOCKET_DGRAM","","",null,null],[17,"__WASI_FILETYPE_SOCKET_STREAM","","",null,null],[17,"__WASI_FILETYPE_SYMBOLIC_LINK","","",null,null],[6,"__wasi_fstflags_t","","",null,null],[17,"__WASI_FILESTAT_SET_ATIM","","",null,null],[17,"__WASI_FILESTAT_SET_ATIM_NOW","","",null,null],[17,"__WASI_FILESTAT_SET_MTIM","","",null,null],[17,"__WASI_FILESTAT_SET_MTIM_NOW","","",null,null],[6,"__wasi_inode_t","","",null,null],[3,"__wasi_iovec_t","","",null,null],[12,"buf","","",45,null],[12,"buf_len","","",45,null],[6,"__wasi_linkcount_t","","",null,null],[6,"__wasi_lookupflags_t","","",null,null],[17,"__WASI_LOOKUP_SYMLINK_FOLLOW","","",null,null],[6,"__wasi_oflags_t","","",null,null],[17,"__WASI_O_CREAT","","",null,null],[17,"__WASI_O_DIRECTORY","","",null,null],[17,"__WASI_O_EXCL","","",null,null],[17,"__WASI_O_TRUNC","","",null,null],[6,"__wasi_riflags_t","","",null,null],[17,"__WASI_SOCK_RECV_PEEK","","",null,null],[17,"__WASI_SOCK_RECV_WAITALL","","",null,null],[6,"__wasi_rights_t","","",null,null],[17,"__WASI_RIGHT_FD_DATASYNC","","",null,null],[17,"__WASI_RIGHT_FD_READ","","",null,null],[17,"__WASI_RIGHT_FD_SEEK","","",null,null],[17,"__WASI_RIGHT_FD_FDSTAT_SET_FLAGS","","",null,null],[17,"__WASI_RIGHT_FD_SYNC","","",null,null],[17,"__WASI_RIGHT_FD_TELL","","",null,null],[17,"__WASI_RIGHT_FD_WRITE","","",null,null],[17,"__WASI_RIGHT_FD_ADVISE","","",null,null],[17,"__WASI_RIGHT_FD_ALLOCATE","","",null,null],[17,"__WASI_RIGHT_PATH_CREATE_DIRECTORY","","",null,null],[17,"__WASI_RIGHT_PATH_CREATE_FILE","","",null,null],[17,"__WASI_RIGHT_PATH_LINK_SOURCE","","",null,null],[17,"__WASI_RIGHT_PATH_LINK_TARGET","","",null,null],[17,"__WASI_RIGHT_PATH_OPEN","","",null,null],[17,"__WASI_RIGHT_FD_READDIR","","",null,null],[17,"__WASI_RIGHT_PATH_READLINK","","",null,null],[17,"__WASI_RIGHT_PATH_RENAME_SOURCE","","",null,null],[17,"__WASI_RIGHT_PATH_RENAME_TARGET","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHT_PATH_SYMLINK","","",null,null],[17,"__WASI_RIGHT_PATH_REMOVE_DIRECTORY","","",null,null],[17,"__WASI_RIGHT_PATH_UNLINK_FILE","","",null,null],[17,"__WASI_RIGHT_POLL_FD_READWRITE","","",null,null],[17,"__WASI_RIGHT_SOCK_SHUTDOWN","","",null,null],[5,"print_right_set","","function for debugging rights issues",null,[[["__wasi_rights_t",6]]]],[5,"right_to_string","","expects a single right, returns None if out of bounds or …",null,[[["__wasi_rights_t",6]],[["str",15],["option",4]]]],[6,"__wasi_roflags_t","","",null,null],[17,"__WASI_SOCK_RECV_DATA_TRUNCATED","","",null,null],[6,"__wasi_sdflags_t","","",null,null],[17,"__WASI_SHUT_RD","","",null,null],[17,"__WASI_SHUT_WR","","",null,null],[6,"__wasi_siflags_t","","",null,null],[6,"__wasi_signal_t","","",null,null],[17,"__WASI_SIGHUP","","",null,null],[17,"__WASI_SIGINT","","",null,null],[17,"__WASI_SIGQUIT","","",null,null],[17,"__WASI_SIGILL","","",null,null],[17,"__WASI_SIGTRAP","","",null,null],[17,"__WASI_SIGABRT","","",null,null],[17,"__WASI_SIGBUS","","",null,null],[17,"__WASI_SIGFPE","","",null,null],[17,"__WASI_SIGKILL","","",null,null],[17,"__WASI_SIGUSR1","","",null,null],[17,"__WASI_SIGSEGV","","",null,null],[17,"__WASI_SIGUSR2","","",null,null],[17,"__WASI_SIGPIPE","","",null,null],[17,"__WASI_SIGALRM","","",null,null],[17,"__WASI_SIGTERM","","",null,null],[17,"__WASI_SIGCHLD","","",null,null],[17,"__WASI_SIGCONT","","",null,null],[17,"__WASI_SIGSTOP","","",null,null],[17,"__WASI_SIGTSTP","","",null,null],[17,"__WASI_SIGTTIN","","",null,null],[17,"__WASI_SIGTTOU","","",null,null],[17,"__WASI_SIGURG","","",null,null],[17,"__WASI_SIGXCPU","","",null,null],[17,"__WASI_SIGXFSZ","","",null,null],[17,"__WASI_SIGVTALRM","","",null,null],[17,"__WASI_SIGPROF","","",null,null],[17,"__WASI_SIGWINCH","","",null,null],[17,"__WASI_SIGPOLL","","",null,null],[17,"__WASI_SIGPWR","","",null,null],[17,"__WASI_SIGSYS","","",null,null],[6,"__wasi_subclockflags_t","","",null,null],[17,"__WASI_SUBSCRIPTION_CLOCK_ABSTIME","","",null,null],[3,"__wasi_subscription_clock_t","","",null,null],[12,"clock_id","","",46,null],[12,"timeout","","",46,null],[12,"precision","","",46,null],[12,"flags","","",46,null],[3,"__wasi_subscription_fs_readwrite_t","","",null,null],[12,"fd","","",47,null],[19,"__wasi_subscription_u","","",null,null],[12,"clock","","",48,null],[12,"fd_readwrite","","",48,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",49,null],[12,"type_","","",49,null],[12,"u","","",49,null],[4,"EventType","","Safe Rust wrapper around <code>__wasi_subscription_t::type_</code> and …",null,null],[13,"Clock","","",50,null],[13,"Read","","",50,null],[13,"Write","","",50,null],[11,"raw_tag","","",50,[[],["__wasi_eventtype_t",6]]],[3,"WasiSubscription","","Safe Rust wrapper around <code>__wasi_subscription_t</code>",null,null],[12,"user_data","","",51,null],[12,"event_type","","",51,null],[4,"SubscriptionEnum","","",null,null],[13,"Clock","","",52,null],[13,"FdReadWrite","","",52,null],[11,"tagged","","",49,[[],[["subscriptionenum",4],["option",4]]]],[6,"__wasi_timestamp_t","","",null,null],[6,"__wasi_userdata_t","","",null,null],[6,"__wasi_whence_t","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[0,"unix","wasmer_wasi::syscalls","",null,null],[5,"platform_clock_res_get","wasmer_wasi::syscalls::unix","",null,[[["cell",3],["__wasi_clockid_t",6]],["__wasi_errno_t",6]]],[5,"platform_clock_time_get","","",null,[[["__wasi_timestamp_t",6],["cell",3],["__wasi_clockid_t",6]],["__wasi_errno_t",6]]],[0,"legacy","wasmer_wasi::syscalls","These modules provide wrappers and implementations for …",null,null],[0,"snapshot0","wasmer_wasi::syscalls::legacy","",null,null],[5,"fd_filestat_get","wasmer_wasi::syscalls::legacy::snapshot0","Wrapper around <code>syscalls::fd_filestat_get</code> with extra logic …",null,[[["wasmptr",3],["__wasi_fd_t",6],["wasienv",3],["__wasi_filestat_t",3]],["__wasi_errno_t",6]]],[5,"path_filestat_get","","Wrapper around <code>syscalls::path_filestat_get</code> with extra …",null,[[["u32",15],["__wasi_filestat_t",3],["__wasi_fd_t",6],["wasienv",3],["__wasi_lookupflags_t",6],["u8",15],["wasmptr",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"fd_seek","","Wrapper around <code>syscalls::fd_seek</code> with extra logic to …",null,[[["wasmptr",3],["__wasi_filedelta_t",6],["wasienv",3],["__wasi_fd_t",6],["__wasi_whence_t",6],["__wasi_filesize_t",6]],["__wasi_errno_t",6]]],[5,"poll_oneoff","","Wrapper around <code>syscalls::poll_oneoff</code> with extra logic to …",null,[[["u32",15],["wasmptr",3],["wasienv",3],["__wasi_subscription_t",3],["wasmptr",3],["__wasi_event_t",3],["wasmptr",3],["array",3]],["__wasi_errno_t",6]]],[5,"write_bytes_inner","wasmer_wasi::syscalls","",null,[[["write",8],["memory",3]],[["u32",15],["result",4],["__wasi_errno_t",6]]]],[5,"write_bytes","","",null,[[["write",8],["memory",3]],[["u32",15],["result",4],["__wasi_errno_t",6]]]],[5,"read_bytes","","",null,[[["read",8],["memory",3]],[["u32",15],["result",4],["__wasi_errno_t",6]]]],[5,"has_rights","","checks that <code>rights_check_set</code> is a subset of <code>rights_set</code>",null,[[["__wasi_rights_t",6]],["bool",15]]],[5,"write_buffer_array","","",null,[[["wasmptr",3],["u8",15],["memory",3],["wasmptr",3],["array",3]],["__wasi_errno_t",6]]],[5,"get_current_time_in_nanos","","",null,[[],[["__wasi_timestamp_t",6],["__wasi_errno_t",6],["result",4]]]],[5,"args_get","","<code>args_get()</code>Read command-line argument data. The sizes of …",null,[[["u8",15],["wasienv",3],["wasmptr",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"args_sizes_get","","<code>args_sizes_get()</code>Return command-line argument data sizes. …",null,[[["u32",15],["wasmptr",3],["wasienv",3]],["__wasi_errno_t",6]]],[5,"clock_res_get","","<code>clock_res_get()</code>Get the resolution of the specified clock …",null,[[["__wasi_timestamp_t",6],["wasmptr",3],["wasienv",3],["__wasi_clockid_t",6]],["__wasi_errno_t",6]]],[5,"clock_time_get","","<code>clock_time_get()</code>Get the time of the specified clock …",null,[[["__wasi_timestamp_t",6],["wasmptr",3],["wasienv",3],["__wasi_clockid_t",6]],["__wasi_errno_t",6]]],[5,"environ_get","","<code>environ_get()</code>Read environment variable data. The sizes of …",null,[[["u8",15],["wasienv",3],["wasmptr",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"environ_sizes_get","","<code>environ_sizes_get()</code>Return command-line argument data …",null,[[["u32",15],["wasmptr",3],["wasienv",3]],["__wasi_errno_t",6]]],[5,"fd_advise","","<code>fd_advise()</code>Advise the system about how a file will be used…",null,[[["__wasi_fd_t",6],["__wasi_filesize_t",6],["wasienv",3],["__wasi_advice_t",6]],["__wasi_errno_t",6]]],[5,"fd_allocate","","<code>fd_allocate</code>Allocate extra space for a file descriptor …",null,[[["__wasi_fd_t",6],["__wasi_filesize_t",6],["wasienv",3]],["__wasi_errno_t",6]]],[5,"fd_close","","<code>fd_close()</code>Close an open file descriptor Inputs:",null,[[["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_datasync","","<code>fd_datasync()</code>Synchronize the file data to disk Inputs:",null,[[["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_fdstat_get","","<code>fd_fdstat_get()</code>Get metadata of a file descriptor Input:",null,[[["__wasi_fdstat_t",3],["__wasi_fd_t",6],["wasienv",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"fd_fdstat_set_flags","","<code>fd_fdstat_set_flags()</code>Set file descriptor flags for a file …",null,[[["wasienv",3],["__wasi_fd_t",6],["__wasi_fdflags_t",6]],["__wasi_errno_t",6]]],[5,"fd_fdstat_set_rights","","<code>fd_fdstat_set_rights()</code>Set the rights of a file …",null,[[["__wasi_fd_t",6],["wasienv",3],["__wasi_rights_t",6]],["__wasi_errno_t",6]]],[5,"fd_filestat_get","","<code>fd_filestat_get()</code>Get the metadata of an open file Input:",null,[[["__wasi_fd_t",6],["__wasi_filestat_t",3],["wasmptr",3],["wasienv",3]],["__wasi_errno_t",6]]],[5,"fd_filestat_set_size","","<code>fd_filestat_set_size()</code>Change the size of an open file, …",null,[[["wasienv",3],["__wasi_fd_t",6],["__wasi_filesize_t",6]],["__wasi_errno_t",6]]],[5,"fd_filestat_set_times","","<code>fd_filestat_set_times()</code>Set timestamp metadata on a file …",null,[[["__wasi_timestamp_t",6],["__wasi_fd_t",6],["wasienv",3],["__wasi_fstflags_t",6]],["__wasi_errno_t",6]]],[5,"fd_pread","","<code>fd_pread()</code>Read from the file at the given offset without …",null,[[["u32",15],["__wasi_fd_t",6],["wasmptr",3],["wasienv",3],["__wasi_filesize_t",6],["wasmptr",3],["__wasi_iovec_t",3],["array",3]],["__wasi_errno_t",6]]],[5,"fd_prestat_get","","<code>fd_prestat_get()</code>Get metadata about a preopened file …",null,[[["__wasi_fd_t",6],["__wasi_prestat_t",3],["wasmptr",3],["wasienv",3]],["__wasi_errno_t",6]]],[5,"fd_prestat_dir_name","","",null,[[["u32",15],["__wasi_fd_t",6],["u8",15],["wasienv",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"fd_pwrite","","<code>fd_pwrite()</code>Write to a file without adjusting its offset …",null,[[["u32",15],["__wasi_fd_t",6],["__wasi_ciovec_t",3],["wasmptr",3],["wasienv",3],["__wasi_filesize_t",6],["wasmptr",3],["array",3]],["__wasi_errno_t",6]]],[5,"fd_read","","<code>fd_read()</code>Read data from file descriptor Inputs:",null,[[["u32",15],["__wasi_fd_t",6],["wasmptr",3],["wasienv",3],["wasmptr",3],["__wasi_iovec_t",3],["array",3]],["__wasi_errno_t",6]]],[5,"fd_readdir","","<code>fd_readdir()</code>Read data from directory specified by file …",null,[[["u32",15],["__wasi_fd_t",6],["wasmptr",3],["u8",15],["wasienv",3],["__wasi_dircookie_t",6],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"fd_renumber","","<code>fd_renumber()</code>Atomically copy file descriptor Inputs:",null,[[["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_seek","","<code>fd_seek()</code>Update file descriptor offset Inputs:",null,[[["__wasi_fd_t",6],["__wasi_whence_t",6],["__wasi_filesize_t",6],["wasienv",3],["__wasi_filedelta_t",6],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"fd_sync","","<code>fd_sync()</code>Synchronize file and metadata to disk (TODO: …",null,[[["wasienv",3],["__wasi_fd_t",6]],["__wasi_errno_t",6]]],[5,"fd_tell","","<code>fd_tell()</code>Get the offset of the file descriptor Inputs:",null,[[["__wasi_fd_t",6],["__wasi_filesize_t",6],["wasienv",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"fd_write","","<code>fd_write()</code>Write data to the file descriptor Inputs:",null,[[["u32",15],["__wasi_fd_t",6],["__wasi_ciovec_t",3],["wasmptr",3],["wasienv",3],["wasmptr",3],["array",3]],["__wasi_errno_t",6]]],[5,"path_create_directory","","<code>path_create_directory()</code>Create directory at a path Inputs:",null,[[["u32",15],["__wasi_fd_t",6],["u8",15],["wasienv",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"path_filestat_get","","<code>path_filestat_get()</code>Access metadata about a file or …",null,[[["u32",15],["__wasi_fd_t",6],["u8",15],["wasienv",3],["wasmptr",3],["__wasi_lookupflags_t",6],["__wasi_filestat_t",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"path_filestat_set_times","","<code>path_filestat_set_times()</code>Update time metadata on a file …",null,[[["u32",15],["__wasi_fd_t",6],["__wasi_timestamp_t",6],["u8",15],["wasienv",3],["__wasi_lookupflags_t",6],["__wasi_fstflags_t",6],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"path_link","","<code>path_link()</code>Create a hard link Inputs:",null,[[["u32",15],["__wasi_fd_t",6],["u8",15],["wasienv",3],["__wasi_lookupflags_t",6],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"path_open","","<code>path_open()</code>Open file located at the given path Inputs:",null,[[["u32",15],["__wasi_fd_t",6],["__wasi_fdflags_t",6],["u8",15],["wasienv",3],["wasmptr",3],["__wasi_rights_t",6],["__wasi_lookupflags_t",6],["__wasi_oflags_t",6],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"path_open_dynamic","","",null,[[["wasienv",3]],[["runtimeerror",3],["result",4],["vec",3]]]],[5,"path_readlink","","<code>path_readlink()</code>Read the value of a symlink Inputs:",null,[[["u32",15],["__wasi_fd_t",6],["wasmptr",3],["u8",15],["wasienv",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"path_remove_directory","","Returns __WASI_ENOTEMTPY if directory is not empty",null,[[["u32",15],["__wasi_fd_t",6],["u8",15],["wasienv",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"path_rename","","<code>path_rename()</code>Rename a file or directory Inputs:",null,[[["u32",15],["__wasi_fd_t",6],["u8",15],["wasienv",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"path_symlink","","<code>path_symlink()</code>Create a symlink Inputs:",null,[[["u32",15],["__wasi_fd_t",6],["u8",15],["wasienv",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"path_unlink_file","","<code>path_unlink_file()</code>Unlink a file, deleting if the number …",null,[[["u32",15],["__wasi_fd_t",6],["u8",15],["wasienv",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"poll_oneoff","","<code>poll_oneoff()</code>Concurrently poll for a set of events Inputs:",null,[[["u32",15],["__wasi_subscription_t",3],["wasmptr",3],["wasmptr",3],["wasienv",3],["__wasi_event_t",3],["wasmptr",3],["array",3]],["__wasi_errno_t",6]]],[5,"proc_exit","","",null,[[["wasienv",3],["__wasi_exitcode_t",6]]]],[5,"proc_raise","","",null,[[["wasienv",3],["__wasi_signal_t",6]],["__wasi_errno_t",6]]],[5,"random_get","","<code>random_get()</code>Fill buffer with high-quality random data.  …",null,[[["u32",15],["u8",15],["wasienv",3],["array",3],["wasmptr",3]],["__wasi_errno_t",6]]],[5,"sched_yield","","<code>sched_yield()</code>Yields execution of the thread",null,[[["wasienv",3]],["__wasi_errno_t",6]]],[5,"sock_recv","","",null,[[["u32",15],["__wasi_fd_t",6],["__wasi_riflags_t",6],["wasmptr",3],["wasienv",3],["__wasi_roflags_t",6],["wasmptr",3],["wasmptr",3],["__wasi_iovec_t",3],["array",3]],["__wasi_errno_t",6]]],[5,"sock_send","","",null,[[["u32",15],["__wasi_fd_t",6],["__wasi_ciovec_t",3],["wasmptr",3],["wasienv",3],["__wasi_siflags_t",6],["wasmptr",3],["array",3]],["__wasi_errno_t",6]]],[5,"sock_shutdown","","",null,[[["wasienv",3],["__wasi_fd_t",6],["__wasi_sdflags_t",6]],["__wasi_errno_t",6]]],[0,"utils","wasmer_wasi","",null,null],[5,"is_wasi_module","wasmer_wasi::utils","Check if a provided module is compiled for some version …",null,[[["module",3]],["bool",15]]],[4,"WasiVersion","","The version of WASI. This is determined by the imports …",null,null],[13,"Snapshot0","","<code>wasi_unstable</code>.",53,null],[13,"Snapshot1","","<code>wasi_snapshot_preview1</code>.",53,null],[13,"Latest","","Latest version.",53,null],[11,"get_namespace_str","","Get the version as its namespace str as it appears in …",53,[[],["str",15]]],[17,"SNAPSHOT0_NAMESPACE","","Namespace for the <code>Snapshot0</code> version.",null,null],[17,"SNAPSHOT1_NAMESPACE","","Namespace for the <code>Snapshot1</code> version.",null,null],[5,"get_wasi_version","","Detect the version of WASI being used based on the import …",null,[[["bool",15],["module",3]],[["option",4],["wasiversion",4]]]],[5,"get_wasi_versions","","Like [<code>get_wasi_version</code>] but detects multiple WASI …",null,[[["bool",15],["module",3]],[["btreeset",3],["option",4]]]],[0,"types","wasmer_wasi","",null,null],[0,"snapshot0","wasmer_wasi::types","",null,null],[6,"__wasi_linkcount_t","wasmer_wasi::types::snapshot0","",null,null],[3,"__wasi_subscription_clock_t","","",null,null],[12,"userdata","","",27,null],[12,"clock_id","","",27,null],[12,"timeout","","",27,null],[12,"precision","","",27,null],[12,"flags","","",27,null],[19,"__wasi_subscription_u","","",null,null],[12,"clock","","",28,null],[12,"fd_readwrite","","",28,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",29,null],[12,"type_","","",29,null],[12,"u","","",29,null],[6,"__wasi_whence_t","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[3,"__wasi_filestat_t","","",null,null],[12,"st_dev","","",30,null],[12,"st_ino","","",30,null],[12,"st_filetype","","",30,null],[12,"st_nlink","","",30,null],[12,"st_size","","",30,null],[12,"st_atim","","",30,null],[12,"st_mtim","","",30,null],[12,"st_ctim","","",30,null],[6,"__wasi_advice_t","wasmer_wasi::types","",null,null],[17,"__WASI_ADVICE_NORMAL","","",null,null],[17,"__WASI_ADVICE_SEQUENTIAL","","",null,null],[17,"__WASI_ADVICE_RANDOM","","",null,null],[17,"__WASI_ADVICE_WILLNEED","","",null,null],[17,"__WASI_ADVICE_DONTNEED","","",null,null],[17,"__WASI_ADVICE_NOREUSE","","",null,null],[3,"__wasi_ciovec_t","","",null,null],[12,"buf","","",31,null],[12,"buf_len","","",31,null],[6,"__wasi_clockid_t","","",null,null],[17,"__WASI_CLOCK_REALTIME","","",null,null],[17,"__WASI_CLOCK_MONOTONIC","","",null,null],[17,"__WASI_CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"__WASI_CLOCK_THREAD_CPUTIME_ID","","",null,null],[6,"__wasi_device_t","","",null,null],[6,"__wasi_dircookie_t","","",null,null],[17,"__WASI_DIRCOOKIE_START","","",null,null],[3,"__wasi_dirent_t","","",null,null],[12,"d_next","","",32,null],[12,"d_ino","","",32,null],[12,"d_namlen","","",32,null],[12,"d_type","","",32,null],[5,"dirent_to_le_bytes","","",null,[[["__wasi_dirent_t",3]],[["vec",3],["u8",15]]]],[6,"__wasi_errno_t","","",null,null],[17,"__WASI_ESUCCESS","","",null,null],[17,"__WASI_E2BIG","","",null,null],[17,"__WASI_EACCES","","",null,null],[17,"__WASI_EADDRINUSE","","",null,null],[17,"__WASI_EADDRNOTAVAIL","","",null,null],[17,"__WASI_EAFNOSUPPORT","","",null,null],[17,"__WASI_EAGAIN","","",null,null],[17,"__WASI_EALREADY","","",null,null],[17,"__WASI_EBADF","","",null,null],[17,"__WASI_EBADMSG","","",null,null],[17,"__WASI_EBUSY","","",null,null],[17,"__WASI_ECANCELED","","",null,null],[17,"__WASI_ECHILD","","",null,null],[17,"__WASI_ECONNABORTED","","",null,null],[17,"__WASI_ECONNREFUSED","","",null,null],[17,"__WASI_ECONNRESET","","",null,null],[17,"__WASI_EDEADLK","","",null,null],[17,"__WASI_EDESTADDRREQ","","",null,null],[17,"__WASI_EDOM","","",null,null],[17,"__WASI_EDQUOT","","",null,null],[17,"__WASI_EEXIST","","",null,null],[17,"__WASI_EFAULT","","",null,null],[17,"__WASI_EFBIG","","",null,null],[17,"__WASI_EHOSTUNREACH","","",null,null],[17,"__WASI_EIDRM","","",null,null],[17,"__WASI_EILSEQ","","",null,null],[17,"__WASI_EINPROGRESS","","",null,null],[17,"__WASI_EINTR","","",null,null],[17,"__WASI_EINVAL","","",null,null],[17,"__WASI_EIO","","",null,null],[17,"__WASI_EISCONN","","",null,null],[17,"__WASI_EISDIR","","",null,null],[17,"__WASI_ELOOP","","",null,null],[17,"__WASI_EMFILE","","",null,null],[17,"__WASI_EMLINK","","",null,null],[17,"__WASI_EMSGSIZE","","",null,null],[17,"__WASI_EMULTIHOP","","",null,null],[17,"__WASI_ENAMETOOLONG","","",null,null],[17,"__WASI_ENETDOWN","","",null,null],[17,"__WASI_ENETRESET","","",null,null],[17,"__WASI_ENETUNREACH","","",null,null],[17,"__WASI_ENFILE","","",null,null],[17,"__WASI_ENOBUFS","","",null,null],[17,"__WASI_ENODEV","","",null,null],[17,"__WASI_ENOENT","","",null,null],[17,"__WASI_ENOEXEC","","",null,null],[17,"__WASI_ENOLCK","","",null,null],[17,"__WASI_ENOLINK","","",null,null],[17,"__WASI_ENOMEM","","",null,null],[17,"__WASI_ENOMSG","","",null,null],[17,"__WASI_ENOPROTOOPT","","",null,null],[17,"__WASI_ENOSPC","","",null,null],[17,"__WASI_ENOSYS","","",null,null],[17,"__WASI_ENOTCONN","","",null,null],[17,"__WASI_ENOTDIR","","",null,null],[17,"__WASI_ENOTEMPTY","","",null,null],[17,"__WASI_ENOTRECOVERABLE","","",null,null],[17,"__WASI_ENOTSOCK","","",null,null],[17,"__WASI_ENOTSUP","","",null,null],[17,"__WASI_ENOTTY","","",null,null],[17,"__WASI_ENXIO","","",null,null],[17,"__WASI_EOVERFLOW","","",null,null],[17,"__WASI_EOWNERDEAD","","",null,null],[17,"__WASI_EPERM","","",null,null],[17,"__WASI_EPIPE","","",null,null],[17,"__WASI_EPROTO","","",null,null],[17,"__WASI_EPROTONOSUPPORT","","",null,null],[17,"__WASI_EPROTOTYPE","","",null,null],[17,"__WASI_ERANGE","","",null,null],[17,"__WASI_EROFS","","",null,null],[17,"__WASI_ESPIPE","","",null,null],[17,"__WASI_ESRCH","","",null,null],[17,"__WASI_ESTALE","","",null,null],[17,"__WASI_ETIMEDOUT","","",null,null],[17,"__WASI_ETXTBSY","","",null,null],[17,"__WASI_EXDEV","","",null,null],[17,"__WASI_ENOTCAPABLE","","",null,null],[3,"__wasi_event_fd_readwrite_t","","",null,null],[12,"nbytes","","",33,null],[12,"flags","","",33,null],[19,"__wasi_event_u","","",null,null],[12,"fd_readwrite","","",34,null],[4,"EventEnum","","",null,null],[13,"FdReadWrite","","",35,null],[12,"nbytes","wasmer_wasi::types::EventEnum","",36,null],[12,"flags","","",36,null],[3,"__wasi_event_t","wasmer_wasi::types","",null,null],[12,"userdata","","",37,null],[12,"error","","",37,null],[12,"type_","","",37,null],[12,"u","","",37,null],[6,"__wasi_eventrwflags_t","","",null,null],[17,"__WASI_EVENT_FD_READWRITE_HANGUP","","",null,null],[6,"__wasi_eventtype_t","","",null,null],[17,"__WASI_EVENTTYPE_CLOCK","","",null,null],[17,"__WASI_EVENTTYPE_FD_READ","","",null,null],[17,"__WASI_EVENTTYPE_FD_WRITE","","",null,null],[5,"eventtype_to_str","","",null,[[["__wasi_eventtype_t",6]],["str",15]]],[6,"__wasi_exitcode_t","","",null,null],[6,"__wasi_fd_t","","",null,null],[17,"__WASI_STDIN_FILENO","","",null,null],[17,"__WASI_STDOUT_FILENO","","",null,null],[17,"__WASI_STDERR_FILENO","","",null,null],[6,"__wasi_fdflags_t","","",null,null],[17,"__WASI_FDFLAG_APPEND","","",null,null],[17,"__WASI_FDFLAG_DSYNC","","",null,null],[17,"__WASI_FDFLAG_NONBLOCK","","",null,null],[17,"__WASI_FDFLAG_RSYNC","","",null,null],[17,"__WASI_FDFLAG_SYNC","","",null,null],[6,"__wasi_preopentype_t","","",null,null],[17,"__WASI_PREOPENTYPE_DIR","","",null,null],[3,"__wasi_prestat_u_dir_t","","",null,null],[12,"pr_name_len","","",38,null],[19,"__wasi_prestat_u","","",null,null],[12,"dir","","",39,null],[3,"__wasi_prestat_t","","",null,null],[12,"pr_type","","",40,null],[12,"u","","",40,null],[4,"PrestatEnum","","",null,null],[13,"Dir","","",41,null],[12,"pr_name_len","wasmer_wasi::types::PrestatEnum","",42,null],[3,"__wasi_fdstat_t","wasmer_wasi::types","",null,null],[12,"fs_filetype","","",43,null],[12,"fs_flags","","",43,null],[12,"fs_rights_base","","",43,null],[12,"fs_rights_inheriting","","",43,null],[6,"__wasi_filedelta_t","","",null,null],[6,"__wasi_filesize_t","","",null,null],[3,"__wasi_filestat_t","","",null,null],[12,"st_dev","","",44,null],[12,"st_ino","","",44,null],[12,"st_filetype","","",44,null],[12,"st_nlink","","",44,null],[12,"st_size","","",44,null],[12,"st_atim","","",44,null],[12,"st_mtim","","",44,null],[12,"st_ctim","","",44,null],[5,"wasi_filetype_to_name","","",null,[[["__wasi_filetype_t",6]],["str",15]]],[6,"__wasi_filetype_t","","",null,null],[17,"__WASI_FILETYPE_UNKNOWN","","",null,null],[17,"__WASI_FILETYPE_BLOCK_DEVICE","","",null,null],[17,"__WASI_FILETYPE_CHARACTER_DEVICE","","",null,null],[17,"__WASI_FILETYPE_DIRECTORY","","",null,null],[17,"__WASI_FILETYPE_REGULAR_FILE","","",null,null],[17,"__WASI_FILETYPE_SOCKET_DGRAM","","",null,null],[17,"__WASI_FILETYPE_SOCKET_STREAM","","",null,null],[17,"__WASI_FILETYPE_SYMBOLIC_LINK","","",null,null],[6,"__wasi_fstflags_t","","",null,null],[17,"__WASI_FILESTAT_SET_ATIM","","",null,null],[17,"__WASI_FILESTAT_SET_ATIM_NOW","","",null,null],[17,"__WASI_FILESTAT_SET_MTIM","","",null,null],[17,"__WASI_FILESTAT_SET_MTIM_NOW","","",null,null],[6,"__wasi_inode_t","","",null,null],[3,"__wasi_iovec_t","","",null,null],[12,"buf","","",45,null],[12,"buf_len","","",45,null],[6,"__wasi_linkcount_t","","",null,null],[6,"__wasi_lookupflags_t","","",null,null],[17,"__WASI_LOOKUP_SYMLINK_FOLLOW","","",null,null],[6,"__wasi_oflags_t","","",null,null],[17,"__WASI_O_CREAT","","",null,null],[17,"__WASI_O_DIRECTORY","","",null,null],[17,"__WASI_O_EXCL","","",null,null],[17,"__WASI_O_TRUNC","","",null,null],[6,"__wasi_riflags_t","","",null,null],[17,"__WASI_SOCK_RECV_PEEK","","",null,null],[17,"__WASI_SOCK_RECV_WAITALL","","",null,null],[6,"__wasi_rights_t","","",null,null],[17,"__WASI_RIGHT_FD_DATASYNC","","",null,null],[17,"__WASI_RIGHT_FD_READ","","",null,null],[17,"__WASI_RIGHT_FD_SEEK","","",null,null],[17,"__WASI_RIGHT_FD_FDSTAT_SET_FLAGS","","",null,null],[17,"__WASI_RIGHT_FD_SYNC","","",null,null],[17,"__WASI_RIGHT_FD_TELL","","",null,null],[17,"__WASI_RIGHT_FD_WRITE","","",null,null],[17,"__WASI_RIGHT_FD_ADVISE","","",null,null],[17,"__WASI_RIGHT_FD_ALLOCATE","","",null,null],[17,"__WASI_RIGHT_PATH_CREATE_DIRECTORY","","",null,null],[17,"__WASI_RIGHT_PATH_CREATE_FILE","","",null,null],[17,"__WASI_RIGHT_PATH_LINK_SOURCE","","",null,null],[17,"__WASI_RIGHT_PATH_LINK_TARGET","","",null,null],[17,"__WASI_RIGHT_PATH_OPEN","","",null,null],[17,"__WASI_RIGHT_FD_READDIR","","",null,null],[17,"__WASI_RIGHT_PATH_READLINK","","",null,null],[17,"__WASI_RIGHT_PATH_RENAME_SOURCE","","",null,null],[17,"__WASI_RIGHT_PATH_RENAME_TARGET","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHT_PATH_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_GET","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_SET_SIZE","","",null,null],[17,"__WASI_RIGHT_FD_FILESTAT_SET_TIMES","","",null,null],[17,"__WASI_RIGHT_PATH_SYMLINK","","",null,null],[17,"__WASI_RIGHT_PATH_REMOVE_DIRECTORY","","",null,null],[17,"__WASI_RIGHT_PATH_UNLINK_FILE","","",null,null],[17,"__WASI_RIGHT_POLL_FD_READWRITE","","",null,null],[17,"__WASI_RIGHT_SOCK_SHUTDOWN","","",null,null],[5,"print_right_set","","function for debugging rights issues",null,[[["__wasi_rights_t",6]]]],[5,"right_to_string","","expects a single right, returns None if out of bounds or …",null,[[["__wasi_rights_t",6]],[["str",15],["option",4]]]],[6,"__wasi_roflags_t","","",null,null],[17,"__WASI_SOCK_RECV_DATA_TRUNCATED","","",null,null],[6,"__wasi_sdflags_t","","",null,null],[17,"__WASI_SHUT_RD","","",null,null],[17,"__WASI_SHUT_WR","","",null,null],[6,"__wasi_siflags_t","","",null,null],[6,"__wasi_signal_t","","",null,null],[17,"__WASI_SIGHUP","","",null,null],[17,"__WASI_SIGINT","","",null,null],[17,"__WASI_SIGQUIT","","",null,null],[17,"__WASI_SIGILL","","",null,null],[17,"__WASI_SIGTRAP","","",null,null],[17,"__WASI_SIGABRT","","",null,null],[17,"__WASI_SIGBUS","","",null,null],[17,"__WASI_SIGFPE","","",null,null],[17,"__WASI_SIGKILL","","",null,null],[17,"__WASI_SIGUSR1","","",null,null],[17,"__WASI_SIGSEGV","","",null,null],[17,"__WASI_SIGUSR2","","",null,null],[17,"__WASI_SIGPIPE","","",null,null],[17,"__WASI_SIGALRM","","",null,null],[17,"__WASI_SIGTERM","","",null,null],[17,"__WASI_SIGCHLD","","",null,null],[17,"__WASI_SIGCONT","","",null,null],[17,"__WASI_SIGSTOP","","",null,null],[17,"__WASI_SIGTSTP","","",null,null],[17,"__WASI_SIGTTIN","","",null,null],[17,"__WASI_SIGTTOU","","",null,null],[17,"__WASI_SIGURG","","",null,null],[17,"__WASI_SIGXCPU","","",null,null],[17,"__WASI_SIGXFSZ","","",null,null],[17,"__WASI_SIGVTALRM","","",null,null],[17,"__WASI_SIGPROF","","",null,null],[17,"__WASI_SIGWINCH","","",null,null],[17,"__WASI_SIGPOLL","","",null,null],[17,"__WASI_SIGPWR","","",null,null],[17,"__WASI_SIGSYS","","",null,null],[6,"__wasi_subclockflags_t","","",null,null],[17,"__WASI_SUBSCRIPTION_CLOCK_ABSTIME","","",null,null],[3,"__wasi_subscription_clock_t","","",null,null],[12,"clock_id","","",46,null],[12,"timeout","","",46,null],[12,"precision","","",46,null],[12,"flags","","",46,null],[3,"__wasi_subscription_fs_readwrite_t","","",null,null],[12,"fd","","",47,null],[19,"__wasi_subscription_u","","",null,null],[12,"clock","","",48,null],[12,"fd_readwrite","","",48,null],[3,"__wasi_subscription_t","","",null,null],[12,"userdata","","",49,null],[12,"type_","","",49,null],[12,"u","","",49,null],[4,"EventType","","Safe Rust wrapper around <code>__wasi_subscription_t::type_</code> and …",null,null],[13,"Clock","","",50,null],[13,"Read","","",50,null],[13,"Write","","",50,null],[3,"WasiSubscription","","Safe Rust wrapper around <code>__wasi_subscription_t</code>",null,null],[12,"user_data","","",51,null],[12,"event_type","","",51,null],[4,"SubscriptionEnum","","",null,null],[13,"Clock","","",52,null],[13,"FdReadWrite","","",52,null],[6,"__wasi_timestamp_t","","",null,null],[6,"__wasi_userdata_t","","",null,null],[6,"__wasi_whence_t","","",null,null],[17,"__WASI_WHENCE_SET","","",null,null],[17,"__WASI_WHENCE_CUR","","",null,null],[17,"__WASI_WHENCE_END","","",null,null],[3,"Fd","wasmer_wasi","",null,null],[12,"rights","","",24,null],[12,"rights_inheriting","","",24,null],[12,"flags","","",24,null],[12,"offset","","",24,null],[12,"open_flags","","Flags that determine how the [<code>Fd</code>] can be used.",24,null],[12,"inode","","",24,null],[3,"Pipe","","For piping stdio. Stores all output / input in a …",null,null],[12,"buffer","","",15,null],[3,"Stderr","","A wrapper type around Stderr that implements <code>WasiFile</code> and …",null,null],[3,"Stdin","","A wrapper type around Stdin that implements <code>WasiFile</code> and …",null,null],[3,"Stdout","","A wrapper type around Stdout that implements <code>WasiFile</code> and …",null,null],[8,"WasiFile","","This trait relies on your file closing when it goes out …",null,null],[10,"last_accessed","","the last time the file was accessed in nanoseconds as a …",9,[[],["__wasi_timestamp_t",6]]],[10,"last_modified","","the last time the file was modified in nanoseconds as a …",9,[[],["__wasi_timestamp_t",6]]],[10,"created_time","","the time at which the file was created in nanoseconds as …",9,[[],["__wasi_timestamp_t",6]]],[11,"set_last_accessed","wasmer_wasi::state::types","set the last time the file was accessed in nanoseconds as …",9,[[["__wasi_timestamp_t",6]]]],[11,"set_last_modified","","set the last time the file was modified in nanoseconds as …",9,[[["__wasi_timestamp_t",6]]]],[11,"set_created_time","","set the time at which the file was created in nanoseconds …",9,[[["__wasi_timestamp_t",6]]]],[10,"size","wasmer_wasi","the size of the file in bytes",9,[[],["u64",15]]],[10,"set_len","","Change the size of the file, if the <code>new_size</code> is greater …",9,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[10,"unlink","","Request deletion of the file",9,[[],[["result",4],["wasifserror",4]]]],[11,"sync_to_disk","wasmer_wasi::state::types","Store file contents and metadata to disk Default …",9,[[],[["result",4],["wasifserror",4]]]],[11,"rename_file","","Moves the file to a new location NOTE: the signature of …",9,[[["path",3]],[["result",4],["wasifserror",4]]]],[10,"bytes_available","wasmer_wasi","Returns the number of bytes available.  This function …",9,[[],[["result",4],["usize",15],["wasifserror",4]]]],[11,"get_raw_fd","wasmer_wasi::state::types","Used for polling.  Default returns <code>None</code> because this …",9,[[],[["option",4],["i32",15]]]],[3,"WasiFs","wasmer_wasi","Warning, modifying these fields directly may cause …",null,null],[12,"preopen_fds","","",25,null],[12,"name_map","","",25,null],[12,"inodes","","",25,null],[12,"fd_map","","",25,null],[12,"next_fd","","",25,null],[12,"inode_counter","","",25,null],[12,"orphan_fds","","for fds still open after the file has been deleted",25,null],[4,"WasiFsError","","Error type for external users",null,null],[13,"BaseNotDirectory","","The fd given as a base was not a directory so the …",8,null],[13,"NotAFile","","Expected a file but found not a file",8,null],[13,"InvalidFd","","The fd given was not usable",8,null],[13,"AlreadyExists","","File exists",8,null],[13,"IOError","","Something failed when doing IO. These errors can …",8,null],[13,"AddressInUse","","The address was in use",8,null],[13,"AddressNotAvailable","","The address could not be found",8,null],[13,"BrokenPipe","","A pipe was closed",8,null],[13,"ConnectionAborted","","The connection was aborted",8,null],[13,"ConnectionRefused","","The connection request was refused",8,null],[13,"ConnectionReset","","The connection was reset",8,null],[13,"Interrupted","","The operation was interrupted before it could finish",8,null],[13,"InvalidData","","Invalid internal data, if the argument data is invalid, …",8,null],[13,"InvalidInput","","The provided data is invalid",8,null],[13,"NotConnected","","Could not perform the operation because there was not an …",8,null],[13,"EntityNotFound","","The requested file or directory could not be found",8,null],[13,"NoDevice","","The requested device couldn\'t be accessed",8,null],[13,"PermissionDenied","","Caller was not allowed to perform this operation",8,null],[13,"TimedOut","","The operation did not complete within the given amount of …",8,null],[13,"UnexpectedEof","","Found EOF when EOF was not expected",8,null],[13,"WouldBlock","","Operation would block, this error lets the caller know …",8,null],[13,"WriteZero","","A call to write returned 0",8,null],[13,"UnknownError","","A WASI error without an external name.  If you encounter …",8,null],[3,"WasiState","","Top level data type containing all* the state with which …",null,null],[12,"fs","","",26,null],[12,"args","","",26,null],[12,"envs","","",26,null],[3,"WasiStateBuilder","","Convenient builder API for configuring WASI via [<code>WasiState</code>…",null,null],[12,"args","","",4,null],[12,"envs","","",4,null],[12,"preopens","","",4,null],[12,"setup_fs_fn","","",4,null],[12,"stdout_override","","",4,null],[12,"stderr_override","","",4,null],[12,"stdin_override","","",4,null],[4,"WasiStateCreationError","","Error type returned when bad data is given to […",null,null],[13,"EnvironmentVariableFormatError","","",5,null],[13,"ArgumentContainsNulByte","","",5,null],[13,"PreopenedDirectoryNotFound","","",5,null],[13,"PreopenedDirectoryError","","",5,null],[13,"MappedDirAliasFormattingError","","",5,null],[13,"WasiFsCreationError","","",5,null],[13,"WasiFsSetupError","","",5,null],[13,"WasiFsError","","",5,null],[17,"ALL_RIGHTS","","all the rights enabled",null,null],[17,"VIRTUAL_ROOT_FD","","the fd value of the virtual root",null,null],[5,"get_wasi_version","","Detect the version of WASI being used based on the import …",null,[[["bool",15],["module",3]],[["option",4],["wasiversion",4]]]],[5,"get_wasi_versions","","Like [<code>get_wasi_version</code>] but detects multiple WASI …",null,[[["bool",15],["module",3]],[["btreeset",3],["option",4]]]],[5,"is_wasi_module","","Check if a provided module is compiled for some version …",null,[[["module",3]],["bool",15]]],[4,"WasiVersion","","The version of WASI. This is determined by the imports …",null,null],[13,"Snapshot0","","<code>wasi_unstable</code>.",53,null],[13,"Snapshot1","","<code>wasi_snapshot_preview1</code>.",53,null],[13,"Latest","","Latest version.",53,null],[4,"WasiError","","This is returned in <code>RuntimeError</code>. Use <code>downcast</code> or …",null,null],[13,"Exit","","",54,null],[13,"UnknownWasiVersion","","",54,null],[3,"WasiEnv","","The environment provided to the WASI imports.",null,null],[12,"state","","Shared state of the WASI system. Manages all the data …",55,null],[12,"memory","","",55,null],[11,"memory_ref","","Get access to the underlying data.",55,[[],[["option",4],["memory",3]]]],[11,"memory_ref_unchecked","","Gets the item without checking if it\'s been initialized.",55,[[],["memory",3]]],[11,"new","","",55,[[["wasistate",3]]]],[11,"import_object","","Get an <code>ImportObject</code> for a specific version of WASI …",55,[[["module",3]],[["result",4],["importobject",3],["wasierror",4]]]],[11,"import_object_for_all_wasi_versions","","Like <code>import_object</code> but containing all the WASI versions …",55,[[["module",3]],[["box",3],["result",4],["wasierror",4]]]],[11,"state","","Get the WASI state",55,[[],[["mutexguard",3],["wasistate",3]]]],[11,"memory","","Get a reference to the memory",55,[[],["memory",3]]],[11,"get_memory_and_wasi_state","","",55,[[["u32",15]]]],[5,"generate_import_object_from_env","","Create an [<code>ImportObject</code>] with an existing [<code>WasiEnv</code>]. …",null,[[["store",3],["wasienv",3],["wasiversion",4]],["importobject",3]]],[5,"get_path_open_for_store","","",null,[[["store",3],["wasienv",3]],["function",3]]],[5,"generate_import_object_snapshot0","","Combines a state generating function with the import list …",null,[[["store",3],["wasienv",3]],["importobject",3]]],[5,"generate_import_object_snapshot1","","Combines a state generating function with the import list …",null,[[["store",3],["wasienv",3]],["importobject",3]]],[11,"from","wasmer_wasi::ptr","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"pointer_metadata","","",56,[[]]],[11,"init","","",56,[[],["usize",15]]],[11,"deref","","",56,[[["usize",15]]]],[11,"deref_mut","","",56,[[["usize",15]]]],[11,"drop","","",56,[[["usize",15]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"pointer_metadata","","",57,[[]]],[11,"init","","",57,[[],["usize",15]]],[11,"deref","","",57,[[["usize",15]]]],[11,"deref_mut","","",57,[[["usize",15]]]],[11,"drop","","",57,[[["usize",15]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_array","","",2,[[]]],[11,"from_slice","","",2,[[],[["tryfromsliceerror",3],["result",4]]]],[11,"into_array","","",2,[[]]],[11,"empty_array","","",2,[[]]],[11,"from_c_struct","","",2,[[]]],[11,"into_c_struct","","",2,[[]]],[11,"wasm_types","","",2,[[]]],[11,"equivalent","","",2,[[],["bool",15]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from_array","","",3,[[]]],[11,"from_slice","","",3,[[],[["tryfromsliceerror",3],["result",4]]]],[11,"into_array","","",3,[[]]],[11,"empty_array","","",3,[[]]],[11,"from_c_struct","","",3,[[]]],[11,"into_c_struct","","",3,[[]]],[11,"wasm_types","","",3,[[]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","wasmer_wasi::state::builder","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"pointer_metadata","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","wasmer_wasi::state::types","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[],["bool",15]]],[11,"pointer_metadata","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"pointer_metadata","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"pointer_metadata","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"pointer_metadata","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"pointer_metadata","","",58,[[]]],[11,"init","","",58,[[],["usize",15]]],[11,"deref","","",58,[[["usize",15]]]],[11,"deref_mut","","",58,[[["usize",15]]]],[11,"drop","","",58,[[["usize",15]]]],[11,"erased_serialize","","",58,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"pointer_metadata","","",59,[[]]],[11,"init","","",59,[[],["usize",15]]],[11,"deref","","",59,[[["usize",15]]]],[11,"deref_mut","","",59,[[["usize",15]]]],[11,"drop","","",59,[[["usize",15]]]],[11,"erased_serialize","","",59,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"pointer_metadata","","",60,[[]]],[11,"init","","",60,[[],["usize",15]]],[11,"deref","","",60,[[["usize",15]]]],[11,"deref_mut","","",60,[[["usize",15]]]],[11,"drop","","",60,[[["usize",15]]]],[11,"erased_serialize","","",60,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"pointer_metadata","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","wasmer_wasi::state","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"equivalent","","",16,[[],["bool",15]]],[11,"pointer_metadata","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"erased_serialize","","",16,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"pointer_metadata","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"erased_serialize","","",18,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"pointer_metadata","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"erased_serialize","","",24,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"pointer_metadata","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"erased_serialize","","",25,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"pointer_metadata","","",26,[[]]],[11,"init","","",26,[[],["usize",15]]],[11,"deref","","",26,[[["usize",15]]]],[11,"deref_mut","","",26,[[["usize",15]]]],[11,"drop","","",26,[[["usize",15]]]],[11,"erased_serialize","","",26,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","wasmer_wasi::syscalls::types::snapshot0","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[],["bool",15]]],[11,"pointer_metadata","","",27,[[]]],[11,"init","","",27,[[],["usize",15]]],[11,"deref","","",27,[[["usize",15]]]],[11,"deref_mut","","",27,[[["usize",15]]]],[11,"drop","","",27,[[["usize",15]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"pointer_metadata","","",28,[[]]],[11,"init","","",28,[[],["usize",15]]],[11,"deref","","",28,[[["usize",15]]]],[11,"deref_mut","","",28,[[["usize",15]]]],[11,"drop","","",28,[[["usize",15]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"pointer_metadata","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[],["bool",15]]],[11,"pointer_metadata","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"erased_serialize","","",30,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","wasmer_wasi::syscalls::types","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[],["bool",15]]],[11,"pointer_metadata","","",31,[[]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[],["bool",15]]],[11,"pointer_metadata","","",32,[[]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[],["bool",15]]],[11,"pointer_metadata","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"pointer_metadata","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"pointer_metadata","","",35,[[]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"pointer_metadata","","",37,[[]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"equivalent","","",38,[[],["bool",15]]],[11,"pointer_metadata","","",38,[[]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"pointer_metadata","","",39,[[]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"pointer_metadata","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"pointer_metadata","","",41,[[]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"equivalent","","",43,[[],["bool",15]]],[11,"pointer_metadata","","",43,[[]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"equivalent","","",44,[[],["bool",15]]],[11,"pointer_metadata","","",44,[[]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"erased_serialize","","",44,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"equivalent","","",45,[[],["bool",15]]],[11,"pointer_metadata","","",45,[[]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"equivalent","","",46,[[],["bool",15]]],[11,"pointer_metadata","","",46,[[]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"equivalent","","",47,[[],["bool",15]]],[11,"pointer_metadata","","",47,[[]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"pointer_metadata","","",48,[[]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"pointer_metadata","","",49,[[]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"pointer_metadata","","",50,[[]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"pointer_metadata","","",51,[[]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"pointer_metadata","","",52,[[]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"from","wasmer_wasi::utils","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"equivalent","","",53,[[],["bool",15]]],[11,"pointer_metadata","","",53,[[]]],[11,"init","","",53,[[],["usize",15]]],[11,"deref","","",53,[[["usize",15]]]],[11,"deref_mut","","",53,[[["usize",15]]]],[11,"drop","","",53,[[["usize",15]]]],[11,"from","wasmer_wasi","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_string","","",54,[[],["string",3]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"pointer_metadata","","",54,[[]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"pointer_metadata","","",55,[[]]],[11,"init","","",55,[[],["usize",15]]],[11,"deref","","",55,[[["usize",15]]]],[11,"deref_mut","","",55,[[["usize",15]]]],[11,"drop","","",55,[[["usize",15]]]],[11,"fmt","wasmer_wasi::ptr","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"to_export","","",1,[[],["export",4]]],[11,"get_self_from_extern","","",1,[[["extern",4]],[["result",4],["exporterror",4],["memory",3]]]],[11,"clone","","",1,[[],["memory",3]]],[11,"clone","","",2,[[],["wasmptr",3]]],[11,"to_native","","",2,[[]]],[11,"from_native","","",2,[[],["wasmptr",3]]],[11,"size_of_val","","",1,[[["memoryusagetracker",8]],["usize",15]]],[11,"eq","","",2,[[["wasmptr",3]],["bool",15]]],[11,"fmt","wasmer_wasi::state","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",16,[[],["index",3]]],[11,"eq","","",16,[[["index",3]],["bool",15]]],[11,"ne","","",16,[[["index",3]],["bool",15]]],[11,"deserialize","","",16,[[],[["index",3],["result",4]]]],[11,"partial_cmp","","",16,[[["index",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["index",3]],["bool",15]]],[11,"le","","",16,[[["index",3]],["bool",15]]],[11,"gt","","",16,[[["index",3]],["bool",15]]],[11,"ge","","",16,[[["index",3]],["bool",15]]],[11,"hash","","",16,[[]]],[11,"cmp","","",16,[[["index",3]],["ordering",4]]],[11,"serialize","","",16,[[],["result",4]]],[11,"last_accessed","wasmer_wasi::state::types","",14,[[],["u64",15]]],[11,"set_last_accessed","","",14,[[["__wasi_timestamp_t",6]]]],[11,"last_modified","","",14,[[],["u64",15]]],[11,"set_last_modified","","",14,[[["__wasi_timestamp_t",6]]]],[11,"created_time","","",14,[[],["u64",15]]],[11,"set_created_time","","",14,[[["__wasi_timestamp_t",6]]]],[11,"size","","",14,[[],["u64",15]]],[11,"set_len","","",14,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",14,[[],[["result",4],["wasifserror",4]]]],[11,"sync_to_disk","","",14,[[],[["result",4],["wasifserror",4]]]],[11,"rename_file","","",14,[[["path",3]],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",14,[[],[["result",4],["usize",15],["wasifserror",4]]]],[11,"get_raw_fd","","",14,[[],[["option",4],["i32",15]]]],[11,"last_accessed","","",58,[[],["u64",15]]],[11,"last_modified","","",58,[[],["u64",15]]],[11,"created_time","","",58,[[],["u64",15]]],[11,"size","","",58,[[],["u64",15]]],[11,"set_len","","",58,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",58,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",58,[[],[["result",4],["usize",15],["wasifserror",4]]]],[11,"get_raw_fd","","",58,[[],[["option",4],["i32",15]]]],[11,"last_accessed","","",59,[[],["u64",15]]],[11,"last_modified","","",59,[[],["u64",15]]],[11,"created_time","","",59,[[],["u64",15]]],[11,"size","","",59,[[],["u64",15]]],[11,"set_len","","",59,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",59,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",59,[[],[["result",4],["usize",15],["wasifserror",4]]]],[11,"get_raw_fd","","",59,[[],[["option",4],["i32",15]]]],[11,"last_accessed","","",60,[[],["u64",15]]],[11,"last_modified","","",60,[[],["u64",15]]],[11,"created_time","","",60,[[],["u64",15]]],[11,"size","","",60,[[],["u64",15]]],[11,"set_len","","",60,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",60,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",60,[[],[["result",4],["usize",15],["wasifserror",4]]]],[11,"get_raw_fd","","",60,[[],[["option",4],["i32",15]]]],[11,"last_accessed","","",15,[[],["u64",15]]],[11,"last_modified","","",15,[[],["u64",15]]],[11,"created_time","","",15,[[],["u64",15]]],[11,"size","","",15,[[],["u64",15]]],[11,"set_len","","",15,[[["u64",15]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",15,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",15,[[],[["result",4],["usize",15],["wasifserror",4]]]],[11,"from","wasmer_wasi::ptr","",3,[[["i32",15]]]],[11,"from","wasmer_wasi::state::types","",8,[[["error",3]]]],[11,"next","","",13,[[],["option",4]]],[11,"clone","wasmer_wasi::ptr","",3,[[]]],[11,"clone","wasmer_wasi::state::types","",8,[[],["wasifserror",4]]],[11,"clone","","",11,[[],["pollevent",4]]],[11,"clone","","",12,[[],["polleventbuilder",3]]],[11,"clone","wasmer_wasi::syscalls::types","",31,[[],["__wasi_ciovec_t",3]]],[11,"clone","","",32,[[],["__wasi_dirent_t",3]]],[11,"clone","","",33,[[],["__wasi_event_fd_readwrite_t",3]]],[11,"clone","","",34,[[],["__wasi_event_u",19]]],[11,"clone","","",35,[[],["eventenum",4]]],[11,"clone","","",37,[[],["__wasi_event_t",3]]],[11,"clone","","",38,[[],["__wasi_prestat_u_dir_t",3]]],[11,"clone","","",39,[[],["__wasi_prestat_u",19]]],[11,"clone","","",40,[[],["__wasi_prestat_t",3]]],[11,"clone","","",41,[[],["prestatenum",4]]],[11,"clone","","",43,[[],["__wasi_fdstat_t",3]]],[11,"clone","","",44,[[],["__wasi_filestat_t",3]]],[11,"clone","","",45,[[],["__wasi_iovec_t",3]]],[11,"clone","","",46,[[],["__wasi_subscription_clock_t",3]]],[11,"clone","","",47,[[],["__wasi_subscription_fs_readwrite_t",3]]],[11,"clone","","",48,[[],["__wasi_subscription_u",19]]],[11,"clone","","",49,[[],["__wasi_subscription_t",3]]],[11,"clone","","",50,[[],["eventtype",4]]],[11,"clone","","",51,[[],["wasisubscription",3]]],[11,"clone","wasmer_wasi::syscalls::types::snapshot0","",27,[[],["__wasi_subscription_clock_t",3]]],[11,"clone","","",28,[[],["__wasi_subscription_u",19]]],[11,"clone","","",29,[[],["__wasi_subscription_t",3]]],[11,"clone","","",30,[[],["__wasi_filestat_t",3]]],[11,"clone","wasmer_wasi::utils","",53,[[],["wasiversion",4]]],[11,"clone","wasmer_wasi","",55,[[],["wasienv",3]]],[11,"default","wasmer_wasi::state::builder","",4,[[],["wasistatebuilder",3]]],[11,"default","","",6,[[],["preopendirbuilder",3]]],[11,"default","","",7,[[],["preopeneddir",3]]],[11,"default","wasmer_wasi::state::types","",15,[[],["pipe",3]]],[11,"default","wasmer_wasi::syscalls::types","",44,[[]]],[11,"cmp","wasmer_wasi::utils","",53,[[],["ordering",4]]],[11,"eq","wasmer_wasi::ptr","",3,[[],["bool",15]]],[11,"eq","wasmer_wasi::state::builder","",5,[[["wasistatecreationerror",4]],["bool",15]]],[11,"ne","","",5,[[["wasistatecreationerror",4]],["bool",15]]],[11,"eq","wasmer_wasi::state::types","",8,[[["wasifserror",4]],["bool",15]]],[11,"ne","","",8,[[["wasifserror",4]],["bool",15]]],[11,"eq","wasmer_wasi::syscalls::types","",31,[[["__wasi_ciovec_t",3]],["bool",15]]],[11,"ne","","",31,[[["__wasi_ciovec_t",3]],["bool",15]]],[11,"eq","","",32,[[["__wasi_dirent_t",3]],["bool",15]]],[11,"ne","","",32,[[["__wasi_dirent_t",3]],["bool",15]]],[11,"eq","","",33,[[["__wasi_event_fd_readwrite_t",3]],["bool",15]]],[11,"ne","","",33,[[["__wasi_event_fd_readwrite_t",3]],["bool",15]]],[11,"eq","","",38,[[["__wasi_prestat_u_dir_t",3]],["bool",15]]],[11,"ne","","",38,[[["__wasi_prestat_u_dir_t",3]],["bool",15]]],[11,"eq","","",43,[[["__wasi_fdstat_t",3]],["bool",15]]],[11,"ne","","",43,[[["__wasi_fdstat_t",3]],["bool",15]]],[11,"eq","","",44,[[["__wasi_filestat_t",3]],["bool",15]]],[11,"ne","","",44,[[["__wasi_filestat_t",3]],["bool",15]]],[11,"eq","","",45,[[["__wasi_iovec_t",3]],["bool",15]]],[11,"ne","","",45,[[["__wasi_iovec_t",3]],["bool",15]]],[11,"eq","","",46,[[["__wasi_subscription_clock_t",3]],["bool",15]]],[11,"ne","","",46,[[["__wasi_subscription_clock_t",3]],["bool",15]]],[11,"eq","","",47,[[["__wasi_subscription_fs_readwrite_t",3]],["bool",15]]],[11,"ne","","",47,[[["__wasi_subscription_fs_readwrite_t",3]],["bool",15]]],[11,"eq","wasmer_wasi::syscalls::types::snapshot0","",27,[[["__wasi_subscription_clock_t",3]],["bool",15]]],[11,"ne","","",27,[[["__wasi_subscription_clock_t",3]],["bool",15]]],[11,"eq","","",30,[[["__wasi_filestat_t",3]],["bool",15]]],[11,"ne","","",30,[[["__wasi_filestat_t",3]],["bool",15]]],[11,"eq","wasmer_wasi::utils","",53,[[],["bool",15]]],[11,"partial_cmp","","",53,[[],[["option",4],["ordering",4]]]],[11,"fmt","wasmer_wasi::ptr","",3,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::state::builder","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::state::types","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::state","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::syscalls::types","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::syscalls::types::snapshot0","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::utils","",53,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::state::builder","",5,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi::state::types","",8,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi","",54,[[["formatter",3]],["result",6]]],[11,"try_from","wasmer_wasi::syscalls::types","",51,[[["__wasi_subscription_t",3]],["result",4]]],[11,"try_from","","",49,[[["wasisubscription",3]],["result",4]]],[11,"source","wasmer_wasi::state::builder","",5,[[],[["option",4],["error",8]]]],[11,"read","wasmer_wasi::state::types","",14,[[],[["usize",15],["result",6]]]],[11,"read_to_end","","",14,[[["vec",3]],[["usize",15],["result",6]]]],[11,"read_to_string","","",14,[[["string",3]],[["usize",15],["result",6]]]],[11,"read_exact","","",14,[[],["result",6]]],[11,"read","","",58,[[],[["usize",15],["result",6]]]],[11,"read_to_end","","",58,[[["vec",3]],[["usize",15],["result",6]]]],[11,"read_to_string","","",58,[[["string",3]],[["usize",15],["result",6]]]],[11,"read_exact","","",58,[[],["result",6]]],[11,"read","","",59,[[],[["usize",15],["result",6]]]],[11,"read_to_end","","",59,[[["vec",3]],[["usize",15],["result",6]]]],[11,"read_to_string","","",59,[[["string",3]],[["usize",15],["result",6]]]],[11,"read_exact","","",59,[[],["result",6]]],[11,"read","","",60,[[],[["usize",15],["result",6]]]],[11,"read_to_end","","",60,[[["vec",3]],[["usize",15],["result",6]]]],[11,"read_to_string","","",60,[[["string",3]],[["usize",15],["result",6]]]],[11,"read_exact","","",60,[[],["result",6]]],[11,"read","","",15,[[],[["usize",15],["result",6]]]],[11,"seek","","",14,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"seek","","",58,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"seek","","",59,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"seek","","",60,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"seek","","",15,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"write","","",14,[[],[["usize",15],["result",6]]]],[11,"flush","","",14,[[],["result",6]]],[11,"write_all","","",14,[[],["result",6]]],[11,"write_fmt","","",14,[[["arguments",3]],["result",6]]],[11,"write","","",58,[[],[["usize",15],["result",6]]]],[11,"flush","","",58,[[],["result",6]]],[11,"write_all","","",58,[[],["result",6]]],[11,"write_fmt","","",58,[[["arguments",3]],["result",6]]],[11,"write","","",59,[[],[["usize",15],["result",6]]]],[11,"flush","","",59,[[],["result",6]]],[11,"write_all","","",59,[[],["result",6]]],[11,"write_fmt","","",59,[[["arguments",3]],["result",6]]],[11,"write","","",60,[[],[["usize",15],["result",6]]]],[11,"flush","","",60,[[],["result",6]]],[11,"write_all","","",60,[[],["result",6]]],[11,"write_fmt","","",60,[[["arguments",3]],["result",6]]],[11,"write","","",15,[[],[["usize",15],["result",6]]]],[11,"flush","","",15,[[],["result",6]]],[11,"init_with_instance","wasmer_wasi","",55,[[["instance",3]],[["result",4],["hostenviniterror",4]]]],[11,"to_native","wasmer_wasi::ptr","",3,[[]]],[11,"from_native","","",3,[[]]],[11,"deserialize","wasmer_wasi::state::types","",14,[[],[["result",4],["hostfile",3]]]],[11,"deserialize","","",58,[[],["result",4]]],[11,"deserialize","","",59,[[],["result",4]]],[11,"deserialize","","",60,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","wasmer_wasi::state","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",24,[[],["result",4]]],[11,"deserialize","","",25,[[],["result",4]]],[11,"deserialize","","",26,[[],["result",4]]],[11,"deserialize","wasmer_wasi::syscalls::types","",44,[[],["result",4]]],[11,"deserialize","wasmer_wasi::syscalls::types::snapshot0","",30,[[],["result",4]]],[11,"serialize","wasmer_wasi::state::types","",9,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",14,[[],["result",4]]],[11,"serialize","","",58,[[],["result",4]]],[11,"serialize","","",59,[[],["result",4]]],[11,"serialize","","",60,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","wasmer_wasi::state","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",24,[[],["result",4]]],[11,"serialize","","",25,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","wasmer_wasi::syscalls::types","",44,[[],["result",4]]],[11,"serialize","wasmer_wasi::syscalls::types::snapshot0","",30,[[],["result",4]]],[11,"new","wasmer_wasi::ptr","Creates a new host <code>Memory</code> from the provided [<code>MemoryType</code>].",1,[[["memorytype",3],["store",3]],[["memoryerror",4],["result",4],["memory",3]]]],[11,"ty","","Returns the [<code>MemoryType</code>] of the <code>Memory</code>.",1,[[],["memorytype",3]]],[11,"store","","Returns the [<code>Store</code>] where the <code>Memory</code> belongs.",1,[[],["store",3]]],[11,"data_unchecked","","Retrieve a slice of the memory contents.",1,[[]]],[11,"data_unchecked_mut","","Retrieve a mutable slice of the memory contents.",1,[[]]],[11,"data_ptr","","Returns the pointer to the raw bytes of the <code>Memory</code>.",1,[[]]],[11,"data_size","","Returns the size (in bytes) of the <code>Memory</code>.",1,[[],["u64",15]]],[11,"size","","Returns the size (in [<code>Pages</code>]) of the <code>Memory</code>.",1,[[],["pages",3]]],[11,"grow","","Grow memory by the specified amount of WebAssembly [<code>Pages</code>]…",1,[[],[["result",4],["memoryerror",4],["pages",3]]]],[11,"view","","Return a \\\"view\\\" of the currently accessible memory. By …",1,[[],[["memoryview",3],["nonatomically",3]]]],[11,"same","","Returns whether or not these two memories refer to the …",1,[[["memory",3]],["bool",15]]],[11,"new","","Create a new <code>WasmPtr</code> at the given offset.",2,[[["u32",15]],["wasmptr",3]]],[11,"offset","","Get the offset into Wasm linear memory for this <code>WasmPtr</code>.",2,[[],["u32",15]]],[11,"deref","","Dereference the <code>WasmPtr</code> getting access to a <code>&Cell<T></code> …",2,[[["memory",3]],[["cell",3],["option",4]]]],[11,"deref_mut","","Mutably dereference this <code>WasmPtr</code> getting a <code>&mut Cell<T></code> …",2,[[["memory",3]],[["option",4],["cell",3]]]],[11,"deref","","Dereference the <code>WasmPtr</code> getting access to a <code>&[Cell<T>]</code> …",2,[[["memory",3],["u32",15]],["option",4]]],[11,"deref_mut","","Mutably dereference this <code>WasmPtr</code> getting a <code>&mut [Cell<T>]</code> …",2,[[["memory",3],["u32",15]],["option",4]]],[11,"get_utf8_str","","Get a UTF-8 string from the <code>WasmPtr</code> with the given length.",2,[[["u32",15],["memory",3]],[["option",4],["str",15]]]],[11,"get_utf8_string","","Get a UTF-8 <code>String</code> from the <code>WasmPtr</code> with the given length.",2,[[["memory",3],["u32",15]],[["option",4],["string",3]]]],[11,"get_utf8_str_with_nul","","Get a UTF-8 string from the <code>WasmPtr</code>, where the string is …",2,[[["memory",3]],[["option",4],["str",15]]]],[11,"get_utf8_string_with_nul","","Get a UTF-8 <code>String</code> from the <code>WasmPtr</code>, where the string is …",2,[[["memory",3]],[["option",4],["string",3]]]],[11,"from_raw_parts","wasmer_wasi::state","Create a new <code>Index</code> from its raw parts.",16,[[["usize",15],["u64",15]],["index",3]]],[11,"into_raw_parts","","Convert this <code>Index</code> into its raw parts.",16,[[]]]],"p":[[8,"FromToNativeWasmType"],[3,"Memory"],[3,"BaseWasmPtr"],[3,"WasmPtr"],[3,"WasiStateBuilder"],[4,"WasiStateCreationError"],[3,"PreopenDirBuilder"],[3,"PreopenedDir"],[4,"WasiFsError"],[8,"WasiFile"],[8,"Upcastable"],[4,"PollEvent"],[3,"PollEventBuilder"],[3,"PollEventIter"],[3,"HostFile"],[3,"Pipe"],[3,"Inode"],[3,"InodeVal"],[4,"Kind"],[13,"File"],[13,"Dir"],[13,"Root"],[13,"Symlink"],[13,"Buffer"],[3,"Fd"],[3,"WasiFs"],[3,"WasiState"],[3,"__wasi_subscription_clock_t"],[19,"__wasi_subscription_u"],[3,"__wasi_subscription_t"],[3,"__wasi_filestat_t"],[3,"__wasi_ciovec_t"],[3,"__wasi_dirent_t"],[3,"__wasi_event_fd_readwrite_t"],[19,"__wasi_event_u"],[4,"EventEnum"],[13,"FdReadWrite"],[3,"__wasi_event_t"],[3,"__wasi_prestat_u_dir_t"],[19,"__wasi_prestat_u"],[3,"__wasi_prestat_t"],[4,"PrestatEnum"],[13,"Dir"],[3,"__wasi_fdstat_t"],[3,"__wasi_filestat_t"],[3,"__wasi_iovec_t"],[3,"__wasi_subscription_clock_t"],[3,"__wasi_subscription_fs_readwrite_t"],[19,"__wasi_subscription_u"],[3,"__wasi_subscription_t"],[4,"EventType"],[3,"WasiSubscription"],[4,"SubscriptionEnum"],[4,"WasiVersion"],[4,"WasiError"],[3,"WasiEnv"],[3,"Array"],[3,"Item"],[3,"Stdout"],[3,"Stderr"],[3,"Stdin"]]},\
"wasmer_wasi_experimental_io_devices":{"doc":"","i":[[0,"util","wasmer_wasi_experimental_io_devices","",null,null],[17,"KEY_PRESS","wasmer_wasi_experimental_io_devices::util","",null,null],[17,"MOUSE_MOVE","","",null,null],[17,"KEY_RELEASE","","",null,null],[17,"MOUSE_PRESS_LEFT","","",null,null],[17,"MOUSE_PRESS_RIGHT","","",null,null],[17,"MOUSE_PRESS_MIDDLE","","",null,null],[17,"WINDOW_CLOSED","","",null,null],[4,"InputEvent","","",null,null],[13,"KeyPress","","",0,null],[13,"KeyRelease","","",0,null],[13,"MouseEvent","","",0,null],[13,"MouseMoved","","",0,null],[13,"WindowClosed","","",0,null],[5,"bytes_for_input_event","","Returns the tag as the first return value The data as the …",null,[[["inputevent",4]]]],[5,"map_key_to_bytes","","",null,[[["key",4]],["u8",15]]],[17,"FRAMEBUFFER_STATE","wasmer_wasi_experimental_io_devices","",null,null],[17,"MAX_X","","",null,null],[17,"MAX_Y","","",null,null],[4,"FrameBufferFileType","","",null,null],[13,"Buffer","","",1,null],[13,"Resolution","","",1,null],[13,"Draw","","",1,null],[13,"Input","","",1,null],[3,"FrameBufferState","","",null,null],[12,"data_1","","",2,null],[12,"data_2","","",2,null],[12,"x_size","","",2,null],[12,"y_size","","",2,null],[12,"front_buffer","","",2,null],[12,"window","","",2,null],[12,"last_mouse_pos","","",2,null],[12,"inputs","","",2,null],[12,"keys_pressed","","",2,null],[18,"MAX_INPUTS","","an arbitrary large number",2,null],[11,"new","","",2,[[]]],[11,"create_window","","",2,[[["usize",15]],["window",3]]],[11,"resize","","",2,[[["u32",15]],["option",4]]],[11,"push_input_event","","",2,[[["inputevent",4]],["option",4]]],[11,"fill_input_buffer","","",2,[[],["option",4]]],[11,"draw","","",2,[[]]],[11,"get_idx_info","","",2,[[["usize",15]],["option",4]]],[11,"get_byte","","",2,[[["usize",15]],[["u8",15],["option",4]]]],[11,"set_byte","","",2,[[["usize",15],["u8",15]],["option",4]]],[3,"FrameBuffer","","",null,null],[12,"fb_type","","",3,null],[12,"cursor","","",3,null],[5,"__init9363348193884183279","","",null,[[]]],[7,"__init9363348193884183279___rust_ctor___ctor","","",null,null],[5,"initialize","","",null,[[["wasifs",3]],[["result",4],["string",3]]]],[11,"from","wasmer_wasi_experimental_io_devices::util","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"into_any","","",0,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",0,[[]]],[11,"from","wasmer_wasi_experimental_io_devices","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"into_any","","",1,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"into_any","","",2,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"into_any","","",3,[[["box",3],["global",3]],[["box",3],["global",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"vzip","","",3,[[]]],[11,"clone","wasmer_wasi_experimental_io_devices::util","",0,[[],["inputevent",4]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wasi_experimental_io_devices","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"read","","",3,[[],[["result",6],["usize",15]]]],[11,"read_to_end","","",3,[[["vec",3]],[["result",6],["usize",15]]]],[11,"read_to_string","","",3,[[["string",3]],[["result",6],["usize",15]]]],[11,"read_exact","","",3,[[],["result",6]]],[11,"seek","","",3,[[["seekfrom",4]],[["u64",15],["result",6]]]],[11,"write","","",3,[[],[["result",6],["usize",15]]]],[11,"flush","","",3,[[],["result",6]]],[11,"write_all","","",3,[[],["result",6]]],[11,"write_fmt","","",3,[[["arguments",3]],["result",6]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"last_accessed","","",3,[[],["u64",15]]],[11,"last_modified","","",3,[[],["u64",15]]],[11,"created_time","","",3,[[],["u64",15]]],[11,"size","","",3,[[],["u64",15]]],[11,"set_len","","",3,[[["__wasi_filesize_t",6]],[["wasifserror",4],["result",4]]]],[11,"unlink","","",3,[[],[["wasifserror",4],["result",4]]]],[11,"bytes_available","","",3,[[],[["usize",15],["wasifserror",4],["result",4]]]]],"p":[[4,"InputEvent"],[4,"FrameBufferFileType"],[3,"FrameBufferState"],[3,"FrameBuffer"]]},\
"wasmer_wast":{"doc":"Implementation of the WAST text format for wasmer.","i":[[0,"error","wasmer_wast","",null,null],[3,"DirectiveError","wasmer_wast::error","A Directive Error",null,null],[12,"line","","The line where the directive is defined",0,null],[12,"col","","The column where the directive is defined",0,null],[12,"message","","The failing message received when running the directive",0,null],[3,"DirectiveErrors","","A structure holding the list of all executed directives",null,null],[12,"filename","","The filename where the error occured",1,null],[12,"errors","","The list of errors",1,null],[0,"spectest","wasmer_wast","",null,null],[5,"spectest_importobject","wasmer_wast::spectest","Return an instance implementing the \\\"spectest\\\" interface …",null,[[["store",3]],["importobject",3]]],[0,"wasi_wast","wasmer_wast","",null,null],[0,"wasi_kw","wasmer_wast::wasi_wast","",null,null],[3,"wasi_test","wasmer_wast::wasi_wast::wasi_kw","",null,null],[12,"0","","",2,null],[3,"envs","","",null,null],[12,"0","","",3,null],[3,"args","","",null,null],[12,"0","","",4,null],[3,"preopens","","",null,null],[12,"0","","",5,null],[3,"map_dirs","","",null,null],[12,"0","","",6,null],[3,"temp_dirs","","",null,null],[12,"0","","",7,null],[3,"assert_return","","",null,null],[12,"0","","",8,null],[3,"stdin","","",null,null],[12,"0","","",9,null],[3,"assert_stdout","","",null,null],[12,"0","","",10,null],[3,"assert_stderr","","",null,null],[12,"0","","",11,null],[3,"fake_i64_const","","",null,null],[12,"0","","",12,null],[3,"WasiTest","wasmer_wast::wasi_wast","Crate holding metadata parsed from the WASI WAST about …",null,null],[12,"wasm_path","","",13,null],[12,"args","","",13,null],[12,"envs","","",13,null],[12,"dirs","","",13,null],[12,"mapped_dirs","","",13,null],[12,"temp_dirs","","",13,null],[12,"assert_return","","",13,null],[12,"stdin","","",13,null],[12,"assert_stdout","","",13,null],[12,"assert_stderr","","",13,null],[17,"BASE_TEST_DIR","","",null,null],[5,"get_stdout_output","","",null,[[["wasistate",3]],[["string",3],["result",6]]]],[5,"get_stderr_output","","",null,[[["wasistate",3]],[["string",3],["result",6]]]],[11,"lex_string","","Turn a WASI WAST string into a list of tokens.",13,[[["str",15]],[["result",6],["parsebuffer",3]]]],[11,"parse_tokens","","Turn a WASI WAST list of tokens into a <code>WasiTest</code> struct.",13,[[["parsebuffer",3]],["result",6]]],[11,"run","","Execute the WASI test and assert.",13,[[["str",15],["store",3]],[["bool",15],["result",6]]]],[11,"create_wasi_env","","Create the wasi env with the given metadata.",13,[[],["result",6]]],[11,"get_version","","Get the correct [<code>WasiVersion</code>] from the Wasm [<code>Module</code>].",13,[[["module",3]],[["result",6],["wasiversion",4]]]],[11,"get_imports","","Get the correct WASI import object for the given module …",13,[[["wasienv",3],["module",3],["store",3]],[["importobject",3],["result",6]]]],[3,"Envs","","",null,null],[12,"envs","","",14,null],[3,"Args","","",null,null],[12,"args","","",15,null],[3,"Preopens","","",null,null],[12,"preopens","","",16,null],[3,"MapDirs","","",null,null],[12,"map_dirs","","",17,null],[3,"TempDirs","","",null,null],[12,"temp_dirs","","",18,null],[3,"AssertReturn","","",null,null],[12,"return_value","","",19,null],[3,"Stdin","","",null,null],[12,"stream","","",20,null],[3,"AssertStdout","","",null,null],[12,"expected","","",21,null],[3,"AssertStderr","","",null,null],[12,"expected","","",22,null],[3,"OutputCapturerer","","",null,null],[12,"output","","",23,null],[11,"new","","",23,[[]]],[5,"__init7752682021542986611","","",null,[[]]],[7,"__init7752682021542986611___rust_ctor___ctor","","",null,null],[0,"wast","wasmer_wast","",null,null],[3,"Wast","wasmer_wast::wast","The wast test script language allows modules to be …",null,null],[12,"current","","Wast files have a concept of a \\\"current\\\" module, which is …",24,null],[12,"import_object","","The Import Object that all wast tests will have",24,null],[12,"instances","","The instances in the test",24,null],[12,"allowed_instantiation_failures","","Allowed failures (ideally this should be empty)",24,null],[12,"match_trap_messages","","If the (expected from .wast, actual) message pair is in …",24,null],[12,"current_is_allowed_failure","","If the current module was an allowed failure, we allow …",24,null],[12,"extern_refs","","Extern-ref manager: used for testing extern refs: they\'re …",24,null],[12,"store","","The wasm Store",24,null],[12,"fail_fast","","A flag indicating if Wast tests should stop as soon as …",24,null],[12,"disable_assert_trap_exhaustion","","A flag indicating that assert_trap and assert_exhaustion …",24,null],[11,"new","","Construct a new instance of <code>Wast</code> with a given imports.",24,[[["importobject",3],["store",3]]]],[11,"allow_instantiation_failures","","A list of instantiation failures to allow.",24,[[]]],[11,"allow_trap_message","","A list of alternative messages to permit for a trap …",24,[[["str",15]]]],[11,"disable_assert_and_exhaustion","","Do not run any code in assert_trap or assert_exhaustion.",24,[[]]],[11,"new_with_spectest","","Construct a new instance of <code>Wast</code> with the spectests …",24,[[["store",3]]]],[11,"get_instance","","",24,[[["option",4],["str",15]],[["instance",3],["result",6]]]],[11,"perform_execute","","Perform the action portion of a command.",24,[[["wastexecute",4]],[["vec",3],["result",6]]]],[11,"perform_invoke","","",24,[[["wastinvoke",3]],[["vec",3],["result",6]]]],[11,"assert_return","","",24,[[["vec",3],["result",6]],["result",6]]],[11,"assert_trap","","",24,[[["vec",3],["result",6],["str",15]],["result",6]]],[11,"run_directive","","",24,[[["wastdirective",4]],["result",6]]],[11,"run_buffer","","Run a wast script from a byte buffer.",24,[[["str",15]],["result",6]]],[11,"run_file","","Run a wast script from a file.",24,[[["path",3]],["result",6]]],[11,"module","","Define a module and register it.",24,[[["option",4],["str",15]],["result",6]]],[11,"instantiate","","",24,[[],[["instance",3],["result",6]]]],[11,"register","","Register an instance to make it available for performing …",24,[[["option",4],["str",15]],["result",6]]],[11,"invoke","","Invoke an exported function from an instance.",24,[[["option",4],["str",15]],[["vec",3],["result",6]]]],[11,"get","","Get the value of an exported global from an instance.",24,[[["option",4],["str",15]],[["vec",3],["result",6]]]],[11,"runtime_value","","Translate from a <code>script::Value</code> to a <code>Val</code>.",24,[[["expression",3]],[["result",6],["val",6]]]],[11,"matches_message_assert_unlinkable","","",24,[[["str",15]],["bool",15]]],[11,"matches_message_assert_invalid","","",24,[[["str",15]],["bool",15]]],[11,"matches_message_assert_trap","","",24,[[["str",15]],["bool",15]]],[11,"val_matches","","",24,[[["val",6],["assertexpression",4]],[["bool",15],["result",6]]]],[5,"extract_lane_as_i8","","",null,[[["usize",15],["u128",15]],["i8",15]]],[5,"extract_lane_as_i16","","",null,[[["usize",15],["u128",15]],["i16",15]]],[5,"extract_lane_as_i32","","",null,[[["usize",15],["u128",15]],["i32",15]]],[5,"extract_lane_as_i64","","",null,[[["usize",15],["u128",15]],["i64",15]]],[5,"f32_matches","","",null,[[["f32",15],["nanpattern",4]],["bool",15]]],[5,"f64_matches","","",null,[[["f64",15],["nanpattern",4]],["bool",15]]],[5,"v128_matches","","",null,[[["u128",15],["v128pattern",4]],["bool",15]]],[5,"v128_format","","",null,[[["u128",15],["v128pattern",4]],["v128pattern",4]]],[8,"NaNCheck","","",null,null],[10,"is_arithmetic_nan","","",25,[[],["bool",15]]],[10,"is_canonical_nan","","",25,[[],["bool",15]]],[3,"DirectiveError","wasmer_wast","A Directive Error",null,null],[12,"line","","The line where the directive is defined",0,null],[12,"col","","The column where the directive is defined",0,null],[12,"message","","The failing message received when running the directive",0,null],[3,"DirectiveErrors","","A structure holding the list of all executed directives",null,null],[12,"filename","","The filename where the error occured",1,null],[12,"errors","","The list of errors",1,null],[5,"spectest_importobject","","Return an instance implementing the \\\"spectest\\\" interface …",null,[[["store",3]],["importobject",3]]],[3,"WasiTest","","Crate holding metadata parsed from the WASI WAST about …",null,null],[12,"wasm_path","","",13,null],[12,"args","","",13,null],[12,"envs","","",13,null],[12,"dirs","","",13,null],[12,"mapped_dirs","","",13,null],[12,"temp_dirs","","",13,null],[12,"assert_return","","",13,null],[12,"stdin","","",13,null],[12,"assert_stdout","","",13,null],[12,"assert_stderr","","",13,null],[3,"Wast","","The wast test script language allows modules to be …",null,null],[12,"current","","Wast files have a concept of a \\\"current\\\" module, which is …",24,null],[12,"import_object","","The Import Object that all wast tests will have",24,null],[12,"instances","","The instances in the test",24,null],[12,"allowed_instantiation_failures","","Allowed failures (ideally this should be empty)",24,null],[12,"match_trap_messages","","If the (expected from .wast, actual) message pair is in …",24,null],[12,"current_is_allowed_failure","","If the current module was an allowed failure, we allow …",24,null],[12,"extern_refs","","Extern-ref manager: used for testing extern refs: they\'re …",24,null],[12,"store","","The wasm Store",24,null],[12,"fail_fast","","A flag indicating if Wast tests should stop as soon as …",24,null],[12,"disable_assert_trap_exhaustion","","A flag indicating that assert_trap and assert_exhaustion …",24,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","wasmer_wast::error","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"pointer_metadata","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"pointer_metadata","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"vzip","","",1,[[]]],[11,"from","wasmer_wast::wasi_wast::wasi_kw","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"pointer_metadata","","",2,[[]]],[11,"init","","",2,[[],["usize",15]]],[11,"deref","","",2,[[["usize",15]]]],[11,"deref_mut","","",2,[[["usize",15]]]],[11,"drop","","",2,[[["usize",15]]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"pointer_metadata","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"pointer_metadata","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"pointer_metadata","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"pointer_metadata","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"pointer_metadata","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"pointer_metadata","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"pointer_metadata","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"pointer_metadata","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"pointer_metadata","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"pointer_metadata","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"vzip","","",12,[[]]],[11,"from","wasmer_wast::wasi_wast","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"pointer_metadata","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"pointer_metadata","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"pointer_metadata","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"pointer_metadata","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"pointer_metadata","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"pointer_metadata","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[],["bool",15]]],[11,"pointer_metadata","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"equivalent","","",20,[[],["bool",15]]],[11,"pointer_metadata","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[],["bool",15]]],[11,"pointer_metadata","","",21,[[]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[],["bool",15]]],[11,"pointer_metadata","","",22,[[]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"pointer_metadata","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"erased_serialize","","",23,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"vzip","","",23,[[]]],[11,"from","wasmer_wast::wast","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"pointer_metadata","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"vzip","","",24,[[]]],[11,"clone","wasmer_wast::wasi_wast","",13,[[],["wasitest",3]]],[11,"clone","","",14,[[],["envs",3]]],[11,"clone","","",15,[[],["args",3]]],[11,"clone","","",16,[[],["preopens",3]]],[11,"clone","","",17,[[],["mapdirs",3]]],[11,"clone","","",18,[[],["tempdirs",3]]],[11,"clone","","",19,[[],["assertreturn",3]]],[11,"clone","","",20,[[],["stdin",3]]],[11,"clone","","",21,[[],["assertstdout",3]]],[11,"clone","","",22,[[],["assertstderr",3]]],[11,"eq","","",19,[[["assertreturn",3]],["bool",15]]],[11,"ne","","",19,[[["assertreturn",3]],["bool",15]]],[11,"eq","","",20,[[["stdin",3]],["bool",15]]],[11,"ne","","",20,[[["stdin",3]],["bool",15]]],[11,"eq","","",21,[[["assertstdout",3]],["bool",15]]],[11,"ne","","",21,[[["assertstdout",3]],["bool",15]]],[11,"eq","","",22,[[["assertstderr",3]],["bool",15]]],[11,"ne","","",22,[[["assertstderr",3]],["bool",15]]],[11,"fmt","wasmer_wast::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wast::wasi_wast","",13,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wast::wasi_wast::wasi_kw","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wast::wasi_wast","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","wasmer_wast::error","",1,[[["formatter",3]],["result",6]]],[11,"hash","wasmer_wast::wasi_wast","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"read","","",23,[[],[["result",6],["usize",15]]]],[11,"read_to_end","","",23,[[["vec",3]],[["result",6],["usize",15]]]],[11,"read_to_string","","",23,[[["string",3]],[["result",6],["usize",15]]]],[11,"read_exact","","",23,[[],["result",6]]],[11,"seek","","",23,[[["seekfrom",4]],[["result",6],["u64",15]]]],[11,"write","","",23,[[],[["result",6],["usize",15]]]],[11,"flush","","",23,[[],["result",6]]],[11,"write_all","","",23,[[],["result",6]]],[11,"write_fmt","","",23,[[["arguments",3]],["result",6]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"last_accessed","","",23,[[],["__wasi_timestamp_t",6]]],[11,"last_modified","","",23,[[],["__wasi_timestamp_t",6]]],[11,"created_time","","",23,[[],["__wasi_timestamp_t",6]]],[11,"size","","",23,[[],["u64",15]]],[11,"set_len","","",23,[[["__wasi_filesize_t",6]],[["result",4],["wasifserror",4]]]],[11,"unlink","","",23,[[],[["result",4],["wasifserror",4]]]],[11,"bytes_available","","",23,[[],[["usize",15],["wasifserror",4],["result",4]]]],[11,"parse","wasmer_wast::wasi_wast::wasi_kw","",2,[[["parser",3]],["result",6]]],[11,"parse","","",3,[[["parser",3]],["result",6]]],[11,"parse","","",4,[[["parser",3]],["result",6]]],[11,"parse","","",5,[[["parser",3]],["result",6]]],[11,"parse","","",6,[[["parser",3]],["result",6]]],[11,"parse","","",7,[[["parser",3]],["result",6]]],[11,"parse","","",8,[[["parser",3]],["result",6]]],[11,"parse","","",9,[[["parser",3]],["result",6]]],[11,"parse","","",10,[[["parser",3]],["result",6]]],[11,"parse","","",11,[[["parser",3]],["result",6]]],[11,"parse","","",12,[[["parser",3]],["result",6]]],[11,"parse","wasmer_wast::wasi_wast","",13,[[["parser",3]],["result",6]]],[11,"parse","","",14,[[["parser",3]],["result",6]]],[11,"parse","","",15,[[["parser",3]],["result",6]]],[11,"parse","","",16,[[["parser",3]],["result",6]]],[11,"parse","","",17,[[["parser",3]],["result",6]]],[11,"parse","","",18,[[["parser",3]],["result",6]]],[11,"parse","","",19,[[["parser",3]],["result",6]]],[11,"parse","","",20,[[["parser",3]],["result",6]]],[11,"parse","","",21,[[["parser",3]],["result",6]]],[11,"parse","","",22,[[["parser",3]],["result",6]]],[11,"peek","wasmer_wast::wasi_wast::wasi_kw","",2,[[["cursor",3]],["bool",15]]],[11,"display","","",2,[[],["str",15]]],[11,"peek","","",3,[[["cursor",3]],["bool",15]]],[11,"display","","",3,[[],["str",15]]],[11,"peek","","",4,[[["cursor",3]],["bool",15]]],[11,"display","","",4,[[],["str",15]]],[11,"peek","","",5,[[["cursor",3]],["bool",15]]],[11,"display","","",5,[[],["str",15]]],[11,"peek","","",6,[[["cursor",3]],["bool",15]]],[11,"display","","",6,[[],["str",15]]],[11,"peek","","",7,[[["cursor",3]],["bool",15]]],[11,"display","","",7,[[],["str",15]]],[11,"peek","","",8,[[["cursor",3]],["bool",15]]],[11,"display","","",8,[[],["str",15]]],[11,"peek","","",9,[[["cursor",3]],["bool",15]]],[11,"display","","",9,[[],["str",15]]],[11,"peek","","",10,[[["cursor",3]],["bool",15]]],[11,"display","","",10,[[],["str",15]]],[11,"peek","","",11,[[["cursor",3]],["bool",15]]],[11,"display","","",11,[[],["str",15]]],[11,"peek","","",12,[[["cursor",3]],["bool",15]]],[11,"display","","",12,[[],["str",15]]]],"p":[[3,"DirectiveError"],[3,"DirectiveErrors"],[3,"wasi_test"],[3,"envs"],[3,"args"],[3,"preopens"],[3,"map_dirs"],[3,"temp_dirs"],[3,"assert_return"],[3,"stdin"],[3,"assert_stdout"],[3,"assert_stderr"],[3,"fake_i64_const"],[3,"WasiTest"],[3,"Envs"],[3,"Args"],[3,"Preopens"],[3,"MapDirs"],[3,"TempDirs"],[3,"AssertReturn"],[3,"Stdin"],[3,"AssertStdout"],[3,"AssertStderr"],[3,"OutputCapturerer"],[3,"Wast"],[8,"NaNCheck"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);